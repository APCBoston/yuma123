
<div>
   <h1 class="yang">SNMP-TARGET-MIB.yang</h1>

   <ul id="nav">
      <li><a href="#">Typedefs</a>
         <ul>
            <li><a href="#SnmpTagValue.96">SnmpTagValue</a></li>
            <li><a href="#SnmpTagList.171">SnmpTagList</a></li>
         </ul>
      </li>
      <li><a href="#">Objects</a>
         <ul>
            <li class="daddy"><a href="#snmpTargetObjects.249">snmpTargetObjects</a>
               <ul>
                  <li><a href="#snmpTargetSpinLock.251">snmpTargetSpinLock</a></li>
                  <li class="daddy"><a href="#snmpTargetAddrEntry.279">snmpTargetAddrEntry</a>
                     <ul>
                        <li><a href="#snmpTargetAddrName.291">snmpTargetAddrName</a></li>
                        <li><a href="#snmpTargetAddrTDomain.302">snmpTargetAddrTDomain</a></li>
                        <li><a href="#snmpTargetAddrTAddress.311">snmpTargetAddrTAddress</a></li>
                        <li><a href="#snmpTargetAddrTimeout.321">snmpTargetAddrTimeout</a></li>
                        <li><a href="#snmpTargetAddrRetryCount.350">snmpTargetAddrRetryCount</a></li>
                        <li><a href="#snmpTargetAddrTagList.364">snmpTargetAddrTagList</a></li>
                        <li><a href="#snmpTargetAddrParams.375">snmpTargetAddrParams</a></li>
                        <li><a href="#snmpTargetAddrStorageType.388">snmpTargetAddrStorageType</a></li>
                        <li><a href="#snmpTargetAddrRowStatus.399">snmpTargetAddrRowStatus</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#snmpTargetParamsEntry.433">snmpTargetParamsEntry</a>
                     <ul>
                        <li><a href="#snmpTargetParamsName.444">snmpTargetParamsName</a></li>
                        <li><a href="#snmpTargetParamsMPModel.455">snmpTargetParamsMPModel</a></li>
                        <li><a href="#snmpTargetParamsSecurityModel.464">snmpTargetParamsSecurityModel</a></li>
                        <li><a href="#snmpTargetParamsSecurityName.479">snmpTargetParamsSecurityName</a></li>
                        <li><a href="#snmpTargetParamsSecurityLevel.489">snmpTargetParamsSecurityLevel</a></li>
                        <li><a href="#snmpTargetParamsStorageType.498">snmpTargetParamsStorageType</a></li>
                        <li><a href="#snmpTargetParamsRowStatus.509">snmpTargetParamsRowStatus</a></li>
                     </ul>
                  </li>
                  <li><a href="#snmpUnavailableContexts.544">snmpUnavailableContexts</a></li>
                  <li><a href="#snmpUnknownContexts.554">snmpUnknownContexts</a></li>
               </ul>
            </li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">SNMP-TARGET-MIB</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span>
         <span class="yang_str">"urn:ietf:params:xml:ns:yang:smiv2:SNMP-TARGET-MIB"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"snmp-target"</span>;

      <span class="yang_kw">import</span> <a href="/modules/SNMP-FRAMEWORK-MIB/2002-10-14">SNMP-FRAMEWORK-MIB</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"snmp-framework"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/SNMPv2-TC/1999-04-01">SNMPv2-TC</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"smiv2"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/yang-smi/2008-03-20">yang-smi</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"smi"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/yang-types/2007-10-02">yang-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"yang"</span>;
      }

      <span class="yang_kw">organization</span> <span class="yang_str">"IETF SNMPv3 Working Group"</span>;

      <span class="yang_kw">contact</span>
         <span class="yang_str">"WG-email:   snmpv3@lists.tislabs.com
         Subscribe:  majordomo@lists.tislabs.com
         	    In message body:  subscribe snmpv3
         
         Co-Chair:   Russ Mundy
         	    Network Associates Laboratories
         Postal:     15204 Omega Drive, Suite 300
         	    Rockville, MD 20850-4601
         	    USA
         EMail:      mundy@tislabs.com
         Phone:      +1 301-947-7107
         
         Co-Chair:   David Harrington
         	    Enterasys Networks
         Postal:     35 Industrial Way
         	    P. O. Box 5004
         	    Rochester, New Hampshire 03866-5005
         	    USA
         EMail:      dbh@enterasys.com
         Phone:      +1 603-337-2614
         
         Co-editor:  David B. Levi
         	    Nortel Networks
         Postal:     3505 Kesterwood Drive
         	    Knoxville, Tennessee 37918
         EMail:      dlevi@nortelnetworks.com
         Phone:      +1 865 686 0432
         
         Co-editor:  Paul Meyer
         	    Secure Computing Corporation
         Postal:     2675 Long Lake Road
         
         	    Roseville, Minnesota 55113
         EMail:      paul_meyer@securecomputing.com
         Phone:      +1 651 628 1592
         
         Co-editor:  Bob Stewart
         	    Retired"</span>;

      <span class="yang_kw">description</span>
         <span class="yang_str">"This MIB module defines MIB objects which provide
         mechanisms to remotely configure the parameters used
         by an SNMP entity for the generation of SNMP messages.
         
         Copyright (C) The Internet Society (2002). This
         version of this MIB module is part of RFC 3413;
         see the RFC itself for full legal notices."</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2002-10-14"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Fixed DISPLAY-HINTS for UTF-8 strings, fixed hex
            value of LF characters, clarified meaning of zero
            length tag values, improved tag list examples.
            Published as RFC 3413."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"1998-08-04"</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Clarifications, published as
         RFC 2573."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"1997-07-14"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"The initial revision, published as RFC2273."</span>;
      }


      <span class="yang_cmt">// typedefs</span>

      <a name="SnmpTagValue.96"/><span class="yang_kw">typedef</span> <span class="yang_id">SnmpTagValue</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <span class="yang_kw">length</span> <span class="yang_str">"0..255"</span>;
            <span class="yang_kw">pattern</span> <span class="yang_str">'.{0,255}'</span>;
            <a href="/modules/yang-smi/2008-03-20#display-hint.27">smi:display-hint</a> <span class="yang_str">"255t"</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"An octet string containing a tag value.
            Tag values are preferably in human-readable form.
            
            To facilitate internationalization, this information
            is represented using the ISO/IEC IS 10646-1 character
            set, encoded as an octet string using the UTF-8
            character encoding scheme described in RFC 2279.
            
            Since additional code points are added by amendments
            to the 10646 standard from time to time,
            implementations must be prepared to encounter any code
            point from 0x00000000 to 0x7fffffff.
            
            The use of control codes should be avoided, and certain
            
            control codes are not allowed as described below.
            
            For code points not directly supported by user
            interface hardware or software, an alternative means
            of entry and display, such as hexadecimal, may be
            provided.
            
            For information encoded in 7-bit US-ASCII, the UTF-8
            representation is identical to the US-ASCII encoding.
            
            Note that when this TC is used for an object that
            is used or envisioned to be used as an index, then a
            SIZE restriction must be specified so that the number
            of sub-identifiers for any object instance does not
            exceed the limit of 128, as defined by [RFC1905].
            
            An object of this type contains a single tag value
            which is used to select a set of entries in a table.
            
            A tag value is an arbitrary string of octets, but
            may not contain a delimiter character.  Delimiter
            characters are defined to be one of the following:
            
                -  An ASCII space character (0x20).
            
                -  An ASCII TAB character (0x09).
            
                -  An ASCII carriage return (CR) character (0x0D).
            
                -  An ASCII line feed (LF) character (0x0A).
            
            Delimiter characters are used to separate tag values
            in a tag list.  An object of this type may only
            contain a single tag value, and so delimiter
            characters are not allowed in a value of this type.
            
            Note that a tag value of 0 length means that no tag is
            defined.  In other words, a tag value of 0 length would
            never match anything in a tag list, and would never
            select any table entries.
            
            Some examples of valid tag values are:
            
                - 'acme'
            
                - 'router'
            
                - 'host'
            
            The use of a tag value to select table entries is
            application and MIB specific."</span>;
      }

      <a name="SnmpTagList.171"/><span class="yang_kw">typedef</span> <span class="yang_id">SnmpTagList</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <span class="yang_kw">length</span> <span class="yang_str">"0..255"</span>;
            <span class="yang_kw">pattern</span> <span class="yang_str">'.{0,255}'</span>;
            <a href="/modules/yang-smi/2008-03-20#display-hint.27">smi:display-hint</a> <span class="yang_str">"255t"</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"An octet string containing a list of tag values.
            Tag values are preferably in human-readable form.
            
            To facilitate internationalization, this information
            is represented using the ISO/IEC IS 10646-1 character
            set, encoded as an octet string using the UTF-8
            character encoding scheme described in RFC 2279.
            
            Since additional code points are added by amendments
            to the 10646 standard from time to time,
            implementations must be prepared to encounter any code
            point from 0x00000000 to 0x7fffffff.
            
            The use of control codes should be avoided, except as
            described below.
            
            For code points not directly supported by user
            interface hardware or software, an alternative means
            of entry and display, such as hexadecimal, may be
            provided.
            
            For information encoded in 7-bit US-ASCII, the UTF-8
            representation is identical to the US-ASCII encoding.
            
            An object of this type contains a list of tag values
            which are used to select a set of entries in a table.
            
            A tag value is an arbitrary string of octets, but
            may not contain a delimiter character.  Delimiter
            characters are defined to be one of the following:
            
                -  An ASCII space character (0x20).
            
                -  An ASCII TAB character (0x09).
            
                -  An ASCII carriage return (CR) character (0x0D).
            
                -  An ASCII line feed (LF) character (0x0A).
            
            Delimiter characters are used to separate tag values
            
            in a tag list.  Only a single delimiter character may
            occur between two tag values.  A tag value may not
            have a zero length.  These constraints imply certain
            restrictions on the contents of this object:
            
                - There cannot be a leading or trailing delimiter
                  character.
            
                - There cannot be multiple adjacent delimiter
                  characters.
            
            Some examples of valid tag lists are:
            
                - ''                        -- an empty list
            
                - 'acme'                    -- list of one tag
            
                - 'host router bridge'      -- list of several tags
            
            Note that although a tag value may not have a length of
            zero, an empty string is still valid.  This indicates
            an empty list (i.e. there are no tag values in the list).
            
            The use of the tag list to select table entries is
            application and MIB specific.  Typically, an application
            will provide one or more tag values, and any entry
            which contains some combination of these tag values
            will be selected."</span>;
      }

      <span class="yang_cmt">// objects</span>

      <a name="snmpTargetObjects.249"/><span class="yang_kw">container</span> <span class="yang_id">snmpTargetObjects</span> {
         <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1"</span>;

         <a name="snmpTargetSpinLock.251"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetSpinLock</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMPv2-TC/1999-04-01#TestAndIncr.109">smiv2:TestAndIncr</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"This object is used to facilitate modification of table
               entries in the SNMP-TARGET-MIB module by multiple
               managers.  In particular, it is useful when modifying
               the value of the snmpTargetAddrTagList object.
               
               The procedure for modifying the snmpTargetAddrTagList
               object is as follows:
               
                   1.  Retrieve the value of snmpTargetSpinLock and
               	of snmpTargetAddrTagList.
               
                   2.  Generate a new value for snmpTargetAddrTagList.
               
                   3.  Set the value of snmpTargetSpinLock to the
               	retrieved value, and the value of
               	snmpTargetAddrTagList to the new value.  If
               	the set fails for the snmpTargetSpinLock
               	object, go back to step 1."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.1"</span>;
         }

         <a name="snmpTargetAddrEntry.279"/><span class="yang_kw">list</span> <span class="yang_id">snmpTargetAddrEntry</span> {
            <span class="yang_kw">key</span> "<a href="#snmpTargetAddrName.291">snmpTargetAddrName</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"A transport address to be used in the generation
               of SNMP operations.
               
               Entries in the snmpTargetAddrTable are created and
               deleted using the snmpTargetAddrRowStatus object."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1"</span>;

            <a name="snmpTargetAddrName.291"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetAddrName</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpAdminString.377">snmp-framework:SnmpAdminString</a></span> {
                  <span class="yang_kw">length</span> <span class="yang_str">"1..32"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The locally arbitrary, but unique identifier associated
                  with this snmpTargetAddrEntry."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1.1"</span>;
            }

            <a name="snmpTargetAddrTDomain.302"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetAddrTDomain</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMPv2-TC/1999-04-01#TDomain.747">smiv2:TDomain</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"This object indicates the transport type of the address
                  contained in the snmpTargetAddrTAddress object."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1.2"</span>;
            }

            <a name="snmpTargetAddrTAddress.311"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetAddrTAddress</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMPv2-TC/1999-04-01#TAddress.759">smiv2:TAddress</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"This object contains a transport address.  The format of
                  this address depends on the value of the
                  snmpTargetAddrTDomain object."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1.3"</span>;
            }

            <a name="snmpTargetAddrTimeout.321"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetAddrTimeout</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMPv2-TC/1999-04-01#TimeInterval.675">smiv2:TimeInterval</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"This object should reflect the expected maximum round
                  trip time for communicating with the transport address
                  defined by this row.  When a message is sent to this
                  address, and a response (if one is expected) is not
                  received within this time period, an implementation
                  may assume that the response will not be delivered.
                  
                  Note that the time interval that an application waits
                  for a response may actually be derived from the value
                  of this object.  The method for deriving the actual time
                  interval is implementation dependent.  One such method
                  is to derive the expected round trip time based on a
                  particular retransmission algorithm and on the number
                  of timeouts which have occurred.  The type of message may
                  also be considered when deriving expected round trip
                  times for retransmissions.  For example, if a message is
                  being sent with a securityLevel that indicates both
                  
                  authentication and privacy, the derived value may be
                  increased to compensate for extra processing time spent
                  during authentication and encryption processing."</span>;
               <a href="/modules/yang-smi/2008-03-20#default.33">smi:default</a> <span class="yang_str">"1500"</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1.4"</span>;
            }

            <a name="snmpTargetAddrRetryCount.350"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetAddrRetryCount</span> {
               <span class="yang_kw">type</span> <span class="yang_id">int32</span> {
                  <span class="yang_kw">range</span> <span class="yang_str">"0..255"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"This object specifies a default number of retries to be
                  attempted when a response is not received for a generated
                  message.  An application may provide its own retry count,
                  in which case the value of this object is ignored."</span>;
               <a href="/modules/yang-smi/2008-03-20#default.33">smi:default</a> <span class="yang_str">"3"</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1.5"</span>;
            }

            <a name="snmpTargetAddrTagList.364"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetAddrTagList</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#SnmpTagList.171">SnmpTagList</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"This object contains a list of tag values which are
                  used to select target addresses for a particular
                  operation."</span>;
               <a href="/modules/yang-smi/2008-03-20#default.33">smi:default</a> <span class="yang_str">""</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1.6"</span>;
            }

            <a name="snmpTargetAddrParams.375"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetAddrParams</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpAdminString.377">snmp-framework:SnmpAdminString</a></span> {
                  <span class="yang_kw">length</span> <span class="yang_str">"1..32"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The value of this object identifies an entry in the
                  snmpTargetParamsTable.  The identified entry
                  contains SNMP parameters to be used when generating
                  messages to be sent to this transport address."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1.7"</span>;
            }

            <a name="snmpTargetAddrStorageType.388"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetAddrStorageType</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMPv2-TC/1999-04-01#StorageType.719">smiv2:StorageType</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The storage type for this conceptual row.
                  Conceptual rows having the value 'permanent' need not
                  allow write-access to any columnar objects in the row."</span>;
               <a href="/modules/yang-smi/2008-03-20#default.33">smi:default</a> <span class="yang_str">"nonVolatile"</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1.8"</span>;
            }

            <a name="snmpTargetAddrRowStatus.399"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetAddrRowStatus</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMPv2-TC/1999-04-01#RowStatus.183">smiv2:RowStatus</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The status of this conceptual row.
                  
                  To create a row in this table, a manager must
                  set this object to either createAndGo(4) or
                  createAndWait(5).
                  
                  Until instances of all corresponding columns are
                  appropriately configured, the value of the
                  corresponding instance of the snmpTargetAddrRowStatus
                  column is 'notReady'.
                  
                  In particular, a newly created row cannot be made
                  active until the corresponding instances of
                  snmpTargetAddrTDomain, snmpTargetAddrTAddress, and
                  snmpTargetAddrParams have all been set.
                  
                  The following objects may not be modified while the
                  value of this object is active(1):
                      - snmpTargetAddrTDomain
                      - snmpTargetAddrTAddress
                  An attempt to set these objects while the value of
                  snmpTargetAddrRowStatus is active(1) will result in
                  an inconsistentValue error."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.2.1.9"</span>;
            }
         }  <span class="yang_cmt">// list snmpTargetAddrEntry</span>

         <a name="snmpTargetParamsEntry.433"/><span class="yang_kw">list</span> <span class="yang_id">snmpTargetParamsEntry</span> {
            <span class="yang_kw">key</span> "<a href="#snmpTargetParamsName.444">snmpTargetParamsName</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"A set of SNMP target information.
               
               Entries in the snmpTargetParamsTable are created and
               deleted using the snmpTargetParamsRowStatus object."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.3.1"</span>;

            <a name="snmpTargetParamsName.444"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetParamsName</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpAdminString.377">snmp-framework:SnmpAdminString</a></span> {
                  <span class="yang_kw">length</span> <span class="yang_str">"1..32"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The locally arbitrary, but unique identifier associated
                  with this snmpTargetParamsEntry."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.3.1.1"</span>;
            }

            <a name="snmpTargetParamsMPModel.455"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetParamsMPModel</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpMessageProcessingModel.281">snmp-framework:SnmpMessageProcessingModel</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The Message Processing Model to be used when generating
                  SNMP messages using this entry."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.3.1.2"</span>;
            }

            <a name="snmpTargetParamsSecurityModel.464"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetParamsSecurityModel</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpSecurityModel.207">snmp-framework:SnmpSecurityModel</a></span> {
                  <span class="yang_kw">range</span> <span class="yang_str">"1..2147483647"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The Security Model to be used when generating SNMP
                  messages using this entry.  An implementation may
                  choose to return an inconsistentValue error if an
                  attempt is made to set this variable to a value
                  for a security model which the implementation does
                  not support."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.3.1.3"</span>;
            }

            <a name="snmpTargetParamsSecurityName.479"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetParamsSecurityName</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpAdminString.377">snmp-framework:SnmpAdminString</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The securityName which identifies the Principal on
                  whose behalf SNMP messages will be generated using
                  this entry."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.3.1.4"</span>;
            }

            <a name="snmpTargetParamsSecurityLevel.489"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetParamsSecurityLevel</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpSecurityLevel.354">snmp-framework:SnmpSecurityLevel</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The Level of Security to be used when generating
                  SNMP messages using this entry."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.3.1.5"</span>;
            }

            <a name="snmpTargetParamsStorageType.498"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetParamsStorageType</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMPv2-TC/1999-04-01#StorageType.719">smiv2:StorageType</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The storage type for this conceptual row.
                  Conceptual rows having the value 'permanent' need not
                  allow write-access to any columnar objects in the row."</span>;
               <a href="/modules/yang-smi/2008-03-20#default.33">smi:default</a> <span class="yang_str">"nonVolatile"</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.3.1.6"</span>;
            }

            <a name="snmpTargetParamsRowStatus.509"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpTargetParamsRowStatus</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMPv2-TC/1999-04-01#RowStatus.183">smiv2:RowStatus</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The status of this conceptual row.
                  
                  To create a row in this table, a manager must
                  set this object to either createAndGo(4) or
                  createAndWait(5).
                  
                  Until instances of all corresponding columns are
                  appropriately configured, the value of the
                  corresponding instance of the snmpTargetParamsRowStatus
                  column is 'notReady'.
                  
                  In particular, a newly created row cannot be made
                  active until the corresponding
                  snmpTargetParamsMPModel,
                  snmpTargetParamsSecurityModel,
                  snmpTargetParamsSecurityName,
                  and snmpTargetParamsSecurityLevel have all been set.
                  
                  The following objects may not be modified while the
                  value of this object is active(1):
                      - snmpTargetParamsMPModel
                      - snmpTargetParamsSecurityModel
                      - snmpTargetParamsSecurityName
                      - snmpTargetParamsSecurityLevel
                  An attempt to set these objects while the value of
                  snmpTargetParamsRowStatus is active(1) will result in
                  an inconsistentValue error."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.3.1.7"</span>;
            }
         }  <span class="yang_cmt">// list snmpTargetParamsEntry</span>

         <a name="snmpUnavailableContexts.544"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpUnavailableContexts</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The total number of packets received by the SNMP
               engine which were dropped because the context
               contained in the message was unavailable."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.4"</span>;
         }

         <a name="snmpUnknownContexts.554"/><span class="yang_kw">leaf</span> <span class="yang_id">snmpUnknownContexts</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The total number of packets received by the SNMP
               engine which were dropped because the context
               contained in the message was unknown."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.6.3.12.1.5"</span>;
         }
      }  <span class="yang_cmt">// container snmpTargetObjects</span>
   }  <span class="yang_cmt">// module SNMP-TARGET-MIB</span>
</pre>
</div>
</div>