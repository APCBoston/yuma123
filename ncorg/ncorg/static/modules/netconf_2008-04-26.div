
<div>
   <h1 class="yang">netconf.yang</h1>

   <ul id="nav">
      <li><a href="#">Typedefs</a>
         <ul>
            <li><a href="#Language.36">Language</a></li>
            <li><a href="#SessionId.43">SessionId</a></li>
            <li><a href="#SessionIdOrZero.50">SessionIdOrZero</a></li>
            <li><a href="#LangString.56">LangString</a></li>
            <li><a href="#MessageId.62">MessageId</a></li>
            <li><a href="#ErrorType.69">ErrorType</a></li>
            <li><a href="#ErrorTag.79">ErrorTag</a></li>
            <li><a href="#ErrorSeverity.104">ErrorSeverity</a></li>
            <li><a href="#TestOptionType.112">TestOptionType</a></li>
            <li><a href="#ErrorOptionType.127">ErrorOptionType</a></li>
            <li><a href="#FilterType.137">FilterType</a></li>
            <li><a href="#EditOperationType.146">EditOperationType</a></li>
            <li><a href="#DefaultOperationType.157">DefaultOperationType</a></li>
            <li><a href="#ConfirmTimeoutType.167">ConfirmTimeoutType</a></li>
            <li><a href="#ConfigURIType.177">ConfigURIType</a></li>
         </ul>
      </li>
      <li><a href="#">Groupings</a>
         <ul>
            <li class="daddy"><a href="#NcCapabilities.183">NcCapabilities</a>
               <ul>
                  <li class="daddy"><a href="#capabilities.186">capabilities</a>
                     <ul>
                        <li><a href="#capability.188">capability</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#NcAgentHello.195">NcAgentHello</a>
               <ul>
                  <li><a href="#capabilities.186">capabilities</a></li>
                  <li><a href="#uses.198">uses</a></li>
                  <li><a href="#session-id.200">session-id</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#NcManagerHello.206">NcManagerHello</a>
               <ul>
                  <li><a href="#capabilities.186">capabilities</a></li>
                  <li><a href="#uses.209">uses</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#ErrorInfoContent.214">ErrorInfoContent</a>
               <ul>
                  <li><a href="#bad-attribute.218">bad-attribute</a></li>
                  <li><a href="#bad-element.227">bad-element</a></li>
                  <li><a href="#ok-element.239">ok-element</a></li>
                  <li><a href="#err-element.251">err-element</a></li>
                  <li><a href="#noop-element.263">noop-element</a></li>
                  <li><a href="#session-id.275">session-id</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#RpcErrorType.285">RpcErrorType</a>
               <ul>
                  <li><a href="#error-type.288">error-type</a></li>
                  <li><a href="#error-tag.295">error-tag</a></li>
                  <li><a href="#error-severity.302">error-severity</a></li>
                  <li><a href="#error-app-tag.310">error-app-tag</a></li>
                  <li><a href="#error-path.320">error-path</a></li>
                  <li><a href="#error-message.335">error-message</a></li>
                  <li><a href="#error-info.344">error-info</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#RpcDataReplyType.359">RpcDataReplyType</a>
               <ul>
                  <li class="daddy"><a href="#rpc-error.362">rpc-error</a>
                     <ul>
                        <li><a href="#error-type.288">error-type</a></li>
                        <li><a href="#error-tag.295">error-tag</a></li>
                        <li><a href="#error-severity.302">error-severity</a></li>
                        <li><a href="#error-app-tag.310">error-app-tag</a></li>
                        <li><a href="#error-path.320">error-path</a></li>
                        <li><a href="#error-message.335">error-message</a></li>
                        <li><a href="#error-info.344">error-info</a></li>
                        <li><a href="#uses.364">uses</a></li>
                     </ul>
                  </li>
                  <li><a href="#data.366">data</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#RpcOkReplyType.374">RpcOkReplyType</a>
               <ul>
                  <li class="daddy"><a href="#ok-or-error.377">ok-or-error</a>
                     <ul>
                        <li class="daddy"><a href="#ok.378">ok</a>
                           <ul>
                              <li><a href="#ok.378">ok</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#rpc-error.386">rpc-error</a>
                           <ul>
                              <li class="daddy"><a href="#rpc-error.386">rpc-error</a>
                                 <ul>
                                    <li><a href="#error-type.288">error-type</a></li>
                                    <li><a href="#error-tag.295">error-tag</a></li>
                                    <li><a href="#error-severity.302">error-severity</a></li>
                                    <li><a href="#error-app-tag.310">error-app-tag</a></li>
                                    <li><a href="#error-path.320">error-path</a></li>
                                    <li><a href="#error-message.335">error-message</a></li>
                                    <li><a href="#error-info.344">error-info</a></li>
                                    <li><a href="#uses.387">uses</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#RpcReplyType.393">RpcReplyType</a>
               <ul>
                  <li class="daddy"><a href="#ok-or-data-error.396">ok-or-data-error</a>
                     <ul>
                        <li class="daddy"><a href="#ok.397">ok</a>
                           <ul>
                              <li><a href="#ok.397">ok</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#data-error.405">data-error</a>
                           <ul>
                              <li><a href="#rpc-error.362">rpc-error</a></li>
                              <li><a href="#data.366">data</a></li>
                              <li><a href="#uses.406">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#CommonConfigSourceType.411">CommonConfigSourceType</a>
               <ul>
                  <li class="daddy"><a href="#config-source.414">config-source</a>
                     <ul>
                        <li class="daddy"><a href="#candidate.415">candidate</a>
                           <ul>
                              <li><a href="#candidate.415">candidate</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#running.420">running</a>
                           <ul>
                              <li><a href="#running.420">running</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#startup.423">startup</a>
                           <ul>
                              <li><a href="#startup.423">startup</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#GetConfigSourceType.431">GetConfigSourceType</a>
               <ul>
                  <li><a href="#config-source.414">config-source</a></li>
                  <li><a href="#uses.434">uses</a></li>
                  <li class="daddy"><a href="#augment.435">augment</a>
                     <ul>
                        <li><a href="#url.436">url</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#RpcOperationSourceType.445">RpcOperationSourceType</a>
               <ul>
                  <li><a href="#config-source.414">config-source</a></li>
                  <li><a href="#uses.448">uses</a></li>
                  <li class="daddy"><a href="#augment.449">augment</a>
                     <ul>
                        <li><a href="#url.450">url</a></li>
                        <li><a href="#config.457">config</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#RpcOperationTargetType.463">RpcOperationTargetType</a>
               <ul>
                  <li><a href="#config-source.414">config-source</a></li>
                  <li><a href="#uses.466">uses</a></li>
                  <li class="daddy"><a href="#augment.467">augment</a>
                     <ul>
                        <li><a href="#url.468">url</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
      <li><a href="#">Objects</a>
         <ul>
            <li><a href="#rpc.479">rpc</a></li>
            <li class="daddy"><a href="#rpc-reply.487">rpc-reply</a>
               <ul>
                  <li><a href="#ok-or-data-error.396">ok-or-data-error</a></li>
                  <li><a href="#uses.492">uses</a></li>
               </ul>
            </li>
         </ul>
      </li>
      <li><a href="#">RPC&nbsp;Methods</a>
         <ul>
            <li class="daddy"><a href="#get-config.499">get-config</a>
               <ul>
                  <li class="daddy"><a href="#input.507">input</a>
                     <ul>
                        <li class="daddy"><a href="#source.508">source</a>
                           <ul>
                              <li><a href="#config-source.414">config-source</a></li>
                              <li><a href="#uses.511">uses</a></li>
                           </ul>
                        </li>
                        <li><a href="#filter.514">filter</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#output.521">output</a>
                     <ul>
                        <li><a href="#data.522">data</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#edit-config.530">edit-config</a>
               <ul>
                  <li class="daddy"><a href="#input.551">input</a>
                     <ul>
                        <li class="daddy"><a href="#target.552">target</a>
                           <ul>
                              <li><a href="#config-source.414">config-source</a></li>
                              <li><a href="#uses.555">uses</a></li>
                           </ul>
                        </li>
                        <li><a href="#default-operation.558">default-operation</a></li>
                        <li><a href="#test-option.564">test-option</a></li>
                        <li><a href="#error-option.572">error-option</a></li>
                        <li class="daddy"><a href="#edit-content.577">edit-content</a>
                           <ul>
                              <li><a href="#config.578">config</a></li>
                              <li><a href="#url.583">url</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#copy-config.593">copy-config</a>
               <ul>
                  <li class="daddy"><a href="#input.617">input</a>
                     <ul>
                        <li class="daddy"><a href="#target.618">target</a>
                           <ul>
                              <li><a href="#config-source.414">config-source</a></li>
                              <li><a href="#uses.621">uses</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#source.624">source</a>
                           <ul>
                              <li><a href="#config-source.414">config-source</a></li>
                              <li><a href="#uses.627">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#delete-config.632">delete-config</a>
               <ul>
                  <li class="daddy"><a href="#input.644">input</a>
                     <ul>
                        <li class="daddy"><a href="#target.645">target</a>
                           <ul>
                              <li><a href="#config-source.414">config-source</a></li>
                              <li><a href="#uses.647">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#lock.652">lock</a>
               <ul>
                  <li class="daddy"><a href="#input.664">input</a>
                     <ul>
                        <li class="daddy"><a href="#target.665">target</a>
                           <ul>
                              <li><a href="#config-source.414">config-source</a></li>
                              <li><a href="#uses.668">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#unlock.673">unlock</a>
               <ul>
                  <li class="daddy"><a href="#input.693">input</a>
                     <ul>
                        <li class="daddy"><a href="#target.694">target</a>
                           <ul>
                              <li><a href="#config-source.414">config-source</a></li>
                              <li><a href="#uses.697">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#get.702">get</a>
               <ul>
                  <li class="daddy"><a href="#input.710">input</a>
                     <ul>
                        <li><a href="#filter.711">filter</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#output.734">output</a>
                     <ul>
                        <li><a href="#data.735">data</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li><a href="#close-session.743">close-session</a></li>
            <li class="daddy"><a href="#kill-session.758">kill-session</a>
               <ul>
                  <li class="daddy"><a href="#input.779">input</a>
                     <ul>
                        <li><a href="#session-id.780">session-id</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#commit.788">commit</a>
               <ul>
                  <li class="daddy"><a href="#input.815">input</a>
                     <ul>
                        <li><a href="#confirmed.816">confirmed</a></li>
                        <li><a href="#confirm-timeout.824">confirm-timeout</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li><a href="#discard-changes.834">discard-changes</a></li>
            <li class="daddy"><a href="#validate.852">validate</a>
               <ul>
                  <li class="daddy"><a href="#input.862">input</a>
                     <ul>
                        <li class="daddy"><a href="#source.863">source</a>
                           <ul>
                              <li><a href="#config-source.414">config-source</a></li>
                              <li><a href="#uses.866">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">netconf</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span>
         <span class="yang_str">"urn:ietf:params:xml:ns:netconf:base:1.0"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"nc"</span>;

      <span class="yang_kw">import</span> <a href="/modules/xsd/2007-12-06">xsd</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"xs"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/ncx/2008-04-16">ncx</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"ncx"</span>;
      }

      <span class="yang_kw">contact</span>
         <span class="yang_str">"Translated by Andy Bierman.
         Send comments to &lt;ietf@andybierman.com&gt;."</span>;

      <span class="yang_kw">description</span>
         <span class="yang_str">"NETCONF Protocol 
          * Data Types
          * Parmsets
          * RPCs
         Translated from RFC 4741."</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2008-04-26"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Change get-config and get output from 'config' to 'data'."</span>;
      }
      <span class="yang_kw">revision</span> <span class="yang_str">"2008-04-16"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Initial conversion from netconf.ncx version 0.6."</span>;
      }


      <span class="yang_cmt">// typedefs</span>

      <a name="Language.36"/><span class="yang_kw">typedef</span> <span class="yang_id">Language</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <span class="yang_kw">pattern</span> <span class="yang_str">'[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*'</span>;
         }
         <span class="yang_kw">description</span> <span class="yang_str">"XML language type for LangString"</span>;
      }

      <a name="SessionId.43"/><span class="yang_kw">typedef</span> <span class="yang_id">SessionId</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint32</span> {
            <span class="yang_kw">range</span> <span class="yang_str">"1..max"</span>;
         }
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF Session Id"</span>;
      }

      <a name="SessionIdOrZero.50"/><span class="yang_kw">typedef</span> <span class="yang_id">SessionIdOrZero</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"NETCONF Session Id or Zero to indicate none"</span>;
      }

      <a name="LangString.56"/><span class="yang_kw">typedef</span> <span class="yang_id">LangString</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <a href="/modules/ncx/2008-04-16#metadata.266">ncx:metadata</a> <span class="yang_str">"Language lang?"</span>;
         }
         <span class="yang_kw">description</span> <span class="yang_str">"XML string with a language attribute."</span>;
      }

      <a name="MessageId.62"/><span class="yang_kw">typedef</span> <span class="yang_id">MessageId</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <span class="yang_kw">length</span> <span class="yang_str">"1..4095"</span>;
         }
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF message-id attribute"</span>;
      }

      <a name="ErrorType.69"/><span class="yang_kw">typedef</span> <span class="yang_id">ErrorType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"transport"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"rpc"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"protocol"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"application"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">3</span>;
            }
         }
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF Error Type"</span>;
      }

      <a name="ErrorTag.79"/><span class="yang_kw">typedef</span> <span class="yang_id">ErrorTag</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"in-use"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"invalid-value"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"too-big"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"missing-attribute"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">3</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"bad-attribute"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">4</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"unknown-attribute"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">5</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"missing-element"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">6</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"bad-element"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">7</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"unknown-element"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">8</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"unknown-namespace"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">9</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"access-denied"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">10</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"lock-denied"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">11</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"resource-denied"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">12</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"rollback-failed"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">13</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"data-exists"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">14</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"data-missing"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">15</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"operation-not-supported"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">16</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"operation-failed"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">17</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"partial-operation"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">18</span>;
            }
         }
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF Error Tag"</span>;
      }

      <a name="ErrorSeverity.104"/><span class="yang_kw">typedef</span> <span class="yang_id">ErrorSeverity</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"error"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"warning"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
         }
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF Error Severity"</span>;
      }

      <a name="TestOptionType.112"/><span class="yang_kw">typedef</span> <span class="yang_id">TestOptionType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"test-then-set"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"set"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"test-only"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
         }
         <span class="yang_kw">default</span> <span class="yang_str">"set"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"NETCONF 'test-option' Element Content.
            This is extended with the test-only enumeration.
            The 'set' option has no real effect since
            the entire PDU is always validated before any
            of it is applied (always test-then-set)."</span>;
      }

      <a name="ErrorOptionType.127"/><span class="yang_kw">typedef</span> <span class="yang_id">ErrorOptionType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"stop-on-error"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"continue-on-error"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"rollback-on-error"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
         }
         <span class="yang_kw">default</span> <span class="yang_str">"stop-on-error"</span>;
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF 'error-option' Element Content"</span>;
      }

      <a name="FilterType.137"/><span class="yang_kw">typedef</span> <span class="yang_id">FilterType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"subtree"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"xpath"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
         }
         <span class="yang_kw">default</span> <span class="yang_str">"subtree"</span>;
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF 'filter' Attribute Content"</span>;
      }

      <a name="EditOperationType.146"/><span class="yang_kw">typedef</span> <span class="yang_id">EditOperationType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"merge"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"replace"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"create"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"delete"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">3</span>;
            }
         }
         <span class="yang_kw">default</span> <span class="yang_str">"merge"</span>;
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF 'operation' Attribute Content"</span>;
      }

      <a name="DefaultOperationType.157"/><span class="yang_kw">typedef</span> <span class="yang_id">DefaultOperationType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"merge"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"replace"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"none"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
         }
         <span class="yang_kw">default</span> <span class="yang_str">"merge"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"NETCONF 'default-operation' Element Content"</span>;
      }

      <a name="ConfirmTimeoutType.167"/><span class="yang_kw">typedef</span> <span class="yang_id">ConfirmTimeoutType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint32</span> {
            <span class="yang_kw">range</span> <span class="yang_str">"1..max"</span>;
         }
         <span class="yang_kw">units</span> <span class="yang_str">"seconds"</span>;
         <span class="yang_kw">default</span> <span class="yang_str">"600"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"NETCONF 'confirm-timeout' Element Content"</span>;
      }

      <a name="ConfigURIType.177"/><span class="yang_kw">typedef</span> <span class="yang_id">ConfigURIType</span> {
         <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/xsd/2007-12-06#anyURI.348">xs:anyURI</a></span>;
      }

      <span class="yang_cmt">// groupings</span>

      <a name="NcCapabilities.183"/><span class="yang_kw">grouping</span> <span class="yang_id">NcCapabilities</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Generic Capabilities List."</span>;

         <a name="capabilities.186"/><span class="yang_kw">container</span> <span class="yang_id">capabilities</span> {
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;

            <a name="capability.188"/><span class="yang_kw">leaf-list</span> <span class="yang_id">capability</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/xsd/2007-12-06#anyURI.348">xs:anyURI</a></span>;
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"One Generic Capability URI."</span>;
            }
         }  <span class="yang_cmt">// container capabilities</span>
      }  <span class="yang_cmt">// grouping NcCapabilities</span>

      <a name="NcAgentHello.195"/><span class="yang_kw">grouping</span> <span class="yang_id">NcAgentHello</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Generic Agent Hello Message Parameters."</span>;
         <a name="uses.198"/><span class="yang_kw">uses</span> <a href="#NcCapabilities.183">NcCapabilities</a>;

         <a name="session-id.200"/><span class="yang_kw">leaf</span> <span class="yang_id">session-id</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionId.43">SessionId</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
         }
      }  <span class="yang_cmt">// grouping NcAgentHello</span>

      <a name="NcManagerHello.206"/><span class="yang_kw">grouping</span> <span class="yang_id">NcManagerHello</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Generic Manager Hello Message Parameters."</span>;
         <a name="uses.209"/><span class="yang_kw">uses</span> <a href="#NcCapabilities.183">NcCapabilities</a>;
      }  <span class="yang_cmt">// grouping NcManagerHello</span>

      <a name="ErrorInfoContent.214"/><span class="yang_kw">grouping</span> <span class="yang_id">ErrorInfoContent</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"NETCONF standard 'error-info' Element Content;"</span>;

         <a name="bad-attribute.218"/><span class="yang_kw">leaf-list</span> <span class="yang_id">bad-attribute</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/xsd/2007-12-06#QName.328">xs:QName</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Name of the missing or invalid XSD attribute.
               Used with missing-attribute, bad-attribute, and
               unknown-attribute error-tag values."</span>;
         }

         <a name="bad-element.227"/><span class="yang_kw">leaf-list</span> <span class="yang_id">bad-element</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/xsd/2007-12-06#QName.328">xs:QName</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Name of the element that contains (or should contain)
               an invalid XSD attribute when used with missing-attribute,
               bad-attribute, unknown-attribute, error-tag values.
               Name of an invalid or missing element when used with
               then missing-element, bad-element, unknown-element,
               and unknown-namespace error-tag values."</span>;
         }

         <a name="ok-element.239"/><span class="yang_kw">leaf-list</span> <span class="yang_id">ok-element</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/xsd/2007-12-06#QName.328">xs:QName</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Identifies an element in the data model
               for which the requested operation has been completed
               for that node and all its child nodes.  This element
               can appear zero or more times in the 'error-info'
               container.  Used with the partial-operation error-tag
               value."</span>;
         }

         <a name="err-element.251"/><span class="yang_kw">leaf-list</span> <span class="yang_id">err-element</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/xsd/2007-12-06#QName.328">xs:QName</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Identifies an element in the data model
               for which the requested operation has failed for that
               node and all its child nodes.  This element
               can appear zero or more times in the 'error-info'
               container.   Used with the partial-operation error-tag
               value."</span>;
         }

         <a name="noop-element.263"/><span class="yang_kw">leaf-list</span> <span class="yang_id">noop-element</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/xsd/2007-12-06#QName.328">xs:QName</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Identifies an element in the data model
               for which the requested operation was not attempted for
               that node and all its child nodes.  This element
               can appear zero or more times in the &lt;error-info&gt;
               container.   Used with the partial-operation error-tag
               value."</span>;
         }

         <a name="session-id.275"/><span class="yang_kw">leaf</span> <span class="yang_id">session-id</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionIdOrZero.50">SessionIdOrZero</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Session ID of session holding the
               requested lock, or zero to indicate a non-NETCONF
               entity holds the lock."</span>;
         }
      }  <span class="yang_cmt">// grouping ErrorInfoContent</span>

      <a name="RpcErrorType.285"/><span class="yang_kw">grouping</span> <span class="yang_id">RpcErrorType</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF 'rpc-error' Element Content"</span>;

         <a name="error-type.288"/><span class="yang_kw">leaf</span> <span class="yang_id">error-type</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ErrorType.69">ErrorType</a></span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Defines the conceptual layer that the error occurred."</span>;
         }

         <a name="error-tag.295"/><span class="yang_kw">leaf</span> <span class="yang_id">error-tag</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ErrorTag.79">ErrorTag</a></span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains a string identifying the error condition."</span>;
         }

         <a name="error-severity.302"/><span class="yang_kw">leaf</span> <span class="yang_id">error-severity</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ErrorSeverity.104">ErrorSeverity</a></span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains a string identifying the error severity, as
               determined by the device."</span>;
         }

         <a name="error-app-tag.310"/><span class="yang_kw">leaf</span> <span class="yang_id">error-app-tag</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains a string identifying the data-model-specific
               or implementation-specific error condition, if one exists.
               This element will not be present if no appropriate 
               application error tag can be associated with a particular
               error condition."</span>;
         }

         <a name="error-path.320"/><span class="yang_kw">leaf</span> <span class="yang_id">error-path</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains the absolute XPath [2] expression identifying
               the element path to the node that is associated with the error
               being reported in a particular rpc-error element.  This element
               will not be present if no appropriate payload element can be
               associated with a particular error condition, or if the
               'bad-element' QString returned in the 'error-info' container is
               sufficient to identify the node associated with the error.  When
               the XPath expression is interpreted, the set of namespace
               declarations are those in scope on the rpc-error element,
               including the default namespace."</span>;
         }

         <a name="error-message.335"/><span class="yang_kw">leaf</span> <span class="yang_id">error-message</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#LangString.56">LangString</a></span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains a string suitable for human display that
               describes the error condition.  This element will not be present
               if no appropriate message is provided for a particular error
               condition.  This element SHOULD include an xml:lang attribute."</span>;
         }

         <a name="error-info.344"/><span class="yang_kw">anyxml</span> <span class="yang_id">error-info</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains protocol- or data-model-specific error content.
               This element will not be present if no such error content is
               provided for a particular error condition.  The list in 
               RFC 4741, Appendix A, defines any mandatory error-info content 
               for each error.  After any protocol-mandated content, a 
               data model definition may mandate that certain application-layer
               error information be included in the error-info container. 
               An implementation may include additional elements to 
               provide extended and/or implementation-specific debugging 
               information."</span>;
         }
      }  <span class="yang_cmt">// grouping RpcErrorType</span>

      <a name="RpcDataReplyType.359"/><span class="yang_kw">grouping</span> <span class="yang_id">RpcDataReplyType</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"NETCONF 'rpc-reply' Error and/or Data Content"</span>;

         <a name="rpc-error.362"/><span class="yang_kw">container</span> <span class="yang_id">rpc-error</span> {
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <a name="uses.364"/><span class="yang_kw">uses</span> <a href="#RpcErrorType.285">RpcErrorType</a>;
         }  <span class="yang_cmt">// container rpc-error</span>

         <a name="data.366"/><span class="yang_kw">container</span> <span class="yang_id">data</span> {
            <span class="yang_kw">presence</span>
               <span class="yang_str">"Indicates some data returned in the reply.
               An empty container indicates the request produced
               no response data."</span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
         }  <span class="yang_cmt">// container data</span>
      }  <span class="yang_cmt">// grouping RpcDataReplyType</span>

      <a name="RpcOkReplyType.374"/><span class="yang_kw">grouping</span> <span class="yang_id">RpcOkReplyType</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF 'rpc-reply' OK Content."</span>;

         <a name="ok-or-error.377"/><span class="yang_kw">choice</span> <span class="yang_id">ok-or-error</span> {

            <a name="ok.378"/><span class="yang_kw">case</span> <span class="yang_id">ok</span> {

               <a name="ok.378"/><span class="yang_kw">leaf</span> <span class="yang_id">ok</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                  <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Sent in 'rpc-reply' messages if no errors or
                     warnings occurred during the processing of an 'rpc' request."</span>;
               }
            }  <span class="yang_cmt">// case ok</span>

            <a name="rpc-error.386"/><span class="yang_kw">case</span> <span class="yang_id">rpc-error</span> {

               <a name="rpc-error.386"/><span class="yang_kw">container</span> <span class="yang_id">rpc-error</span> {
                  <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
                  <a name="uses.387"/><span class="yang_kw">uses</span> <a href="#RpcErrorType.285">RpcErrorType</a>;
               }  <span class="yang_cmt">// container rpc-error</span>
            }  <span class="yang_cmt">// case rpc-error</span>
         }  <span class="yang_cmt">// choice ok-or-error</span>
      }  <span class="yang_cmt">// grouping RpcOkReplyType</span>

      <a name="RpcReplyType.393"/><span class="yang_kw">grouping</span> <span class="yang_id">RpcReplyType</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Generic NETCONF 'rpc-reply' content. "</span>;

         <a name="ok-or-data-error.396"/><span class="yang_kw">choice</span> <span class="yang_id">ok-or-data-error</span> {

            <a name="ok.397"/><span class="yang_kw">case</span> <span class="yang_id">ok</span> {

               <a name="ok.397"/><span class="yang_kw">leaf</span> <span class="yang_id">ok</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                  <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Sent in 'rpc-reply' messages if no errors or
                     warnings occurred during the processing of an 'rpc' request."</span>;
               }
            }  <span class="yang_cmt">// case ok</span>

            <a name="data-error.405"/><span class="yang_kw">case</span> <span class="yang_id">data-error</span> {
               <a name="uses.406"/><span class="yang_kw">uses</span> <a href="#RpcDataReplyType.359">RpcDataReplyType</a>;
            }  <span class="yang_cmt">// case data-error</span>
         }  <span class="yang_cmt">// choice ok-or-data-error</span>
      }  <span class="yang_cmt">// grouping RpcReplyType</span>

      <a name="CommonConfigSourceType.411"/><span class="yang_kw">grouping</span> <span class="yang_id">CommonConfigSourceType</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Common NETCONF config parameter contents."</span>;

         <a name="config-source.414"/><span class="yang_kw">choice</span> <span class="yang_id">config-source</span> {

            <a name="candidate.415"/><span class="yang_kw">case</span> <span class="yang_id">candidate</span> {

               <a name="candidate.415"/><span class="yang_kw">leaf</span> <span class="yang_id">candidate</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Only available if 'candidate' capability supported."</span>;
               }
            }  <span class="yang_cmt">// case candidate</span>

            <a name="running.420"/><span class="yang_kw">case</span> <span class="yang_id">running</span> {

               <a name="running.420"/><span class="yang_kw">leaf</span> <span class="yang_id">running</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
               }
            }  <span class="yang_cmt">// case running</span>

            <a name="startup.423"/><span class="yang_kw">case</span> <span class="yang_id">startup</span> {

               <a name="startup.423"/><span class="yang_kw">leaf</span> <span class="yang_id">startup</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Only available if 'startup' capability supported."</span>;
               }
            }  <span class="yang_cmt">// case startup</span>
         }  <span class="yang_cmt">// choice config-source</span>
      }  <span class="yang_cmt">// grouping CommonConfigSourceType</span>

      <a name="GetConfigSourceType.431"/><span class="yang_kw">grouping</span> <span class="yang_id">GetConfigSourceType</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"NETCONF config 'source' Parameter contents."</span>;
         <a name="uses.434"/><span class="yang_kw">uses</span> <a href="#CommonConfigSourceType.411">CommonConfigSourceType</a>;
         <a name="augment.435"/><span class="yang_kw">augment</span> <a href="#config-source.414">config-source</a> {

            <a name="url.436"/><span class="yang_kw">leaf</span> <span class="yang_id">url</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#ConfigURIType.177">ConfigURIType</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"URL pointing to config data. Only available
                  if 'url' capability supported."</span>;
            }
         }
      }  <span class="yang_cmt">// grouping GetConfigSourceType</span>

      <a name="RpcOperationSourceType.445"/><span class="yang_kw">grouping</span> <span class="yang_id">RpcOperationSourceType</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF 'source' Parameter contents."</span>;
         <a name="uses.448"/><span class="yang_kw">uses</span> <a href="#CommonConfigSourceType.411">CommonConfigSourceType</a>;
         <a name="augment.449"/><span class="yang_kw">augment</span> <a href="#config-source.414">config-source</a> {

            <a name="url.450"/><span class="yang_kw">leaf</span> <span class="yang_id">url</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#ConfigURIType.177">ConfigURIType</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"URL pointing to config data. Only available
                  if 'url' capability supported."</span>;
            }

            <a name="config.457"/><span class="yang_kw">anyxml</span> <span class="yang_id">config</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Inline configuration data"</span>;
            }
         }
      }  <span class="yang_cmt">// grouping RpcOperationSourceType</span>

      <a name="RpcOperationTargetType.463"/><span class="yang_kw">grouping</span> <span class="yang_id">RpcOperationTargetType</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"NETCONF 'target' Parameter contents."</span>;
         <a name="uses.466"/><span class="yang_kw">uses</span> <a href="#CommonConfigSourceType.411">CommonConfigSourceType</a>;
         <a name="augment.467"/><span class="yang_kw">augment</span> <a href="#config-source.414">config-source</a> {

            <a name="url.468"/><span class="yang_kw">leaf</span> <span class="yang_id">url</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#ConfigURIType.177">ConfigURIType</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"URL pointing to desired config data output. Only 
                  available if 'url' capability supported."</span>;
            }
         }
      }  <span class="yang_cmt">// grouping RpcOperationTargetType</span>

      <span class="yang_cmt">// objects</span>

      <a name="rpc.479"/><span class="yang_kw">container</span> <span class="yang_id">rpc</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Remote Procedure Call request message"</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 4.1"</span>;
         <a href="/modules/ncx/2008-04-16#metadata.266">ncx:metadata</a> <span class="yang_str">"MessageId message-id"</span>;
      }  <span class="yang_cmt">// container rpc</span>

      <a name="rpc-reply.487"/><span class="yang_kw">container</span> <span class="yang_id">rpc-reply</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Remote Procedure Call response message"</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 4.2"</span>;
         <a href="/modules/ncx/2008-04-16#metadata.266">ncx:metadata</a> <span class="yang_str">"MessageId message-id"</span>;
         <a name="uses.492"/><span class="yang_kw">uses</span> <a href="#RpcReplyType.393">RpcReplyType</a>;
      }  <span class="yang_cmt">// container rpc-reply</span>

      <a name="get-config.499"/><span class="yang_kw">rpc</span> <span class="yang_id">get-config</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Retrieve all or part of a specified configuration."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 7.2"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"monitor"</span>;

         <a name="input.507"/><span class="yang_kw">input</span> {

            <a name="source.508"/><span class="yang_kw">container</span> <span class="yang_id">source</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to retrieve."</span>;
               <a name="uses.511"/><span class="yang_kw">uses</span> <a href="#GetConfigSourceType.431">GetConfigSourceType</a>;
            }  <span class="yang_cmt">// container source</span>

            <a name="filter.514"/><span class="yang_kw">anyxml</span> <span class="yang_id">filter</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Subtree or Xpath filter to use."</span>;
               <a href="/modules/ncx/2008-04-16#metadata.266">ncx:metadata</a> <span class="yang_str">"FilterType type"</span>;
               <a href="/modules/ncx/2008-04-16#metadata.266">ncx:metadata</a> <span class="yang_str">"string select?"</span>;
            }
         }

         <a name="output.521"/><span class="yang_kw">output</span> {

            <a name="data.522"/><span class="yang_kw">anyxml</span> <span class="yang_id">data</span> {
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Copy of the source database subset which matched
                  the filter criteria (if any)."</span>;
            }
         }
      }  <span class="yang_cmt">// rpc get-config</span>

      <a name="edit-config.530"/><span class="yang_kw">rpc</span> <span class="yang_id">edit-config</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"The 'edit-config' operation loads all or part of a specified
            configuration to the specified target configuration.  This
            operation allows the new configuration to be expressed in several
            ways, such as using a local file, a remote file, or inline.  If
            the target configuration does not exist, it will be created.  If a
            NETCONF peer supports the :url capability (Section 8.8), the &lt;url&gt;
            element can appear instead of the &lt;config&gt; parameter and should
            identify a local configuration file.
            
            The device analyzes the source and target configurations and
            performs the requested changes.  The target configuration is not
            necessarily replaced, as with the &lt;copy-config&gt; message.  Instead,
            the target configuration is changed in accordance with the
            source's data and requested operations."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 7.2"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"config"</span>;

         <a name="input.551"/><span class="yang_kw">input</span> {

            <a name="target.552"/><span class="yang_kw">container</span> <span class="yang_id">target</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to edit."</span>;
               <a name="uses.555"/><span class="yang_kw">uses</span> <a href="#RpcOperationTargetType.463">RpcOperationTargetType</a>;
            }  <span class="yang_cmt">// container target</span>

            <a name="default-operation.558"/><span class="yang_kw">leaf</span> <span class="yang_id">default-operation</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#DefaultOperationType.157">DefaultOperationType</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Default operation to apply if not explicitly set."</span>;
            }

            <a name="test-option.564"/><span class="yang_kw">leaf</span> <span class="yang_id">test-option</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#TestOptionType.112">TestOptionType</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Test option if validate capability supported.
                  The 'validate' capability must be present to set
                  this object to 'test-then-set'."</span>;
            }

            <a name="error-option.572"/><span class="yang_kw">leaf</span> <span class="yang_id">error-option</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#ErrorOptionType.127">ErrorOptionType</a></span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Error recovery option."</span>;
            }

            <a name="edit-content.577"/><span class="yang_kw">choice</span> <span class="yang_id">edit-content</span> {

               <a name="config.578"/><span class="yang_kw">case</span> <span class="yang_id">config</span> {

                  <a name="config.578"/><span class="yang_kw">anyxml</span> <span class="yang_id">config</span> {
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Inline Config content: 'config' element."</span>;
                  }
               }  <span class="yang_cmt">// case config</span>

               <a name="url.583"/><span class="yang_kw">case</span> <span class="yang_id">url</span> {

                  <a name="url.583"/><span class="yang_kw">leaf</span> <span class="yang_id">url</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="#ConfigURIType.177">ConfigURIType</a></span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Pointer to Config content: 'url' element."</span>;
                  }
               }  <span class="yang_cmt">// case url</span>
            }  <span class="yang_cmt">// choice edit-content</span>
         }
      }  <span class="yang_cmt">// rpc edit-config</span>

      <a name="copy-config.593"/><span class="yang_kw">rpc</span> <span class="yang_id">copy-config</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Create or replace an entire configuration datastore with the
            contents of another complete configuration datastore.  If the
            target datastore exists, it is overwritten.  Otherwise, a new one
            is created, if allowed.
            
            If a NETCONF peer supports the :url capability (Section 8.8), the
            'url' element can appear as the &lt;source&gt; or &lt;target&gt; parameter.
            
            Even if it advertises the :writable-running capability, a device
            may choose not to support the &lt;running/&gt; configuration datastore
            as the &lt;target&gt; parameter of a &lt;copy-config&gt; operation.  A device
            may choose not to support remote-to-remote copy operations, where
            both the &lt;source&gt; and &lt;target&gt; parameters use the &lt;url&gt; element.
            
            If the source and target parameters identify the same URL or
            configuration datastore, an error MUST be returned with an error-
            tag containing invalid-value."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 7.3"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"config"</span>;

         <a name="input.617"/><span class="yang_kw">input</span> {

            <a name="target.618"/><span class="yang_kw">container</span> <span class="yang_id">target</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to copy to."</span>;
               <a name="uses.621"/><span class="yang_kw">uses</span> <a href="#RpcOperationTargetType.463">RpcOperationTargetType</a>;
            }  <span class="yang_cmt">// container target</span>

            <a name="source.624"/><span class="yang_kw">container</span> <span class="yang_id">source</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to copy from."</span>;
               <a name="uses.627"/><span class="yang_kw">uses</span> <a href="#RpcOperationSourceType.445">RpcOperationSourceType</a>;
            }  <span class="yang_cmt">// container source</span>
         }
      }  <span class="yang_cmt">// rpc copy-config</span>

      <a name="delete-config.632"/><span class="yang_kw">rpc</span> <span class="yang_id">delete-config</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Delete a configuration datastore.  The 'running' configuration
            datastore cannot be deleted.
            
            If a NETCONF peer supports the :url capability (Section 8.8), the
            'url' element can appear as the &lt;target&gt; parameter."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 7.4"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"config"</span>;

         <a name="input.644"/><span class="yang_kw">input</span> {

            <a name="target.645"/><span class="yang_kw">container</span> <span class="yang_id">target</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to delete."</span>;
               <a name="uses.647"/><span class="yang_kw">uses</span> <a href="#RpcOperationTargetType.463">RpcOperationTargetType</a>;
            }  <span class="yang_cmt">// container target</span>
         }
      }  <span class="yang_cmt">// rpc delete-config</span>

      <a name="lock.652"/><span class="yang_kw">rpc</span> <span class="yang_id">lock</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"The lock operation allows the client to lock the configuration
            system of a device.  Such locks are intended to be short-lived and
            allow a client to make a change without fear of interaction with
            other NETCONF clients, non-NETCONF clients (e.g., SNMP and command
            line interface (CLI) scripts), and human users. ..."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 7.5"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"config"</span>;

         <a name="input.664"/><span class="yang_kw">input</span> {

            <a name="target.665"/><span class="yang_kw">container</span> <span class="yang_id">target</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to lock"</span>;
               <a name="uses.668"/><span class="yang_kw">uses</span> <a href="#RpcOperationTargetType.463">RpcOperationTargetType</a>;
            }  <span class="yang_cmt">// container target</span>
         }
      }  <span class="yang_cmt">// rpc lock</span>

      <a name="unlock.673"/><span class="yang_kw">rpc</span> <span class="yang_id">unlock</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"The unlock operation is used to release a configuration lock,
            previously obtained with the 'lock' operation.
            
            An unlock operation will not succeed if any of the following
            conditions are true:
            
            *  the specified lock is not currently active
            
            *  the session issuing the &lt;unlock&gt; operation is not the same
               session that obtained the lock
            
            The server MUST respond with either an &lt;ok&gt; element or an
            'rpc-error'."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 7.6"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"config"</span>;

         <a name="input.693"/><span class="yang_kw">input</span> {

            <a name="target.694"/><span class="yang_kw">container</span> <span class="yang_id">target</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to unlock."</span>;
               <a name="uses.697"/><span class="yang_kw">uses</span> <a href="#RpcOperationTargetType.463">RpcOperationTargetType</a>;
            }  <span class="yang_cmt">// container target</span>
         }
      }  <span class="yang_cmt">// rpc unlock</span>

      <a name="get.702"/><span class="yang_kw">rpc</span> <span class="yang_id">get</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Retrieve running configuration and device state information."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 7.7"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"monitor"</span>;

         <a name="input.710"/><span class="yang_kw">input</span> {

            <a name="filter.711"/><span class="yang_kw">anyxml</span> <span class="yang_id">filter</span> {
               <span class="yang_kw">description</span>
                  <span class="yang_str">"This parameter specifies the portion of the system
                  configuration and state data to retrieve.  If this parameter is
                  empty, all the device configuration and state information is
                  returned.
                  
                  The filter element may optionally contain a 'type' attribute.
                  This attribute indicates the type of filtering syntax used
                  within the filter element.  The default filtering mechanism in
                  NETCONF is referred to as subtree filtering and is described in
                  Section 6.  The value 'subtree' explicitly identifies this type
                  of filtering.
                  
                  If the NETCONF peer supports the :xpath capability
                  (Section 8.9), the value 'xpath' may be used to indicate that
                  the select attribute of the filter element contains an XPath
                  expression."</span>;
               <a href="/modules/ncx/2008-04-16#metadata.266">ncx:metadata</a> <span class="yang_str">"FilterType type"</span>;
               <a href="/modules/ncx/2008-04-16#metadata.266">ncx:metadata</a> <span class="yang_str">"string select?"</span>;
            }
         }

         <a name="output.734"/><span class="yang_kw">output</span> {

            <a name="data.735"/><span class="yang_kw">anyxml</span> <span class="yang_id">data</span> {
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Copy of the 'running' database subset which matched
                  the filter criteria (if any)."</span>;
            }
         }
      }  <span class="yang_cmt">// rpc get</span>

      <a name="close-session.743"/><span class="yang_kw">rpc</span> <span class="yang_id">close-session</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Request graceful termination of a NETCONF session.
            
            When a NETCONF server receives a &lt;close-session&gt; request, it will
            gracefully close the session.  The server will release any locks
            and resources associated with the session and gracefully close any
            associated connections.  Any NETCONF requests received after a
            'close-session' request will be ignored."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 7.8"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"other"</span>;
      }  <span class="yang_cmt">// rpc close-session</span>

      <a name="kill-session.758"/><span class="yang_kw">rpc</span> <span class="yang_id">kill-session</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Force the termination of a NETCONF session.
            
            When a NETCONF entity receives a &lt;kill-session&gt; request for an
            open session, it will abort any operations currently in process,
            release any locks and resources associated with the session, and
            close any associated connections.
            
            If a NETCONF server receives a &lt;kill-session&gt; request while
            processing a confirmed commit (Section 8.4), it must restore the
            configuration to its state before the confirmed commit was issued.
            
            Otherwise, the &lt;kill-session&gt; operation does not roll back
            configuration or other device state modifications made by the
            entity holding the lock."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 7.9"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"exec"</span>;

         <a name="input.779"/><span class="yang_kw">input</span> {

            <a name="session-id.780"/><span class="yang_kw">leaf</span> <span class="yang_id">session-id</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionId.43">SessionId</a></span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Particular session to kill."</span>;
            }
         }
      }  <span class="yang_cmt">// rpc kill-session</span>

      <a name="commit.788"/><span class="yang_kw">rpc</span> <span class="yang_id">commit</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Only available if 'candidate' capability is supported.
            
            When a candidate configuration's content is complete, the
            configuration data can be committed, publishing the data set to
            the rest of the device and requesting the device to conform to
            the behavior described in the new configuration.
            
            To commit the candidate configuration as the device's new
            current configuration, use the &lt;commit&gt; operation.
            
            The 'commit' operation instructs the device to implement the
            configuration data contained in the candidate configuration.
            If the device is unable to commit all of the changes in the
            candidate configuration datastore, then the running
            configuration MUST remain unchanged.  If the device does
            succeed in committing, the running configuration MUST be
            updated with the contents of the candidate configuration.
            
            If the system does not have the :candidate capability, the
            'commit' operation is not available."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 8.3.4.1"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"config"</span>;

         <a name="input.815"/><span class="yang_kw">input</span> {

            <a name="confirmed.816"/><span class="yang_kw">leaf</span> <span class="yang_id">confirmed</span> {
               <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Request a confirmed commit.  Only available if 
                  'confirmed-commit' capability is supported."</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 8.4.5.1"</span>;
            }

            <a name="confirm-timeout.824"/><span class="yang_kw">leaf</span> <span class="yang_id">confirm-timeout</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#ConfirmTimeoutType.167">ConfirmTimeoutType</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Request a specific timeout period for a confirmed commit
                  if 'confirmed-commit' capability supported."</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 8.4.5.1"</span>;
            }
         }
      }  <span class="yang_cmt">// rpc commit</span>

      <a name="discard-changes.834"/><span class="yang_kw">rpc</span> <span class="yang_id">discard-changes</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Only available if 'candidate' capability is supported.
            
            If the client decides that the candidate configuration should not be
            committed, the 'discard-changes' operation can be used to revert the
            candidate configuration to the current running configuration.
            
            This operation discards any uncommitted changes by resetting the
            candidate configuration with the content of the running
            configuration."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 8.3.4.2"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"config"</span>;
      }  <span class="yang_cmt">// rpc discard-changes</span>

      <a name="validate.852"/><span class="yang_kw">rpc</span> <span class="yang_id">validate</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Only available if 'validate' capability is supported.
            
            Validates the contents of the specified configuration."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4741, section 8.6.4.1"</span>;
         <a href="/modules/ncx/2008-04-16#rpc-type.275">ncx:rpc-type</a> <span class="yang_str">"config"</span>;

         <a name="input.862"/><span class="yang_kw">input</span> {

            <a name="source.863"/><span class="yang_kw">container</span> <span class="yang_id">source</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to validate."</span>;
               <a name="uses.866"/><span class="yang_kw">uses</span> <a href="#RpcOperationSourceType.445">RpcOperationSourceType</a>;
            }  <span class="yang_cmt">// container source</span>
         }
      }  <span class="yang_cmt">// rpc validate</span>
   }  <span class="yang_cmt">// module netconf</span>
</pre>
</div>
</div>