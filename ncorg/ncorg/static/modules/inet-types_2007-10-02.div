
<div>
   <h1 class="yang">inet-types.yang</h1>

   <ul id="nav">
      <li><a href="#">Typedefs</a>
         <ul>
            <li><a href="#ip-version.26">ip-version</a></li>
            <li><a href="#dscp.51">dscp</a></li>
            <li><a href="#flow-label.63">flow-label</a></li>
            <li><a href="#port-number.75">port-number</a></li>
            <li><a href="#asn.98">asn</a></li>
            <li><a href="#ip-address.124">ip-address</a></li>
            <li><a href="#ipv4-address.135">ipv4-address</a></li>
            <li><a href="#ipv6-address.148">ipv6-address</a></li>
            <li><a href="#ip-prefix.175">ip-prefix</a></li>
            <li><a href="#ipv4-prefix.186">ipv4-prefix</a></li>
            <li><a href="#ipv6-prefix.208">ipv6-prefix</a></li>
            <li><a href="#domain-name.243">domain-name</a></li>
            <li><a href="#host.266">host</a></li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">inet-types</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span> <span class="yang_str">"urn:ietf:params:xml:ns:yang:inet-types"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"inet"</span>;

      <span class="yang_kw">organization</span> <span class="yang_str">"YANG Language Design Team"</span>;

      <span class="yang_kw">contact</span>
         <span class="yang_str">"Martin Bjorklund (Editor) &lt;mbj@tail-f.com&gt;"</span>;

      <span class="yang_kw">description</span>
         <span class="yang_str">"This module contains standard derived YANG types
         for Internet addresses and related things."</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2007-10-02"</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Initial revision."</span>;
      }


      <span class="yang_cmt">// typedefs</span>

      <a name="ip-version.26"/><span class="yang_kw">typedef</span> <span class="yang_id">ip-version</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"unknown"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"An unknown or unspecified version of the 
                  Internet protocol."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"ipv4"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The IPv4 protocol as defined in RFC 791."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"ipv6"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The IPv6 protocol as defined in RFC 2460."</span>;
            }
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"This value represents the version of the IP protocol."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 791 (STD 5), RFC 2460"</span>;
      }

      <a name="dscp.51"/><span class="yang_kw">typedef</span> <span class="yang_id">dscp</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint8</span> {
            <span class="yang_kw">range</span> <span class="yang_str">"0..63"</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The dscp type represents a Differentiated Services
            Code-Point that may be used for marking a traffic
            stream."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 3289, RFC 2474, RFC 2780"</span>;
      }

      <a name="flow-label.63"/><span class="yang_kw">typedef</span> <span class="yang_id">flow-label</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint32</span> {
            <span class="yang_kw">range</span> <span class="yang_str">"0..1048575"</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The flow-label type represents flow identifier or 
            Flow Label in an IPv6 packet header that may be 
            used to discriminate traffic flows."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 2460"</span>;
      }

      <a name="port-number.75"/><span class="yang_kw">typedef</span> <span class="yang_id">port-number</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint16</span> {
            <span class="yang_kw">range</span> <span class="yang_str">"1..65535"</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The port-number type represents a 16-bit port
            number of an Internet transport layer protocol
            such as UDP, TCP, DCCP or SCTP. Port numbers are
            assigned by IANA.  A current list of all 
            assignments is available from
            &lt;http://www.iana.org/&gt;.
            
            Note that the value zero is not a valid port
            number. A union type might be used in situations
            where the value zero is meaningful."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4001"</span>;
      }

      <a name="asn.98"/><span class="yang_kw">typedef</span> <span class="yang_id">asn</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"The asn type represents autonomous system numbers which
            identify an Autonomous System (AS). An AS is a set of
            routers under a single technical administration, using an
            interior gateway protocol and common metrics to route
            packets within the AS, and using an exterior gateway
            protocol to route packets to other ASs'. IANA maintains
            the AS number space and has delegated large parts to the
            regional registries.
            
            Autonomous system numbers are currently limited to 16 bits
            (0..65535). There is however work in progress to enlarge
            the autonomous system number space to 32 bits. This
            textual convention therefore uses an uint32 base type
            without a range restriction in order to support a larger
            autonomous system number space."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 1771, RFC 1930, RFC 4001"</span>;
      }

      <a name="ip-address.124"/><span class="yang_kw">typedef</span> <span class="yang_id">ip-address</span> {
         <span class="yang_kw">type</span> <span class="yang_id">union</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ipv4-address.135">ipv4-address</a></span>;
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ipv6-address.148">ipv6-address</a></span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The ip-address type represents an IP address and
            is IP version neutral. The format of the textual
            representations implies the IP version."</span>;
      }

      <a name="ipv4-address.135"/><span class="yang_kw">typedef</span> <span class="yang_id">ipv4-address</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <span class="yang_kw">pattern</span>
               <span class="yang_str">'(([0-1]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-1]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])(%[\p{N}\p{L}]+)?'</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The ipv4-address type represents an IPv4 address in
            dotted-quad notation. The IPv4 address may include
            a zone index, separated by a % sign."</span>;
      }

      <a name="ipv6-address.148"/><span class="yang_kw">typedef</span> <span class="yang_id">ipv6-address</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <span class="yang_kw">pattern</span>
               <span class="yang_str">'((([0-9a-fA-F]{1,4}:){7})([0-9a-fA-F]{1,4})(%[\p{N}\p{L}]+)?)|((([0-9a-fA-F]{1,4}:){6})(([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(%[\p{N}\p{L}]+)?)|((([0-9a-fA-F]{1,4}:)*([0-9a-fA-F]{1,4}))*(::)(([0-9a-fA-F]{1,4}:)*([0-9a-fA-F]{1,4}))*(%[\p{N}\p{L}]+)?)((([0-9a-fA-F]{1,4}:)*([0-9a-fA-F]{1,4}))*(::)(([0-9a-fA-F]{1,4}:)*([0-9a-fA-F]{1,4}))*(([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(%[\p{N}\p{L}]+)?)'</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The ipv6-address type represents an IPv6 address in
            full, mixed, shortened and shortened mixed notation.
            The IPv6 address may include a zone index, separated
            by a % sign."</span>;
      }

      <a name="ip-prefix.175"/><span class="yang_kw">typedef</span> <span class="yang_id">ip-prefix</span> {
         <span class="yang_kw">type</span> <span class="yang_id">union</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ipv4-prefix.186">ipv4-prefix</a></span>;
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ipv6-prefix.208">ipv6-prefix</a></span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The ip-prefix type represents an IP prefix and
            is IP version neutral. The format of the textual
            representations implies the IP version."</span>;
      }

      <a name="ipv4-prefix.186"/><span class="yang_kw">typedef</span> <span class="yang_id">ipv4-prefix</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <span class="yang_kw">pattern</span>
               <span class="yang_str">'(([0-1]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-1]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])/\p{N}+'</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The ipv4-prefix type represents an IPv4 address prefix.
            The prefix length is given by the number following the
            slash character and must be less than or equal 32. 
            Values larger than 32 should be treated as 32.
            
            A prefix length value of n corresponds to an IP address
            mask which has n contiguous 1-bits from the most
            significant bit (MSB) and all other bits set to 0.
            
            The IPv4 address represented in dotted quad notation 
            should have all bits that do not belong to the prefix
            set to zero."</span>;
      }

      <a name="ipv6-prefix.208"/><span class="yang_kw">typedef</span> <span class="yang_id">ipv6-prefix</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <span class="yang_kw">pattern</span>
               <span class="yang_str">'((([0-9a-fA-F]{1,4}:){7})([0-9a-fA-F]{1,4})/\p{N}+)|((([0-9a-fA-F]{1,4}:){6})(([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))/\p{N}+)|((([0-9a-fA-F]{1,4}:)*([0-9a-fA-F]{1,4}))*(::)(([0-9a-fA-F]{1,4}:)*([0-9a-fA-F]{1,4}))*/\p{N}+)((([0-9a-fA-F]{1,4}:)*([0-9a-fA-F]{1,4}))*(::)(([0-9a-fA-F]{1,4}:)*([0-9a-fA-F]{1,4}))*(([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))/\p{N}+)'</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The ipv6-prefix type represents an IPv6 address prefix.
            The prefix length is given by the number following the
            slash character and must be less than or equal 128. 
            Values larger than 128 should be treated as 128.
            
            A prefix length value of n corresponds to an IP address
            mask which has n contiguous 1-bits from the most
            significant bit (MSB) and all other bits set to 0.
            
            The IPv6 address represented in dotted quad notation 
            should have all bits that do not belong to the prefix
            set to zero."</span>;
      }

      <a name="domain-name.243"/><span class="yang_kw">typedef</span> <span class="yang_id">domain-name</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span> {
            <span class="yang_kw">pattern</span> <span class="yang_str">'([\p{L}\p{N}]+\.)*[\p{L}\p{N}]'</span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The domain-name type represents a DNS domain
            name. The name SHOULD be fully qualified
            whenever possible.
            
            The description clause of objects using the
            domain-name type MUST describe how (and when)
            these names are resolved to IP addresses.
            
            Note that the resolution of a domain-name value 
            may require to query multiple DNS records (e.g.,
            A for IPv4 and AAAA for IPv6).  The order of the
            resolution process and which DNS record takes
            precedence depends on the configuration of the
            resolver."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC 1034"</span>;
      }

      <a name="host.266"/><span class="yang_kw">typedef</span> <span class="yang_id">host</span> {
         <span class="yang_kw">type</span> <span class="yang_id">union</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ip-address.124">ip-address</a></span>;
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#domain-name.243">domain-name</a></span>;
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"The host type represents either an IP address
            or a DNS domain name."</span>;
      }
   }  <span class="yang_cmt">// module inet-types</span>
</pre>
</div>
</div>