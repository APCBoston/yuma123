
<div>
   <h1 class="yang">netconf-state.yang</h1>

   <ul id="nav">
      <li><a href="#">Typedefs</a>
         <ul>
            <li><a href="#SessionId.22">SessionId</a></li>
            <li><a href="#TransportType.47">TransportType</a></li>
            <li><a href="#ProtocolType.57">ProtocolType</a></li>
            <li><a href="#SchemaFormat.65">SchemaFormat</a></li>
         </ul>
      </li>
      <li><a href="#">Objects</a>
         <ul>
            <li class="daddy"><a href="#netconf.79">netconf</a>
               <ul>
                  <li class="daddy"><a href="#capabilities.82">capabilities</a>
                     <ul>
                        <li><a href="#capability.87">capability</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#configurations.93">configurations</a>
                     <ul>
                        <li class="daddy"><a href="#configuration.98">configuration</a>
                           <ul>
                              <li><a href="#name.99">name</a></li>
                              <li><a href="#locks.102">locks</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#schemas.157">schemas</a>
                     <ul>
                        <li class="daddy"><a href="#schema.158">schema</a>
                           <ul>
                              <li><a href="#identifier.160">identifier</a></li>
                              <li><a href="#version.165">version</a></li>
                              <li><a href="#format.171">format</a></li>
                              <li><a href="#namespace.176">namespace</a></li>
                              <li><a href="#location.181">location</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#sessions.197">sessions</a>
                     <ul>
                        <li class="daddy"><a href="#session.200">session</a>
                           <ul>
                              <li><a href="#sessionId.202">sessionId</a></li>
                              <li><a href="#transport.205">transport</a></li>
                              <li><a href="#protocol.208">protocol</a></li>
                              <li><a href="#username.211">username</a></li>
                              <li><a href="#sourceHost.214">sourceHost</a></li>
                              <li><a href="#loginTime.217">loginTime</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#subscriptions.225">subscriptions</a>
                     <ul>
                        <li class="daddy"><a href="#subscription.230">subscription</a>
                           <ul>
                              <li><a href="#sessionId.234">sessionId</a></li>
                              <li><a href="#stream.239">stream</a></li>
                              <li><a href="#filter.244">filter</a></li>
                              <li><a href="#startTime.248">startTime</a></li>
                              <li><a href="#stopTime.254">stopTime</a></li>
                              <li><a href="#messagesSent.260">messagesSent</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#statistics.270">statistics</a>
                     <ul>
                        <li><a href="#netconfStartTime.271">netconfStartTime</a></li>
                        <li><a href="#inSessions.278">inSessions</a></li>
                        <li><a href="#inXMLParseErrors.287">inXMLParseErrors</a></li>
                        <li><a href="#inBadHellos.294">inBadHellos</a></li>
                        <li><a href="#inRpcs.302">inRpcs</a></li>
                        <li><a href="#inBadRpcs.307">inBadRpcs</a></li>
                        <li><a href="#inNotSupportedRpcs.314">inNotSupportedRpcs</a></li>
                        <li><a href="#outRpcReplies.321">outRpcReplies</a></li>
                        <li><a href="#outRpcErrors.326">outRpcErrors</a></li>
                        <li><a href="#outNotifications.332">outNotifications</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
      <li><a href="#">RPC&nbsp;Methods</a>
         <ul>
            <li class="daddy"><a href="#get-schema.341">get-schema</a>
               <ul>
                  <li class="daddy"><a href="#input.342">input</a>
                     <ul>
                        <li><a href="#identifier.343">identifier</a></li>
                        <li><a href="#version.347">version</a></li>
                        <li><a href="#format.351">format</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">netconf-state</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span> <span class="yang_str">"urn:ietf:params:xml:ns:netconf:state"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"ns"</span>;

      <span class="yang_kw">import</span> <a href="/modules/yang-types/2008-05-22">yang-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"yang"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/inet-types/2008-06-07">inet-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"inet"</span>;
      }

      <span class="yang_kw">organization</span> <span class="yang_str">"IETF"</span>;

      <span class="yang_kw">description</span>
         <span class="yang_str">"NETCONF Monitoring Module.
         All elements in this module are read-only."</span>;

      <span class="yang_kw">reference</span> <span class="yang_str">"draft-ietf-netconf-monitoring-02.txt"</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2008-06-23"</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Initial revision."</span>;
      }

      <a name="SessionId.22"></a><span class="yang_kw">typedef</span> <span class="yang_id">SessionId</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint32</span> {
            <span class="yang_kw">range</span> <span class="yang_str">"1..max"</span>;
         }
         <span class="yang_kw">reference</span> <span class="yang_str">"rfc4741"</span>;
      }

      <a name="TransportType.47"></a><span class="yang_kw">typedef</span> <span class="yang_id">TransportType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"SSH"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"SSL"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"Console"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"HTTP"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">3</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"HTTPS"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">4</span>;
            }
         }
      }

      <a name="ProtocolType.57"></a><span class="yang_kw">typedef</span> <span class="yang_id">ProtocolType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"CLI"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"NETCONF"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"WebUI"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
         }
      }

      <a name="SchemaFormat.65"></a><span class="yang_kw">typedef</span> <span class="yang_id">SchemaFormat</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"XSD"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"W3C REC REC-xmlschema-1-20041028"</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"YANG"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"draft-ietf-netmod-yang"</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"RNG"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"ISO/IEC 19757-2"</span>;
            }
         }
      }

      <a name="netconf.79"></a><span class="yang_kw">container</span> <span class="yang_id">netconf</span> {
         <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
         <a name="capabilities.82"></a><span class="yang_kw">container</span> <span class="yang_id">capabilities</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"The list of currently provided NETCONF capabilities.  This
               may be different than those exchanged during session setup
               (i.e. hello)."</span>;
            <a name="capability.87"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">capability</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#uri.148">yang:uri</a></span>;
               <span class="yang_kw">min-elements</span> <span class="yang_str">"1"</span>;
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            }
         }  <span class="yang_cmt">// container capabilities</span>

         <a name="configurations.93"></a><span class="yang_kw">container</span> <span class="yang_id">configurations</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"List of NETCONF configuration datastores (e.g. running,
               startup, candidate) supported on this device and related
               information."</span>;
            <a name="configuration.98"></a><span class="yang_kw">list</span> <span class="yang_id">configuration</span> {
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <a name="name.99"></a><span class="yang_kw">container</span> <span class="yang_id">name</span> {
                  <a name="datastore.33"></a><span class="yang_kw">choice</span> <span class="yang_id">datastore</span> {
                     <a name="running.35"></a><span class="yang_kw">case</span> <span class="yang_id">running</span> {
                        <a name="running.35"></a><span class="yang_kw">leaf</span> <span class="yang_id">running</span> {
                           <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                        }
                     }  <span class="yang_cmt">// case running</span>

                     <a name="candidate.38"></a><span class="yang_kw">case</span> <span class="yang_id">candidate</span> {
                        <a name="candidate.38"></a><span class="yang_kw">leaf</span> <span class="yang_id">candidate</span> {
                           <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                        }
                     }  <span class="yang_cmt">// case candidate</span>

                     <a name="startup.41"></a><span class="yang_kw">case</span> <span class="yang_id">startup</span> {
                        <a name="startup.41"></a><span class="yang_kw">leaf</span> <span class="yang_id">startup</span> {
                           <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                        }
                     }  <span class="yang_cmt">// case startup</span>
                  }  <span class="yang_cmt">// choice datastore</span>
               }  <span class="yang_cmt">// container name</span>

               <a name="locks.102"></a><span class="yang_kw">container</span> <span class="yang_id">locks</span> {
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"An indication of whether a resource is locked or
                     unlocked.  If locked, additional information about
                     the locking such as user an time stamp is provided."</span>;
                  <a name="lockType.123"></a><span class="yang_kw">choice</span> <span class="yang_id">lockType</span> {
                     <a name="globalLock.124"></a><span class="yang_kw">case</span> <span class="yang_id">globalLock</span> {
                        <a name="globalLock.124"></a><span class="yang_kw">container</span> <span class="yang_id">globalLock</span> {
                           <span class="yang_kw">description</span> <span class="yang_str">"Present if the global lock is set."</span>;
                           <a name="lockedBySession.109"></a><span class="yang_kw">leaf</span> <span class="yang_id">lockedBySession</span> {
                              <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionId.22">SessionId</a></span>;
                              <span class="yang_kw">description</span>
                                 <span class="yang_str">"The session ID of the session that has locked
                                 this resource."</span>;
                           }

                           <a name="lockedTime.115"></a><span class="yang_kw">leaf</span> <span class="yang_id">lockedTime</span> {
                              <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#date-and-time.205">yang:date-and-time</a></span>;
                              <span class="yang_kw">description</span>
                                 <span class="yang_str">"The date and time of when the resource was
                                 locked."</span>;
                           }
                        }  <span class="yang_cmt">// container globalLock</span>
                     }  <span class="yang_cmt">// case globalLock</span>

                     <a name="partialLocks.129"></a><span class="yang_kw">case</span> <span class="yang_id">partialLocks</span> {
                        <a name="partialLocks.129"></a><span class="yang_kw">list</span> <span class="yang_id">partialLocks</span> {
                           <span class="yang_kw">key</span> "<a href="#lockId.134">lockId</a>";
                           <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
                           <span class="yang_kw">description</span>
                              <span class="yang_str">"Present if at least one partial lock is set."</span>;
                           <a name="lockId.134"></a><span class="yang_kw">leaf</span> <span class="yang_id">lockId</span> {
                              <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                           }

                           <a name="lockedBySession.109"></a><span class="yang_kw">leaf</span> <span class="yang_id">lockedBySession</span> {
                              <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionId.22">SessionId</a></span>;
                              <span class="yang_kw">description</span>
                                 <span class="yang_str">"The session ID of the session that has locked
                                 this resource."</span>;
                           }

                           <a name="lockedTime.115"></a><span class="yang_kw">leaf</span> <span class="yang_id">lockedTime</span> {
                              <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#date-and-time.205">yang:date-and-time</a></span>;
                              <span class="yang_kw">description</span>
                                 <span class="yang_str">"The date and time of when the resource was
                                 locked."</span>;
                           }

                           <a name="select.138"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">select</span> {
                              <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                              <span class="yang_kw">min-elements</span> <span class="yang_str">"1"</span>;
                              <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
                              <span class="yang_kw">description</span>
                                 <span class="yang_str">"The xpath expression which was used to request
                                 the lock."</span>;
                           }

                           <a name="lockedNodes.145"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">lockedNodes</span> {
                              <span class="yang_kw">type</span> <span class="yang_id">instance-identifier</span>;
                              <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
                              <span class="yang_kw">description</span>
                                 <span class="yang_str">"The list of instance-identifiers (i.e. the
                                 locked nodes)."</span>;
                           }
                        }  <span class="yang_cmt">// list partialLocks</span>
                     }  <span class="yang_cmt">// case partialLocks</span>
                  }  <span class="yang_cmt">// choice lockType</span>
               }  <span class="yang_cmt">// container locks</span>
            }  <span class="yang_cmt">// list configuration</span>
         }  <span class="yang_cmt">// container configurations</span>

         <a name="schemas.157"></a><span class="yang_kw">container</span> <span class="yang_id">schemas</span> {
            <a name="schema.158"></a><span class="yang_kw">list</span> <span class="yang_id">schema</span> {
               <span class="yang_kw">key</span> "<a href="#identifier.160">identifier</a> <a href="#format.171">format</a> <a href="#version.165">version</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <a name="identifier.160"></a><span class="yang_kw">leaf</span> <span class="yang_id">identifier</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Identifier to uniquely reference the schema"</span>;
               }

               <a name="version.165"></a><span class="yang_kw">leaf</span> <span class="yang_id">version</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Version of the schema supported.  Multiple versions can be
                     supported simultaneously."</span>;
               }

               <a name="format.171"></a><span class="yang_kw">leaf</span> <span class="yang_id">format</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#SchemaFormat.65">SchemaFormat</a></span>;
                  <span class="yang_kw">description</span> <span class="yang_str">"Schema language for the file/module."</span>;
               }

               <a name="namespace.176"></a><span class="yang_kw">leaf</span> <span class="yang_id">namespace</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#uri.148">yang:uri</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The XML namespace defined by the data model."</span>;
               }

               <a name="location.181"></a><span class="yang_kw">leaf</span> <span class="yang_id">location</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">union</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                        <span class="yang_kw">enum</span> <span class="yang_str">"NETCONF"</span> {
                           <span class="yang_kw">value</span> <span class="yang_str">0</span>;
                        }
                     }
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#uri.148">yang:uri</a></span>;
                  }
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"A location from which the schema can be retrieved.  Can be
                     either on the network device retrievable explicitly via the
                     get-schema netconf operation (denoted by the value
                     'NETCONF') or some network location (i.e. URL)."</span>;
               }
            }  <span class="yang_cmt">// list schema</span>
         }  <span class="yang_cmt">// container schemas</span>

         <a name="sessions.197"></a><span class="yang_kw">container</span> <span class="yang_id">sessions</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"List of NETCONF sessions currently active on this device."</span>;
            <a name="session.200"></a><span class="yang_kw">list</span> <span class="yang_id">session</span> {
               <span class="yang_kw">key</span> "<a href="#sessionId.202">sessionId</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <a name="sessionId.202"></a><span class="yang_kw">leaf</span> <span class="yang_id">sessionId</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionId.22">SessionId</a></span>;
               }

               <a name="transport.205"></a><span class="yang_kw">leaf</span> <span class="yang_id">transport</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#TransportType.47">TransportType</a></span>;
               }

               <a name="protocol.208"></a><span class="yang_kw">leaf</span> <span class="yang_id">protocol</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#ProtocolType.57">ProtocolType</a></span>;
               }

               <a name="username.211"></a><span class="yang_kw">leaf</span> <span class="yang_id">username</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }

               <a name="sourceHost.214"></a><span class="yang_kw">leaf</span> <span class="yang_id">sourceHost</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/inet-types/2008-06-07#host.285">inet:host</a></span>;
               }

               <a name="loginTime.217"></a><span class="yang_kw">leaf</span> <span class="yang_id">loginTime</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#date-and-time.205">yang:date-and-time</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Time at which the session was established."</span>;
               }
            }  <span class="yang_cmt">// list session</span>
         }  <span class="yang_cmt">// container sessions</span>

         <a name="subscriptions.225"></a><span class="yang_kw">container</span> <span class="yang_id">subscriptions</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains information on the active subscriptions on the
               NETCONF server.  Subscriptions which have ended are not
               reported."</span>;
            <a name="subscription.230"></a><span class="yang_kw">list</span> <span class="yang_id">subscription</span> {
               <span class="yang_kw">key</span> "<a href="#sessionId.234">sessionId</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Information about Netconf Notification Subscriptions."</span>;
               <a name="sessionId.234"></a><span class="yang_kw">leaf</span> <span class="yang_id">sessionId</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionId.22">SessionId</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The session id associated with this subscription."</span>;
               }

               <a name="stream.239"></a><span class="yang_kw">leaf</span> <span class="yang_id">stream</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The stream associated with this subscription."</span>;
               }

               <a name="filter.244"></a><span class="yang_kw">anyxml</span> <span class="yang_id">filter</span> {
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The filters associated with this subscription."</span>;
               }

               <a name="startTime.248"></a><span class="yang_kw">leaf</span> <span class="yang_id">startTime</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#date-and-time.205">yang:date-and-time</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The startTime parameter from the create-subscription
                     invokation, if it was present."</span>;
               }

               <a name="stopTime.254"></a><span class="yang_kw">leaf</span> <span class="yang_id">stopTime</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#date-and-time.205">yang:date-and-time</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The stopTime parameter from the create-subscription
                     invokation, if it was present."</span>;
               }

               <a name="messagesSent.260"></a><span class="yang_kw">leaf</span> <span class="yang_id">messagesSent</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"A count of event notifications sent along
                     this connection since the subscription was
                     created."</span>;
               }
            }  <span class="yang_cmt">// list subscription</span>
         }  <span class="yang_cmt">// container subscriptions</span>

         <a name="statistics.270"></a><span class="yang_kw">container</span> <span class="yang_id">statistics</span> {
            <a name="netconfStartTime.271"></a><span class="yang_kw">leaf</span> <span class="yang_id">netconfStartTime</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#date-and-time.205">yang:date-and-time</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Date and time at which the NETCONF server process was
                  started.  Allows for calculation of time interval for
                  reported metrics."</span>;
            }

            <a name="inSessions.278"></a><span class="yang_kw">leaf</span> <span class="yang_id">inSessions</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of NETCONF sessions started towards the
                  NETCONF peer.
                  
                   inSessions - inBadHellos = 'number of correctly started
                  			     netconf sessions'"</span>;
            }

            <a name="inXMLParseErrors.287"></a><span class="yang_kw">leaf</span> <span class="yang_id">inXMLParseErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of messages that were unparsable and thus
                  ignored.  This covers both unparsable 'hello' and 'rpc'
                  messages."</span>;
            }

            <a name="inBadHellos.294"></a><span class="yang_kw">leaf</span> <span class="yang_id">inBadHellos</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of sessions silently dropped because an
                  invalid 'hello' message was received.  This includes hello
                  messages with a 'session-id' attribute, bad namespace, and
                  bad capability declarations."</span>;
            }

            <a name="inRpcs.302"></a><span class="yang_kw">leaf</span> <span class="yang_id">inRpcs</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of rpc requests received."</span>;
            }

            <a name="inBadRpcs.307"></a><span class="yang_kw">leaf</span> <span class="yang_id">inBadRpcs</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of rpcs which were parsed correctly, but
                  couldn't be serviced because they contained
                  non-conformant XML,  e.g. missing a mandatory parameter."</span>;
            }

            <a name="inNotSupportedRpcs.314"></a><span class="yang_kw">leaf</span> <span class="yang_id">inNotSupportedRpcs</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of rpcs which were parsed correctly, but
                  couldn't be serviced because they were not supported by
                  the agent."</span>;
            }

            <a name="outRpcReplies.321"></a><span class="yang_kw">leaf</span> <span class="yang_id">outRpcReplies</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of 'rpc-reply' messages sent."</span>;
            }

            <a name="outRpcErrors.326"></a><span class="yang_kw">leaf</span> <span class="yang_id">outRpcErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of 'rpc-reply' messages with 'rpc-error'
                   sent."</span>;
            }

            <a name="outNotifications.332"></a><span class="yang_kw">leaf</span> <span class="yang_id">outNotifications</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2008-05-22#zero-based-counter32.55">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of 'notifications' messages sent."</span>;
            }
         }  <span class="yang_cmt">// container statistics</span>
      }  <span class="yang_cmt">// container netconf</span>

      <a name="get-schema.341"></a><span class="yang_kw">rpc</span> <span class="yang_id">get-schema</span> {
         <a name="input.342"></a><span class="yang_kw">input</span> {
            <a name="identifier.343"></a><span class="yang_kw">leaf</span> <span class="yang_id">identifier</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            }

            <a name="version.347"></a><span class="yang_kw">leaf</span> <span class="yang_id">version</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            }

            <a name="format.351"></a><span class="yang_kw">leaf</span> <span class="yang_id">format</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#SchemaFormat.65">SchemaFormat</a></span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            }
         }
      }  <span class="yang_cmt">// rpc get-schema</span>
   }  <span class="yang_cmt">// module netconf-state</span>
</pre>
</div>
</div>