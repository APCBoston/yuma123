
<div>
   <h1 class="yang">TCP-MIB.yang</h1>

   <ul id="nav">
      <li><a href="#">Objects</a>
         <ul>
            <li class="daddy"><a href="#tcp.62">tcp</a>
               <ul>
                  <li><a href="#tcpRtoAlgorithm.64">tcpRtoAlgorithm</a></li>
                  <li><a href="#tcpRtoMin.79">tcpRtoMin</a></li>
                  <li><a href="#tcpRtoMax.95">tcpRtoMax</a></li>
                  <li><a href="#tcpMaxConn.112">tcpMaxConn</a></li>
                  <li><a href="#tcpActiveOpens.125">tcpActiveOpens</a></li>
                  <li><a href="#tcpPassiveOpens.137">tcpPassiveOpens</a></li>
                  <li><a href="#tcpAttemptFails.149">tcpAttemptFails</a></li>
                  <li><a href="#tcpEstabResets.164">tcpEstabResets</a></li>
                  <li><a href="#tcpCurrEstab.177">tcpCurrEstab</a></li>
                  <li><a href="#tcpInSegs.186">tcpInSegs</a></li>
                  <li><a href="#tcpOutSegs.199">tcpOutSegs</a></li>
                  <li><a href="#tcpRetransSegs.212">tcpRetransSegs</a></li>
                  <li class="daddy"><a href="#tcpConnEntry.228">tcpConnEntry</a>
                     <ul>
                        <li><a href="#tcpConnState.242">tcpConnState</a></li>
                        <li><a href="#tcpConnLocalAddress.279">tcpConnLocalAddress</a></li>
                        <li><a href="#tcpConnLocalPort.291">tcpConnLocalPort</a></li>
                        <li><a href="#tcpConnRemAddress.302">tcpConnRemAddress</a></li>
                        <li><a href="#tcpConnRemPort.311">tcpConnRemPort</a></li>
                     </ul>
                  </li>
                  <li><a href="#tcpInErrs.323">tcpInErrs</a></li>
                  <li><a href="#tcpOutRsts.335">tcpOutRsts</a></li>
                  <li><a href="#tcpHCInSegs.346">tcpHCInSegs</a></li>
                  <li><a href="#tcpHCOutSegs.361">tcpHCOutSegs</a></li>
                  <li class="daddy"><a href="#tcpConnectionEntry.378">tcpConnectionEntry</a>
                     <ul>
                        <li><a href="#tcpConnectionLocalAddressType.393">tcpConnectionLocalAddressType</a></li>
                        <li><a href="#tcpConnectionLocalAddress.401">tcpConnectionLocalAddress</a></li>
                        <li><a href="#tcpConnectionLocalPort.417">tcpConnectionLocalPort</a></li>
                        <li><a href="#tcpConnectionRemAddressType.425">tcpConnectionRemAddressType</a></li>
                        <li><a href="#tcpConnectionRemAddress.433">tcpConnectionRemAddress</a></li>
                        <li><a href="#tcpConnectionRemPort.449">tcpConnectionRemPort</a></li>
                        <li><a href="#tcpConnectionState.457">tcpConnectionState</a></li>
                        <li><a href="#tcpConnectionProcess.497">tcpConnectionProcess</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#tcpListenerEntry.513">tcpListenerEntry</a>
                     <ul>
                        <li><a href="#tcpListenerLocalAddressType.523">tcpListenerLocalAddressType</a></li>
                        <li><a href="#tcpListenerLocalAddress.533">tcpListenerLocalAddress</a></li>
                        <li><a href="#tcpListenerLocalPort.569">tcpListenerLocalPort</a></li>
                        <li><a href="#tcpListenerProcess.577">tcpListenerProcess</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">TCP-MIB</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span>
         <span class="yang_str">"urn:ietf:params:xml:ns:yang:smiv2:TCP-MIB"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"tcp-mib"</span>;

      <span class="yang_kw">import</span> <a href="/modules/INET-ADDRESS-MIB/2005-02-04">INET-ADDRESS-MIB</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"inet-address"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/inet-types/2007-10-02">inet-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"inet"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/yang-smi/2008-03-20">yang-smi</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"smi"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/yang-types/2007-10-02">yang-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"yang"</span>;
      }

      <span class="yang_kw">organization</span>
         <span class="yang_str">"IETF IPv6 MIB Revision Team
         http://www.ietf.org/html.charters/ipv6-charter.html"</span>;

      <span class="yang_kw">contact</span>
         <span class="yang_str">"Rajiv Raghunarayan (editor)
         
         Cisco Systems Inc.
         170 West Tasman Drive
         San Jose, CA 95134
         
         Phone: +1 408 853 9612
         Email: &lt;raraghun@cisco.com&gt;
         
         Send comments to &lt;ipv6@ietf.org&gt;"</span>;

      <span class="yang_kw">description</span>
         <span class="yang_str">"The MIB module for managing TCP implementations.
         
         Copyright (C) The Internet Society (2005). This version
         of this MIB module is a part of RFC 4022; see the RFC
         itself for full legal notices."</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2005-02-18"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"IP version neutral revision, published as RFC 4022."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"1994-11-01"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Initial SMIv2 version, published as RFC 2012."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"1991-03-31"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"The initial revision of this MIB module was part of
            MIB-II."</span>;
      }

      <a name="tcp.62"></a><span class="yang_kw">container</span> <span class="yang_id">tcp</span> {
         <a name="tcpRtoAlgorithm.64"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpRtoAlgorithm</span> {
            <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
               <span class="yang_kw">enum</span> <span class="yang_str">"other"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">1</span>;
               }
               <span class="yang_kw">enum</span> <span class="yang_str">"constant"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">2</span>;
               }
               <span class="yang_kw">enum</span> <span class="yang_str">"rsre"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">3</span>;
               }
               <span class="yang_kw">enum</span> <span class="yang_str">"vanj"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">4</span>;
               }
               <span class="yang_kw">enum</span> <span class="yang_str">"rfc2988"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">5</span>;
               }
            }
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The algorithm used to determine the timeout value used for
               retransmitting unacknowledged octets."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.1"</span>;
         }

         <a name="tcpRtoMin.79"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpRtoMin</span> {
            <span class="yang_kw">type</span> <span class="yang_id">int32</span> {
               <span class="yang_kw">range</span> <span class="yang_str">"0..2147483647"</span>;
            }
            <span class="yang_kw">units</span> <span class="yang_str">"milliseconds"</span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The minimum value permitted by a TCP implementation for
               the retransmission timeout, measured in milliseconds.
               More refined semantics for objects of this type depend
               on the algorithm used to determine the retransmission
               timeout; in particular, the IETF standard algorithm
               rfc2988(5) provides a minimum value."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.2"</span>;
         }

         <a name="tcpRtoMax.95"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpRtoMax</span> {
            <span class="yang_kw">type</span> <span class="yang_id">int32</span> {
               <span class="yang_kw">range</span> <span class="yang_str">"0..2147483647"</span>;
            }
            <span class="yang_kw">units</span> <span class="yang_str">"milliseconds"</span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The maximum value permitted by a TCP implementation for
               the retransmission timeout, measured in milliseconds.
               More refined semantics for objects of this type depend
               on the algorithm used to determine the retransmission
               timeout; in particular, the IETF standard algorithm
               rfc2988(5) provides an upper bound (as part of an
               adaptive backoff algorithm)."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.3"</span>;
         }

         <a name="tcpMaxConn.112"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpMaxConn</span> {
            <span class="yang_kw">type</span> <span class="yang_id">int32</span> {
               <span class="yang_kw">range</span> <span class="yang_str">"-1..2147483647"</span>;
            }
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The limit on the total number of TCP connections the entity
               can support.  In entities where the maximum number of
               connections is dynamic, this object should contain the
               value -1."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.4"</span>;
         }

         <a name="tcpActiveOpens.125"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpActiveOpens</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The number of times that TCP connections have made a direct
               transition to the SYN-SENT state from the CLOSED state.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.5"</span>;
         }

         <a name="tcpPassiveOpens.137"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpPassiveOpens</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The number of times TCP connections have made a direct
               transition to the SYN-RCVD state from the LISTEN state.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.6"</span>;
         }

         <a name="tcpAttemptFails.149"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpAttemptFails</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The number of times that TCP connections have made a direct
               transition to the CLOSED state from either the SYN-SENT
               state or the SYN-RCVD state, plus the number of times that
               TCP connections have made a direct transition to the
               LISTEN state from the SYN-RCVD state.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.7"</span>;
         }

         <a name="tcpEstabResets.164"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpEstabResets</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The number of times that TCP connections have made a direct
               transition to the CLOSED state from either the ESTABLISHED
               state or the CLOSE-WAIT state.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.8"</span>;
         }

         <a name="tcpCurrEstab.177"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpCurrEstab</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#gauge32.99">yang:gauge32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The number of TCP connections for which the current state
               is either ESTABLISHED or CLOSE-WAIT."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.9"</span>;
         }

         <a name="tcpInSegs.186"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpInSegs</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The total number of segments received, including those
               received in error.  This count includes segments received
               on currently established connections.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.10"</span>;
         }

         <a name="tcpOutSegs.199"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpOutSegs</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The total number of segments sent, including those on
               current connections but excluding those containing only
               retransmitted octets.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.11"</span>;
         }

         <a name="tcpRetransSegs.212"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpRetransSegs</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The total number of segments retransmitted; that is, the
               number of TCP segments transmitted containing one or more
               previously transmitted octets.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.12"</span>;
         }

         <a name="tcpConnEntry.228"></a><span class="yang_kw">list</span> <span class="yang_id">tcpConnEntry</span> {
            <span class="yang_kw">key</span> "<a href="#tcpConnLocalAddress.279">tcpConnLocalAddress</a> <a href="#tcpConnLocalPort.291">tcpConnLocalPort</a> <a href="#tcpConnRemAddress.302">tcpConnRemAddress</a> <a href="#tcpConnRemPort.311">tcpConnRemPort</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">status</span> <span class="yang_str">"deprecated"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"A conceptual row of the tcpConnTable containing information
               about a particular current IPv4 TCP connection.  Each row
               of this table is transient in that it ceases to exist when
               (or soon after) the connection makes the transition to the
               CLOSED state."</span>;
            <a name="tcpConnState.242"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnState</span> {
               <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                  <span class="yang_kw">enum</span> <span class="yang_str">"closed"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">1</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"listen"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">2</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"synSent"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">3</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"synReceived"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">4</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"established"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">5</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"finWait1"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">6</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"finWait2"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">7</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"closeWait"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">8</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"lastAck"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">9</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"closing"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">10</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"timeWait"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">11</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"deleteTCB"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">12</span>;
                  }
               }
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">status</span> <span class="yang_str">"deprecated"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The state of this TCP connection.
                  
                  The only value that may be set by a management station is
                  deleteTCB(12).  Accordingly, it is appropriate for an agent
                  to return a `badValue' response if a management station
                  attempts to set this object to any other value.
                  
                  If a management station sets this object to the value
                  deleteTCB(12), then the TCB (as defined in [RFC793]) of
                  the corresponding connection on the managed node is
                  deleted, resulting in immediate termination of the
                  connection.
                  
                  As an implementation-specific option, a RST segment may be
                  sent from the managed node to the other TCP endpoint (note,
                  however, that RST segments are not sent reliably)."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.13.1.1"</span>;
            }

            <a name="tcpConnLocalAddress.279"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnLocalAddress</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/inet-types/2007-10-02#ipv4-address.135">inet:ipv4-address</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">status</span> <span class="yang_str">"deprecated"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The local IP address for this TCP connection.  In the case
                  of a connection in the listen state willing to
                  accept connections for any IP interface associated with the
                  node, the value 0.0.0.0 is used."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.13.1.2"</span>;
            }

            <a name="tcpConnLocalPort.291"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnLocalPort</span> {
               <span class="yang_kw">type</span> <span class="yang_id">int32</span> {
                  <span class="yang_kw">range</span> <span class="yang_str">"0..65535"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">status</span> <span class="yang_str">"deprecated"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The local port number for this TCP connection."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.13.1.3"</span>;
            }

            <a name="tcpConnRemAddress.302"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnRemAddress</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/inet-types/2007-10-02#ipv4-address.135">inet:ipv4-address</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">status</span> <span class="yang_str">"deprecated"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The remote IP address for this TCP connection."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.13.1.4"</span>;
            }

            <a name="tcpConnRemPort.311"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnRemPort</span> {
               <span class="yang_kw">type</span> <span class="yang_id">int32</span> {
                  <span class="yang_kw">range</span> <span class="yang_str">"0..65535"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">status</span> <span class="yang_str">"deprecated"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The remote port number for this TCP connection."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.13.1.5"</span>;
            }
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.13.1"</span>;
         }  <span class="yang_cmt">// list tcpConnEntry</span>

         <a name="tcpInErrs.323"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpInErrs</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The total number of segments received in error (e.g., bad
               TCP checksums).
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.14"</span>;
         }

         <a name="tcpOutRsts.335"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpOutRsts</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The number of TCP segments sent containing the RST flag.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.15"</span>;
         }

         <a name="tcpHCInSegs.346"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpHCInSegs</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The total number of segments received, including those
               received in error.  This count includes segments received
               
               on currently established connections.  This object is
               the 64-bit equivalent of tcpInSegs.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.17"</span>;
         }

         <a name="tcpHCOutSegs.361"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpHCOutSegs</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The total number of segments sent, including those on
               current connections but excluding those containing only
               retransmitted octets.  This object is the 64-bit
               equivalent of tcpOutSegs.
               
               Discontinuities in the value of this counter are
               indicated via discontinuities in the value of sysUpTime."</span>;
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.18"</span>;
         }

         <a name="tcpConnectionEntry.378"></a><span class="yang_kw">list</span> <span class="yang_id">tcpConnectionEntry</span> {
            <span class="yang_kw">key</span> "<a href="#tcpConnectionLocalAddressType.393">tcpConnectionLocalAddressType</a> <a href="#tcpConnectionLocalAddress.401">tcpConnectionLocalAddress</a> <a href="#tcpConnectionLocalPort.417">tcpConnectionLocalPort</a> <a href="#tcpConnectionRemAddressType.425">tcpConnectionRemAddressType</a> <a href="#tcpConnectionRemAddress.433">tcpConnectionRemAddress</a> <a href="#tcpConnectionRemPort.449">tcpConnectionRemPort</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"A conceptual row of the tcpConnectionTable containing
               information about a particular current TCP connection.
               Each row of this table is transient in that it ceases to
               exist when (or soon after) the connection makes the
               transition to the CLOSED state."</span>;
            <a name="tcpConnectionLocalAddressType.393"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnectionLocalAddressType</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressType.71">inet-address:InetAddressType</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The address type of tcpConnectionLocalAddress."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.19.1.1"</span>;
            }

            <a name="tcpConnectionLocalAddress.401"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnectionLocalAddress</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/INET-ADDRESS-MIB/2005-02-04#InetAddress.128">inet-address:InetAddress</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The local IP address for this TCP connection.  The type
                  of this address is determined by the value of
                  tcpConnectionLocalAddressType.
                  
                  As this object is used in the index for the
                  tcpConnectionTable, implementors should be
                  careful not to create entries that would result in OIDs
                  with more than 128 subidentifiers; otherwise the information
                  cannot be accessed by using SNMPv1, SNMPv2c, or SNMPv3."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.19.1.2"</span>;
            }

            <a name="tcpConnectionLocalPort.417"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnectionLocalPort</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/INET-ADDRESS-MIB/2005-02-04#InetPortNumber.324">inet-address:InetPortNumber</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The local port number for this TCP connection."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.19.1.3"</span>;
            }

            <a name="tcpConnectionRemAddressType.425"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnectionRemAddressType</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressType.71">inet-address:InetAddressType</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The address type of tcpConnectionRemAddress."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.19.1.4"</span>;
            }

            <a name="tcpConnectionRemAddress.433"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnectionRemAddress</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/INET-ADDRESS-MIB/2005-02-04#InetAddress.128">inet-address:InetAddress</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The remote IP address for this TCP connection.  The type
                  of this address is determined by the value of
                  tcpConnectionRemAddressType.
                  
                  As this object is used in the index for the
                  tcpConnectionTable, implementors should be
                  careful not to create entries that would result in OIDs
                  with more than 128 subidentifiers; otherwise the information
                  cannot be accessed by using SNMPv1, SNMPv2c, or SNMPv3."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.19.1.5"</span>;
            }

            <a name="tcpConnectionRemPort.449"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnectionRemPort</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/INET-ADDRESS-MIB/2005-02-04#InetPortNumber.324">inet-address:InetPortNumber</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The remote port number for this TCP connection."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.19.1.6"</span>;
            }

            <a name="tcpConnectionState.457"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnectionState</span> {
               <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                  <span class="yang_kw">enum</span> <span class="yang_str">"closed"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">1</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"listen"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">2</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"synSent"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">3</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"synReceived"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">4</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"established"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">5</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"finWait1"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">6</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"finWait2"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">7</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"closeWait"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">8</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"lastAck"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">9</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"closing"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">10</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"timeWait"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">11</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"deleteTCB"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">12</span>;
                  }
               }
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The state of this TCP connection.
                  
                  The value listen(2) is included only for parallelism to the
                  old tcpConnTable and should not be used.  A connection in
                  LISTEN state should be present in the tcpListenerTable.
                  
                  The only value that may be set by a management station is
                  deleteTCB(12).  Accordingly, it is appropriate for an agent
                  to return a `badValue' response if a management station
                  attempts to set this object to any other value.
                  
                  If a management station sets this object to the value
                  deleteTCB(12), then the TCB (as defined in [RFC793]) of
                  the corresponding connection on the managed node is
                  deleted, resulting in immediate termination of the
                  connection.
                  
                  As an implementation-specific option, a RST segment may be
                  sent from the managed node to the other TCP endpoint (note,
                  however, that RST segments are not sent reliably)."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.19.1.7"</span>;
            }

            <a name="tcpConnectionProcess.497"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpConnectionProcess</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The system's process ID for the process associated with
                  this connection, or zero if there is no such process.  This
                  value is expected to be the same as HOST-RESOURCES-MIB::
                  hrSWRunIndex or SYSAPPL-MIB::sysApplElmtRunIndex for some
                  row in the appropriate tables."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.19.1.8"</span>;
            }
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.19.1"</span>;
         }  <span class="yang_cmt">// list tcpConnectionEntry</span>

         <a name="tcpListenerEntry.513"></a><span class="yang_kw">list</span> <span class="yang_id">tcpListenerEntry</span> {
            <span class="yang_kw">key</span> "<a href="#tcpListenerLocalAddressType.523">tcpListenerLocalAddressType</a> <a href="#tcpListenerLocalAddress.533">tcpListenerLocalAddress</a> <a href="#tcpListenerLocalPort.569">tcpListenerLocalPort</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"A conceptual row of the tcpListenerTable containing
               information about a particular TCP listener."</span>;
            <a name="tcpListenerLocalAddressType.523"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpListenerLocalAddressType</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressType.71">inet-address:InetAddressType</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The address type of tcpListenerLocalAddress.  The value
                  should be unknown (0) if connection initiations to all
                  local IP addresses are accepted."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.20.1.1"</span>;
            }

            <a name="tcpListenerLocalAddress.533"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpListenerLocalAddress</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/INET-ADDRESS-MIB/2005-02-04#InetAddress.128">inet-address:InetAddress</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The local IP address for this TCP connection.
                  
                  The value of this object can be represented in three
                  possible ways, depending on the characteristics of the
                  listening application:
                  
                  1. For an application willing to accept both IPv4 and
                     IPv6 datagrams, the value of this object must be
                     ''h (a zero-length octet-string), with the value
                     of the corresponding tcpListenerLocalAddressType
                     object being unknown (0).
                  
                  2. For an application willing to accept only IPv4 or
                     IPv6 datagrams, the value of this object must be
                     '0.0.0.0' or '::' respectively, with
                     tcpListenerLocalAddressType representing the
                     appropriate address type.
                  
                  3. For an application which is listening for data
                     destined only to a specific IP address, the value
                     of this object is the specific local address, with
                     tcpListenerLocalAddressType representing the
                     appropriate address type.
                  
                  As this object is used in the index for the
                  tcpListenerTable, implementors should be
                  careful not to create entries that would result in OIDs
                  with more than 128 subidentifiers; otherwise the information
                  cannot be accessed, using SNMPv1, SNMPv2c, or SNMPv3."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.20.1.2"</span>;
            }

            <a name="tcpListenerLocalPort.569"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpListenerLocalPort</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/INET-ADDRESS-MIB/2005-02-04#InetPortNumber.324">inet-address:InetPortNumber</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The local port number for this TCP connection."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.20.1.3"</span>;
            }

            <a name="tcpListenerProcess.577"></a><span class="yang_kw">leaf</span> <span class="yang_id">tcpListenerProcess</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The system's process ID for the process associated with
                  this listener, or zero if there is no such process.  This
                  value is expected to be the same as HOST-RESOURCES-MIB::
                  hrSWRunIndex or SYSAPPL-MIB::sysApplElmtRunIndex for some
                  row in the appropriate tables."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.20.1.4"</span>;
            }
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6.20.1"</span>;
         }  <span class="yang_cmt">// list tcpListenerEntry</span>
         <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.6"</span>;
      }  <span class="yang_cmt">// container tcp</span>
   }  <span class="yang_cmt">// module TCP-MIB</span>
</pre>
</div>
</div>