
<div>
   <h1 class="yang">EtherLike-MIB.yang</h1>

   <ul id="nav">
      <li><a href="#">Objects</a>
         <ul>
            <li class="daddy"><a href="#dot3.133">dot3</a>
               <ul>
                  <li class="daddy"><a href="#dot3StatsEntry.138">dot3StatsEntry</a>
                     <ul>
                        <li><a href="#dot3StatsIndex.147">dot3StatsIndex</a></li>
                        <li><a href="#dot3StatsAlignmentErrors.161">dot3StatsAlignmentErrors</a></li>
                        <li><a href="#dot3StatsFCSErrors.202">dot3StatsFCSErrors</a></li>
                        <li><a href="#dot3StatsSingleCollisionFrames.246">dot3StatsSingleCollisionFrames</a></li>
                        <li><a href="#dot3StatsMultipleCollisionFrames.275">dot3StatsMultipleCollisionFrames</a></li>
                        <li><a href="#dot3StatsSQETestErrors.305">dot3StatsSQETestErrors</a></li>
                        <li><a href="#dot3StatsDeferredTransmissions.331">dot3StatsDeferredTransmissions</a></li>
                        <li><a href="#dot3StatsLateCollisions.356">dot3StatsLateCollisions</a></li>
                        <li><a href="#dot3StatsExcessiveCollisions.383">dot3StatsExcessiveCollisions</a></li>
                        <li><a href="#dot3StatsInternalMacTransmitErrors.404">dot3StatsInternalMacTransmitErrors</a></li>
                        <li><a href="#dot3StatsCarrierSenseErrors.445">dot3StatsCarrierSenseErrors</a></li>
                        <li><a href="#dot3StatsFrameTooLongs.473">dot3StatsFrameTooLongs</a></li>
                        <li><a href="#dot3StatsInternalMacReceiveErrors.510">dot3StatsInternalMacReceiveErrors</a></li>
                        <li><a href="#dot3StatsEtherChipSet.551">dot3StatsEtherChipSet</a></li>
                        <li><a href="#dot3StatsSymbolErrors.587">dot3StatsSymbolErrors</a></li>
                        <li><a href="#dot3StatsDuplexStatus.650">dot3StatsDuplexStatus</a></li>
                        <li><a href="#dot3StatsRateControlAbility.687">dot3StatsRateControlAbility</a></li>
                        <li><a href="#dot3StatsRateControlStatus.702">dot3StatsRateControlStatus</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#dot3CollEntry.722">dot3CollEntry</a>
                     <ul>
                        <li><a href="#ifIndex.736">ifIndex</a></li>
                        <li><a href="#dot3CollCount.745">dot3CollCount</a></li>
                        <li><a href="#dot3CollFrequencies.758">dot3CollFrequencies</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#dot3ControlEntry.793">dot3ControlEntry</a>
                     <ul>
                        <li><a href="#dot3StatsIndex.802">dot3StatsIndex</a></li>
                        <li><a href="#dot3ControlFunctionsSupported.811">dot3ControlFunctionsSupported</a></li>
                        <li><a href="#dot3ControlInUnknownOpcodes.825">dot3ControlInUnknownOpcodes</a></li>
                        <li><a href="#dot3HCControlInUnknownOpcodes.853">dot3HCControlInUnknownOpcodes</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#dot3PauseEntry.879">dot3PauseEntry</a>
                     <ul>
                        <li><a href="#dot3StatsIndex.888">dot3StatsIndex</a></li>
                        <li><a href="#dot3PauseAdminMode.897">dot3PauseAdminMode</a></li>
                        <li><a href="#dot3PauseOperMode.943">dot3PauseOperMode</a></li>
                        <li><a href="#dot3InPauseFrames.970">dot3InPauseFrames</a></li>
                        <li><a href="#dot3OutPauseFrames.1001">dot3OutPauseFrames</a></li>
                        <li><a href="#dot3HCInPauseFrames.1032">dot3HCInPauseFrames</a></li>
                        <li><a href="#dot3HCOutPauseFrames.1057">dot3HCOutPauseFrames</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#dot3HCStatsEntry.1086">dot3HCStatsEntry</a>
                     <ul>
                        <li><a href="#dot3StatsIndex.1094">dot3StatsIndex</a></li>
                        <li><a href="#dot3HCStatsAlignmentErrors.1103">dot3HCStatsAlignmentErrors</a></li>
                        <li><a href="#dot3HCStatsFCSErrors.1138">dot3HCStatsFCSErrors</a></li>
                        <li><a href="#dot3HCStatsInternalMacTransmitErrors.1175">dot3HCStatsInternalMacTransmitErrors</a></li>
                        <li><a href="#dot3HCStatsFrameTooLongs.1211">dot3HCStatsFrameTooLongs</a></li>
                        <li><a href="#dot3HCStatsInternalMacReceiveErrors.1243">dot3HCStatsInternalMacReceiveErrors</a></li>
                        <li><a href="#dot3HCStatsSymbolErrors.1278">dot3HCStatsSymbolErrors</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">EtherLike-MIB</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span>
         <span class="yang_str">"urn:ietf:params:xml:ns:yang:smiv2:EtherLike-MIB"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"etherlike-mib"</span>;

      <span class="yang_kw">import</span> <a href="/modules/IF-MIB/2000-06-14">IF-MIB</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"if-mib"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/SNMPv2-TC/1999-04-01">SNMPv2-TC</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"smiv2"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/yang-smi/2008-03-20">yang-smi</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"smi"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/yang-types/2007-10-02">yang-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"yang"</span>;
      }

      <span class="yang_kw">organization</span>
         <span class="yang_str">"IETF Ethernet Interfaces and Hub MIB
         Working Group"</span>;

      <span class="yang_kw">contact</span>
         <span class="yang_str">"WG E-mail: hubmib@ietf.org
         To subscribe: hubmib-request@ietf.org
         
                Chair: Dan Romascanu
               Postal: Avaya Inc.
         	      Atidum Technology Park, Bldg. 3
         	      Tel Aviv 61131
         	      Israel
         	 Tel: +972 3 645 8414
               E-mail: dromasca@avaya.com
         
              Editor: John Flick
              Postal: Hewlett-Packard Company
         	     8000 Foothills Blvd. M/S 5557
         	     Roseville, CA 95747-5557
         	     USA
         	Tel: +1 916 785 4018
         	Fax: +1 916 785 1199
              E-mail: johnf@rose.hp.com"</span>;

      <span class="yang_kw">description</span>
         <span class="yang_str">"The MIB module to describe generic objects for
         ethernet-like network interfaces.
         
         The following reference is used throughout this
         MIB module:
         
         [IEEE 802.3 Std] refers to:
            IEEE Std 802.3, 2002 Edition: 'IEEE Standard
         
            for Information technology -
            Telecommunications and information exchange
            between systems - Local and metropolitan
            area networks - Specific requirements -
            Part 3: Carrier sense multiple access with
            collision detection (CSMA/CD) access method
            and physical layer specifications', as
            amended by IEEE Std 802.3ae-2002:
            'Amendment: Media Access Control (MAC)
            Parameters, Physical Layer, and Management
            Parameters for 10 Gb/s Operation', August,
            2002.
         
         Of particular interest is Clause 30, '10 Mb/s,
         100 Mb/s, 1000 Mb/s, and 10 Gb/s Management'.
         
         Copyright (C) The Internet Society (2003).  This
         version of this MIB module is part of RFC 3635;
         see the RFC itself for full legal notices."</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2003-09-19"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Updated to include support for 10 Gb/sec
            interfaces.  This resulted in the following
            revisions:
            
            - Updated dot3StatsAlignmentErrors and
              dot3StatsSymbolErrors DESCRIPTIONs to
              reflect behaviour at 10 Gb/s
            - Added dot3StatsRateControlAbility and
              dot3RateControlStatus for management
              of the Rate Control function in 10 Gb/s
              WAN applications
            - Added 64-bit versions of all counters
              that are used on high-speed ethernet
              interfaces
            - Added object groups to contain the new
              objects
            - Deprecated etherStatsBaseGroup and
              split into etherStatsBaseGroup2 and
              etherStatsHalfDuplexGroup, so that
              interfaces which can only operate at
              full-duplex do not need to implement
              half-duplex-only statistics
            - Deprecated dot3Compliance and replaced
              it with dot3Compliance2, which includes
              the compliance information for the new
              object groups
            
            In addition, the dot3Tests and dot3Errors
            object identities have been deprecated,
            since there is no longer a standard method
            for using them.
            
            This version published as RFC 3635."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"1999-08-24"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Updated to include support for 1000 Mb/sec
            interfaces and full-duplex interfaces.
            This version published as RFC 2665."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"1998-06-03"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Updated to include support for 100 Mb/sec
            interfaces.
            This version published as RFC 2358."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"1994-02-03"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Initial version, published as RFC 1650."</span>;
      }

      <a name="dot3.133"></a><span class="yang_kw">container</span> <span class="yang_id">dot3</span> {
         <a name="dot3StatsEntry.138"></a><span class="yang_kw">list</span> <span class="yang_id">dot3StatsEntry</span> {
            <span class="yang_kw">key</span> "<a href="#dot3StatsIndex.147">dot3StatsIndex</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Statistics for a particular interface to an
               ethernet-like medium."</span>;
            <a name="dot3StatsIndex.147"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsIndex</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/IF-MIB/2000-06-14#InterfaceIndex.81">if-mib:InterfaceIndex</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"An index value that uniquely identifies an
                  interface to an ethernet-like medium.  The
                  interface identified by a particular value of
                  this index is the same interface as identified
                  by the same value of ifIndex."</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"RFC 2863, ifIndex"</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.1"</span>;
            }

            <a name="dot3StatsAlignmentErrors.161"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsAlignmentErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames received on a particular
                  interface that are not an integral number of
                  octets in length and do not pass the FCS check.
                  
                  The count represented by an instance of this
                  object is incremented when the alignmentError
                  status is returned by the MAC service to the
                  LLC (or other MAC user). Received frames for
                  which multiple error conditions pertain are,
                  according to the conventions of IEEE 802.3
                  Layer Management, counted exclusively according
                  
                  to the error status presented to the LLC.
                  
                  This counter does not increment for group
                  encoding schemes greater than 4 bits per group.
                  
                  For interfaces operating at 10 Gb/s, this
                  counter can roll over in less than 5 minutes if
                  it is incrementing at its maximum rate.  Since
                  that amount of time could be less than a
                  management station's poll cycle time, in order
                  to avoid a loss of information, a management
                  station is advised to poll the
                  dot3HCStatsAlignmentErrors object for 10 Gb/s
                  or faster interfaces.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.7,
                  aAlignmentErrors"</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.2"</span>;
            }

            <a name="dot3StatsFCSErrors.202"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsFCSErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames received on a particular
                  interface that are an integral number of octets
                  in length but do not pass the FCS check.  This
                  count does not include frames received with
                  frame-too-long or frame-too-short error.
                  
                  The count represented by an instance of this
                  object is incremented when the frameCheckError
                  status is returned by the MAC service to the
                  LLC (or other MAC user). Received frames for
                  which multiple error conditions pertain are,
                  according to the conventions of IEEE 802.3
                  Layer Management, counted exclusively according
                  to the error status presented to the LLC.
                  
                  Note:  Coding errors detected by the physical
                  layer for speeds above 10 Mb/s will cause the
                  frame to fail the FCS check.
                  
                  For interfaces operating at 10 Gb/s, this
                  counter can roll over in less than 5 minutes if
                  
                  it is incrementing at its maximum rate.  Since
                  that amount of time could be less than a
                  management station's poll cycle time, in order
                  to avoid a loss of information, a management
                  station is advised to poll the
                  dot3HCStatsFCSErrors object for 10 Gb/s or
                  faster interfaces.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.6,
                  aFrameCheckSequenceErrors."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.3"</span>;
            }

            <a name="dot3StatsSingleCollisionFrames.246"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsSingleCollisionFrames</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames that are involved in a single
                  collision, and are subsequently transmitted
                  successfully.
                  
                  A frame that is counted by an instance of this
                  object is also counted by the corresponding
                  instance of either the ifOutUcastPkts,
                  ifOutMulticastPkts, or ifOutBroadcastPkts,
                  and is not counted by the corresponding
                  instance of the dot3StatsMultipleCollisionFrames
                  object.
                  
                  This counter does not increment when the
                  interface is operating in full-duplex mode.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.3,
                  aSingleCollisionFrames."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.4"</span>;
            }

            <a name="dot3StatsMultipleCollisionFrames.275"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsMultipleCollisionFrames</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames that are involved in more
                  
                  than one collision and are subsequently
                  transmitted successfully.
                  
                  A frame that is counted by an instance of this
                  object is also counted by the corresponding
                  instance of either the ifOutUcastPkts,
                  ifOutMulticastPkts, or ifOutBroadcastPkts,
                  and is not counted by the corresponding
                  instance of the dot3StatsSingleCollisionFrames
                  object.
                  
                  This counter does not increment when the
                  interface is operating in full-duplex mode.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.4,
                  aMultipleCollisionFrames."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.5"</span>;
            }

            <a name="dot3StatsSQETestErrors.305"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsSQETestErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of times that the SQE TEST ERROR
                  is received on a particular interface. The
                  SQE TEST ERROR is set in accordance with the
                  rules for verification of the SQE detection
                  mechanism in the PLS Carrier Sense Function as
                  described in IEEE Std. 802.3, 2000 Edition,
                  section 7.2.4.6.
                  
                  This counter does not increment on interfaces
                  operating at speeds greater than 10 Mb/s, or on
                  interfaces operating in full-duplex mode.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 7.2.4.6, also 30.3.2.1.4,
                  aSQETestErrors."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.6"</span>;
            }

            <a name="dot3StatsDeferredTransmissions.331"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsDeferredTransmissions</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames for which the first
                  transmission attempt on a particular interface
                  is delayed because the medium is busy.
                  
                  The count represented by an instance of this
                  object does not include frames involved in
                  collisions.
                  
                  This counter does not increment when the
                  interface is operating in full-duplex mode.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.9,
                  aFramesWithDeferredXmissions."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.7"</span>;
            }

            <a name="dot3StatsLateCollisions.356"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsLateCollisions</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The number of times that a collision is
                  detected on a particular interface later than
                  one slotTime into the transmission of a packet.
                  
                  A (late) collision included in a count
                  represented by an instance of this object is
                  also considered as a (generic) collision for
                  purposes of other collision-related
                  statistics.
                  
                  This counter does not increment when the
                  interface is operating in full-duplex mode.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.10,
                  aLateCollisions."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.8"</span>;
            }

            <a name="dot3StatsExcessiveCollisions.383"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsExcessiveCollisions</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames for which transmission on a
                  particular interface fails due to excessive
                  collisions.
                  
                  This counter does not increment when the
                  interface is operating in full-duplex mode.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.11,
                  aFramesAbortedDueToXSColls."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.9"</span>;
            }

            <a name="dot3StatsInternalMacTransmitErrors.404"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsInternalMacTransmitErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames for which transmission on a
                  particular interface fails due to an internal
                  MAC sublayer transmit error. A frame is only
                  counted by an instance of this object if it is
                  not counted by the corresponding instance of
                  either the dot3StatsLateCollisions object, the
                  dot3StatsExcessiveCollisions object, or the
                  dot3StatsCarrierSenseErrors object.
                  
                  The precise meaning of the count represented by
                  an instance of this object is implementation-
                  specific.  In particular, an instance of this
                  object may represent a count of transmission
                  errors on a particular interface that are not
                  otherwise counted.
                  
                  For interfaces operating at 10 Gb/s, this
                  counter can roll over in less than 5 minutes if
                  it is incrementing at its maximum rate.  Since
                  that amount of time could be less than a
                  management station's poll cycle time, in order
                  to avoid a loss of information, a management
                  station is advised to poll the
                  dot3HCStatsInternalMacTransmitErrors object for
                  10 Gb/s or faster interfaces.
                  
                  Discontinuities in the value of this counter can
                  
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.12,
                  aFramesLostDueToIntMACXmitError."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.10"</span>;
            }

            <a name="dot3StatsCarrierSenseErrors.445"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsCarrierSenseErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The number of times that the carrier sense
                  condition was lost or never asserted when
                  attempting to transmit a frame on a particular
                  interface.
                  
                  The count represented by an instance of this
                  object is incremented at most once per
                  transmission attempt, even if the carrier sense
                  condition fluctuates during a transmission
                  attempt.
                  
                  This counter does not increment when the
                  interface is operating in full-duplex mode.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.13,
                  aCarrierSenseErrors."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.11"</span>;
            }

            <a name="dot3StatsFrameTooLongs.473"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsFrameTooLongs</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames received on a particular
                  interface that exceed the maximum permitted
                  frame size.
                  
                  The count represented by an instance of this
                  object is incremented when the frameTooLong
                  status is returned by the MAC service to the
                  LLC (or other MAC user). Received frames for
                  which multiple error conditions pertain are,
                  according to the conventions of IEEE 802.3
                  Layer Management, counted exclusively according
                  to the error status presented to the LLC.
                  
                  For interfaces operating at 10 Gb/s, this
                  counter can roll over in less than 80 minutes if
                  it is incrementing at its maximum rate.  Since
                  that amount of time could be less than a
                  management station's poll cycle time, in order
                  to avoid a loss of information, a management
                  station is advised to poll the
                  dot3HCStatsFrameTooLongs object for 10 Gb/s
                  or faster interfaces.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.25,
                  aFrameTooLongErrors."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.13"</span>;
            }

            <a name="dot3StatsInternalMacReceiveErrors.510"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsInternalMacReceiveErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames for which reception on a
                  particular interface fails due to an internal
                  MAC sublayer receive error. A frame is only
                  counted by an instance of this object if it is
                  not counted by the corresponding instance of
                  either the dot3StatsFrameTooLongs object, the
                  dot3StatsAlignmentErrors object, or the
                  dot3StatsFCSErrors object.
                  
                  The precise meaning of the count represented by
                  an instance of this object is implementation-
                  specific.  In particular, an instance of this
                  object may represent a count of receive errors
                  on a particular interface that are not
                  otherwise counted.
                  
                  For interfaces operating at 10 Gb/s, this
                  counter can roll over in less than 5 minutes if
                  
                  it is incrementing at its maximum rate.  Since
                  that amount of time could be less than a
                  management station's poll cycle time, in order
                  to avoid a loss of information, a management
                  station is advised to poll the
                  dot3HCStatsInternalMacReceiveErrors object for
                  10 Gb/s or faster interfaces.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.15,
                  aFramesLostDueToIntMACRcvError."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.16"</span>;
            }

            <a name="dot3StatsEtherChipSet.551"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsEtherChipSet</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#object-identifier.175">yang:object-identifier</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">status</span> <span class="yang_str">"deprecated"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"******** THIS OBJECT IS DEPRECATED ********
                  
                  This object contains an OBJECT IDENTIFIER
                  which identifies the chipset used to
                  realize the interface. Ethernet-like
                  interfaces are typically built out of
                  several different chips. The MIB implementor
                  is presented with a decision of which chip
                  to identify via this object. The implementor
                  should identify the chip which is usually
                  called the Medium Access Control chip.
                  If no such chip is easily identifiable,
                  the implementor should identify the chip
                  which actually gathers the transmit
                  and receive statistics and error
                  indications. This would allow a
                  manager station to correlate the
                  statistics and the chip generating
                  them, giving it the ability to take
                  into account any known anomalies
                  in the chip.
                  
                  This object has been deprecated.  Implementation
                  feedback indicates that it is of limited use for
                  debugging network problems in the field, and
                  the administrative overhead involved in
                  maintaining a registry of chipset OIDs is not
                  justified."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.17"</span>;
            }

            <a name="dot3StatsSymbolErrors.587"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsSymbolErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"For an interface operating at 100 Mb/s, the
                  number of times there was an invalid data symbol
                  when a valid carrier was present.
                  
                  For an interface operating in half-duplex mode
                  at 1000 Mb/s, the number of times the receiving
                  media is non-idle (a carrier event) for a period
                  of time equal to or greater than slotTime, and
                  during which there was at least one occurrence
                  of an event that causes the PHY to indicate
                  'Data reception error' or 'carrier extend error'
                  on the GMII.
                  
                  For an interface operating in full-duplex mode
                  at 1000 Mb/s, the number of times the receiving
                  media is non-idle (a carrier event) for a period
                  of time equal to or greater than minFrameSize,
                  and during which there was at least one
                  occurrence of an event that causes the PHY to
                  indicate 'Data reception error' on the GMII.
                  
                  For an interface operating at 10 Gb/s, the
                  number of times the receiving media is non-idle
                  (a carrier event) for a period of time equal to
                  or greater than minFrameSize, and during which
                  there was at least one occurrence of an event
                  that causes the PHY to indicate 'Receive Error'
                  on the XGMII.
                  
                  The count represented by an instance of this
                  object is incremented at most once per carrier
                  event, even if multiple symbol errors occur
                  during the carrier event.  This count does
                  not increment if a collision is present.
                  
                  This counter does not increment when the
                  interface is operating at 10 Mb/s.
                  
                  For interfaces operating at 10 Gb/s, this
                  counter can roll over in less than 5 minutes if
                  it is incrementing at its maximum rate.  Since
                  that amount of time could be less than a
                  
                  management station's poll cycle time, in order
                  to avoid a loss of information, a management
                  station is advised to poll the
                  dot3HCStatsSymbolErrors object for 10 Gb/s
                  or faster interfaces.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.2.1.5,
                  aSymbolErrorDuringCarrier."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.18"</span>;
            }

            <a name="dot3StatsDuplexStatus.650"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsDuplexStatus</span> {
               <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                  <span class="yang_kw">enum</span> <span class="yang_str">"unknown"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">1</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"halfDuplex"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">2</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"fullDuplex"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">3</span>;
                  }
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The current mode of operation of the MAC
                  entity.  'unknown' indicates that the current
                  duplex mode could not be determined.
                  
                  Management control of the duplex mode is
                  accomplished through the MAU MIB.  When
                  an interface does not support autonegotiation,
                  or when autonegotiation is not enabled, the
                  duplex mode is controlled using
                  ifMauDefaultType.  When autonegotiation is
                  supported and enabled, duplex mode is controlled
                  using ifMauAutoNegAdvertisedBits.  In either
                  case, the currently operating duplex mode is
                  reflected both in this object and in ifMauType.
                  
                  Note that this object provides redundant
                  information with ifMauType.  Normally, redundant
                  objects are discouraged.  However, in this
                  instance, it allows a management application to
                  determine the duplex status of an interface
                  without having to know every possible value of
                  ifMauType.  This was felt to be sufficiently
                  valuable to justify the redundancy."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.32,
                  aDuplexStatus."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.19"</span>;
            }

            <a name="dot3StatsRateControlAbility.687"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsRateControlAbility</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/SNMPv2-TC/1999-04-01#TruthValue.100">smiv2:TruthValue</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"'true' for interfaces operating at speeds above
                  1000 Mb/s that support Rate Control through
                  lowering the average data rate of the MAC
                  sublayer, with frame granularity, and 'false'
                  otherwise."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.33,
                  aRateControlAbility."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.20"</span>;
            }

            <a name="dot3StatsRateControlStatus.702"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsRateControlStatus</span> {
               <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                  <span class="yang_kw">enum</span> <span class="yang_str">"rateControlOff"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">1</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"rateControlOn"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">2</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"unknown"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">3</span>;
                  }
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The current Rate Control mode of operation of
                  the MAC sublayer of this interface."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.34,
                  aRateControlStatus."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1.21"</span>;
            }
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.2.1"</span>;
         }  <span class="yang_cmt">// list dot3StatsEntry</span>

         <a name="dot3CollEntry.722"></a><span class="yang_kw">list</span> <span class="yang_id">dot3CollEntry</span> {
            <span class="yang_kw">key</span> "<a href="#ifIndex.736">ifIndex</a> <a href="#dot3CollCount.745">dot3CollCount</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"A cell in the histogram of per-frame
               collisions for a particular interface.  An
               
               instance of this object represents the
               frequency of individual MAC frames for which
               the transmission (successful or otherwise) on a
               particular interface is accompanied by a
               particular number of media collisions."</span>;
            <a name="ifIndex.736"></a><span class="yang_kw">leaf</span> <span class="yang_id">ifIndex</span> {
               <span class="yang_kw">type</span> <span class="yang_id">keyref</span> {
                  <span class="yang_kw">path</span>
                     <span class="yang_str">"/if-mib:interfaces/if-mib:ifEntry/if-mib:ifIndex"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Automagically generated keyref leaf."</span>;
            }

            <a name="dot3CollCount.745"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3CollCount</span> {
               <span class="yang_kw">type</span> <span class="yang_id">int32</span> {
                  <span class="yang_kw">range</span> <span class="yang_str">"1..16"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The number of per-frame media collisions for
                  which a particular collision histogram cell
                  represents the frequency on a particular
                  interface."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.5.1.2"</span>;
            }

            <a name="dot3CollFrequencies.758"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3CollFrequencies</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of individual MAC frames for which the
                  transmission (successful or otherwise) on a
                  particular interface occurs after the
                  frame has experienced exactly the number
                  of collisions in the associated
                  dot3CollCount object.
                  
                  For example, a frame which is transmitted
                  on interface 77 after experiencing
                  exactly 4 collisions would be indicated
                  by incrementing only dot3CollFrequencies.77.4.
                  No other instance of dot3CollFrequencies would
                  be incremented in this example.
                  
                  This counter does not increment when the
                  interface is operating in full-duplex mode.
                  
                  Discontinuities in the value of this counter can
                  
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.5.1.3"</span>;
            }
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.5.1"</span>;
         }  <span class="yang_cmt">// list dot3CollEntry</span>

         <a name="dot3ControlEntry.793"></a><span class="yang_kw">list</span> <span class="yang_id">dot3ControlEntry</span> {
            <span class="yang_kw">key</span> "<a href="#dot3StatsIndex.802">dot3StatsIndex</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"An entry in the table, containing information
               about the MAC Control sublayer on a single
               ethernet-like interface."</span>;
            <a name="dot3StatsIndex.802"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsIndex</span> {
               <span class="yang_kw">type</span> <span class="yang_id">keyref</span> {
                  <span class="yang_kw">path</span>
                     <span class="yang_str">"/etherlike-mib:dot3/etherlike-mib:dot3StatsEntry/etherlike-mib:dot3StatsIndex"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Automagically generated keyref leaf."</span>;
            }

            <a name="dot3ControlFunctionsSupported.811"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3ControlFunctionsSupported</span> {
               <span class="yang_kw">type</span> <span class="yang_id">bits</span> {
                  <span class="yang_kw">bit</span> <span class="yang_str">"pause"</span> {
                     <span class="yang_kw">position</span> <span class="yang_str">0</span>;
                  }
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A list of the possible MAC Control functions
                  implemented for this interface."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.3.2,
                  aMACControlFunctionsSupported."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.9.1.1"</span>;
            }

            <a name="dot3ControlInUnknownOpcodes.825"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3ControlInUnknownOpcodes</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of MAC Control frames received on this
                  interface that contain an opcode that is not
                  supported by this device.
                  
                  For interfaces operating at 10 Gb/s, this
                  counter can roll over in less than 5 minutes if
                  it is incrementing at its maximum rate.  Since
                  that amount of time could be less than a
                  management station's poll cycle time, in order
                  to avoid a loss of information, a management
                  station is advised to poll the
                  dot3HCControlInUnknownOpcodes object for 10 Gb/s
                  or faster interfaces.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.3.5,
                  aUnsupportedOpcodesReceived"</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.9.1.2"</span>;
            }

            <a name="dot3HCControlInUnknownOpcodes.853"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3HCControlInUnknownOpcodes</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of MAC Control frames received on this
                  interface that contain an opcode that is not
                  supported by this device.
                  
                  This counter is a 64 bit version of
                  dot3ControlInUnknownOpcodes.  It should be used
                  on interfaces operating at 10 Gb/s or faster.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.3.5,
                  aUnsupportedOpcodesReceived"</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.9.1.3"</span>;
            }
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.9.1"</span>;
         }  <span class="yang_cmt">// list dot3ControlEntry</span>

         <a name="dot3PauseEntry.879"></a><span class="yang_kw">list</span> <span class="yang_id">dot3PauseEntry</span> {
            <span class="yang_kw">key</span> "<a href="#dot3StatsIndex.888">dot3StatsIndex</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"An entry in the table, containing information
               about the MAC Control PAUSE function on a single
               ethernet-like interface."</span>;
            <a name="dot3StatsIndex.888"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsIndex</span> {
               <span class="yang_kw">type</span> <span class="yang_id">keyref</span> {
                  <span class="yang_kw">path</span>
                     <span class="yang_str">"/etherlike-mib:dot3/etherlike-mib:dot3StatsEntry/etherlike-mib:dot3StatsIndex"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Automagically generated keyref leaf."</span>;
            }

            <a name="dot3PauseAdminMode.897"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3PauseAdminMode</span> {
               <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                  <span class="yang_kw">enum</span> <span class="yang_str">"disabled"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">1</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"enabledXmit"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">2</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"enabledRcv"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">3</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"enabledXmitAndRcv"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">4</span>;
                  }
               }
               <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"This object is used to configure the default
                  administrative PAUSE mode for this interface.
                  
                  This object represents the
                  administratively-configured PAUSE mode for this
                  interface.  If auto-negotiation is not enabled
                  or is not implemented for the active MAU
                  attached to this interface, the value of this
                  object determines the operational PAUSE mode
                  of the interface whenever it is operating in
                  full-duplex mode.  In this case, a set to this
                  object will force the interface into the
                  specified mode.
                  
                  If auto-negotiation is implemented and enabled
                  for the MAU attached to this interface, the
                  PAUSE mode for this interface is determined by
                  auto-negotiation, and the value of this object
                  denotes the mode to which the interface will
                  automatically revert if/when auto-negotiation is
                  later disabled.  Note that when auto-negotiation
                  is running, administrative control of the PAUSE
                  mode may be accomplished using the
                  ifMauAutoNegCapAdvertisedBits object in the
                  MAU-MIB.
                  
                  Note that the value of this object is ignored
                  when the interface is not operating in
                  full-duplex mode.
                  
                  An attempt to set this object to
                  'enabledXmit(2)' or 'enabledRcv(3)' will fail
                  on interfaces that do not support operation
                  at greater than 100 Mb/s."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.10.1.1"</span>;
            }

            <a name="dot3PauseOperMode.943"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3PauseOperMode</span> {
               <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                  <span class="yang_kw">enum</span> <span class="yang_str">"disabled"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">1</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"enabledXmit"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">2</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"enabledRcv"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">3</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"enabledXmitAndRcv"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">4</span>;
                  }
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"This object reflects the PAUSE mode currently
                  
                  in use on this interface, as determined by
                  either (1) the result of the auto-negotiation
                  function or (2) if auto-negotiation is not
                  enabled or is not implemented for the active MAU
                  attached to this interface, by the value of
                  dot3PauseAdminMode.  Interfaces operating at
                  100 Mb/s or less will never return
                  'enabledXmit(2)' or 'enabledRcv(3)'.  Interfaces
                  operating in half-duplex mode will always return
                  'disabled(1)'.  Interfaces on which
                  auto-negotiation is enabled but not yet
                  completed should return the value
                  'disabled(1)'."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.10.1.2"</span>;
            }

            <a name="dot3InPauseFrames.970"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3InPauseFrames</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of MAC Control frames received on this
                  interface with an opcode indicating the PAUSE
                  operation.
                  
                  This counter does not increment when the
                  interface is operating in half-duplex mode.
                  
                  For interfaces operating at 10 Gb/s, this
                  counter can roll over in less than 5 minutes if
                  it is incrementing at its maximum rate.  Since
                  that amount of time could be less than a
                  management station's poll cycle time, in order
                  to avoid a loss of information, a management
                  station is advised to poll the
                  dot3HCInPauseFrames object for 10 Gb/s or
                  faster interfaces.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.4.3,
                  aPAUSEMACCtrlFramesReceived."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.10.1.3"</span>;
            }

            <a name="dot3OutPauseFrames.1001"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3OutPauseFrames</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter32.25">yang:counter32</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of MAC Control frames transmitted on
                  this interface with an opcode indicating the
                  PAUSE operation.
                  
                  This counter does not increment when the
                  interface is operating in half-duplex mode.
                  
                  For interfaces operating at 10 Gb/s, this
                  counter can roll over in less than 5 minutes if
                  it is incrementing at its maximum rate.  Since
                  that amount of time could be less than a
                  management station's poll cycle time, in order
                  to avoid a loss of information, a management
                  station is advised to poll the
                  dot3HCOutPauseFrames object for 10 Gb/s or
                  faster interfaces.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.4.2,
                  aPAUSEMACCtrlFramesTransmitted."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.10.1.4"</span>;
            }

            <a name="dot3HCInPauseFrames.1032"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3HCInPauseFrames</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of MAC Control frames received on this
                  interface with an opcode indicating the PAUSE
                  operation.
                  
                  This counter does not increment when the
                  interface is operating in half-duplex mode.
                  
                  This counter is a 64 bit version of
                  dot3InPauseFrames.  It should be used on
                  interfaces operating at 10 Gb/s or faster.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.4.3,
                  aPAUSEMACCtrlFramesReceived."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.10.1.5"</span>;
            }

            <a name="dot3HCOutPauseFrames.1057"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3HCOutPauseFrames</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of MAC Control frames transmitted on
                  this interface with an opcode indicating the
                  PAUSE operation.
                  
                  This counter does not increment when the
                  interface is operating in half-duplex mode.
                  
                  This counter is a 64 bit version of
                  dot3OutPauseFrames.  It should be used on
                  interfaces operating at 10 Gb/s or faster.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.4.2,
                  aPAUSEMACCtrlFramesTransmitted."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.10.1.6"</span>;
            }
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.10.1"</span>;
         }  <span class="yang_cmt">// list dot3PauseEntry</span>

         <a name="dot3HCStatsEntry.1086"></a><span class="yang_kw">list</span> <span class="yang_id">dot3HCStatsEntry</span> {
            <span class="yang_kw">key</span> "<a href="#dot3StatsIndex.1094">dot3StatsIndex</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"An entry containing 64-bit statistics for a
               single ethernet-like interface."</span>;
            <a name="dot3StatsIndex.1094"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3StatsIndex</span> {
               <span class="yang_kw">type</span> <span class="yang_id">keyref</span> {
                  <span class="yang_kw">path</span>
                     <span class="yang_str">"/etherlike-mib:dot3/etherlike-mib:dot3StatsEntry/etherlike-mib:dot3StatsIndex"</span>;
               }
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Automagically generated keyref leaf."</span>;
            }

            <a name="dot3HCStatsAlignmentErrors.1103"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3HCStatsAlignmentErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames received on a particular
                  interface that are not an integral number of
                  octets in length and do not pass the FCS check.
                  
                  The count represented by an instance of this
                  object is incremented when the alignmentError
                  status is returned by the MAC service to the
                  LLC (or other MAC user). Received frames for
                  which multiple error conditions pertain are,
                  according to the conventions of IEEE 802.3
                  Layer Management, counted exclusively according
                  to the error status presented to the LLC.
                  
                  This counter does not increment for group
                  encoding schemes greater than 4 bits per group.
                  
                  This counter is a 64 bit version of
                  dot3StatsAlignmentErrors.  It should be used
                  on interfaces operating at 10 Gb/s or faster.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.7,
                  aAlignmentErrors"</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.11.1.1"</span>;
            }

            <a name="dot3HCStatsFCSErrors.1138"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3HCStatsFCSErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames received on a particular
                  interface that are an integral number of octets
                  in length but do not pass the FCS check.  This
                  count does not include frames received with
                  frame-too-long or frame-too-short error.
                  
                  The count represented by an instance of this
                  object is incremented when the frameCheckError
                  status is returned by the MAC service to the
                  LLC (or other MAC user). Received frames for
                  which multiple error conditions pertain are,
                  according to the conventions of IEEE 802.3
                  Layer Management, counted exclusively according
                  to the error status presented to the LLC.
                  
                  Note:  Coding errors detected by the physical
                  layer for speeds above 10 Mb/s will cause the
                  frame to fail the FCS check.
                  
                  This counter is a 64 bit version of
                  dot3StatsFCSErrors.  It should be used on
                  interfaces operating at 10 Gb/s or faster.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.6,
                  aFrameCheckSequenceErrors."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.11.1.2"</span>;
            }

            <a name="dot3HCStatsInternalMacTransmitErrors.1175"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3HCStatsInternalMacTransmitErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames for which transmission on a
                  particular interface fails due to an internal
                  MAC sublayer transmit error. A frame is only
                  
                  counted by an instance of this object if it is
                  not counted by the corresponding instance of
                  either the dot3StatsLateCollisions object, the
                  dot3StatsExcessiveCollisions object, or the
                  dot3StatsCarrierSenseErrors object.
                  
                  The precise meaning of the count represented by
                  an instance of this object is implementation-
                  specific.  In particular, an instance of this
                  object may represent a count of transmission
                  errors on a particular interface that are not
                  otherwise counted.
                  
                  This counter is a 64 bit version of
                  dot3StatsInternalMacTransmitErrors.  It should
                  be used on interfaces operating at 10 Gb/s or
                  faster.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.12,
                  aFramesLostDueToIntMACXmitError."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.11.1.3"</span>;
            }

            <a name="dot3HCStatsFrameTooLongs.1211"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3HCStatsFrameTooLongs</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames received on a particular
                  interface that exceed the maximum permitted
                  frame size.
                  
                  The count represented by an instance of this
                  object is incremented when the frameTooLong
                  status is returned by the MAC service to the
                  LLC (or other MAC user). Received frames for
                  which multiple error conditions pertain are,
                  according to the conventions of IEEE 802.3
                  Layer Management, counted exclusively according
                  to the error status presented to the LLC.
                  
                  This counter is a 64 bit version of
                  dot3StatsFrameTooLongs.  It should be used on
                  interfaces operating at 10 Gb/s or faster.
                  
                  Discontinuities in the value of this counter can
                  
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.25,
                  aFrameTooLongErrors."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.11.1.4"</span>;
            }

            <a name="dot3HCStatsInternalMacReceiveErrors.1243"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3HCStatsInternalMacReceiveErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"A count of frames for which reception on a
                  particular interface fails due to an internal
                  MAC sublayer receive error. A frame is only
                  counted by an instance of this object if it is
                  not counted by the corresponding instance of
                  either the dot3StatsFrameTooLongs object, the
                  dot3StatsAlignmentErrors object, or the
                  dot3StatsFCSErrors object.
                  
                  The precise meaning of the count represented by
                  an instance of this object is implementation-
                  specific.  In particular, an instance of this
                  object may represent a count of receive errors
                  on a particular interface that are not
                  otherwise counted.
                  
                  This counter is a 64 bit version of
                  dot3StatsInternalMacReceiveErrors.  It should be
                  used on interfaces operating at 10 Gb/s or
                  faster.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.1.1.15,
                  aFramesLostDueToIntMACRcvError."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.11.1.5"</span>;
            }

            <a name="dot3HCStatsSymbolErrors.1278"></a><span class="yang_kw">leaf</span> <span class="yang_id">dot3HCStatsSymbolErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/yang-types/2007-10-02#counter64.62">yang:counter64</a></span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"For an interface operating at 100 Mb/s, the
                  number of times there was an invalid data symbol
                  when a valid carrier was present.
                  
                  For an interface operating in half-duplex mode
                  at 1000 Mb/s, the number of times the receiving
                  media is non-idle (a carrier event) for a period
                  of time equal to or greater than slotTime, and
                  during which there was at least one occurrence
                  of an event that causes the PHY to indicate
                  'Data reception error' or 'carrier extend error'
                  on the GMII.
                  
                  For an interface operating in full-duplex mode
                  at 1000 Mb/s, the number of times the receiving
                  media is non-idle (a carrier event) for a period
                  of time equal to or greater than minFrameSize,
                  and during which there was at least one
                  occurrence of an event that causes the PHY to
                  indicate 'Data reception error' on the GMII.
                  
                  For an interface operating at 10 Gb/s, the
                  number of times the receiving media is non-idle
                  (a carrier event) for a period of time equal to
                  or greater than minFrameSize, and during which
                  there was at least one occurrence of an event
                  that causes the PHY to indicate 'Receive Error'
                  on the XGMII.
                  
                  The count represented by an instance of this
                  object is incremented at most once per carrier
                  event, even if multiple symbol errors occur
                  during the carrier event.  This count does
                  not increment if a collision is present.
                  
                  This counter is a 64 bit version of
                  dot3StatsSymbolErrors.  It should be used on
                  interfaces operating at 10 Gb/s or faster.
                  
                  Discontinuities in the value of this counter can
                  occur at re-initialization of the management
                  system, and at other times as indicated by the
                  value of ifCounterDiscontinuityTime."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"[IEEE 802.3 Std.], 30.3.2.1.5,
                  aSymbolErrorDuringCarrier."</span>;
               <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.11.1.6"</span>;
            }
            <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7.11.1"</span>;
         }  <span class="yang_cmt">// list dot3HCStatsEntry</span>
         <a href="/modules/yang-smi/2008-03-20#oid.21">smi:oid</a> <span class="yang_str">"1.3.6.1.2.1.10.7"</span>;
      }  <span class="yang_cmt">// container dot3</span>
   }  <span class="yang_cmt">// module EtherLike-MIB</span>
</pre>
</div>
</div>