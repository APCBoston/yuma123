<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns="urn:ietf:params:xml:ns:yang:smiv2:SNMP-TARGET-MIB"
   targetNamespace="urn:ietf:params:xml:ns:yang:smiv2:SNMP-TARGET-MIB"
   elementFormDefault="qualified" attributeFormDefault="unqualified"
   xml:lang="en" version="2002-10-14"
   xmlns:ncx="http://netconfcentral.com/ncx"
   xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0"
   xmlns:snmp-framework="urn:ietf:params:xml:ns:yang:smiv2:SNMP-FRAMEWORK-MIB"
   xmlns:smiv2="urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-TC"
   xmlns:smi="urn:ietf:params:xml:ns:yang:yang-smi"
   xmlns:yang="urn:ietf:params:xml:ns:yang:yang-types">
   <xs:annotation>
      <xs:documentation>
         Converted from YANG file 'SNMP-TARGET-MIB.yang' by yangdump version 0.9.4
         
         Module: SNMP-TARGET-MIB
         Organization: IETF SNMPv3 Working Group
         Version: 2002-10-14
         Contact: WG-email:   snmpv3@lists.tislabs.com
         Subscribe:  majordomo@lists.tislabs.com
         	    In message body:  subscribe snmpv3
         
         Co-Chair:   Russ Mundy
         	    Network Associates Laboratories
         Postal:     15204 Omega Drive, Suite 300
         	    Rockville, MD 20850-4601
         	    USA
         EMail:      mundy@tislabs.com
         Phone:      +1 301-947-7107
         
         Co-Chair:   David Harrington
         	    Enterasys Networks
         Postal:     35 Industrial Way
         	    P. O. Box 5004
         	    Rochester, New Hampshire 03866-5005
         	    USA
         EMail:      dbh@enterasys.com
         Phone:      +1 603-337-2614
         
         Co-editor:  David B. Levi
         	    Nortel Networks
         Postal:     3505 Kesterwood Drive
         	    Knoxville, Tennessee 37918
         EMail:      dlevi@nortelnetworks.com
         Phone:      +1 865 686 0432
         
         Co-editor:  Paul Meyer
         	    Secure Computing Corporation
         Postal:     2675 Long Lake Road
         
         	    Roseville, Minnesota 55113
         EMail:      paul_meyer@securecomputing.com
         Phone:      +1 651 628 1592
         
         Co-editor:  Bob Stewart
         	    Retired
      </xs:documentation>
      <xs:documentation>
         This MIB module defines MIB objects which provide
         mechanisms to remotely configure the parameters used
         by an SNMP entity for the generation of SNMP messages.
         
         Copyright (C) The Internet Society (2002). This
         version of this MIB module is part of RFC 3413;
         see the RFC itself for full legal notices.
      </xs:documentation>
      <xs:appinfo>
         <ncx:source>
            /home/andy/newdev/trunk/netconf/modules/ietf/SNMP-TARGET-MIB.yang
         </ncx:source>
         <ncx:organization>
            IETF SNMPv3 Working Group
         </ncx:organization>
         <ncx:contact>
            WG-email:   snmpv3@lists.tislabs.com
            Subscribe:  majordomo@lists.tislabs.com
            	    In message body:  subscribe snmpv3
            
            Co-Chair:   Russ Mundy
            	    Network Associates Laboratories
            Postal:     15204 Omega Drive, Suite 300
            	    Rockville, MD 20850-4601
            	    USA
            EMail:      mundy@tislabs.com
            Phone:      +1 301-947-7107
            
            Co-Chair:   David Harrington
            	    Enterasys Networks
            Postal:     35 Industrial Way
            	    P. O. Box 5004
            	    Rochester, New Hampshire 03866-5005
            	    USA
            EMail:      dbh@enterasys.com
            Phone:      +1 603-337-2614
            
            Co-editor:  David B. Levi
            	    Nortel Networks
            Postal:     3505 Kesterwood Drive
            	    Knoxville, Tennessee 37918
            EMail:      dlevi@nortelnetworks.com
            Phone:      +1 865 686 0432
            
            Co-editor:  Paul Meyer
            	    Secure Computing Corporation
            Postal:     2675 Long Lake Road
            
            	    Roseville, Minnesota 55113
            EMail:      paul_meyer@securecomputing.com
            Phone:      +1 651 628 1592
            
            Co-editor:  Bob Stewart
            	    Retired
         </ncx:contact>
      </xs:appinfo>
      <xs:appinfo>
         <ncx:revision>
            <ncx:version>2002-10-14</ncx:version>
            <ncx:description>
               Fixed DISPLAY-HINTS for UTF-8 strings, fixed hex
               value of LF characters, clarified meaning of zero
               length tag values, improved tag list examples.
               Published as RFC 3413.
            </ncx:description>
         </ncx:revision>
         <ncx:revision>
            <ncx:version>1998-08-04</ncx:version>
            <ncx:description>
               Clarifications, published as
               RFC 2573.
            </ncx:description>
         </ncx:revision>
         <ncx:revision>
            <ncx:version>1997-07-14</ncx:version>
            <ncx:description>
               The initial revision, published as RFC2273.
            </ncx:description>
         </ncx:revision>
      </xs:appinfo>
   </xs:annotation>

   <xs:simpleType name="SnmpTagValue">
      <xs:annotation>
         <xs:documentation>
            An octet string containing a tag value.
            Tag values are preferably in human-readable form.
            
            To facilitate internationalization, this information
            is represented using the ISO/IEC IS 10646-1 character
            set, encoded as an octet string using the UTF-8
            character encoding scheme described in RFC 2279.
            
            Since additional code points are added by amendments
            to the 10646 standard from time to time,
            implementations must be prepared to encounter any code
            point from 0x00000000 to 0x7fffffff.
            
            The use of control codes should be avoided, and certain
            
            control codes are not allowed as described below.
            
            For code points not directly supported by user
            interface hardware or software, an alternative means
            of entry and display, such as hexadecimal, may be
            provided.
            
            For information encoded in 7-bit US-ASCII, the UTF-8
            representation is identical to the US-ASCII encoding.
            
            Note that when this TC is used for an object that
            is used or envisioned to be used as an index, then a
            SIZE restriction must be specified so that the number
            of sub-identifiers for any object instance does not
            exceed the limit of 128, as defined by [RFC1905].
            
            An object of this type contains a single tag value
            which is used to select a set of entries in a table.
            
            A tag value is an arbitrary string of octets, but
            may not contain a delimiter character.  Delimiter
            characters are defined to be one of the following:
            
                -  An ASCII space character (0x20).
            
                -  An ASCII TAB character (0x09).
            
                -  An ASCII carriage return (CR) character (0x0D).
            
                -  An ASCII line feed (LF) character (0x0A).
            
            Delimiter characters are used to separate tag values
            in a tag list.  An object of this type may only
            contain a single tag value, and so delimiter
            characters are not allowed in a value of this type.
            
            Note that a tag value of 0 length means that no tag is
            defined.  In other words, a tag value of 0 length would
            never match anything in a tag list, and would never
            select any table entries.
            
            Some examples of valid tag values are:
            
                - 'acme'
            
                - 'router'
            
                - 'host'
            
            The use of a tag value to select table entries is
            application and MIB specific.
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value=".{0,255}"/>
         <xs:maxLength value="255"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="SnmpTagList">
      <xs:annotation>
         <xs:documentation>
            An octet string containing a list of tag values.
            Tag values are preferably in human-readable form.
            
            To facilitate internationalization, this information
            is represented using the ISO/IEC IS 10646-1 character
            set, encoded as an octet string using the UTF-8
            character encoding scheme described in RFC 2279.
            
            Since additional code points are added by amendments
            to the 10646 standard from time to time,
            implementations must be prepared to encounter any code
            point from 0x00000000 to 0x7fffffff.
            
            The use of control codes should be avoided, except as
            described below.
            
            For code points not directly supported by user
            interface hardware or software, an alternative means
            of entry and display, such as hexadecimal, may be
            provided.
            
            For information encoded in 7-bit US-ASCII, the UTF-8
            representation is identical to the US-ASCII encoding.
            
            An object of this type contains a list of tag values
            which are used to select a set of entries in a table.
            
            A tag value is an arbitrary string of octets, but
            may not contain a delimiter character.  Delimiter
            characters are defined to be one of the following:
            
                -  An ASCII space character (0x20).
            
                -  An ASCII TAB character (0x09).
            
                -  An ASCII carriage return (CR) character (0x0D).
            
                -  An ASCII line feed (LF) character (0x0A).
            
            Delimiter characters are used to separate tag values
            
            in a tag list.  Only a single delimiter character may
            occur between two tag values.  A tag value may not
            have a zero length.  These constraints imply certain
            restrictions on the contents of this object:
            
                - There cannot be a leading or trailing delimiter
                  character.
            
                - There cannot be multiple adjacent delimiter
                  characters.
            
            Some examples of valid tag lists are:
            
                - ''                        -- an empty list
            
                - 'acme'                    -- list of one tag
            
                - 'host router bridge'      -- list of several tags
            
            Note that although a tag value may not have a length of
            zero, an empty string is still valid.  This indicates
            an empty list (i.e. there are no tag values in the list).
            
            The use of the tag list to select table entries is
            application and MIB specific.  Typically, an application
            will provide one or more tag values, and any entry
            which contains some combination of these tag values
            will be selected.
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value=".{0,255}"/>
         <xs:maxLength value="255"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:element name="snmpTargetObjects">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.6.3.12.1"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="snmpTargetSpinLock"
               type="smiv2:TestAndIncr" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     This object is used to facilitate modification of table
                     entries in the SNMP-TARGET-MIB module by multiple
                     managers.  In particular, it is useful when modifying
                     the value of the snmpTargetAddrTagList object.
                     
                     The procedure for modifying the snmpTargetAddrTagList
                     object is as follows:
                     
                         1.  Retrieve the value of snmpTargetSpinLock and
                     	of snmpTargetAddrTagList.
                     
                         2.  Generate a new value for snmpTargetAddrTagList.
                     
                         3.  Set the value of snmpTargetSpinLock to the
                     	retrieved value, and the value of
                     	snmpTargetAddrTagList to the new value.  If
                     	the set fails for the snmpTargetSpinLock
                     	object, go back to step 1.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>true</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.6.3.12.1.1"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpTargetAddrEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     A transport address to be used in the generation
                     of SNMP operations.
                     
                     Entries in the snmpTargetAddrTable are created and
                     deleted using the snmpTargetAddrRowStatus object.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="snmpTargetAddrName">
                        <xs:annotation>
                           <xs:documentation>
                              The locally arbitrary, but unique identifier associated
                              with this snmpTargetAddrEntry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="snmpTargetAddrTDomain"
                        type="smiv2:TDomain" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object indicates the transport type of the address
                              contained in the snmpTargetAddrTAddress object.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="snmpTargetAddrTAddress"
                        type="smiv2:TAddress" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object contains a transport address.  The format of
                              this address depends on the value of the
                              snmpTargetAddrTDomain object.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="snmpTargetAddrTimeout"
                        type="smiv2:TimeInterval" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object should reflect the expected maximum round
                              trip time for communicating with the transport address
                              defined by this row.  When a message is sent to this
                              address, and a response (if one is expected) is not
                              received within this time period, an implementation
                              may assume that the response will not be delivered.
                              
                              Note that the time interval that an application waits
                              for a response may actually be derived from the value
                              of this object.  The method for deriving the actual time
                              interval is implementation dependent.  One such method
                              is to derive the expected round trip time based on a
                              particular retransmission algorithm and on the number
                              of timeouts which have occurred.  The type of message may
                              also be considered when deriving expected round trip
                              times for retransmissions.  For example, if a message is
                              being sent with a securityLevel that indicates both
                              
                              authentication and privacy, the derived value may be
                              increased to compensate for extra processing time spent
                              during authentication and encryption processing.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="1500"/>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="snmpTargetAddrRetryCount"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object specifies a default number of retries to be
                              attempted when a response is not received for a generated
                              message.  An application may provide its own retry count,
                              in which case the value of this object is ignored.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="3"/>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:int">
                              <xs:minInclusive value="0"/>
                              <xs:maxInclusive value="255"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="snmpTargetAddrTagList"
                        type="SnmpTagList" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object contains a list of tag values which are
                              used to select target addresses for a particular
                              operation.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="snmpTargetAddrParams"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object identifies an entry in the
                              snmpTargetParamsTable.  The identified entry
                              contains SNMP parameters to be used when generating
                              messages to be sent to this transport address.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1.7"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="snmpTargetAddrStorageType"
                        type="smiv2:StorageType" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The storage type for this conceptual row.
                              Conceptual rows having the value 'permanent' need not
                              allow write-access to any columnar objects in the row.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="nonVolatile"/>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1.8"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="snmpTargetAddrRowStatus"
                        type="smiv2:RowStatus" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The status of this conceptual row.
                              
                              To create a row in this table, a manager must
                              set this object to either createAndGo(4) or
                              createAndWait(5).
                              
                              Until instances of all corresponding columns are
                              appropriately configured, the value of the
                              corresponding instance of the snmpTargetAddrRowStatus
                              column is 'notReady'.
                              
                              In particular, a newly created row cannot be made
                              active until the corresponding instances of
                              snmpTargetAddrTDomain, snmpTargetAddrTAddress, and
                              snmpTargetAddrParams have all been set.
                              
                              The following objects may not be modified while the
                              value of this object is active(1):
                                  - snmpTargetAddrTDomain
                                  - snmpTargetAddrTAddress
                              An attempt to set these objects while the value of
                              snmpTargetAddrRowStatus is active(1) will result in
                              an inconsistentValue error.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.2.1.9"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="__.snmpTargetObjects.snmpTargetAddrEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="snmpTargetAddrEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="snmpTargetAddrName"/>
               </xs:key>
            </xs:element>
            <xs:element name="snmpTargetParamsEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     A set of SNMP target information.
                     
                     Entries in the snmpTargetParamsTable are created and
                     deleted using the snmpTargetParamsRowStatus object.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.6.3.12.1.3.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="snmpTargetParamsName">
                        <xs:annotation>
                           <xs:documentation>
                              The locally arbitrary, but unique identifier associated
                              with this snmpTargetParamsEntry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.3.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="snmpTargetParamsMPModel"
                        type="snmp-framework:SnmpMessageProcessingModel"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The Message Processing Model to be used when generating
                              SNMP messages using this entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.3.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="snmpTargetParamsSecurityModel"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The Security Model to be used when generating SNMP
                              messages using this entry.  An implementation may
                              choose to return an inconsistentValue error if an
                              attempt is made to set this variable to a value
                              for a security model which the implementation does
                              not support.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.3.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpSecurityModel">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="snmpTargetParamsSecurityName"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The securityName which identifies the Principal on
                              whose behalf SNMP messages will be generated using
                              this entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.3.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="snmpTargetParamsSecurityLevel"
                        type="snmp-framework:SnmpSecurityLevel"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The Level of Security to be used when generating
                              SNMP messages using this entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.3.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="snmpTargetParamsStorageType"
                        type="smiv2:StorageType" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The storage type for this conceptual row.
                              Conceptual rows having the value 'permanent' need not
                              allow write-access to any columnar objects in the row.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="nonVolatile"/>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.3.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="snmpTargetParamsRowStatus"
                        type="smiv2:RowStatus" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The status of this conceptual row.
                              
                              To create a row in this table, a manager must
                              set this object to either createAndGo(4) or
                              createAndWait(5).
                              
                              Until instances of all corresponding columns are
                              appropriately configured, the value of the
                              corresponding instance of the snmpTargetParamsRowStatus
                              column is 'notReady'.
                              
                              In particular, a newly created row cannot be made
                              active until the corresponding
                              snmpTargetParamsMPModel,
                              snmpTargetParamsSecurityModel,
                              snmpTargetParamsSecurityName,
                              and snmpTargetParamsSecurityLevel have all been set.
                              
                              The following objects may not be modified while the
                              value of this object is active(1):
                                  - snmpTargetParamsMPModel
                                  - snmpTargetParamsSecurityModel
                                  - snmpTargetParamsSecurityName
                                  - snmpTargetParamsSecurityLevel
                              An attempt to set these objects while the value of
                              snmpTargetParamsRowStatus is active(1) will result in
                              an inconsistentValue error.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.6.3.12.1.3.1.7"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="__.snmpTargetObjects.snmpTargetParamsEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="snmpTargetParamsEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="snmpTargetParamsName"/>
               </xs:key>
            </xs:element>
            <xs:element name="snmpUnavailableContexts"
               type="yang:counter32" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of packets received by the SNMP
                     engine which were dropped because the context
                     contained in the message was unavailable.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.6.3.12.1.4"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpUnknownContexts"
               type="yang:counter32" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of packets received by the SNMP
                     engine which were dropped because the context
                     contained in the message was unknown.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.6.3.12.1.5"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="__.snmpTargetObjects.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

</xs:schema>
