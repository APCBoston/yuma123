<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns="urn:ietf:params:xml:ns:yang:smiv2:DISMAN-EVENT-MIB"
   targetNamespace="urn:ietf:params:xml:ns:yang:smiv2:DISMAN-EVENT-MIB"
   elementFormDefault="qualified" attributeFormDefault="unqualified"
   xml:lang="en" version="2000-10-16"
   xmlns:ncx="http://netconfcentral.com/ncx"
   xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0"
   xmlns:ncn="urn:ietf:params:xml:ns:netconf:notification:1.0"
   xmlns:snmp-framework="urn:ietf:params:xml:ns:yang:smiv2:SNMP-FRAMEWORK-MIB"
   xmlns:snmp-target="urn:ietf:params:xml:ns:yang:smiv2:SNMP-TARGET-MIB"
   xmlns:snmpv2-mib="urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-MIB"
   xmlns:smiv2="urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-TC"
   xmlns:smi="urn:ietf:params:xml:ns:yang:yang-smi"
   xmlns:yang="urn:ietf:params:xml:ns:yang:yang-types">
   <xs:annotation>
      <xs:documentation>
         Converted from YANG file 'DISMAN-EVENT-MIB.yang' by yangdump version 0.9.3
         
         Module: DISMAN-EVENT-MIB
         Organization: IETF Distributed Management Working Group
         Version: 2000-10-16
         Contact: Ramanathan Kavasseri
         Cisco Systems, Inc.
         170 West Tasman Drive,
         San Jose CA 95134-1706.
         Phone: +1 408 526 4527
         Email: ramk@cisco.com
      </xs:documentation>
      <xs:documentation>
         The MIB module for defining event triggers and actions
         for network management purposes.
      </xs:documentation>
      <xs:appinfo>
         <ncx:source>
            /home/andy/swdev/trunk/netconf/modules/./ietf/DISMAN-EVENT-MIB.yang
         </ncx:source>
         <ncx:organization>
            IETF Distributed Management Working Group
         </ncx:organization>
         <ncx:contact>
            Ramanathan Kavasseri
            Cisco Systems, Inc.
            170 West Tasman Drive,
            San Jose CA 95134-1706.
            Phone: +1 408 526 4527
            Email: ramk@cisco.com
         </ncx:contact>
      </xs:appinfo>
      <xs:appinfo>
         <ncx:revision>
            <ncx:version>2000-10-16</ncx:version>
            <ncx:description>
               This is the initial version of this MIB.
               Published as RFC 2981
            </ncx:description>
         </ncx:revision>
      </xs:appinfo>
   </xs:annotation>

   <xs:simpleType name="FailureReason">
      <xs:annotation>
         <xs:documentation>
            Reasons for failures in an attempt to perform a management
            request.
            
            The first group of errors, numbered less than 0, are related
            to problems in sending the request.  The existence of a
            particular error code here does not imply that all
            implementations are capable of sensing that error and
            
            
            returning that code.
            
            The second group, numbered greater than 0, are copied
            directly from SNMP protocol operations and are intended to
            carry exactly the meanings defined for the protocol as returned
            in an SNMP response.
            
            localResourceLack       some local resource such as memory
            			lacking or
            			mteResourceSampleInstanceMaximum
            			exceeded
            badDestination          unrecognized domain name or otherwise
            			invalid destination address
            destinationUnreachable  can't get to destination address
            noResponse              no response to SNMP request
            badType                 the data syntax of a retrieved object
            			as not as expected
            sampleOverrun           another sample attempt occurred before
            			the previous one completed
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="sampleOverrun">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>-6</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="badType">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>-5</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="noResponse">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>-4</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="destinationUnreachable">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>-3</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="badDestination">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>-2</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="localResourceLack">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>-1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="noError">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>0</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="tooBig">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="noSuchName">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>2</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="badValue">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>3</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="readOnly">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>4</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="genErr">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>5</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="noAccess">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>6</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="wrongType">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>7</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="wrongLength">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>8</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="wrongEncoding">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>9</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="wrongValue">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>10</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="noCreation">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>11</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="inconsistentValue">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>12</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="resourceUnavailable">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>13</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="commitFailed">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>14</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="undoFailed">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>15</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="authorizationError">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>16</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="notWritable">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>17</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="inconsistentName">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>18</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:element name="mteResource">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.1.1"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="mteResourceSampleMinimum" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The minimum mteTriggerFrequency this system will
                     accept.  A system may use the larger values of this minimum to
                     lessen the impact of constant sampling.  For larger
                     sampling intervals the system samples less often and
                     suffers less overhead.  This object provides a way to enforce
                     such lower overhead for all triggers created after it is
                     set.
                     
                     Unless explicitly resource limited, a system's value for
                     this object SHOULD be 1, allowing as small as a 1 second
                     interval for ongoing trigger sampling.
                     
                     Changing this value will not invalidate an existing setting
                     of mteTriggerFrequency.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>true</ncx:config>
                     <ncx:units>seconds</ncx:units>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.1.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:simpleType>
                  <xs:restriction base="xs:int">
                     <xs:minInclusive value="1"/>
                  </xs:restriction>
               </xs:simpleType>
            </xs:element>
            <xs:element name="mteResourceSampleInstanceMaximum"
               type="xs:unsignedInt" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The maximum number of instance entries this system will
                     support for sampling.
                     
                     These are the entries that maintain state, one for each
                     instance of each sampled object as selected by
                     mteTriggerValueID.  Note that wildcarded objects result
                     in multiple instances of this state.
                     
                     A value of 0 indicates no preset limit, that is, the limit
                     is dynamic based on system operation and resources.
                     
                     Unless explicitly resource limited, a system's value for
                     this object SHOULD be 0.
                     
                     Changing this value will not eliminate or inhibit existing
                     sample state but could prevent allocation of additional state
                     information.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>true</ncx:config>
                     <ncx:units>instances</ncx:units>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.1.2"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteResourceSampleInstances"
               type="yang:gauge32" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The number of currently active instance entries as
                     defined for mteResourceSampleInstanceMaximum.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <ncx:units>instances</ncx:units>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.1.3"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteResourceSampleInstancesHigh"
               type="yang:gauge32" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The highest value of mteResourceSampleInstances that has
                     occurred since initialization of the management system.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <ncx:units>instances</ncx:units>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.1.4"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteResourceSampleInstanceLacks"
               type="yang:counter32" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The number of times this system could not take a new sample
                     because that allocation would have exceeded the limit set by
                     mteResourceSampleInstanceMaximum.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <ncx:units>instances</ncx:units>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.1.5"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="__.mteResource.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="mteTrigger">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="mteTriggerFailures" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The number of times an attempt to check for a trigger
                     condition has failed.  This counts individually for each
                     attempt in a group of targets or each attempt for a
                     
                     
                     wildcarded object.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <ncx:units>failures</ncx:units>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.1"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteTriggerEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     Information about a single trigger.  Applications create and
                     delete entries using mteTriggerEntryStatus.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="mteOwner">
                        <xs:annotation>
                           <xs:documentation>
                              The owner of this entry. The exact semantics of this
                              string are subject to the security policy defined by the
                              security administrator.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerName">
                        <xs:annotation>
                           <xs:documentation>
                              A locally-unique, administratively assigned name for the
                              trigger within the scope of mteOwner.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerComment"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A description of the trigger's function and use.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerTest" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The type of trigger test to perform.  For 'boolean' and
                              'threshold'  tests, the object at mteTriggerValueID MUST
                              evaluate to an integer, that is, anything that ends up encoded
                              for transmission (that is, in BER, not ASN.1) as an integer.
                              
                              For 'existence', the specific test is as selected by
                              mteTriggerExistenceTest.  When an object appears, vanishes
                              or changes value, the trigger fires. If the object's
                              appearance caused the trigger firing, the object MUST
                              vanish before the trigger can be fired again for it, and
                              vice versa. If the trigger fired due to a change in the
                              object's value, it will be fired again on every successive
                              value change for that object.
                              
                              For 'boolean', the specific test is as selected by
                              mteTriggerBooleanTest.  If the test result is true the trigger
                              fires.  The trigger will not fire again until the value has
                              become false and come back to true.
                              
                              For 'threshold' the test works as described below for
                              
                              
                              mteTriggerThresholdStartup, mteTriggerThresholdRising, and
                              mteTriggerThresholdFalling.
                              
                              Note that combining 'boolean' and 'threshold' tests on the
                              same object may be somewhat redundant.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="6)"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:list>
                              <xs:simpleType>
                                 <xs:restriction base="xs:string">
                                    <xs:enumeration value="existence">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>0</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration value="boolean">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>1</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration value="threshold">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>2</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                 </xs:restriction>
                              </xs:simpleType>
                           </xs:list>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerSampleType"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The type of sampling to perform.
                              
                              An 'absoluteValue' sample requires only a single sample to be
                              meaningful, and is exactly the value of the object at
                              mteTriggerValueID at the sample time.
                              
                              A 'deltaValue' requires two samples to be meaningful and is
                              thus not available for testing until the second and subsequent
                              samples after the object at mteTriggerValueID is first found
                              to exist.  It is the difference between the two samples.  For
                              unsigned values it is always positive, based on unsigned
                              arithmetic.  For signed values it can be positive or negative.
                              
                              For SNMP counters to be meaningful they should be sampled as a
                              'deltaValue'.
                              
                              For 'deltaValue' mteTriggerDeltaTable contains further
                              parameters.
                              
                              If only 'existence' is set in mteTriggerTest this object has
                              no meaning.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="absoluteValue"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="absoluteValue">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="deltaValue">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerValueID"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The object identifier of the MIB object to sample to see
                              if the trigger should fire.
                              
                              This may be wildcarded by truncating all or part of the
                              instance portion, in which case the value is obtained
                              as if with a GetNext function, checking multiple values
                              
                              
                              if they exist.  If such wildcarding is applied,
                              mteTriggerValueIDWildcard must be 'true' and if not it must
                              be 'false'.
                              
                              Bad object identifiers or a mismatch between truncating the
                              identifier and the value of mteTriggerValueIDWildcard result
                              in operation as one would expect when providing the wrong
                              identifier to a Get or GetNext operation.  The Get will fail
                              or get the wrong object.  The GetNext will indeed get whatever
                              is next, proceeding until it runs past the initial part of the
                              identifier and perhaps many unintended objects for confusing
                              results.  If the value syntax of those objects is not usable,
                              that results in a 'badType' error that terminates the scan.
                              
                              Each instance that fills the wildcard is independent of any
                              additional instances, that is, wildcarded objects operate
                              as if there were a separate table entry for each instance
                              that fills the wildcard without having to actually predict
                              all possible instances ahead of time.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="zeroDotZero"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerValueIDWildcard"
                        type="smiv2:TruthValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              Control for whether mteTriggerValueID is to be treated as
                              fully-specified or wildcarded, with 'true' indicating wildcard.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="false"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.7"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerTargetTag"
                        type="snmp-target:SnmpTagValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The tag for the target(s) from which to obtain the condition
                              for a trigger check.
                              
                              A length of 0 indicates the local system.  In this case,
                              access to the objects indicated by mteTriggerValueID is under
                              the security credentials of the requester that set
                              mteTriggerEntryStatus to 'active'.  Those credentials are the
                              input parameters for isAccessAllowed from the Architecture for
                              Describing SNMP Management Frameworks.
                              
                              Otherwise access rights are checked according to the security
                              
                              
                              parameters resulting from the tag.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.8"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerContextName"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The management context from which to obtain mteTriggerValueID.
                              
                              This may be wildcarded by leaving characters off the end.  For
                              example use 'Repeater' to wildcard to 'Repeater1',
                              'Repeater2', 'Repeater-999.87b', and so on.  To indicate such
                              wildcarding is intended, mteTriggerContextNameWildcard must
                              be 'true'.
                              
                              Each instance that fills the wildcard is independent of any
                              additional instances, that is, wildcarded objects operate
                              as if there were a separate table entry for each instance
                              that fills the wildcard without having to actually predict
                              all possible instances ahead of time.
                              
                              Operation of this feature assumes that the local system has a
                              list of available contexts against which to apply the
                              wildcard.  If the objects are being read from the local
                              system, this is clearly the system's own list of contexts.
                              For a remote system a local version of such a list is not
                              defined by any current standard and may not be available, so
                              this function MAY not be supported.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.9"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerContextNameWildcard"
                        type="smiv2:TruthValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              Control for whether mteTriggerContextName is to be treated as
                              fully-specified or wildcarded, with 'true' indicating wildcard.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="false"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.10"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerFrequency"
                        type="xs:unsignedInt" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The number of seconds to wait between trigger samples.  To
                              encourage consistency in sampling, the interval is measured
                              from the beginning of one check to the beginning of the next
                              and the timer is restarted immediately when it expires, not
                              when the check completes.
                              
                              If the next sample begins before the previous one completed the
                              system may either attempt to make the check or treat this as an
                              error condition with the error 'sampleOverrun'.
                              
                              A frequency of 0 indicates instantaneous recognition of the
                              condition.  This is not possible in many cases, but may
                              be supported in cases where it makes sense and the system is
                              able to do so.  This feature allows the MIB to be used in
                              implementations where such interrupt-driven behavior is
                              possible and is not likely to be supported for all MIB objects
                              even then since such sampling generally has to be tightly
                              integrated into low-level code.
                              
                              Systems that can support this SHOULD document those cases
                              where it can be used.  In cases where it can not, setting this
                              object to 0 should be disallowed.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <ncx:units>seconds</ncx:units>
                              <smi:default  smi:default="600"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.11"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerObjectsOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerObjects, the mteOwner of a group of
                              objects from mteObjectsTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.12"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerObjects" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteObjectsName of a group of objects from
                              mteObjectsTable.  These objects are to be added to any
                              Notification resulting from the firing of this trigger.
                              
                              A list of objects may also be added based on the event or on
                              the value of mteTriggerTest.
                              
                              
                              
                              A length of 0 indicates no additional objects.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.13"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerEnabled"
                        type="smiv2:TruthValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A control to allow a trigger to be configured but not used.
                              When the value is 'false' the trigger is not sampled.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="false"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.14"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerEntryStatus"
                        type="smiv2:RowStatus" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The control that allows creation and deletion of entries.
                              Once made active an entry may not be modified except to
                              delete it.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.2.1.15"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="__.mteTrigger.mteTriggerEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="mteTriggerEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="mteOwner"/>
                  <xs:field xpath="mteTriggerName"/>
               </xs:key>
            </xs:element>
            <xs:element name="mteTriggerDeltaEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     Information about a single trigger's delta sampling.  Entries
                     automatically exist in this this table for each mteTriggerEntry
                     that has mteTriggerSampleType set to 'deltaValue'.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.3.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="mteOwner">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteTriggerName">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteTriggerDeltaDiscontinuityID"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The OBJECT IDENTIFIER (OID) of a TimeTicks, TimeStamp, or
                              DateAndTime object that indicates a discontinuity in the value
                              at mteTriggerValueID.
                              
                              The OID may be for a leaf object (e.g. sysUpTime.0) or may
                              be wildcarded to match mteTriggerValueID.
                              
                              This object supports normal checking for a discontinuity in a
                              counter.  Note that if this object does not point to sysUpTime
                              discontinuity checking MUST still check sysUpTime for an overall
                              discontinuity.
                              
                              If the object identified is not accessible the sample attempt
                              is in error, with the error code as from an SNMP request.
                              
                              Bad object identifiers or a mismatch between truncating the
                              identifier and the value of mteDeltaDiscontinuityIDWildcard
                              result in operation as one would expect when providing the
                              wrong identifier to a Get operation.  The Get will fail or get
                              the wrong object.  If the value syntax of those objects is not
                              usable, that results in an error that terminates the sample
                              with a 'badType' error code.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="sysUpTimeInstance"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.3.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="mteTriggerDeltaDiscontinuityIDWildcard"
                        type="smiv2:TruthValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              Control for whether mteTriggerDeltaDiscontinuityID is to be
                              treated as fully-specified or wildcarded, with 'true'
                              indicating wildcard. Note that the value of this object will
                              be the same as that of the corresponding instance of
                              mteTriggerValueIDWildcard when the corresponding
                              
                              
                              mteTriggerSampleType is 'deltaValue'.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="false"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.3.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="mteTriggerDeltaDiscontinuityIDType"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value 'timeTicks' indicates the
                              mteTriggerDeltaDiscontinuityID of this row is of syntax
                              TimeTicks.  The value 'timeStamp' indicates syntax TimeStamp.
                              The value 'dateAndTime' indicates syntax DateAndTime.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="timeTicks"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.3.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="timeTicks">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="timeStamp">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="dateAndTime">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="__.mteTrigger.mteTriggerDeltaEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="mteTriggerDeltaEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="mteOwner"/>
                  <xs:field xpath="mteTriggerName"/>
               </xs:key>
            </xs:element>
            <xs:element name="mteTriggerExistenceEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     Information about a single existence trigger.  Entries
                     automatically exist in this this table for each mteTriggerEntry
                     that has 'existence' set in mteTriggerTest.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.4.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="mteOwner">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteTriggerName">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteTriggerExistenceTest"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The type of existence test to perform.  The trigger fires
                              when the object at mteTriggerValueID is seen to go from
                              present to absent, from absent to present, or to have it's
                              value changed, depending on which tests are selected:
                              
                              present(0) - when this test is selected, the trigger fires
                              when the mteTriggerValueID object goes from absent to present.
                              
                              absent(1)  - when this test is selected, the trigger fires
                              when the mteTriggerValueID object goes from present to absent.
                              changed(2) - when this test is selected, the trigger fires
                              the mteTriggerValueID object value changes.
                              
                              Once the trigger has fired for either presence or absence it
                              will not fire again for that state until the object has been
                              to the other state. 
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="7)"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.4.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:list>
                              <xs:simpleType>
                                 <xs:restriction base="xs:string">
                                    <xs:enumeration value="present">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>0</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration value="absent">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>1</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration value="changed">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>2</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                 </xs:restriction>
                              </xs:simpleType>
                           </xs:list>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerExistenceStartup"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              Control for whether an event may be triggered when this entry
                              is first set to 'active' and the test specified by
                              mteTriggerExistenceTest is true.  Setting an option causes
                              that trigger to fire when its test is true.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="7)"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.4.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:list>
                              <xs:simpleType>
                                 <xs:restriction base="xs:string">
                                    <xs:enumeration value="present">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>0</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration value="absent">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>1</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                 </xs:restriction>
                              </xs:simpleType>
                           </xs:list>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerExistenceObjectsOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerExistenceObjects, the mteOwner of a
                              group of objects from mteObjectsTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.4.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerExistenceObjects"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteObjectsName of a group of objects from
                              mteObjectsTable.  These objects are to be added to any
                              Notification resulting from the firing of this trigger for
                              this test.
                              
                              A list of objects may also be added based on the overall
                              trigger, the event or other settings in mteTriggerTest.
                              
                              A length of 0 indicates no additional objects.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.4.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerExistenceEventOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerExistenceEvent, the mteOwner of an event
                              entry from the mteEventTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.4.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerExistenceEvent"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteEventName of the event to invoke when mteTriggerType is
                              'existence' and this trigger fires.  A length of 0 indicates no
                              event.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.4.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="__.mteTrigger.mteTriggerExistenceEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="mteTriggerExistenceEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="mteOwner"/>
                  <xs:field xpath="mteTriggerName"/>
               </xs:key>
            </xs:element>
            <xs:element name="mteTriggerBooleanEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     Information about a single boolean trigger.  Entries
                     automatically exist in this this table for each mteTriggerEntry
                     that has 'boolean' set in mteTriggerTest.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.5.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="mteOwner">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteTriggerName">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteTriggerBooleanComparison"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The type of boolean comparison to perform.
                              
                              The value at mteTriggerValueID is compared to
                              mteTriggerBooleanValue, so for example if
                              mteTriggerBooleanComparison is 'less' the result would be true
                              if the value at mteTriggerValueID is less than the value of
                              mteTriggerBooleanValue.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="unequal"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.5.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="unequal">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="equal">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="less">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="lessOrEqual">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>4</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="greater">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>5</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="greaterOrEqual">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>6</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerBooleanValue"
                        type="xs:int" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value to use for the test specified by
                              mteTriggerBooleanTest.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="0"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.5.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerBooleanStartup"
                        type="smiv2:TruthValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              Control for whether an event may be triggered when this entry
                              is first set to 'active' or a new instance of the object at
                              mteTriggerValueID is found and the test specified by
                              mteTriggerBooleanComparison is true.  In that case an event is
                              triggered if mteTriggerBooleanStartup is 'true'.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="true"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.5.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerBooleanObjectsOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerBooleanObjects, the mteOwner of a group
                              of objects from mteObjectsTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.5.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerBooleanObjects"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteObjectsName of a group of objects from
                              mteObjectsTable.  These objects are to be added to any
                              Notification resulting from the firing of this trigger for
                              this test.
                              
                              A list of objects may also be added based on the overall
                              trigger, the event or other settings in mteTriggerTest.
                              
                              A length of 0 indicates no additional objects.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.5.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerBooleanEventOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerBooleanEvent, the mteOwner of an event
                              entry from mteEventTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.5.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerBooleanEvent"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteEventName of the event to invoke when mteTriggerType is
                              'boolean' and this trigger fires.  A length of 0 indicates no
                              event.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.5.1.7"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="__.mteTrigger.mteTriggerBooleanEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="mteTriggerBooleanEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="mteOwner"/>
                  <xs:field xpath="mteTriggerName"/>
               </xs:key>
            </xs:element>
            <xs:element name="mteTriggerThresholdEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     Information about a single threshold trigger.  Entries
                     automatically exist in this table for each mteTriggerEntry
                     that has 'threshold' set in mteTriggerTest.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="mteOwner">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteTriggerName">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteTriggerThresholdStartup"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The event that may be triggered when this entry is first
                              set to 'active' and a new instance of the object at
                              mteTriggerValueID is found.  If the first sample after this
                              instance becomes active is greater than or equal to
                              mteTriggerThresholdRising and mteTriggerThresholdStartup is
                              equal to 'rising' or 'risingOrFalling', then one
                              mteTriggerThresholdRisingEvent is triggered for that instance.
                              If the first sample after this entry becomes active is less
                              than or equal to mteTriggerThresholdFalling and
                              mteTriggerThresholdStartup is equal to 'falling' or
                              'risingOrFalling', then one mteTriggerThresholdRisingEvent is
                              triggered for that instance.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="risingOrFalling"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="rising">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="falling">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="risingOrFalling">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerThresholdRising"
                        type="xs:int" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A threshold value to check against if mteTriggerType is
                              'threshold'.
                              
                              When the current sampled value is greater than or equal to
                              this threshold, and the value at the last sampling interval
                              was less than this threshold, one
                              mteTriggerThresholdRisingEvent is triggered.  That event is
                              also triggered if the first sample after this entry becomes
                              active is greater than or equal to this threshold and
                              mteTriggerThresholdStartup is equal to 'rising' or
                              'risingOrFalling'.
                              
                              After a rising event is generated, another such event is not
                              triggered until the sampled value falls below this threshold
                              and reaches mteTriggerThresholdFalling.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="0"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerThresholdFalling"
                        type="xs:int" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A threshold value to check against if mteTriggerType is
                              'threshold'.
                              
                              When the current sampled value is less than or equal to this
                              threshold, and the value at the last sampling interval was
                              greater than this threshold, one
                              mteTriggerThresholdFallingEvent is triggered.  That event is
                              also triggered if the first sample after this entry becomes
                              active is less than or equal to this threshold and
                              mteTriggerThresholdStartup is equal to 'falling' or
                              'risingOrFalling'.
                              
                              After a falling event is generated, another such event is not
                              triggered until the sampled value rises above this threshold
                              and reaches mteTriggerThresholdRising.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="0"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerThresholdDeltaRising"
                        type="xs:int" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A threshold value to check against if mteTriggerType is
                              'threshold'.
                              
                              When the delta value (difference) between the current sampled
                              value (value(n)) and the previous sampled value (value(n-1))
                              is greater than or equal to this threshold,
                              and the delta value calculated at the last sampling interval
                              (i.e. value(n-1) - value(n-2)) was less than this threshold,
                              one mteTriggerThresholdDeltaRisingEvent is triggered. That event
                              is also triggered if the first delta value calculated after this
                              entry becomes active, i.e. value(2) - value(1), where value(1)
                              is the first sample taken of that instance, is greater than or
                              equal to this threshold.
                              
                              After a rising event is generated, another such event is not
                              triggered until the delta value falls below this threshold and
                              reaches mteTriggerThresholdDeltaFalling.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="0"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerThresholdDeltaFalling"
                        type="xs:int" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A threshold value to check against if mteTriggerType is
                              'threshold'.
                              
                              When the delta value (difference) between the current sampled
                              value (value(n)) and the previous sampled value (value(n-1))
                              is less than or equal to this threshold,
                              and the delta value calculated at the last sampling interval
                              (i.e. value(n-1) - value(n-2)) was greater than this threshold,
                              one mteTriggerThresholdDeltaFallingEvent is triggered. That event
                              is also triggered if the first delta value calculated after this
                              entry becomes active, i.e. value(2) - value(1), where value(1)
                              is the first sample taken of that instance, is less than or
                              equal to this threshold.
                              
                              After a falling event is generated, another such event is not
                              triggered until the delta value falls below this threshold and
                              reaches mteTriggerThresholdDeltaRising.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="0"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteTriggerThresholdObjectsOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerThresholdObjects, the mteOwner of a group
                              of objects from mteObjectsTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerThresholdObjects"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteObjectsName of a group of objects from
                              mteObjectsTable.  These objects are to be added to any
                              Notification resulting from the firing of this trigger for
                              this test.
                              
                              A list of objects may also be added based on the overall
                              
                              
                              trigger, the event or other settings in mteTriggerTest.
                              
                              A length of 0 indicates no additional objects.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.7"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="mteTriggerThresholdRisingEventOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerThresholdRisingEvent, the mteOwner of an
                              event entry from mteEventTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.8"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerThresholdRisingEvent"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteEventName of the event to invoke when mteTriggerType is
                              'threshold' and this trigger fires based on
                              mteTriggerThresholdRising.  A length of 0 indicates no event.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.9"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="mteTriggerThresholdFallingEventOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerThresholdFallingEvent, the mteOwner of an
                              event entry from mteEventTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.10"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteTriggerThresholdFallingEvent"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteEventName of the event to invoke when mteTriggerType is
                              'threshold' and this trigger fires based on
                              mteTriggerThresholdFalling.  A length of 0 indicates no event.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.11"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="mteTriggerThresholdDeltaRisingEventOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerThresholdDeltaRisingEvent, the mteOwner
                              of an event entry from mteEventTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.12"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="mteTriggerThresholdDeltaRisingEvent"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteEventName of the event to invoke when mteTriggerType is
                              'threshold' and this trigger fires based on
                              mteTriggerThresholdDeltaRising. A length of 0 indicates
                              no event.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.13"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="mteTriggerThresholdDeltaFallingEventOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteTriggerThresholdDeltaFallingEvent, the mteOwner
                              of an event entry from mteEventTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.14"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="mteTriggerThresholdDeltaFallingEvent"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteEventName of the event to invoke when mteTriggerType is
                              'threshold' and this trigger fires based on
                              mteTriggerThresholdDeltaFalling.  A length of 0 indicates
                              no event.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.2.6.1.15"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="__.mteTrigger.mteTriggerThresholdEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="mteTriggerThresholdEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="mteOwner"/>
                  <xs:field xpath="mteTriggerName"/>
               </xs:key>
            </xs:element>
            <xs:element name="__.mteTrigger.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="mteObjects">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.1.3"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="mteObjectsEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     A group of objects.  Applications create and delete entries
                     using mteObjectsEntryStatus.
                     
                     When adding objects to a notification they are added in the
                     lexical order of their index in this table.  Those associated
                     with a trigger come first, then trigger test, then event.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.3.1.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="mteOwner">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteObjectsName">
                        <xs:annotation>
                           <xs:documentation>
                              A locally-unique, administratively assigned name for a group
                              of objects.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.3.1.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteObjectsIndex">
                        <xs:annotation>
                           <xs:documentation>
                              An arbitrary integer for the purpose of identifying
                              individual objects within a mteObjectsName group.
                              
                              
                              Objects within a group are placed in the notification in the
                              numerical order of this index.
                              
                              Groups are placed in the notification in the order of the
                              selections for overall trigger, trigger test, and event.
                              Within trigger test they are in the same order as the
                              numerical values of the bits defined for mteTriggerTest.
                              
                              Bad object identifiers or a mismatch between truncating the
                              identifier and the value of mteDeltaDiscontinuityIDWildcard
                              result in operation as one would expect when providing the
                              wrong identifier to a Get operation.  The Get will fail or get
                              the wrong object.  If the object is not available it is omitted
                              from the notification.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.3.1.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:unsignedInt">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteObjectsID"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The object identifier of a MIB object to add to a
                              Notification that results from the firing of a trigger.
                              
                              This may be wildcarded by truncating all or part of the
                              instance portion, in which case the instance portion of the
                              OID for obtaining this object will be the same as that used
                              in obtaining the mteTriggerValueID that fired.  If such
                              wildcarding is applied, mteObjectsIDWildcard must be
                              'true' and if not it must be 'false'.
                              
                              Each instance that fills the wildcard is independent of any
                              additional instances, that is, wildcarded objects operate
                              as if there were a separate table entry for each instance
                              that fills the wildcard without having to actually predict
                              all possible instances ahead of time.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="zeroDotZero"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.3.1.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteObjectsIDWildcard"
                        type="smiv2:TruthValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              Control for whether mteObjectsID is to be treated as
                              fully-specified or wildcarded, with 'true' indicating wildcard.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="false"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.3.1.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteObjectsEntryStatus"
                        type="smiv2:RowStatus" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The control that allows creation and deletion of entries.
                              Once made active an entry MAY not be modified except to
                              delete it.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.3.1.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="__.mteObjects.mteObjectsEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="mteObjectsEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="mteOwner"/>
                  <xs:field xpath="mteObjectsName"/>
                  <xs:field xpath="mteObjectsIndex"/>
               </xs:key>
            </xs:element>
            <xs:element name="__.mteObjects.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="mteEvent">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="mteEventFailures" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The number of times an attempt to invoke an event
                     has failed.  This counts individually for each
                     attempt in a group of targets or each attempt for a
                     wildcarded trigger object.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.1"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteEventEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     Information about a single event.  Applications create and
                     delete entries using mteEventEntryStatus.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.2.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="mteOwner">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteEventName">
                        <xs:annotation>
                           <xs:documentation>
                              A locally-unique, administratively assigned name for the
                              event.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.2.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteEventComment"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A description of the event's function and use.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.2.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteEventActions" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The actions to perform when this event occurs.
                              
                              For 'notification', Traps and/or Informs are sent according
                              to the configuration in the SNMP Notification MIB.
                              
                              For 'set', an SNMP Set operation is performed according to
                              control values in this entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="()"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.2.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:list>
                              <xs:simpleType>
                                 <xs:restriction base="xs:string">
                                    <xs:enumeration
                                       value="notification">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>0</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration value="set">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:position>1</ncx:position>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                 </xs:restriction>
                              </xs:simpleType>
                           </xs:list>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteEventEnabled"
                        type="smiv2:TruthValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A control to allow an event to be configured but not used.
                              When the value is 'false' the event does not execute even if
                              
                              
                              triggered.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="false"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.2.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteEventEntryStatus"
                        type="smiv2:RowStatus" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The control that allows creation and deletion of entries.
                              Once made active an entry MAY not be modified except to
                              delete it.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.2.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="__.mteEvent.mteEventEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="mteEventEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="mteOwner"/>
                  <xs:field xpath="mteEventName"/>
               </xs:key>
            </xs:element>
            <xs:element name="mteEventNotificationEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     Information about a single event's notification.  Entries
                     automatically exist in this this table for each mteEventEntry
                     that has 'notification' set in mteEventActions.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.3.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="mteOwner">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteEventName">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteEventNotification"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The object identifier from the NOTIFICATION-TYPE for the
                              notification to use if metEventActions has 'notification' set.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="zeroDotZero"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.3.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="mteEventNotificationObjectsOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              To go with mteEventNotificationObjects, the mteOwner of a
                              group of objects from mteObjectsTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.3.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="mteEventNotificationObjects"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The mteObjectsName of a group of objects from
                              mteObjectsTable if mteEventActions has 'notification' set.
                              These objects are to be added to any Notification generated by
                              this event.
                              
                              Objects may also be added based on the trigger that stimulated
                              the event.
                              
                              A length of 0 indicates no additional objects.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.3.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element
                        name="__.mteEvent.mteEventNotificationEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="mteEventNotificationEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="mteOwner"/>
                  <xs:field xpath="mteEventName"/>
               </xs:key>
            </xs:element>
            <xs:element name="mteEventSetEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     Information about a single event's set option.  Entries
                     automatically exist in this this table for each mteEventEntry
                     that has 'set' set in mteEventActions.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.4.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="mteOwner">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteEventName">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated keyref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType/>
                     </xs:element>
                     <xs:element name="mteEventSetObject"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The object identifier from the MIB object to set if
                              mteEventActions has 'set' set.
                              
                              This object identifier may be wildcarded by leaving
                              sub-identifiers off the end, in which case
                              nteEventSetObjectWildCard must be 'true'.
                              
                              If mteEventSetObject is wildcarded the instance used to set the
                              object to which it points is the same as the instance from the
                              value of mteTriggerValueID that triggered the event.
                              
                              Each instance that fills the wildcard is independent of any
                              additional instances, that is, wildcarded objects operate
                              as if there were a separate table entry for each instance
                              that fills the wildcard without having to actually predict
                              all possible instances ahead of time.
                              
                              Bad object identifiers or a mismatch between truncating the
                              identifier and the value of mteSetObjectWildcard
                              result in operation as one would expect when providing the
                              wrong identifier to a Set operation.  The Set will fail or set
                              the wrong object.  If the value syntax of the destination
                              object is not correct, the Set fails with the normal SNMP
                              error code.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="zeroDotZero"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.4.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteEventSetObjectWildcard"
                        type="smiv2:TruthValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              Control over whether mteEventSetObject is to be treated as
                              fully-specified or wildcarded, with 'true' indicating wildcard
                              if mteEventActions has 'set' set.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="false"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.4.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteEventSetValue" type="xs:int"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value to which to set the object at mteEventSetObject
                              if mteEventActions has 'set' set.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="0"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.4.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteEventSetTargetTag"
                        type="snmp-target:SnmpTagValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The tag for the target(s) at which to set the object at
                              mteEventSetObject to mteEventSetValue if mteEventActions
                              has 'set' set.
                              
                              Systems limited to self management MAY reject a non-zero
                              length for the value of this object.
                              
                              A length of 0 indicates the local system.  In this case,
                              access to the objects indicated by mteEventSetObject is under
                              the security credentials of the requester that set
                              mteTriggerEntryStatus to 'active'.  Those credentials are the
                              input parameters for isAccessAllowed from the Architecture for
                              Describing SNMP Management Frameworks.
                              
                              Otherwise access rights are checked according to the security
                              parameters resulting from the tag.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.4.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteEventSetContextName"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The management context in which to set mteEventObjectID.
                              if mteEventActions has 'set' set.
                              
                              This may be wildcarded by leaving characters off the end.  To
                              indicate such wildcarding mteEventSetContextNameWildcard must
                              be 'true'.
                              
                              If this context name is wildcarded the value used to complete
                              the wildcarding of mteTriggerContextName will be appended.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.4.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="mteEventSetContextNameWildcard"
                        type="smiv2:TruthValue" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              Control for whether mteEventSetContextName is to be treated as
                              fully-specified or wildcarded, with 'true' indicating wildcard
                              if mteEventActions has 'set' set.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="false"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.88.1.4.4.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="__.mteEvent.mteEventSetEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="mteEventSetEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="mteOwner"/>
                  <xs:field xpath="mteEventName"/>
               </xs:key>
            </xs:element>
            <xs:element name="__.mteEvent.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="dismanEventMIBNotificationObjects">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.2.1"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="mteHotTrigger"
               type="snmp-framework:SnmpAdminString" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The name of the trigger causing the notification.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.2.1.1"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteHotTargetName"
               type="snmp-framework:SnmpAdminString" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The SNMP Target MIB's snmpTargetAddrName related to the
                     notification.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.2.1.2"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteHotContextName"
               type="snmp-framework:SnmpAdminString" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The context name related to the notification.  This MUST be as
                     fully-qualified as possible, including filling in wildcard
                     information determined in processing.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.2.1.3"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteHotOID" type="yang:object-identifier"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The object identifier of the destination object related to the
                     notification.  This MUST be as fully-qualified as possible,
                     including filling in wildcard information determined in
                     processing.
                     
                     For a trigger-related notification this is from
                     mteTriggerValueID.
                     
                     For a set failure this is from mteEventSetObject.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.2.1.4"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteHotValue" type="xs:int" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The value of the object at mteTriggerValueID when a
                     trigger fired.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.2.1.5"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="mteFailedReason" type="FailureReason"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The reason for the failure of an attempt to check for a
                     trigger condition or set an object in response to an event.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.88.2.1.6"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="__.dismanEventMIBNotificationObjects.A__"
               minOccurs="0" maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="mteTriggerFired"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            Notification that the trigger indicated by the object
            instances has fired, for triggers with mteTriggerType
            'boolean' or 'existence'.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.2.0.1"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="mteTriggerFired-mteHotTrigger">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTrigger"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The name of the trigger causing the notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.1"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFired.mteTriggerFired-mteHotTrigger.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFired-mteHotTargetName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTargetName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The SNMP Target MIB's snmpTargetAddrName related to the
                                    notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.2"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFired.mteTriggerFired-mteHotTargetName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFired-mteHotContextName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotContextName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The context name related to the notification.  This MUST be as
                                    fully-qualified as possible, including filling in wildcard
                                    information determined in processing.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.3"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFired.mteTriggerFired-mteHotContextName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFired-mteHotOID">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotOID"
                              type="yang:object-identifier"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The object identifier of the destination object related to the
                                    notification.  This MUST be as fully-qualified as possible,
                                    including filling in wildcard information determined in
                                    processing.
                                    
                                    For a trigger-related notification this is from
                                    mteTriggerValueID.
                                    
                                    For a set failure this is from mteEventSetObject.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.4"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFired.mteTriggerFired-mteHotOID.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFired-mteHotValue">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotValue" type="xs:int"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The value of the object at mteTriggerValueID when a
                                    trigger fired.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.5"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFired.mteTriggerFired-mteHotValue.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.mteTriggerFired.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:element name="mteTriggerRising"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            Notification that the rising threshold was met for triggers
            with mteTriggerType 'threshold'.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.2.0.2"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="mteTriggerRising-mteHotTrigger">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTrigger"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The name of the trigger causing the notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.1"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerRising.mteTriggerRising-mteHotTrigger.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerRising-mteHotTargetName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTargetName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The SNMP Target MIB's snmpTargetAddrName related to the
                                    notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.2"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerRising.mteTriggerRising-mteHotTargetName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerRising-mteHotContextName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotContextName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The context name related to the notification.  This MUST be as
                                    fully-qualified as possible, including filling in wildcard
                                    information determined in processing.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.3"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerRising.mteTriggerRising-mteHotContextName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerRising-mteHotOID">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotOID"
                              type="yang:object-identifier"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The object identifier of the destination object related to the
                                    notification.  This MUST be as fully-qualified as possible,
                                    including filling in wildcard information determined in
                                    processing.
                                    
                                    For a trigger-related notification this is from
                                    mteTriggerValueID.
                                    
                                    For a set failure this is from mteEventSetObject.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.4"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerRising.mteTriggerRising-mteHotOID.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerRising-mteHotValue">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotValue" type="xs:int"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The value of the object at mteTriggerValueID when a
                                    trigger fired.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.5"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerRising.mteTriggerRising-mteHotValue.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.mteTriggerRising.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:element name="mteTriggerFalling"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            Notification that the falling threshold was met for triggers
            with mteTriggerType 'threshold'.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.2.0.3"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="mteTriggerFalling-mteHotTrigger">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTrigger"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The name of the trigger causing the notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.1"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFalling.mteTriggerFalling-mteHotTrigger.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFalling-mteHotTargetName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTargetName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The SNMP Target MIB's snmpTargetAddrName related to the
                                    notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.2"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFalling.mteTriggerFalling-mteHotTargetName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element
                     name="mteTriggerFalling-mteHotContextName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotContextName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The context name related to the notification.  This MUST be as
                                    fully-qualified as possible, including filling in wildcard
                                    information determined in processing.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.3"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFalling.mteTriggerFalling-mteHotContextName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFalling-mteHotOID">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotOID"
                              type="yang:object-identifier"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The object identifier of the destination object related to the
                                    notification.  This MUST be as fully-qualified as possible,
                                    including filling in wildcard information determined in
                                    processing.
                                    
                                    For a trigger-related notification this is from
                                    mteTriggerValueID.
                                    
                                    For a set failure this is from mteEventSetObject.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.4"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFalling.mteTriggerFalling-mteHotOID.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFalling-mteHotValue">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotValue" type="xs:int"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The value of the object at mteTriggerValueID when a
                                    trigger fired.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.5"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFalling.mteTriggerFalling-mteHotValue.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.mteTriggerFalling.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:element name="mteTriggerFailure"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            Notification that an attempt to check a trigger has failed.
            
            The network manager must enable this notification only with
            a certain fear and trembling, as it can easily crowd out more
            important information.  It should be used only to help diagnose
            a problem that has appeared in the error counters and can not
            be found otherwise.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.2.0.4"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="mteTriggerFailure-mteHotTrigger">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTrigger"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The name of the trigger causing the notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.1"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFailure.mteTriggerFailure-mteHotTrigger.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFailure-mteHotTargetName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTargetName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The SNMP Target MIB's snmpTargetAddrName related to the
                                    notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.2"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFailure.mteTriggerFailure-mteHotTargetName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element
                     name="mteTriggerFailure-mteHotContextName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotContextName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The context name related to the notification.  This MUST be as
                                    fully-qualified as possible, including filling in wildcard
                                    information determined in processing.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.3"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFailure.mteTriggerFailure-mteHotContextName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFailure-mteHotOID">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotOID"
                              type="yang:object-identifier"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The object identifier of the destination object related to the
                                    notification.  This MUST be as fully-qualified as possible,
                                    including filling in wildcard information determined in
                                    processing.
                                    
                                    For a trigger-related notification this is from
                                    mteTriggerValueID.
                                    
                                    For a set failure this is from mteEventSetObject.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.4"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFailure.mteTriggerFailure-mteHotOID.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteTriggerFailure-mteFailedReason">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteFailedReason"
                              type="FailureReason" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The reason for the failure of an attempt to check for a
                                    trigger condition or set an object in response to an event.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.6"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteTriggerFailure.mteTriggerFailure-mteFailedReason.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.mteTriggerFailure.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:element name="mteEventSetFailure"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            Notification that an attempt to do a set in response to an
            event has failed.
            
            The network manager must enable this notification only with
            a certain fear and trembling, as it can easily crowd out more
            important information.  It should be used only to help diagnose
            a problem that has appeared in the error counters and can not
            be found otherwise.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.2.1.88.2.0.5"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="mteEventSetFailure-mteHotTrigger">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTrigger"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The name of the trigger causing the notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.1"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteEventSetFailure.mteEventSetFailure-mteHotTrigger.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element
                     name="mteEventSetFailure-mteHotTargetName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotTargetName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The SNMP Target MIB's snmpTargetAddrName related to the
                                    notification.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.2"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteEventSetFailure.mteEventSetFailure-mteHotTargetName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element
                     name="mteEventSetFailure-mteHotContextName">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotContextName"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The context name related to the notification.  This MUST be as
                                    fully-qualified as possible, including filling in wildcard
                                    information determined in processing.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.3"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteEventSetFailure.mteEventSetFailure-mteHotContextName.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteEventSetFailure-mteHotOID">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteHotOID"
                              type="yang:object-identifier"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The object identifier of the destination object related to the
                                    notification.  This MUST be as fully-qualified as possible,
                                    including filling in wildcard information determined in
                                    processing.
                                    
                                    For a trigger-related notification this is from
                                    mteTriggerValueID.
                                    
                                    For a set failure this is from mteEventSetObject.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.4"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteEventSetFailure.mteEventSetFailure-mteHotOID.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="mteEventSetFailure-mteFailedReason">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="mteFailedReason"
                              type="FailureReason" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The reason for the failure of an attempt to check for a
                                    trigger condition or set an object in response to an event.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:oid 
                                       smi:oid="1.3.6.1.2.1.88.2.1.6"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.mteEventSetFailure.mteEventSetFailure-mteFailedReason.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.mteEventSetFailure.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

</xs:schema>
