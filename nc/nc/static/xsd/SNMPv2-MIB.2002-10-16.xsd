<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns="urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-MIB"
   targetNamespace="urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-MIB"
   elementFormDefault="qualified" attributeFormDefault="unqualified"
   xml:lang="en" version="2002-10-16"
   xmlns:ncx="http://netconfcentral.com/ncx"
   xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0"
   xmlns:ncn="urn:ietf:params:xml:ns:netconf:notification:1.0"
   xmlns:smiv2="urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-TC"
   xmlns:smi="urn:ietf:params:xml:ns:yang:yang-smi"
   xmlns:yang="urn:ietf:params:xml:ns:yang:yang-types">
   <xs:annotation>
      <xs:documentation>
         Converted from YANG file 'SNMPv2-MIB.yang' by yangdump version 0.9.4
         
         Module: SNMPv2-MIB
         Organization: IETF SNMPv3 Working Group
         Version: 2002-10-16
         Contact: WG-EMail:   snmpv3@lists.tislabs.com
         Subscribe:  snmpv3-request@lists.tislabs.com
         
         Co-Chair:   Russ Mundy
         	    Network Associates Laboratories
         postal:     15204 Omega Drive, Suite 300
         	    Rockville, MD 20850-4601
         	    USA
         EMail:      mundy@tislabs.com
         phone:      +1 301 947-7107
         
         Co-Chair:   David Harrington
         	    Enterasys Networks
         postal:     35 Industrial Way
         	    P. O. Box 5005
         	    Rochester, NH 03866-5005
         	    USA
         EMail:      dbh@enterasys.com
         phone:      +1 603 337-2614
         
         Editor:     Randy Presuhn
         	    BMC Software, Inc.
         postal:     2141 North First Street
         	    San Jose, CA 95131
         	    USA
         EMail:      randy_presuhn@bmc.com
         phone:      +1 408 546-1006
      </xs:documentation>
      <xs:documentation>
         The MIB module for SNMP entities.
         
         Copyright (C) The Internet Society (2002). This
         version of this MIB module is part of RFC 3418;
         see the RFC itself for full legal notices.
      </xs:documentation>
      <xs:appinfo>
         <ncx:source>
            /home/andy/modules/ietf/SNMPv2-MIB.yang
         </ncx:source>
         <ncx:organization>
            IETF SNMPv3 Working Group
         </ncx:organization>
         <ncx:contact>
            WG-EMail:   snmpv3@lists.tislabs.com
            Subscribe:  snmpv3-request@lists.tislabs.com
            
            Co-Chair:   Russ Mundy
            	    Network Associates Laboratories
            postal:     15204 Omega Drive, Suite 300
            	    Rockville, MD 20850-4601
            	    USA
            EMail:      mundy@tislabs.com
            phone:      +1 301 947-7107
            
            Co-Chair:   David Harrington
            	    Enterasys Networks
            postal:     35 Industrial Way
            	    P. O. Box 5005
            	    Rochester, NH 03866-5005
            	    USA
            EMail:      dbh@enterasys.com
            phone:      +1 603 337-2614
            
            Editor:     Randy Presuhn
            	    BMC Software, Inc.
            postal:     2141 North First Street
            	    San Jose, CA 95131
            	    USA
            EMail:      randy_presuhn@bmc.com
            phone:      +1 408 546-1006
         </ncx:contact>
      </xs:appinfo>
      <xs:appinfo>
         <ncx:revision>
            <ncx:version>2002-10-16</ncx:version>
            <ncx:description>
               This revision of this MIB module was published as
               RFC 3418.
            </ncx:description>
         </ncx:revision>
         <ncx:revision>
            <ncx:version>1995-11-09</ncx:version>
            <ncx:description>
               This revision of this MIB module was published as
               RFC 1907.
            </ncx:description>
         </ncx:revision>
         <ncx:revision>
            <ncx:version>1993-04-01</ncx:version>
            <ncx:description>
               The initial revision of this MIB module was published
               as RFC 1450.
            </ncx:description>
         </ncx:revision>
      </xs:appinfo>
   </xs:annotation>

   <xs:element name="system">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.1"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="sysDescr" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     A textual description of the entity.  This value should
                     include the full name and version identification of
                     the system's hardware type, software operating-system,
                     and networking software.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.1.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:simpleType>
                  <xs:restriction base="smiv2:DisplayString">
                     <xs:maxLength value="255"/>
                  </xs:restriction>
               </xs:simpleType>
            </xs:element>
            <xs:element name="sysObjectID"
               type="yang:object-identifier" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The vendor's authoritative identification of the
                     network management subsystem contained in the entity.
                     This value is allocated within the SMI enterprises
                     subtree (1.3.6.1.4.1) and provides an easy and
                     unambiguous means for determining `what kind of box' is
                     being managed.  For example, if vendor `Flintstones,
                     Inc.' was assigned the subtree 1.3.6.1.4.1.424242,
                     it could assign the identifier 1.3.6.1.4.1.424242.1.1
                     to its `Fred Router'.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.1.2"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="sysUpTime" type="yang:timeticks"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The time (in hundredths of a second) since the
                     network management portion of the system was last
                     re-initialized.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.1.3"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="sysContact" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The textual identification of the contact person for
                     this managed node, together with information on how
                     to contact this person.  If no contact information is
                     known, the value is the zero-length string.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>true</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.1.4"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:simpleType>
                  <xs:restriction base="smiv2:DisplayString">
                     <xs:maxLength value="255"/>
                  </xs:restriction>
               </xs:simpleType>
            </xs:element>
            <xs:element name="sysName" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     An administratively-assigned name for this managed
                     node.  By convention, this is the node's fully-qualified
                     domain name.  If the name is unknown, the value is
                     the zero-length string.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>true</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.1.5"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:simpleType>
                  <xs:restriction base="smiv2:DisplayString">
                     <xs:maxLength value="255"/>
                  </xs:restriction>
               </xs:simpleType>
            </xs:element>
            <xs:element name="sysLocation" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The physical location of this node (e.g., 'telephone
                     closet, 3rd floor').  If the location is unknown, the
                     value is the zero-length string.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>true</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.1.6"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:simpleType>
                  <xs:restriction base="smiv2:DisplayString">
                     <xs:maxLength value="255"/>
                  </xs:restriction>
               </xs:simpleType>
            </xs:element>
            <xs:element name="sysServices" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     A value which indicates the set of services that this
                     entity may potentially offer.  The value is a sum.
                     
                     This sum initially takes the value zero. Then, for
                     each layer, L, in the range 1 through 7, that this node
                     performs transactions for, 2 raised to (L - 1) is added
                     to the sum.  For example, a node which performs only
                     routing functions would have a value of 4 (2^(3-1)).
                     In contrast, a node which is a host offering application
                     services would have a value of 72 (2^(4-1) + 2^(7-1)).
                     Note that in the context of the Internet suite of
                     protocols, values should be calculated accordingly:
                     
                          layer      functionality
                            1        physical (e.g., repeaters)
                            2        datalink/subnetwork (e.g., bridges)
                            3        internet (e.g., supports the IP)
                            4        end-to-end  (e.g., supports the TCP)
                            7        applications (e.g., supports the SMTP)
                     
                     For systems including OSI protocols, layers 5 and 6
                     may also be counted.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.1.7"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:simpleType>
                  <xs:restriction base="xs:int">
                     <xs:minInclusive value="0"/>
                     <xs:maxInclusive value="127"/>
                  </xs:restriction>
               </xs:simpleType>
            </xs:element>
            <xs:element name="sysORLastChange" type="yang:timestamp"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The value of sysUpTime at the time of the most recent
                     change in state or value of any instance of sysORID.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.1.8"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="sysOREntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     An entry (conceptual row) in the sysORTable.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.1.9.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="sysORIndex">
                        <xs:annotation>
                           <xs:documentation>
                              The auxiliary variable used for identifying instances
                              of the columnar objects in the sysORTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <smi:oid  smi:oid="1.3.6.1.2.1.1.9.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:int">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="sysORID"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              An authoritative identification of a capabilities
                              statement with respect to various MIB modules supported
                              by the local SNMP application acting as a command
                              responder.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.1.9.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="sysORDescr"
                        type="smiv2:DisplayString" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A textual description of the capabilities identified
                              by the corresponding instance of sysORID.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.1.9.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="sysORUpTime"
                        type="yang:timestamp" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of sysUpTime at the time this conceptual
                              row was last instantiated.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.1.9.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="__.system.sysOREntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="sysOREntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="sysORIndex"/>
               </xs:key>
            </xs:element>
            <xs:element name="__.system.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="snmp">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.11"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="snmpInPkts" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of messages delivered to the SNMP
                     entity from the transport service.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.1"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutPkts" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Messages which were
                     passed from the SNMP protocol entity to the
                     transport service.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.2"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInBadVersions" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP messages which were delivered
                     to the SNMP entity and were for an unsupported SNMP
                     version.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.3"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInBadCommunityNames"
               type="yang:counter32" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of community-based SNMP messages (for
                     example,  SNMPv1) delivered to the SNMP entity which
                     used an SNMP community name not known to said entity.
                     Also, implementations which authenticate community-based
                     SNMP messages using check(s) in addition to matching
                     the community name (for example, by also checking
                     whether the message originated from a transport address
                     allowed to use a specified community name) MAY include
                     in this value the number of messages which failed the
                     additional check(s).  It is strongly RECOMMENDED that
                     
                     the documentation for any security model which is used
                     to authenticate community-based SNMP messages specify
                     the precise conditions that contribute to this value.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.4"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInBadCommunityUses"
               type="yang:counter32" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of community-based SNMP messages (for
                     example, SNMPv1) delivered to the SNMP entity which
                     represented an SNMP operation that was not allowed for
                     the SNMP community named in the message.  The precise
                     conditions under which this counter is incremented
                     (if at all) depend on how the SNMP entity implements
                     its access control mechanism and how its applications
                     interact with that access control mechanism.  It is
                     strongly RECOMMENDED that the documentation for any
                     access control mechanism which is used to control access
                     to and visibility of MIB instrumentation specify the
                     precise conditions that contribute to this value.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.5"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInASNParseErrs" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of ASN.1 or BER errors encountered by
                     the SNMP entity when decoding received SNMP messages.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.6"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInTooBigs" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP PDUs which were
                     delivered to the SNMP protocol entity and for
                     which the value of the error-status field was
                     `tooBig'.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.8"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInNoSuchNames" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP PDUs which were
                     delivered to the SNMP protocol entity and for
                     which the value of the error-status field was
                     `noSuchName'.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.9"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInBadValues" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP PDUs which were
                     delivered to the SNMP protocol entity and for
                     which the value of the error-status field was
                     `badValue'.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.10"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInReadOnlys" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number valid SNMP PDUs which were delivered
                     to the SNMP protocol entity and for which the value
                     of the error-status field was `readOnly'.  It should
                     be noted that it is a protocol error to generate an
                     SNMP PDU which contains the value `readOnly' in the
                     error-status field, as such this object is provided
                     as a means of detecting incorrect implementations of
                     the SNMP.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.11"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInGenErrs" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP PDUs which were delivered
                     to the SNMP protocol entity and for which the value
                     of the error-status field was `genErr'.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.12"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInTotalReqVars" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of MIB objects which have been
                     retrieved successfully by the SNMP protocol entity
                     as the result of receiving valid SNMP Get-Request
                     and Get-Next PDUs.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.13"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInTotalSetVars" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of MIB objects which have been
                     altered successfully by the SNMP protocol entity as
                     the result of receiving valid SNMP Set-Request PDUs.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.14"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInGetRequests" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Get-Request PDUs which
                     have been accepted and processed by the SNMP
                     protocol entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.15"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInGetNexts" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Get-Next PDUs which have been
                     accepted and processed by the SNMP protocol entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.16"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInSetRequests" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Set-Request PDUs which
                     have been accepted and processed by the SNMP protocol
                     entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.17"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInGetResponses" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Get-Response PDUs which
                     have been accepted and processed by the SNMP protocol
                     entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.18"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpInTraps" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Trap PDUs which have been
                     accepted and processed by the SNMP protocol entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.19"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutTooBigs" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP PDUs which were generated
                     by the SNMP protocol entity and for which the value
                     of the error-status field was `tooBig.'
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.20"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutNoSuchNames" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP PDUs which were generated
                     by the SNMP protocol entity and for which the value
                     of the error-status was `noSuchName'.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.21"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutBadValues" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP PDUs which were generated
                     by the SNMP protocol entity and for which the value
                     of the error-status field was `badValue'.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.22"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutGenErrs" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP PDUs which were generated
                     by the SNMP protocol entity and for which the value
                     of the error-status field was `genErr'.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.24"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutGetRequests" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Get-Request PDUs which
                     have been generated by the SNMP protocol entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.25"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutGetNexts" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Get-Next PDUs which have
                     been generated by the SNMP protocol entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.26"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutSetRequests" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Set-Request PDUs which
                     have been generated by the SNMP protocol entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.27"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutGetResponses"
               type="yang:counter32" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Get-Response PDUs which
                     have been generated by the SNMP protocol entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.28"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpOutTraps" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of SNMP Trap PDUs which have
                     been generated by the SNMP protocol entity.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:status>obsolete</ncx:status>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.29"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpEnableAuthenTraps" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     Indicates whether the SNMP entity is permitted to
                     generate authenticationFailure traps.  The value of this
                     object overrides any configuration information; as such,
                     it provides a means whereby all authenticationFailure
                     traps may be disabled.
                     
                     Note that it is strongly recommended that this object
                     be stored in non-volatile memory so that it remains
                     constant across re-initializations of the network
                     management system.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>true</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.30"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:simpleType>
                  <xs:restriction base="xs:string">
                     <xs:enumeration value="enabled">
                        <xs:annotation>
                           <xs:appinfo>
                              <ncx:value>1</ncx:value>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:enumeration>
                     <xs:enumeration value="disabled">
                        <xs:annotation>
                           <xs:appinfo>
                              <ncx:value>2</ncx:value>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:enumeration>
                  </xs:restriction>
               </xs:simpleType>
            </xs:element>
            <xs:element name="snmpSilentDrops" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of Confirmed Class PDUs (such as
                     GetRequest-PDUs, GetNextRequest-PDUs,
                     GetBulkRequest-PDUs, SetRequest-PDUs, and
                     InformRequest-PDUs) delivered to the SNMP entity which
                     were silently dropped because the size of a reply
                     containing an alternate Response Class PDU (such as a
                     Response-PDU) with an empty variable-bindings field
                     was greater than either a local constraint or the
                     maximum message size associated with the originator of
                     the request.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.31"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpProxyDrops" type="yang:counter32"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The total number of Confirmed Class PDUs
                     (such as GetRequest-PDUs, GetNextRequest-PDUs,
                     GetBulkRequest-PDUs, SetRequest-PDUs, and
                     InformRequest-PDUs) delivered to the SNMP entity which
                     were silently dropped because the transmission of
                     the (possibly translated) message to a proxy target
                     failed in a manner (other than a time-out) such that
                     no Response Class PDU (such as a Response-PDU) could
                     be returned.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.2.1.11.32"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="__.snmp.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="snmpTrap">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.6.3.1.1.4"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="snmpTrapOID"
               type="yang:object-identifier" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The authoritative identification of the notification
                     currently being sent.  This variable occurs as
                     the second varbind in every SNMPv2-Trap-PDU and
                     InformRequest-PDU.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.6.3.1.1.4.1"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="snmpTrapEnterprise"
               type="yang:object-identifier" minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     The authoritative identification of the enterprise
                     associated with the trap currently being sent.  When an
                     SNMP proxy agent is mapping an RFC1157 Trap-PDU
                     into a SNMPv2-Trap-PDU, this variable occurs as the
                     last varbind.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>false</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.6.3.1.1.4.3"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="__.snmpTrap.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="snmpSet">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.6.3.1.1.6"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="snmpSetSerialNo" type="smiv2:TestAndIncr"
               minOccurs="0">
               <xs:annotation>
                  <xs:documentation>
                     An advisory lock used to allow several cooperating
                     command generator applications to coordinate their
                     use of the SNMP set operation.
                     
                     This object is used for coarse-grain coordination.
                     To achieve fine-grain coordination, one or more similar
                     objects might be defined within each MIB group, as
                     appropriate.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:config>true</ncx:config>
                     <smi:oid  smi:oid="1.3.6.1.6.3.1.1.6.1"/>
                  </xs:appinfo>
               </xs:annotation>
            </xs:element>
            <xs:element name="__.snmpSet.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="coldStart"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            A coldStart trap signifies that the SNMP entity,
            supporting a notification originator application, is
            reinitializing itself and that its configuration may
            have been altered.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.6.3.1.1.5.1"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="__.coldStart.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:element name="warmStart"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            A warmStart trap signifies that the SNMP entity,
            supporting a notification originator application,
            is reinitializing itself such that its configuration
            is unaltered.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.6.3.1.1.5.2"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="__.warmStart.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:element name="authenticationFailure"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            An authenticationFailure trap signifies that the SNMP
            entity has received a protocol message that is not
            properly authenticated.  While all implementations
            of SNMP entities MAY be capable of generating this
            trap, the snmpEnableAuthenTraps object indicates
            whether this trap will be generated.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.6.3.1.1.5.5"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="__.authenticationFailure.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

</xs:schema>
