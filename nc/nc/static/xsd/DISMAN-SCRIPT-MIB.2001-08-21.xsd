<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns="urn:ietf:params:xml:ns:yang:smiv2:DISMAN-SCRIPT-MIB"
   targetNamespace="urn:ietf:params:xml:ns:yang:smiv2:DISMAN-SCRIPT-MIB"
   elementFormDefault="qualified" attributeFormDefault="unqualified"
   xml:lang="en" version="2001-08-21"
   xmlns:ncx="http://netconfcentral.com/ncx"
   xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0"
   xmlns:ncn="urn:ietf:params:xml:ns:netconf:notification:1.0"
   xmlns:snmp-framework="urn:ietf:params:xml:ns:yang:smiv2:SNMP-FRAMEWORK-MIB"
   xmlns:smiv2="urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-TC"
   xmlns:smi="urn:ietf:params:xml:ns:yang:yang-smi"
   xmlns:yang="urn:ietf:params:xml:ns:yang:yang-types">
   <xs:annotation>
      <xs:documentation>
         Converted from YANG file 'DISMAN-SCRIPT-MIB.yang' by yangdump version 0.9.4
         
         Module: DISMAN-SCRIPT-MIB
         Organization: IETF Distributed Management Working Group
         Version: 2001-08-21
         Contact: WG EMail:  disman@dorothy.bmc.com
         Subscribe: disman-request@dorothy.bmc.com
         
         Chair:     Randy Presuhn
         	   BMC Software, Inc.
         
         Postal:    Office 1-3141
         	   2141 North First Street
         	   San Jose,  California 95131
         	   USA
         EMail:     rpresuhn@bmc.com
         Phone:     +1 408 546-1006
         
         Editor:    David B. Levi
         	   Nortel Networks
         Postal:    4401 Great America Parkway
         	   Santa Clara, CA 95052-8185
         	   USA
         EMail:     dlevi@nortelnetworks.com
         Phone:     +1 423 686 0432
         
         Editor:    Juergen Schoenwaelder
         	   TU Braunschweig
         Postal:    Bueltenweg 74/75
         	   38106 Braunschweig
         	   Germany
         EMail:     schoenw@ibr.cs.tu-bs.de
         Phone:     +49 531 391-3283
      </xs:documentation>
      <xs:documentation>
         This MIB module defines a set of objects that allow to
         delegate management scripts to distributed managers.
      </xs:documentation>
      <xs:appinfo>
         <ncx:source>
            /home/andy/modules/ietf/DISMAN-SCRIPT-MIB.yang
         </ncx:source>
         <ncx:organization>
            IETF Distributed Management Working Group
         </ncx:organization>
         <ncx:contact>
            WG EMail:  disman@dorothy.bmc.com
            Subscribe: disman-request@dorothy.bmc.com
            
            Chair:     Randy Presuhn
            	   BMC Software, Inc.
            
            Postal:    Office 1-3141
            	   2141 North First Street
            	   San Jose,  California 95131
            	   USA
            EMail:     rpresuhn@bmc.com
            Phone:     +1 408 546-1006
            
            Editor:    David B. Levi
            	   Nortel Networks
            Postal:    4401 Great America Parkway
            	   Santa Clara, CA 95052-8185
            	   USA
            EMail:     dlevi@nortelnetworks.com
            Phone:     +1 423 686 0432
            
            Editor:    Juergen Schoenwaelder
            	   TU Braunschweig
            Postal:    Bueltenweg 74/75
            	   38106 Braunschweig
            	   Germany
            EMail:     schoenw@ibr.cs.tu-bs.de
            Phone:     +49 531 391-3283
         </ncx:contact>
      </xs:appinfo>
      <xs:appinfo>
         <ncx:revision>
            <ncx:version>2001-08-21</ncx:version>
            <ncx:description>
               Revised version, published as RFC 3165.
               
               This revision introduces several new objects: smScriptError,
               smScriptLastChange, smLaunchError, smLaunchLastChange,
               smLaunchRowExpireTime, smRunResultTime, and smRunErrorTime.
               
               The following existing objects were updated: the maximum
               value of smRunLifeTime now disables the timer, an
               autostart value was added to the smLaunchAdminStatus
               object, and a new expired state was added to the
               smLaunchOperStatus object.
               
               A new smScriptException notification has been added to
               support runtime error notifications.
               
               Created new conformance and compliance statements that
               take care of the new objects and notifications.
               
               Clarifications have been added in several places to remove
               ambiguities or contradictions that were discovered and
               reported by implementors.
            </ncx:description>
         </ncx:revision>
         <ncx:revision>
            <ncx:version>1999-02-22</ncx:version>
            <ncx:description>
               Initial version, published as RFC 2592.
            </ncx:description>
         </ncx:revision>
      </xs:appinfo>
   </xs:annotation>

   <xs:element name="smObjects">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.64.1"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="smLangEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     An entry describing a particular language.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.64.1.1.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="smLangIndex">
                        <xs:annotation>
                           <xs:documentation>
                              The locally arbitrary, but unique identifier associated
                              with this language entry.
                              
                              The value is expected to remain constant at least from one
                              re-initialization of the entity's network management system
                              to the next re-initialization.
                              
                              Note that the data type and the range of this object must
                              be consistent with the definition of smScriptLanguage.
                           </xs:documentation>
                           <xs:appinfo>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.1.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:int">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLangLanguage"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The globally unique identification of the language.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.1.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLangVersion" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The version number of the language. The zero-length string
                              shall be used if the language does not have a version
                              number.
                              
                              It is suggested that the version number consist of one or
                              more decimal numbers separated by dots, where the first
                              number is called the major version number.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.1.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLangVendor"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              An object identifier which identifies the vendor who
                              provides the implementation of the language. This object
                              identifier SHALL point to the object identifier directly
                              below the enterprise object identifier {1 3 6 1 4 1}
                              allocated for the vendor. The value must be the object
                              identifier {0 0} if the vendor is not known.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.1.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLangRevision" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The version number of the language implementation.
                              The value of this object must be an empty string if
                              version number of the implementation is unknown.
                              
                              It is suggested that the value consist of one or more
                              decimal numbers separated by dots, where the first
                              number is called the major version number.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.1.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLangDescr"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A textual description of the language.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.1.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="__.smObjects.smLangEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="smLangEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="smLangIndex"/>
               </xs:key>
            </xs:element>
            <xs:element name="smExtsnEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     An entry describing a particular language extension.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.64.1.2.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="smLangIndex" type="xs:string">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated leafref leaf.
                           </xs:documentation>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smExtsnIndex">
                        <xs:annotation>
                           <xs:documentation>
                              The locally arbitrary, but unique identifier associated
                              with this language extension entry.
                              
                              The value is expected to remain constant at least from one
                              re-initialization of the entity's network management system
                              to the next re-initialization.
                           </xs:documentation>
                           <xs:appinfo>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.2.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:int">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smExtsnExtension"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The globally unique identification of the language
                              extension.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.2.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smExtsnVersion" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The version number of the language extension.
                              It is suggested that the version number consist of one or
                              more decimal numbers separated by dots, where the first
                              number is called the major version number.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.2.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smExtsnVendor"
                        type="yang:object-identifier" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              An object identifier which identifies the vendor who
                              provides the implementation of the extension. The
                              object identifier value should point to the OID node
                              directly below the enterprise OID {1 3 6 1 4 1}
                              allocated for the vendor. The value must by the object
                              identifier {0 0} if the vendor is not known.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.2.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smExtsnRevision" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The version number of the extension implementation.
                              The value of this object must be an empty string if
                              version number of the implementation is unknown.
                              
                              It is suggested that the value consist of one or more
                              decimal numbers separated by dots, where the first
                              number is called the major version number.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.2.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smExtsnDescr"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A textual description of the language extension.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.2.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="__.smObjects.smExtsnEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="smExtsnEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="smLangIndex"/>
                  <xs:field xpath="smExtsnIndex"/>
               </xs:key>
            </xs:element>
            <xs:element name="__.smObjects.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="smScriptObjects">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="smScriptEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     An entry describing a particular script. Every script that
                     is stored in non-volatile memory is required to appear in
                     this script table.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="smScriptOwner">
                        <xs:annotation>
                           <xs:documentation>
                              The manager who owns this row in the smScriptTable.
                           </xs:documentation>
                           <xs:appinfo>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smScriptName">
                        <xs:annotation>
                           <xs:documentation>
                              The locally-unique, administratively assigned name for this
                              script. This object allows an smScriptOwner to have multiple
                              entries in the smScriptTable.
                              
                              This value of this object may be used to derive the name
                              (e.g. a file name) which is used by the Script MIB
                              implementation to access the script in non-volatile
                              storage. The details of this mapping are implementation
                              specific. However, the mapping needs to ensure that scripts
                              created by different owners with the same script name do not
                              map to the same name in non-volatile storage.
                           </xs:documentation>
                           <xs:appinfo>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smScriptDescr"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A description of the purpose of the script.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smScriptLanguage" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object type identifies an entry in the
                              smLangTable which is used to execute this script.
                              The special value 0 may be used by hard-wired scripts
                              that can not be modified and that are executed by
                              internal functions.
                              
                              Set requests to change this object are invalid if the
                              value of smScriptOperStatus is `enabled' or `compiling'
                              and will result in an inconsistentValue error.
                              
                              Note that the data type and the range of this object must
                              be consistent with the definition of smLangIndex.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:int">
                              <xs:minInclusive value="0"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smScriptSource"
                        type="smiv2:DisplayString" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object either contains a reference to the script
                              source or an empty string. A reference must be given
                              in the form of a Uniform Resource Locator (URL) as
                              defined in RFC 2396. The allowed character sets and the
                              encoding rules defined in RFC 2396 section 2 apply.
                              
                              When the smScriptAdminStatus object is set to `enabled',
                              the Script MIB implementation will `pull' the script
                              source from the URL contained in this object if the URL
                              is not empty.
                              
                              An empty URL indicates that the script source is loaded
                              from local storage. The script is read from the smCodeTable
                              if the value of smScriptStorageType is volatile. Otherwise,
                              the script is read from non-volatile storage.
                              
                              Note: This document does not mandate implementation of any
                              specific URL scheme. An attempt to load a script from a
                              nonsupported URL scheme will cause the smScriptOperStatus
                              to report an `unknownProtocol' error.
                              
                              Set requests to change this object are invalid if the
                              value of smScriptOperStatus is `enabled', `editing',
                              `retrieving' or `compiling' and will result in an
                              inconsistentValue error.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smScriptAdminStatus"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object indicates the desired status of
                              the script. See the definition of smScriptOperStatus for
                              a description of the values.
                              
                              When the smScriptAdminStatus object is set to `enabled' and
                              the smScriptOperStatus is `disabled' or one of the error
                              states, the Script MIB implementation will `pull' the script
                              source from the URL contained in the smScriptSource object
                              if the URL is not empty.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="disabled"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="enabled">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="disabled">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="editing">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smScriptOperStatus"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The actual status of the script in the runtime system. The
                              value of this object is only meaningful when the value of
                              the smScriptRowStatus object is `active'.
                              
                              The smScriptOperStatus object may have the following values:
                              
                              - `enabled' indicates that the script is available and can
                                 be started by a launch table entry.
                              
                              - `disabled' indicates that the script can not be used.
                              
                              - `editing' indicates that the script can be modified in the
                                smCodeTable.
                              
                              - `retrieving' indicates that the script is currently being
                                loaded from non-volatile storage or a remote system.
                              
                              - `compiling' indicates that the script is currently being
                                compiled by the runtime system.
                              
                              - `noSuchScript' indicates that the script does not exist
                                at the smScriptSource.
                              
                              - `accessDenied' indicates that the script can not be loaded
                                from the smScriptSource due to a lack of permissions.
                              
                              - `wrongLanguage' indicates that the script can not be
                                 loaded from the smScriptSource because of a language
                                 mismatch.
                              
                              - `wrongVersion' indicates that the script can not be loaded
                                from the smScriptSource because of a language version
                                mismatch.
                              
                              - `compilationFailed' indicates that the compilation failed.
                              
                              - `noResourcesLeft' indicates that the runtime system does
                                not have enough resources to load the script.
                              
                              - `unknownProtocol' indicates that the script could not be
                                loaded from the smScriptSource because the requested
                                protocol is not supported.
                              
                              - `protocolFailure' indicates that the script could not be
                                loaded from the smScriptSource because of a protocol
                                failure.
                              
                              - `genericError' indicates that the script could not be
                              
                                loaded due to an error condition not listed above.
                              
                              The `retrieving' and `compiling' states are transient states
                              which will either lead to one of the error states or the
                              `enabled' state. The `disabled' and `editing' states are
                              administrative states which are only reached by explicit
                              management operations.
                              
                              All launch table entries that refer to this script table
                              entry shall have an smLaunchOperStatus value of `disabled'
                              when the value of this object is not `enabled'.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default  smi:default="disabled"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.7"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="enabled">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="disabled">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="editing">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="retrieving">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>4</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="compiling">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>5</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="noSuchScript">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>6</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="accessDenied">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>7</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="wrongLanguage">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>8</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="wrongVersion">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>9</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="compilationFailed">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>10</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="noResourcesLeft">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>11</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="unknownProtocol">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>12</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="protocolFailure">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>13</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="genericError">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>14</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smScriptStorageType"
                        type="smiv2:StorageType" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object defines whether this row and the script
                              controlled by this row are kept in volatile storage and
                              lost upon reboot or if this row is backed up by
                              non-volatile or permanent storage.
                              
                              The storage type of this row always complies with the value
                              of this entry if the value of the corresponding RowStatus
                              object is `active'.
                              
                              However, the storage type of the script controlled by this
                              row may be different, if the value of this entry is
                              `non-volatile'. The script controlled by this row is written
                              into local non-volatile storage if the following condition
                              becomes true:
                              
                              (a) the URL contained in the smScriptSource object is empty
                                  and
                              (b) the smScriptStorageType is `nonVolatile'
                                  and
                              (c) the smScriptOperStatus is `enabled'
                              
                              Setting this object to `volatile' removes a script from
                              non-volatile storage if the script controlled by this row
                              has been in non-volatile storage before. Attempts to set
                              this object to permanent will always fail with an
                              inconsistentValue error.
                              
                              The value of smScriptStorageType is only meaningful if the
                              value of the corresponding RowStatus object is `active'.
                              
                              If smScriptStorageType has the value permanent(4), then all
                              objects whose MAX-ACCESS value is read-create must be
                              writable, with the exception of the smScriptStorageType and
                              smScriptRowStatus objects, which shall be read-only.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="volatile"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.8"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smScriptRowStatus"
                        type="smiv2:RowStatus" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A control that allows entries to be added and removed from
                              this table.
                              
                              Changing the smScriptRowStatus from `active' to
                              `notInService' will remove the associated script from the
                              runtime system.
                              
                              Deleting conceptual rows from this table may affect the
                              deletion of other resources associated with this row. For
                              example, a script stored in non-volatile storage may be
                              removed from non-volatile storage.
                              
                              An entry may not exist in the `active' state unless all
                              required objects in the entry have appropriate values. Rows
                              that are not complete or not in service are not known by the
                              script runtime system.
                              
                              Attempts to `destroy' a row or to set a row `notInService'
                              while the smScriptOperStatus is `enabled' will result in an
                              inconsistentValue error.
                              
                              Attempts to `destroy' a row or to set a row `notInService'
                              where the value of the smScriptStorageType object is
                              `permanent' or `readOnly' will result in an
                              inconsistentValue error.
                              
                              The value of this object has no effect on whether other
                              objects in this conceptual row can be modified.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.9"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smScriptError"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object contains a descriptive error message if the
                              
                              transition into the operational status `enabled' failed.
                              Implementations must reset the error message to a
                              zero-length string when a new attempt to change the
                              script status to `enabled' is started.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.10"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smScriptLastChange"
                        type="smiv2:DateAndTime" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The date and time when this script table entry was last
                              modified. The value '0000000000000000'H is returned if
                              the script table entry has not yet been modified.
                              
                              Note that the resetting of smScriptError is not considered
                              a change of the script table entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default 
                                 smi:default="0x0000000000000000"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.1.1.11"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="__.smScriptObjects.smScriptEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="smScriptEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="smScriptOwner"/>
                  <xs:field xpath="smScriptName"/>
               </xs:key>
            </xs:element>
            <xs:element name="smCodeEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     An entry describing a particular fragment of a script.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.2.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="smScriptOwner" type="xs:string">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated leafref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smScriptName" type="xs:string">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated leafref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smCodeIndex">
                        <xs:annotation>
                           <xs:documentation>
                              The index value identifying this code fragment.
                           </xs:documentation>
                           <xs:appinfo>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.2.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:unsignedInt">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smCodeText" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The code that makes up a fragment of a script. The format
                              of this code fragment depends on the script language which
                              is identified by the associated smScriptLanguage object.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.2.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:base64Binary">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="1024"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smCodeRowStatus"
                        type="smiv2:RowStatus" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A control that allows entries to be added and removed from
                              this table.
                              
                              The value of this object has no effect on whether other
                              objects in this conceptual row can be modified.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.3.2.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="__.smScriptObjects.smCodeEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="smCodeEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="smScriptOwner"/>
                  <xs:field xpath="smScriptName"/>
                  <xs:field xpath="smCodeIndex"/>
               </xs:key>
            </xs:element>
            <xs:element name="__.smScriptObjects.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="smRunObjects">
      <xs:annotation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="smLaunchEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     An entry describing a particular executable script.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="smLaunchOwner">
                        <xs:annotation>
                           <xs:documentation>
                              The manager who owns this row in the smLaunchTable. Every
                              instance of a running script started from a particular entry
                              in the smLaunchTable (i.e. entries in the smRunTable) will
                              be owned by the same smLaunchOwner used to index the entry
                              in the smLaunchTable. This owner is not necessarily the same
                              as the owner of the script itself (smLaunchScriptOwner).
                           </xs:documentation>
                           <xs:appinfo>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchName">
                        <xs:annotation>
                           <xs:documentation>
                              The locally-unique, administratively assigned name for this
                              launch table entry. This object allows an smLaunchOwner to
                              have multiple entries in the smLaunchTable. The smLaunchName
                              is an arbitrary name that must be different from any other
                              smLaunchTable entries with the same smLaunchOwner but can be
                              the same as other entries in the smLaunchTable with
                              different smLaunchOwner values. Note that the value of
                              smLaunchName is not related in any way to the name of the
                              script being launched.
                           </xs:documentation>
                           <xs:appinfo>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchScriptOwner"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object in combination with the value of
                              smLaunchScriptName identifies the script that can be
                              launched from this smLaunchTable entry. Attempts to write
                              this object will fail with an inconsistentValue error if
                              the value of smLaunchOperStatus is `enabled'.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchScriptName"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object in combination with the value of
                              the smLaunchScriptOwner identifies the script that can be
                              launched from this smLaunchTable entry. The zero-length
                              string may be used to point to a non-existing script.
                              
                              Attempts to write this object will fail with an
                              inconsistentValue error if the value of smLaunchOperStatus
                              is `enabled'.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction
                              base="snmp-framework:SnmpAdminString">
                              <xs:maxLength value="32"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchArgument"
                        type="xs:base64Binary" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The argument supplied to the script. When a script is
                              invoked, the value of this object is used to initialize
                              the smRunArgument object.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLaunchMaxRunning"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The maximum number of concurrently running scripts that may
                              be invoked from this entry in the smLaunchTable. Lowering
                              the current value of this object does not affect any scripts
                              that are already executing.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="1"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:unsignedInt">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchMaxCompleted"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The maximum number of finished scripts invoked from this
                              entry in the smLaunchTable allowed to be retained in the
                              smRunTable. Whenever the value of this object is changed
                              and whenever a script terminates, entries in the smRunTable
                              are deleted if necessary until the number of completed
                              scripts is smaller than the value of this object. Scripts
                              whose smRunEndTime value indicates the oldest completion
                              time are deleted first.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="1"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.7"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:unsignedInt">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchLifeTime"
                        type="smiv2:TimeInterval" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The default maximum amount of time a script launched
                              from this entry may run. The value of this object is used
                              to initialize the smRunLifeTime object when a script is
                              launched. Changing the value of an smLaunchLifeTime
                              instance does not affect scripts previously launched from
                              
                              this entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <ncx:units>centi-seconds</ncx:units>
                              <smi:default  smi:default="360000"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.8"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLaunchExpireTime"
                        type="smiv2:TimeInterval" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The default maximum amount of time information about a
                              script launched from this entry is kept in the smRunTable
                              after the script has completed execution.  The value of
                              this object is used to initialize the smRunExpireTime
                              object when a script is launched. Changing the value of an
                              smLaunchExpireTime instance does not affect scripts
                              previously launched from this entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <ncx:units>centi-seconds</ncx:units>
                              <smi:default  smi:default="360000"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.9"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLaunchStart" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object is used to start the execution of scripts.
                              When retrieved, the value will be the value of smRunIndex
                              for the last script that started execution by manipulating
                              this object. The value will be zero if no script started
                              execution yet.
                              
                              A script is started by setting this object to an unused
                              smRunIndex value. A new row in the smRunTable will be
                              created which is indexed by the value supplied by the
                              set-request in addition to the value of smLaunchOwner and
                              smLaunchName. An unused value can be obtained by reading
                              the smLaunchRunIndexNext object.
                              
                              Setting this object to the special value 0 will start
                              the script with a self-generated smRunIndex value. The
                              consequence is that the script invoker has no reliable
                              way to determine the smRunIndex value for this script
                              invocation and that the invoker has therefore no way
                              to obtain the results from this script invocation. The
                              special value 0 is however useful for scheduled script
                              invocations.
                              
                              If this object is set, the following checks must be
                              
                              performed:
                              
                              1) The value of the smLaunchOperStatus object in this
                                 entry of the smLaunchTable must be `enabled'.
                              2) The values of smLaunchScriptOwner and
                                 smLaunchScriptName of this row must identify an
                                 existing entry in the smScriptTable.
                              3) The value of smScriptOperStatus of this entry must
                                 be `enabled'.
                              4) The principal performing the set operation must have
                                 read access to the script. This must be checked by
                                 calling the isAccessAllowed abstract service interface
                                 defined in RFC 2271 on the row in the smScriptTable
                                 identified by smLaunchScriptOwner and smLaunchScriptName.
                                 The isAccessAllowed abstract service interface must be
                                 called on all columnar objects in the smScriptTable with
                                 a MAX-ACCESS value different than `not-accessible'. The
                                 test fails as soon as a call indicates that access is
                                 not allowed.
                              5) If the value provided by the set operation is not 0,
                                 a check must be made that the value is currently not
                                 in use. Otherwise, if the value provided by the set
                                 operation is 0, a suitable unused value must be
                                 generated.
                              6) The number of currently executing scripts invoked
                                 from this smLaunchTable entry must be less than
                                 smLaunchMaxRunning.
                              
                              Attempts to start a script will fail with an
                              inconsistentValue error if one of the checks described
                              above fails.
                              
                              Otherwise, if all checks have been passed, a new entry
                              in the smRunTable will be created indexed by smLaunchOwner,
                              smLaunchName and the new value for smRunIndex. The value
                              of smLaunchArgument will be copied into smRunArgument,
                              the value of smLaunchLifeTime will be copied to
                              smRunLifeTime, and the value of smLaunchExpireTime
                              will be copied to smRunExpireTime.
                              
                              The smRunStartTime will be set to the current time and
                              the smRunState will be set to `initializing' before the
                              script execution is initiated in the appropriate runtime
                              system.
                              
                              Note that the data type and the range of this object must
                              be consistent with the smRunIndex object. Since this
                              object might be written from the scheduling MIB, the
                              
                              data type Integer32 rather than Unsigned32 is used.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="0"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.10"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:int">
                              <xs:minInclusive value="0"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchControl" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object is used to request a state change for all
                              running scripts in the smRunTable that were started from
                              this row in the smLaunchTable.
                              
                              Setting this object to abort(1), suspend(2) or resume(3)
                              will set the smRunControl object of all applicable rows
                              in the smRunTable to abort(1), suspend(2) or resume(3)
                              respectively. The phrase `applicable rows' means the set of
                              rows which were created from this entry in the smLaunchTable
                              and whose value of smRunState allows the corresponding
                              state change as described in the definition of the
                              smRunControl object. Setting this object to nop(4) has no
                              effect.
                              
                              Attempts to set this object lead to an inconsistentValue
                              error only if all implicated sets on all the applicable
                              rows lead to inconsistentValue errors. It is not allowed
                              to return an inconsistentValue error if at least one state
                              change on one of the applicable rows was successful.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="nop"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.11"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="abort">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="suspend">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="resume">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="nop">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>4</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchAdminStatus"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object indicates the desired status of
                              this launch table entry. The values enabled(1) and
                              autostart(3) both indicate that the launch table entry
                              
                              should transition into the operational enabled(1) state as
                              soon as the associated script table entry is enabled(1).
                              
                              The value autostart(3) further indicates that the script
                              is started automatically by conceptually writing the
                              value 0 into the associated smLaunchStart object during
                              the transition from the `disabled' into the `enabled'
                              operational state. This is useful for scripts that are
                              to be launched on system start-up.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="disabled"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.12"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="enabled">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="disabled">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="autostart">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchOperStatus"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object indicates the actual status of
                              this launch table entry.  The smLaunchOperStatus object
                              may have the following values:
                              
                              - `enabled' indicates that the launch table entry is
                                available and can be used to start scripts.
                              
                              - `disabled' indicates that the launch table entry can
                                not be used to start scripts.
                              
                              - `expired' indicates that the launch table entry can
                                not be used to start scripts and will disappear as
                                soon as all smRunTable entries associated with this
                                launch table entry have disappeared.
                              
                              The value `enabled' requires that the smLaunchRowStatus
                              object is active. The value `disabled' requires that there
                              are no entries in the smRunTable associated with this
                              smLaunchTable entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default  smi:default="disabled"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.13"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="enabled">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="disabled">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="expired">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchRunIndexNext"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This variable is used for creating rows in the smRunTable.
                              The value of this variable is a currently unused value
                              for smRunIndex, which can be written into the smLaunchStart
                              object associated with this row to launch a script.
                              
                              The value returned when reading this variable must be unique
                              for the smLaunchOwner and smLaunchName associated with this
                              row. Subsequent attempts to read this variable must return
                              different values.
                              
                              This variable will return the special value 0 if no new rows
                              can be created.
                              
                              Note that the data type and the range of this object must be
                              consistent with the definition of smRunIndex.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.14"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:int">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smLaunchStorageType"
                        type="smiv2:StorageType" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object defines if this row is kept in volatile storage
                              and lost upon reboot or if this row is backed up by stable
                              storage.
                              
                              The value of smLaunchStorageType is only meaningful if the
                              value of the corresponding RowStatus object is active.
                              
                              If smLaunchStorageType has the value permanent(4), then all
                              objects whose MAX-ACCESS value is read-create must be
                              writable, with the exception of the smLaunchStorageType and
                              smLaunchRowStatus objects, which shall be read-only.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="volatile"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.15"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLaunchRowStatus"
                        type="smiv2:RowStatus" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              A control that allows entries to be added and removed from
                              this table.
                              
                              Attempts to `destroy' a row or to set a row `notInService'
                              while the smLaunchOperStatus is `enabled' will result in
                              an inconsistentValue error.
                              
                              Attempts to `destroy' a row or to set a row `notInService'
                              where the value of the smLaunchStorageType object is
                              `permanent' or `readOnly' will result in an
                              inconsistentValue error.
                              
                              The value of this object has no effect on whether other
                              objects in this conceptual row can be modified.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.16"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLaunchError"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object contains a descriptive error message if an
                              attempt to launch a script fails. Implementations must reset
                              the error message to a zero-length string when a new attempt
                              to launch a script is started.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.17"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLaunchLastChange"
                        type="smiv2:DateAndTime" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The date and time when this launch table entry was last
                              modified. The value '0000000000000000'H is returned if
                              the launch table entry has not yet been modified.
                              
                              Note that a change of smLaunchStart, smLaunchControl,
                              smLaunchRunIndexNext, smLaunchRowExpireTime, or the
                              resetting of smLaunchError is not considered a change
                              of this launch table entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default 
                                 smi:default="0x0000000000000000"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.18"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLaunchRowExpireTime"
                        type="smiv2:TimeInterval" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object specifies how long this row remains
                              in the `enabled' or `disabled' operational state. The value
                              reported by this object ticks backwards. When the value
                              reaches 0, it stops ticking backward and the row is
                              deleted if there are no smRunTable entries associated with
                              
                              this smLaunchTable entry. Otherwise, the smLaunchOperStatus
                              changes to `expired' and the row deletion is deferred
                              until there are no smRunTable entries associated with this
                              smLaunchTable entry.
                              
                              The smLaunchRowExpireTime will not tick backwards if it is
                              set to its maximum value (2147483647). In other words,
                              setting this object to its maximum value turns the timer
                              off.
                              
                              The value of this object may be set in order to increase
                              or reduce the remaining time that the launch table entry
                              may be used. Setting the value to 0 will cause an immediate
                              row deletion or transition into the `expired' operational
                              state.
                              
                              It is not possible to set this object while the operational
                              status is `expired'. Attempts to modify this object while
                              the operational status is `expired' leads to an
                              inconsistentValue error.
                              
                              Note that the timer ticks backwards independent of the
                              operational state of the launch table entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <ncx:units>centi-seconds</ncx:units>
                              <smi:default  smi:default="2147483647"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.1.1.19"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element
                        name="__.smRunObjects.smLaunchEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="smLaunchEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="smLaunchOwner"/>
                  <xs:field xpath="smLaunchName"/>
               </xs:key>
            </xs:element>
            <xs:element name="smRunEntry" minOccurs="0"
               maxOccurs="unbounded">
               <xs:annotation>
                  <xs:documentation>
                     An entry describing a particular running or finished
                     script.
                  </xs:documentation>
                  <xs:appinfo>
                     <ncx:ordered-by>system</ncx:ordered-by>
                     <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1"/>
                  </xs:appinfo>
               </xs:annotation>
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="smLaunchOwner" type="xs:string">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated leafref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smLaunchName" type="xs:string">
                        <xs:annotation>
                           <xs:documentation>
                              Automagically generated leafref leaf.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smRunIndex">
                        <xs:annotation>
                           <xs:documentation>
                              The locally arbitrary, but unique identifier associated
                              with this running or finished script. This value must be
                              unique for all rows in the smRunTable with the same
                              smLaunchOwner and smLaunchName.
                              
                              Note that the data type and the range of this object must
                              be consistent with the definition of smLaunchRunIndexNext
                              and smLaunchStart.
                           </xs:documentation>
                           <xs:appinfo>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.1"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:int">
                              <xs:minInclusive value="1"/>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smRunArgument"
                        type="xs:base64Binary" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The argument supplied to the script when it started.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.2"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smRunStartTime"
                        type="smiv2:DateAndTime" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The date and time when the execution started. The value
                              '0000000000000000'H is returned if the script has not
                              started yet.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default 
                                 smi:default="0x0000000000000000"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.3"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smRunEndTime"
                        type="smiv2:DateAndTime" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The date and time when the execution terminated. The value
                              '0000000000000000'H is returned if the script has not
                              terminated yet.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default 
                                 smi:default="0x0000000000000000"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.4"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smRunLifeTime"
                        type="smiv2:TimeInterval" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object specifies how long the script can execute.
                              This object returns the remaining time that the script
                              may run. The object is initialized with the value of the
                              associated smLaunchLifeTime object and ticks backwards.
                              The script is aborted immediately when the value reaches 0.
                              
                              The value of this object may be set in order to increase or
                              reduce the remaining time that the script may run. Setting
                              this value to 0 will abort script execution immediately,
                              and, if the value of smRunExpireTime is also 0, will remove
                              this entry from the smRunTable once it has terminated.
                              
                              If smRunLifeTime is set to its maximum value (2147483647),
                              either by a set operation or by its initialization from the
                              smLaunchLifeTime object, then it will not tick backwards.
                              A running script with a maximum smRunLifeTime value will
                              thus never be terminated with a `lifeTimeExceeded' exit
                              code.
                              
                              The value of smRunLifeTime reflects the real-time execution
                              time as seen by the outside world. The value of this object
                              will always be 0 for a script that finished execution, that
                              is smRunState has the value `terminated'.
                              
                              The value of smRunLifeTime does not change while a script
                              is suspended, that is smRunState has the value `suspended'.
                              Note that this does not affect set operations. It is legal
                              to modify smRunLifeTime via set operations while a script
                              is suspended.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <ncx:units>centi-seconds</ncx:units>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.5"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smRunExpireTime"
                        type="smiv2:TimeInterval" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object specifies how long this row can
                              exist in the smRunTable after the script has terminated.
                              This object returns the remaining time that the row may
                              exist before it is aged out. The object is initialized with
                              the value of the associated smLaunchExpireTime object and
                              ticks backwards. The entry in the smRunTable is destroyed
                              when the value reaches 0 and the smRunState has the value
                              `terminated'.
                              
                              The value of this object may be set in order to increase or
                              reduce the remaining time that the row may exist.  Setting
                              the value to 0 will destroy this entry as soon as the
                              smRunState has the value `terminated'.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <ncx:units>centi-seconds</ncx:units>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.6"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smRunExitCode" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object indicates the reason why a
                              script finished execution. The smRunExitCode code may have
                              one of the following values:
                              
                              - `noError', which indicates that the script completed
                                 successfully without errors;
                              
                              - `halted', which indicates that the script was halted
                                 by a request from an authorized manager;
                              
                              - `lifeTimeExceeded', which indicates that the script
                                 exited because a time limit was exceeded;
                              
                              - `noResourcesLeft', which indicates that the script
                                 exited because it ran out of resources (e.g. memory);
                              
                              - `languageError', which indicates that the script exited
                                 because of a language error (e.g. a syntax error in an
                                 interpreted language);
                              
                              - `runtimeError', which indicates that the script exited
                                 due to a runtime error (e.g. a division by zero);
                              
                              - `invalidArgument', which indicates that the script could
                                 not be run because of invalid script arguments;
                              
                              - `securityViolation', which indicates that the script
                                 exited due to a security violation;
                              
                              - `genericError', which indicates that the script exited
                                 for an unspecified reason.
                              
                              If the script has not yet begun running, or is currently
                              running, the value will be `noError'.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default  smi:default="noError"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.7"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="noError">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="halted">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="lifeTimeExceeded">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="noResourcesLeft">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>4</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="languageError">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>5</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="runtimeError">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>6</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="invalidArgument">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>7</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="securityViolation">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>8</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="genericError">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>9</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smRunResult"
                        type="xs:base64Binary" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The result value produced by the running script. Note that
                              the result may change while the script is executing.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.8"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smRunControl" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object indicates the desired status of the
                              script execution defined by this row.
                              
                              Setting this object to `abort' will abort execution if the
                              
                              value of smRunState is `initializing', `executing',
                              `suspending', `suspended' or `resuming'. Setting this object
                              to `abort' when the value of smRunState is `aborting' or
                              `terminated', or if the implementation can determine that
                              the attempt to abort the execution would fail, will result
                              in an inconsistentValue error.
                              
                              Setting this object to `suspend' will suspend execution
                              if the value of smRunState is `executing'. Setting this
                              object to `suspend' will cause an inconsistentValue error
                              if the value of smRunState is not `executing' or if the
                              implementation can determine that the attempt to suspend
                              the execution would fail.
                              
                              Setting this object to `resume' will resume execution
                              if the value of smRunState is `suspending' or
                              `suspended'. Setting this object to `resume' will cause an
                              inconsistentValue error if the value of smRunState is
                              not `suspended' or if the implementation can determine
                              that the attempt to resume the execution would fail.
                              
                              Setting this object to nop(4) has no effect.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>true</ncx:config>
                              <smi:default  smi:default="nop"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.9"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="abort">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="suspend">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="resume">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="nop">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>4</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smRunState" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The value of this object indicates the script's execution
                              state. If the script has been invoked but has not yet
                              begun execution, the value will be `initializing'. If the
                              script is running, the value will be `executing'.
                              
                              A running script which received a request to suspend
                              execution first transitions into a temporary `suspending'
                              state.  The temporary `suspending' state changes to
                              `suspended' when the script has actually been suspended. The
                              temporary `suspending' state changes back to `executing' if
                              
                              the attempt to suspend the running script fails.
                              
                              A suspended script which received a request to resume
                              execution first transitions into a temporary `resuming'
                              state. The temporary `resuming' state changes to `running'
                              when the script has actually been resumed. The temporary
                              `resuming' state changes back to `suspended' if the attempt
                              to resume the suspended script fails.
                              
                              A script which received a request to abort execution but
                              which is still running first transitions into a temporary
                              `aborting' state.
                              
                              A script which has finished its execution is `terminated'.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.10"/>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:simpleType>
                           <xs:restriction base="xs:string">
                              <xs:enumeration value="initializing">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>1</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="executing">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>2</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="suspending">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>3</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="suspended">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>4</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="resuming">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>5</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="aborting">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>6</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                              <xs:enumeration value="terminated">
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:value>7</ncx:value>
                                    </xs:appinfo>
                                 </xs:annotation>
                              </xs:enumeration>
                           </xs:restriction>
                        </xs:simpleType>
                     </xs:element>
                     <xs:element name="smRunError"
                        type="snmp-framework:SnmpAdminString"
                        minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              This object contains a descriptive error message if the
                              script startup or execution raised an abnormal condition.
                              An implementation must store a descriptive error message
                              in this object if the script exits with the smRunExitCode
                              `genericError'.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default  smi:default=""/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.11"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smRunResultTime"
                        type="smiv2:DateAndTime" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The date and time when the smRunResult was last updated.
                              The value '0000000000000000'H is returned if smRunResult
                              has not yet been updated after the creation of this
                              smRunTable entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default 
                                 smi:default="0x0000000000000000"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.12"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="smRunErrorTime"
                        type="smiv2:DateAndTime" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>
                              The date and time when the smRunError was last updated.
                              The value '0000000000000000'H is returned if smRunError
                              
                              has not yet been updated after the creation of this
                              smRunTable entry.
                           </xs:documentation>
                           <xs:appinfo>
                              <ncx:config>false</ncx:config>
                              <smi:default 
                                 smi:default="0x0000000000000000"/>
                              <smi:oid  smi:oid="1.3.6.1.2.1.64.1.4.2.1.13"/>
                           </xs:appinfo>
                        </xs:annotation>
                     </xs:element>
                     <xs:element name="__.smRunObjects.smRunEntry.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:sequence>
               </xs:complexType>
               <xs:key name="smRunEntry_Key">
                  <xs:selector xpath="."/>
                  <xs:field xpath="smLaunchOwner"/>
                  <xs:field xpath="smLaunchName"/>
                  <xs:field xpath="smRunIndex"/>
               </xs:key>
            </xs:element>
            <xs:element name="__.smRunObjects.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="smScriptAbort"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            This notification is generated whenever a running script
            terminates with an smRunExitCode unequal to `noError'.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.2.1.64.2.0.1"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="smScriptAbort-smRunExitCode">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="smLaunchOwner"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smLaunchName"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunIndex"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunExitCode"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The value of this object indicates the reason why a
                                    script finished execution. The smRunExitCode code may have
                                    one of the following values:
                                    
                                    - `noError', which indicates that the script completed
                                       successfully without errors;
                                    
                                    - `halted', which indicates that the script was halted
                                       by a request from an authorized manager;
                                    
                                    - `lifeTimeExceeded', which indicates that the script
                                       exited because a time limit was exceeded;
                                    
                                    - `noResourcesLeft', which indicates that the script
                                       exited because it ran out of resources (e.g. memory);
                                    
                                    - `languageError', which indicates that the script exited
                                       because of a language error (e.g. a syntax error in an
                                       interpreted language);
                                    
                                    - `runtimeError', which indicates that the script exited
                                       due to a runtime error (e.g. a division by zero);
                                    
                                    - `invalidArgument', which indicates that the script could
                                       not be run because of invalid script arguments;
                                    
                                    - `securityViolation', which indicates that the script
                                       exited due to a security violation;
                                    
                                    - `genericError', which indicates that the script exited
                                       for an unspecified reason.
                                    
                                    If the script has not yet begun running, or is currently
                                    running, the value will be `noError'.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:default  smi:default="noError"/>
                                    <smi:oid
                                        smi:oid="1.3.6.1.2.1.64.1.4.2.1.7"/>
                                 </xs:appinfo>
                              </xs:annotation>
                              <xs:simpleType>
                                 <xs:restriction base="xs:string">
                                    <xs:enumeration value="noError">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:value>1</ncx:value>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration value="halted">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:value>2</ncx:value>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration
                                       value="lifeTimeExceeded">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:value>3</ncx:value>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration
                                       value="noResourcesLeft">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:value>4</ncx:value>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration
                                       value="languageError">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:value>5</ncx:value>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration
                                       value="runtimeError">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:value>6</ncx:value>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration
                                       value="invalidArgument">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:value>7</ncx:value>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration
                                       value="securityViolation">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:value>8</ncx:value>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                    <xs:enumeration
                                       value="genericError">
                                       <xs:annotation>
                                          <xs:appinfo>
                                             <ncx:value>9</ncx:value>
                                          </xs:appinfo>
                                       </xs:annotation>
                                    </xs:enumeration>
                                 </xs:restriction>
                              </xs:simpleType>
                           </xs:element>
                           <xs:element
                              name="__.smScriptAbort.smScriptAbort-smRunExitCode.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="smScriptAbort-smRunEndTime">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="smLaunchOwner"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smLaunchName"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunIndex"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunEndTime"
                              type="smiv2:DateAndTime" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The date and time when the execution terminated. The value
                                    '0000000000000000'H is returned if the script has not
                                    terminated yet.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:default
                                        smi:default="0x0000000000000000"/>
                                    <smi:oid
                                        smi:oid="1.3.6.1.2.1.64.1.4.2.1.4"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.smScriptAbort.smScriptAbort-smRunEndTime.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="smScriptAbort-smRunError">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="smLaunchOwner"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smLaunchName"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunIndex"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunError"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    This object contains a descriptive error message if the
                                    script startup or execution raised an abnormal condition.
                                    An implementation must store a descriptive error message
                                    in this object if the script exits with the smRunExitCode
                                    `genericError'.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:default  smi:default=""/>
                                    <smi:oid
                                        smi:oid="1.3.6.1.2.1.64.1.4.2.1.11"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.smScriptAbort.smScriptAbort-smRunError.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.smScriptAbort.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:element name="smScriptResult"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            This notification can be used by scripts to notify other
            management applications about results produced by the
            script.
            
            This notification is not automatically generated by the
            Script MIB implementation. It is the responsibility of
            the executing script to emit this notification where it
            is appropriate to do so.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.2.1.64.2.0.2"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="smScriptResult-smRunResult">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="smLaunchOwner"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smLaunchName"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunIndex"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunResult"
                              type="xs:base64Binary" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    The result value produced by the running script. Note that
                                    the result may change while the script is executing.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:default  smi:default=""/>
                                    <smi:oid
                                        smi:oid="1.3.6.1.2.1.64.1.4.2.1.8"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.smScriptResult.smScriptResult-smRunResult.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.smScriptResult.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:element name="smScriptException"
      substitutionGroup="ncn:notificationContent">
      <xs:annotation>
         <xs:documentation>
            This notification can be used by scripts to notify other
            management applications about script errors.
            
            This notification is not automatically generated by the
            Script MIB implementation. It is the responsibility of
            the executing script or the runtime system to emit this
            notification where it is appropriate to do so.
         </xs:documentation>
         <xs:appinfo>
            <smi:oid  smi:oid="1.3.6.1.2.1.64.2.0.3"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="ncn:NotificationContentType">
               <xs:sequence>
                  <xs:element name="smScriptException-smRunError">
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="smLaunchOwner"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smLaunchName"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunIndex"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Automagically generated leafref leaf.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="smRunError"
                              type="snmp-framework:SnmpAdminString"
                              minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    This object contains a descriptive error message if the
                                    script startup or execution raised an abnormal condition.
                                    An implementation must store a descriptive error message
                                    in this object if the script exits with the smRunExitCode
                                    `genericError'.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:config>false</ncx:config>
                                    <smi:default  smi:default=""/>
                                    <smi:oid
                                        smi:oid="1.3.6.1.2.1.64.1.4.2.1.11"/>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.smScriptException.smScriptException-smRunError.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.smScriptException.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

</xs:schema>
