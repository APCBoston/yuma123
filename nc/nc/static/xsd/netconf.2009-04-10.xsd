<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
   targetNamespace="urn:ietf:params:xml:ns:netconf:base:1.0"
   elementFormDefault="qualified" attributeFormDefault="unqualified"
   xml:lang="en" version="2009-04-10"
   xmlns:ncx="http://netconfcentral.com/ncx"
   xmlns:inet="urn:ietf:params:xml:ns:yang:inet-types">
   <xs:annotation>
      <xs:documentation>
         Converted from YANG file 'netconf.yang' by yangdump version 0.9.4
         
         Module: netconf
         Version: 2009-04-10
         Contact: Translated by Andy Bierman.
         Send comments to &lt;andy@netconfcentral.com&gt;.
      </xs:documentation>
      <xs:documentation>
         NETCONF Protocol 
          * Data Types
          * Abstract object for PDU components
          * RPCs
         Translated from RFC 4741.
      </xs:documentation>
      <xs:appinfo>
         <ncx:source>
            /home/andy/modules/netconfcentral/netconf.yang
         </ncx:source>
         <ncx:contact>
            Translated by Andy Bierman.
            Send comments to &lt;andy@netconfcentral.com&gt;.
         </ncx:contact>
      </xs:appinfo>
      <xs:appinfo>
         <ncx:revision>
            <ncx:version>2009-04-10</ncx:version>
            <ncx:description>
               Remove rpc-type extension usage.
            </ncx:description>
         </ncx:revision>
         <ncx:revision>
            <ncx:version>2009-02-24</ncx:version>
            <ncx:description>
               Change yang:uri to inet:uri (import moved).
            </ncx:description>
         </ncx:revision>
         <ncx:revision>
            <ncx:version>2008-08-30</ncx:version>
            <ncx:description>
               Add some NCX extensions to automate some agent processing.
            </ncx:description>
         </ncx:revision>
         <ncx:revision>
            <ncx:version>2008-04-26</ncx:version>
            <ncx:description>
               Change get-config and get output from 'config' to 'data'.
            </ncx:description>
         </ncx:revision>
         <ncx:revision>
            <ncx:version>2008-04-16</ncx:version>
            <ncx:description>
               Initial conversion from netconf.ncx version 0.6.
            </ncx:description>
         </ncx:revision>
      </xs:appinfo>
   </xs:annotation>

   <xs:simpleType name="Language">
      <xs:annotation>
         <xs:documentation>
            XML language type for LangString
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value="[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="SessionId">
      <xs:annotation>
         <xs:documentation>NETCONF Session Id</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:unsignedInt">
         <xs:minInclusive value="1"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="SessionIdOrZero">
      <xs:annotation>
         <xs:documentation>
            NETCONF Session Id or Zero to indicate none
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:unsignedInt"/>
   </xs:simpleType>

   <xs:simpleType name="LangString">
      <xs:annotation>
         <xs:documentation>
            XML string with a language attribute.
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string"/>
   </xs:simpleType>

   <xs:simpleType name="MessageId">
      <xs:annotation>
         <xs:documentation>
            NETCONF message-id attribute
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:minLength value="1"/>
         <xs:maxLength value="4095"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="ErrorType">
      <xs:annotation>
         <xs:documentation>NETCONF Error Type</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="transport">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>0</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="rpc">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="protocol">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>2</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="application">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>3</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="ErrorTag">
      <xs:annotation>
         <xs:documentation>NETCONF Error Tag</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="in-use">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>0</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="invalid-value">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="too-big">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>2</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="missing-attribute">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>3</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="bad-attribute">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>4</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="unknown-attribute">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>5</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="missing-element">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>6</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="bad-element">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>7</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="unknown-element">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>8</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="unknown-namespace">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>9</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="access-denied">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>10</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="lock-denied">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>11</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="resource-denied">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>12</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="rollback-failed">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>13</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="data-exists">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>14</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="data-missing">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>15</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="operation-not-supported">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>16</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="operation-failed">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>17</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="partial-operation">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>18</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="ErrorSeverity">
      <xs:annotation>
         <xs:documentation>
            NETCONF Error Severity
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="error">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>0</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="warning">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="TestOptionType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'test-option' Element Content.
            This is extended with the test-only enumeration.
            The 'set' option has no real effect since
            the entire PDU is always validated before any
            of it is applied (always test-then-set).
         </xs:documentation>
         <xs:appinfo>
            <ncx:default>set</ncx:default>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="test-then-set">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>0</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="set">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="test-only">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>2</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="ErrorOptionType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'error-option' Element Content
         </xs:documentation>
         <xs:appinfo>
            <ncx:default>stop-on-error</ncx:default>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="stop-on-error">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>0</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="continue-on-error">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="rollback-on-error">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>2</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="FilterType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'filter' Attribute Content
         </xs:documentation>
         <xs:appinfo>
            <ncx:default>subtree</ncx:default>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="subtree">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>0</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="xpath">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="SelectString">
      <xs:annotation>
         <xs:documentation>
            XPath string used in the select attribute.
         </xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string"/>
   </xs:simpleType>

   <xs:simpleType name="EditOperationType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'operation' Attribute Content
         </xs:documentation>
         <xs:appinfo>
            <ncx:default>merge</ncx:default>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="merge">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>0</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="replace">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="create">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>2</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="delete">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>3</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="DefaultOperationType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'default-operation' Element Content
         </xs:documentation>
         <xs:appinfo>
            <ncx:default>merge</ncx:default>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="merge">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>0</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="replace">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>1</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="none">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:value>2</ncx:value>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="ConfirmTimeoutType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'confirm-timeout' Element Content
         </xs:documentation>
         <xs:appinfo>
            <ncx:units>seconds</ncx:units>
            <ncx:default>600</ncx:default>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:unsignedInt">
         <xs:minInclusive value="1"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name="ConfigURIType">
      <xs:restriction base="inet:uri"/>
   </xs:simpleType>

   <xs:group name="NcCapabilities">
      <xs:annotation>
         <xs:documentation>
            Generic Capabilities List.
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="capabilities">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:config>false</ncx:config>
               </xs:appinfo>
            </xs:annotation>
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="capability" type="inet:uri"
                     minOccurs="0" maxOccurs="unbounded">
                     <xs:annotation>
                        <xs:documentation>
                           One Generic Capability URI.
                        </xs:documentation>
                        <xs:appinfo>
                           <ncx:ordered-by>system</ncx:ordered-by>
                        </xs:appinfo>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="__.capabilities.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:group>

   <xs:group name="ErrorInfoContent">
      <xs:annotation>
         <xs:documentation>
            NETCONF standard 'error-info' Element Content;
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="bad-attribute" type="xs:string"
            minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  Name of the missing or invalid XSD attribute.
                  Used with missing-attribute, bad-attribute, and
                  unknown-attribute error-tag values.
               </xs:documentation>
               <xs:appinfo>
                  <ncx:config>false</ncx:config>
                  <ncx:ordered-by>system</ncx:ordered-by>
               </xs:appinfo>
            </xs:annotation>
         </xs:element>
         <xs:element name="bad-element" type="xs:string" minOccurs="0"
            maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  Name of the element that contains (or should contain)
                  an invalid XSD attribute when used with missing-attribute,
                  bad-attribute, unknown-attribute, error-tag values.
                  Name of an invalid or missing element when used with
                  then missing-element, bad-element, unknown-element,
                  and unknown-namespace error-tag values.
               </xs:documentation>
               <xs:appinfo>
                  <ncx:config>false</ncx:config>
                  <ncx:ordered-by>system</ncx:ordered-by>
               </xs:appinfo>
            </xs:annotation>
         </xs:element>
         <xs:element name="ok-element" type="xs:string" minOccurs="0"
            maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  Identifies an element in the data model
                  for which the requested operation has been completed
                  for that node and all its child nodes.  This element
                  can appear zero or more times in the 'error-info'
                  container.  Used with the partial-operation error-tag
                  value.
               </xs:documentation>
               <xs:appinfo>
                  <ncx:config>false</ncx:config>
                  <ncx:ordered-by>system</ncx:ordered-by>
               </xs:appinfo>
            </xs:annotation>
         </xs:element>
         <xs:element name="err-element" type="xs:string" minOccurs="0"
            maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  Identifies an element in the data model
                  for which the requested operation has failed for that
                  node and all its child nodes.  This element
                  can appear zero or more times in the 'error-info'
                  container.   Used with the partial-operation error-tag
                  value.
               </xs:documentation>
               <xs:appinfo>
                  <ncx:config>false</ncx:config>
                  <ncx:ordered-by>system</ncx:ordered-by>
               </xs:appinfo>
            </xs:annotation>
         </xs:element>
         <xs:element name="noop-element" type="xs:string" minOccurs="0"
            maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>
                  Identifies an element in the data model
                  for which the requested operation was not attempted for
                  that node and all its child nodes.  This element
                  can appear zero or more times in the &lt;error-info&gt;
                  container.   Used with the partial-operation error-tag
                  value.
               </xs:documentation>
               <xs:appinfo>
                  <ncx:config>false</ncx:config>
                  <ncx:ordered-by>system</ncx:ordered-by>
               </xs:appinfo>
            </xs:annotation>
         </xs:element>
         <xs:element name="session-id" type="SessionIdOrZero"
            minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Session ID of session holding the
                  requested lock, or zero to indicate a non-NETCONF
                  entity holds the lock.
               </xs:documentation>
               <xs:appinfo>
                  <ncx:config>false</ncx:config>
               </xs:appinfo>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:group>

   <xs:group name="RpcErrorType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'rpc-error' Element Content
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="error-type" type="ErrorType">
            <xs:annotation>
               <xs:documentation>
                  Defines the conceptual layer that the error occurred.
               </xs:documentation>
               <xs:appinfo>
                  <ncx:mandatory>true</ncx:mandatory>
               </xs:appinfo>
            </xs:annotation>
         </xs:element>
         <xs:element name="error-tag" type="ErrorTag">
            <xs:annotation>
               <xs:documentation>
                  Contains a string identifying the error condition.
               </xs:documentation>
               <xs:appinfo>
                  <ncx:mandatory>true</ncx:mandatory>
               </xs:appinfo>
            </xs:annotation>
         </xs:element>
         <xs:element name="error-severity" type="ErrorSeverity">
            <xs:annotation>
               <xs:documentation>
                  Contains a string identifying the error severity, as
                  determined by the device.
               </xs:documentation>
               <xs:appinfo>
                  <ncx:mandatory>true</ncx:mandatory>
               </xs:appinfo>
            </xs:annotation>
         </xs:element>
         <xs:element name="error-app-tag" type="xs:string"
            minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Contains a string identifying the data-model-specific
                  or implementation-specific error condition, if one exists.
                  This element will not be present if no appropriate 
                  application error tag can be associated with a particular
                  error condition.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="error-path" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Contains the absolute XPath [2] expression identifying
                  the element path to the node that is associated with the error
                  being reported in a particular rpc-error element.  This element
                  will not be present if no appropriate payload element can be
                  associated with a particular error condition, or if the
                  'bad-element' QString returned in the 'error-info' container is
                  sufficient to identify the node associated with the error.  When
                  the XPath expression is interpreted, the set of namespace
                  declarations are those in scope on the rpc-error element,
                  including the default namespace.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="error-message" type="LangString"
            minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Contains a string suitable for human display that
                  describes the error condition.  This element will not be present
                  if no appropriate message is provided for a particular error
                  condition.  This element SHOULD include an xml:lang attribute.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="error-info" type="xs:anyType" minOccurs="0">
            <xs:annotation>
               <xs:documentation>
                  Contains protocol- or data-model-specific error content.
                  This element will not be present if no such error content is
                  provided for a particular error condition.  The list in 
                  RFC 4741, Appendix A, defines any mandatory error-info content 
                  for each error.  After any protocol-mandated content, a 
                  data model definition may mandate that certain application-layer
                  error information be included in the error-info container. 
                  An implementation may include additional elements to 
                  provide extended and/or implementation-specific debugging 
                  information.
               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:group>

   <xs:group name="RpcDataReplyType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'rpc-reply' Error and/or Data Content
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="rpc-error" minOccurs="0"
            maxOccurs="unbounded">
            <xs:annotation>
               <xs:appinfo>
                  <ncx:config>false</ncx:config>
                  <ncx:ordered-by>system</ncx:ordered-by>
               </xs:appinfo>
            </xs:annotation>
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="error-type" type="ErrorType">
                     <xs:annotation>
                        <xs:documentation>
                           Defines the conceptual layer that the error occurred.
                        </xs:documentation>
                        <xs:appinfo>
                           <ncx:mandatory>true</ncx:mandatory>
                        </xs:appinfo>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="error-tag" type="ErrorTag">
                     <xs:annotation>
                        <xs:documentation>
                           Contains a string identifying the error condition.
                        </xs:documentation>
                        <xs:appinfo>
                           <ncx:mandatory>true</ncx:mandatory>
                        </xs:appinfo>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="error-severity"
                     type="ErrorSeverity">
                     <xs:annotation>
                        <xs:documentation>
                           Contains a string identifying the error severity, as
                           determined by the device.
                        </xs:documentation>
                        <xs:appinfo>
                           <ncx:mandatory>true</ncx:mandatory>
                        </xs:appinfo>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="error-app-tag" type="xs:string"
                     minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Contains a string identifying the data-model-specific
                           or implementation-specific error condition, if one exists.
                           This element will not be present if no appropriate 
                           application error tag can be associated with a particular
                           error condition.
                        </xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="error-path" type="xs:string"
                     minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Contains the absolute XPath [2] expression identifying
                           the element path to the node that is associated with the error
                           being reported in a particular rpc-error element.  This element
                           will not be present if no appropriate payload element can be
                           associated with a particular error condition, or if the
                           'bad-element' QString returned in the 'error-info' container is
                           sufficient to identify the node associated with the error.  When
                           the XPath expression is interpreted, the set of namespace
                           declarations are those in scope on the rpc-error element,
                           including the default namespace.
                        </xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="error-message" type="LangString"
                     minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Contains a string suitable for human display that
                           describes the error condition.  This element will not be present
                           if no appropriate message is provided for a particular error
                           condition.  This element SHOULD include an xml:lang attribute.
                        </xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="error-info" type="xs:anyType"
                     minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Contains protocol- or data-model-specific error content.
                           This element will not be present if no such error content is
                           provided for a particular error condition.  The list in 
                           RFC 4741, Appendix A, defines any mandatory error-info content 
                           for each error.  After any protocol-mandated content, a 
                           data model definition may mandate that certain application-layer
                           error information be included in the error-info container. 
                           An implementation may include additional elements to 
                           provide extended and/or implementation-specific debugging 
                           information.
                        </xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="__.rpc-error.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:group>

   <xs:group name="RpcOkReplyType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'rpc-reply' OK Content.
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:choice>
            <xs:annotation>
               <xs:appinfo>
                  <ncx:choice-name>ok-or-error</ncx:choice-name>
               </xs:appinfo>
            </xs:annotation>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>ok</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="ok" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Sent in 'rpc-reply' messages if no errors or
                        warnings occurred during the processing of an 'rpc' request.
                     </xs:documentation>
                     <xs:appinfo>
                        <ncx:config>false</ncx:config>
                     </xs:appinfo>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.ok-or-error.ok.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>rpc-error</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="rpc-error" minOccurs="0"
                  maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:appinfo>
                        <ncx:config>false</ncx:config>
                        <ncx:ordered-by>system</ncx:ordered-by>
                     </xs:appinfo>
                  </xs:annotation>
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="error-type" type="ErrorType">
                           <xs:annotation>
                              <xs:documentation>
                                 Defines the conceptual layer that the error occurred.
                              </xs:documentation>
                              <xs:appinfo>
                                 <ncx:mandatory>true</ncx:mandatory>
                              </xs:appinfo>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-tag" type="ErrorTag">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains a string identifying the error condition.
                              </xs:documentation>
                              <xs:appinfo>
                                 <ncx:mandatory>true</ncx:mandatory>
                              </xs:appinfo>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-severity"
                           type="ErrorSeverity">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains a string identifying the error severity, as
                                 determined by the device.
                              </xs:documentation>
                              <xs:appinfo>
                                 <ncx:mandatory>true</ncx:mandatory>
                              </xs:appinfo>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-app-tag"
                           type="xs:string" minOccurs="0">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains a string identifying the data-model-specific
                                 or implementation-specific error condition, if one exists.
                                 This element will not be present if no appropriate 
                                 application error tag can be associated with a particular
                                 error condition.
                              </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-path" type="xs:string"
                           minOccurs="0">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains the absolute XPath [2] expression identifying
                                 the element path to the node that is associated with the error
                                 being reported in a particular rpc-error element.  This element
                                 will not be present if no appropriate payload element can be
                                 associated with a particular error condition, or if the
                                 'bad-element' QString returned in the 'error-info' container is
                                 sufficient to identify the node associated with the error.  When
                                 the XPath expression is interpreted, the set of namespace
                                 declarations are those in scope on the rpc-error element,
                                 including the default namespace.
                              </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-message"
                           type="LangString" minOccurs="0">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains a string suitable for human display that
                                 describes the error condition.  This element will not be present
                                 if no appropriate message is provided for a particular error
                                 condition.  This element SHOULD include an xml:lang attribute.
                              </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-info" type="xs:anyType"
                           minOccurs="0">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains protocol- or data-model-specific error content.
                                 This element will not be present if no such error content is
                                 provided for a particular error condition.  The list in 
                                 RFC 4741, Appendix A, defines any mandatory error-info content 
                                 for each error.  After any protocol-mandated content, a 
                                 data model definition may mandate that certain application-layer
                                 error information be included in the error-info container. 
                                 An implementation may include additional elements to 
                                 provide extended and/or implementation-specific debugging 
                                 information.
                              </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element
                           name="__.ok-or-error.rpc-error.rpc-error.A__"
                           minOccurs="0" maxOccurs="unbounded"
                           abstract="true"/>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="__.ok-or-error.rpc-error.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:element name="__.ok-or-error.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>

   <xs:group name="RpcReplyType">
      <xs:annotation>
         <xs:documentation>
            Generic NETCONF 'rpc-reply' content. 
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:choice>
            <xs:annotation>
               <xs:appinfo>
                  <ncx:choice-name>ok-or-data-error</ncx:choice-name>
               </xs:appinfo>
            </xs:annotation>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>ok</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="ok" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Sent in 'rpc-reply' messages if no errors or
                        warnings occurred during the processing of an 'rpc' request.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.ok-or-data-error.ok.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>data-error</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="rpc-error" minOccurs="0"
                  maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:appinfo>
                        <ncx:config>false</ncx:config>
                        <ncx:ordered-by>system</ncx:ordered-by>
                     </xs:appinfo>
                  </xs:annotation>
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="error-type" type="ErrorType">
                           <xs:annotation>
                              <xs:documentation>
                                 Defines the conceptual layer that the error occurred.
                              </xs:documentation>
                              <xs:appinfo>
                                 <ncx:mandatory>true</ncx:mandatory>
                              </xs:appinfo>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-tag" type="ErrorTag">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains a string identifying the error condition.
                              </xs:documentation>
                              <xs:appinfo>
                                 <ncx:mandatory>true</ncx:mandatory>
                              </xs:appinfo>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-severity"
                           type="ErrorSeverity">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains a string identifying the error severity, as
                                 determined by the device.
                              </xs:documentation>
                              <xs:appinfo>
                                 <ncx:mandatory>true</ncx:mandatory>
                              </xs:appinfo>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-app-tag"
                           type="xs:string" minOccurs="0">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains a string identifying the data-model-specific
                                 or implementation-specific error condition, if one exists.
                                 This element will not be present if no appropriate 
                                 application error tag can be associated with a particular
                                 error condition.
                              </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-path" type="xs:string"
                           minOccurs="0">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains the absolute XPath [2] expression identifying
                                 the element path to the node that is associated with the error
                                 being reported in a particular rpc-error element.  This element
                                 will not be present if no appropriate payload element can be
                                 associated with a particular error condition, or if the
                                 'bad-element' QString returned in the 'error-info' container is
                                 sufficient to identify the node associated with the error.  When
                                 the XPath expression is interpreted, the set of namespace
                                 declarations are those in scope on the rpc-error element,
                                 including the default namespace.
                              </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-message"
                           type="LangString" minOccurs="0">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains a string suitable for human display that
                                 describes the error condition.  This element will not be present
                                 if no appropriate message is provided for a particular error
                                 condition.  This element SHOULD include an xml:lang attribute.
                              </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="error-info" type="xs:anyType"
                           minOccurs="0">
                           <xs:annotation>
                              <xs:documentation>
                                 Contains protocol- or data-model-specific error content.
                                 This element will not be present if no such error content is
                                 provided for a particular error condition.  The list in 
                                 RFC 4741, Appendix A, defines any mandatory error-info content 
                                 for each error.  After any protocol-mandated content, a 
                                 data model definition may mandate that certain application-layer
                                 error information be included in the error-info container. 
                                 An implementation may include additional elements to 
                                 provide extended and/or implementation-specific debugging 
                                 information.
                              </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element
                           name="__.ok-or-data-error.data-error.rpc-error.A__"
                           minOccurs="0" maxOccurs="unbounded"
                           abstract="true"/>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="__.ok-or-data-error.data-error.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:element name="__.ok-or-data-error.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>

   <xs:group name="CommonConfigSourceType">
      <xs:annotation>
         <xs:documentation>
            Common NETCONF config parameter contents.
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:choice>
            <xs:annotation>
               <xs:appinfo>
                  <ncx:choice-name>config-source</ncx:choice-name>
                  <ncx:mandatory>true</ncx:mandatory>
               </xs:appinfo>
            </xs:annotation>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>candidate</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="candidate" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Only available if 'candidate' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.candidate.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>running</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="running" minOccurs="0"/>
               <xs:element name="__.config-source.running.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>startup</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="startup" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Only available if 'startup' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.startup.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:element name="__.config-source.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>

   <xs:group name="GetConfigSourceType">
      <xs:annotation>
         <xs:documentation>
            NETCONF config 'source' Parameter contents.
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:choice>
            <xs:annotation>
               <xs:appinfo>
                  <ncx:choice-name>config-source</ncx:choice-name>
                  <ncx:config>true</ncx:config>
                  <ncx:mandatory>true</ncx:mandatory>
               </xs:appinfo>
            </xs:annotation>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>candidate</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="candidate" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Only available if 'candidate' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.candidate.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>running</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="running" minOccurs="0"/>
               <xs:element name="__.config-source.running.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>startup</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="startup" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Only available if 'startup' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.startup.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>url</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="url" type="ConfigURIType"
                  minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        URL pointing to config data. Only available
                        if 'url' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.url.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:element name="__.config-source.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>

   <xs:group name="RpcOperationSourceType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'source' Parameter contents.
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:choice>
            <xs:annotation>
               <xs:appinfo>
                  <ncx:choice-name>config-source</ncx:choice-name>
                  <ncx:config>true</ncx:config>
                  <ncx:mandatory>true</ncx:mandatory>
               </xs:appinfo>
            </xs:annotation>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>candidate</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="candidate" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Only available if 'candidate' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.candidate.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>running</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="running" minOccurs="0"/>
               <xs:element name="__.config-source.running.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>startup</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="startup" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Only available if 'startup' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.startup.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>url</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="url" type="ConfigURIType"
                  minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        URL pointing to config data. Only available
                        if 'url' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.url.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>config</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="config">
                  <xs:annotation>
                     <xs:documentation>
                        Inline configuration data
                     </xs:documentation>
                     <xs:appinfo>
                        <ncx:config>true</ncx:config>
                        <ncx:root/>
                     </xs:appinfo>
                  </xs:annotation>
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element
                           name="__.config-source.config.config.A__"
                           minOccurs="0" maxOccurs="unbounded"
                           abstract="true"/>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="__.config-source.config.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:element name="__.config-source.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>

   <xs:group name="RpcOperationTargetType">
      <xs:annotation>
         <xs:documentation>
            NETCONF 'target' Parameter contents.
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:choice>
            <xs:annotation>
               <xs:appinfo>
                  <ncx:choice-name>config-source</ncx:choice-name>
                  <ncx:config>true</ncx:config>
                  <ncx:mandatory>true</ncx:mandatory>
               </xs:appinfo>
            </xs:annotation>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>candidate</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="candidate" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Only available if 'candidate' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.candidate.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>running</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="running" minOccurs="0"/>
               <xs:element name="__.config-source.running.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>startup</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="startup" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        Only available if 'startup' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.startup.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:sequence>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:case-name>url</ncx:case-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:element name="url" type="ConfigURIType"
                  minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>
                        URL pointing to desired config data output. Only 
                        available if 'url' capability supported.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="__.config-source.url.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
            <xs:element name="__.config-source.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>

   <xs:element name="rpc">
      <xs:annotation>
         <xs:documentation>
            Remote Procedure Call request message
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 4.1
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <ncx:metadata>
               <ncx:syntax-string>MessageId message-id
               </ncx:syntax-string>
            </ncx:metadata>
            <ncx:abstract/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="__.rpc.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:element name="rpc-reply">
      <xs:annotation>
         <xs:documentation>
            Remote Procedure Call response message
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 4.2
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <ncx:metadata>
               <ncx:syntax-string>MessageId message-id
               </ncx:syntax-string>
            </ncx:metadata>
            <ncx:abstract/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:choice>
               <xs:annotation>
                  <xs:appinfo>
                     <ncx:choice-name>ok-or-data-error</ncx:choice-name>
                  </xs:appinfo>
               </xs:annotation>
               <xs:sequence>
                  <xs:annotation>
                     <xs:appinfo>
                        <ncx:case-name>ok</ncx:case-name>
                     </xs:appinfo>
                  </xs:annotation>
                  <xs:element name="ok" minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Sent in 'rpc-reply' messages if no errors or
                           warnings occurred during the processing of an 'rpc' request.
                        </xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element
                     name="__.rpc-reply.ok-or-data-error.ok.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
               <xs:sequence>
                  <xs:annotation>
                     <xs:appinfo>
                        <ncx:case-name>data-error</ncx:case-name>
                     </xs:appinfo>
                  </xs:annotation>
                  <xs:element name="rpc-error" minOccurs="0"
                     maxOccurs="unbounded">
                     <xs:annotation>
                        <xs:appinfo>
                           <ncx:config>false</ncx:config>
                           <ncx:ordered-by>system</ncx:ordered-by>
                        </xs:appinfo>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:sequence>
                           <xs:element name="error-type"
                              type="ErrorType">
                              <xs:annotation>
                                 <xs:documentation>
                                    Defines the conceptual layer that the error occurred.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="error-tag" type="ErrorTag">
                              <xs:annotation>
                                 <xs:documentation>
                                    Contains a string identifying the error condition.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="error-severity"
                              type="ErrorSeverity">
                              <xs:annotation>
                                 <xs:documentation>
                                    Contains a string identifying the error severity, as
                                    determined by the device.
                                 </xs:documentation>
                                 <xs:appinfo>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="error-app-tag"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Contains a string identifying the data-model-specific
                                    or implementation-specific error condition, if one exists.
                                    This element will not be present if no appropriate 
                                    application error tag can be associated with a particular
                                    error condition.
                                 </xs:documentation>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="error-path"
                              type="xs:string" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Contains the absolute XPath [2] expression identifying
                                    the element path to the node that is associated with the error
                                    being reported in a particular rpc-error element.  This element
                                    will not be present if no appropriate payload element can be
                                    associated with a particular error condition, or if the
                                    'bad-element' QString returned in the 'error-info' container is
                                    sufficient to identify the node associated with the error.  When
                                    the XPath expression is interpreted, the set of namespace
                                    declarations are those in scope on the rpc-error element,
                                    including the default namespace.
                                 </xs:documentation>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="error-message"
                              type="LangString" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Contains a string suitable for human display that
                                    describes the error condition.  This element will not be present
                                    if no appropriate message is provided for a particular error
                                    condition.  This element SHOULD include an xml:lang attribute.
                                 </xs:documentation>
                              </xs:annotation>
                           </xs:element>
                           <xs:element name="error-info"
                              type="xs:anyType" minOccurs="0">
                              <xs:annotation>
                                 <xs:documentation>
                                    Contains protocol- or data-model-specific error content.
                                    This element will not be present if no such error content is
                                    provided for a particular error condition.  The list in 
                                    RFC 4741, Appendix A, defines any mandatory error-info content 
                                    for each error.  After any protocol-mandated content, a 
                                    data model definition may mandate that certain application-layer
                                    error information be included in the error-info container. 
                                    An implementation may include additional elements to 
                                    provide extended and/or implementation-specific debugging 
                                    information.
                                 </xs:documentation>
                              </xs:annotation>
                           </xs:element>
                           <xs:element
                              name="__.rpc-reply.ok-or-data-error.data-error.rpc-error.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element
                     name="__.rpc-reply.ok-or-data-error.data-error.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
               <xs:element name="__.rpc-reply.ok-or-data-error.A__"
                  minOccurs="0" maxOccurs="unbounded" abstract="true"/>
            </xs:choice>
            <xs:element name="__.rpc-reply.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="get-config_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="data">
                  <xs:annotation>
                     <xs:documentation>
                        Copy of the source database subset which matched
                        the filter criteria (if any).
                     </xs:documentation>
                     <xs:appinfo>
                        <ncx:config>true</ncx:config>
                        <ncx:root/>
                     </xs:appinfo>
                  </xs:annotation>
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element
                           name="__.get-config.output.data.A__"
                           minOccurs="0" maxOccurs="unbounded"
                           abstract="true"/>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="__.get-config.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="get-config" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            Retrieve all or part of a specified configuration.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 7.2
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>
               get-config_output_type__
            </ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="source">
                     <xs:annotation>
                        <xs:documentation>
                           Particular configuration to retrieve.
                        </xs:documentation>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:sequence>
                           <xs:choice>
                              <xs:annotation>
                                 <xs:appinfo>
                                    <ncx:choice-name>config-source
                                    </ncx:choice-name>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>candidate</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="candidate"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'candidate' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.get-config.input.source.config-source.candidate.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>running</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="running"
                                    minOccurs="0"/>
                                 <xs:element
                                    name="__.get-config.input.source.config-source.running.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>startup</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="startup"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'startup' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.get-config.input.source.config-source.startup.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>url</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="url"
                                    type="ConfigURIType" minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          URL pointing to config data. Only available
                                          if 'url' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.get-config.input.source.config-source.url.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:element
                                 name="__.get-config.input.source.config-source.A__"
                                 minOccurs="0" maxOccurs="unbounded"
                                 abstract="true"/>
                           </xs:choice>
                           <xs:element
                              name="__.get-config.input.source.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="filter" type="xs:anyType"
                     minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Subtree or Xpath filter to use.
                        </xs:documentation>
                        <xs:appinfo>
                           <ncx:metadata>
                              <ncx:syntax-string>FilterType type
                              </ncx:syntax-string>
                           </ncx:metadata>
                           <ncx:metadata>
                              <ncx:syntax-string>SelectString select
                              </ncx:syntax-string>
                           </ncx:metadata>
                        </xs:appinfo>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="__.get-config.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="edit-config_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.edit-config.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="edit-config" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            The 'edit-config' operation loads all or part of a specified
            configuration to the specified target configuration.  This
            operation allows the new configuration to be expressed in several
            ways, such as using a local file, a remote file, or inline.  If
            the target configuration does not exist, it will be created.  If a
            NETCONF peer supports the :url capability (Section 8.8), the &lt;url&gt;
            element can appear instead of the &lt;config&gt; parameter and should
            identify a local configuration file.
            
            The device analyzes the source and target configurations and
            performs the requested changes.  The target configuration is not
            necessarily replaced, as with the &lt;copy-config&gt; message.  Instead,
            the target configuration is changed in accordance with the
            source's data and requested operations.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 7.2
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>
               edit-config_output_type__
            </ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="target">
                     <xs:annotation>
                        <xs:documentation>
                           Particular configuration to edit.
                        </xs:documentation>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:sequence>
                           <xs:choice>
                              <xs:annotation>
                                 <xs:appinfo>
                                    <ncx:choice-name>config-source
                                    </ncx:choice-name>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>candidate</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="candidate"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'candidate' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.edit-config.input.target.config-source.candidate.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>running</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="running"
                                    minOccurs="0"/>
                                 <xs:element
                                    name="__.edit-config.input.target.config-source.running.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>startup</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="startup"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'startup' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.edit-config.input.target.config-source.startup.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>url</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="url"
                                    type="ConfigURIType" minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          URL pointing to desired config data output. Only 
                                          available if 'url' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.edit-config.input.target.config-source.url.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:element
                                 name="__.edit-config.input.target.config-source.A__"
                                 minOccurs="0" maxOccurs="unbounded"
                                 abstract="true"/>
                           </xs:choice>
                           <xs:element
                              name="__.edit-config.input.target.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="default-operation"
                     type="DefaultOperationType" default="merge"
                     minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Default operation to apply if not explicitly set.
                        </xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="test-option" type="TestOptionType"
                     default="set" minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Test option if validate capability supported.
                           The 'validate' capability must be present to set
                           this object to 'test-then-set'.
                        </xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="error-option"
                     type="ErrorOptionType" default="stop-on-error"
                     minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Error recovery option.
                        </xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:choice>
                     <xs:annotation>
                        <xs:appinfo>
                           <ncx:choice-name>edit-content</ncx:choice-name>
                           <ncx:mandatory>true</ncx:mandatory>
                        </xs:appinfo>
                     </xs:annotation>
                     <xs:sequence>
                        <xs:annotation>
                           <xs:appinfo>
                              <ncx:case-name>config</ncx:case-name>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:element name="config">
                           <xs:annotation>
                              <xs:documentation>
                                 Inline Config content: 'config' element.
                              </xs:documentation>
                              <xs:appinfo>
                                 <ncx:config>true</ncx:config>
                                 <ncx:root/>
                              </xs:appinfo>
                           </xs:annotation>
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element
                                    name="__.edit-config.input.edit-content.config.config.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                        <xs:element
                           name="__.edit-config.input.edit-content.config.A__"
                           minOccurs="0" maxOccurs="unbounded"
                           abstract="true"/>
                     </xs:sequence>
                     <xs:sequence>
                        <xs:annotation>
                           <xs:appinfo>
                              <ncx:case-name>url</ncx:case-name>
                           </xs:appinfo>
                        </xs:annotation>
                        <xs:element name="url" type="ConfigURIType"
                           minOccurs="0">
                           <xs:annotation>
                              <xs:documentation>
                                 Pointer to Config content: 'url' element.
                              </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element
                           name="__.edit-config.input.edit-content.url.A__"
                           minOccurs="0" maxOccurs="unbounded"
                           abstract="true"/>
                     </xs:sequence>
                     <xs:element
                        name="__.edit-config.input.edit-content.A__"
                        minOccurs="0" maxOccurs="unbounded"
                        abstract="true"/>
                  </xs:choice>
                  <xs:element name="__.edit-config.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="copy-config_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.copy-config.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="copy-config" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            Create or replace an entire configuration datastore with the
            contents of another complete configuration datastore.  If the
            target datastore exists, it is overwritten.  Otherwise, a new one
            is created, if allowed.
            
            If a NETCONF peer supports the :url capability (Section 8.8), the
            'url' element can appear as the &lt;source&gt; or &lt;target&gt; parameter.
            
            Even if it advertises the :writable-running capability, a device
            may choose not to support the &lt;running/&gt; configuration datastore
            as the &lt;target&gt; parameter of a &lt;copy-config&gt; operation.  A device
            may choose not to support remote-to-remote copy operations, where
            both the &lt;source&gt; and &lt;target&gt; parameters use the &lt;url&gt; element.
            
            If the source and target parameters identify the same URL or
            configuration datastore, an error MUST be returned with an error-
            tag containing invalid-value.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 7.3
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>
               copy-config_output_type__
            </ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="target">
                     <xs:annotation>
                        <xs:documentation>
                           Particular configuration to copy to.
                        </xs:documentation>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:sequence>
                           <xs:choice>
                              <xs:annotation>
                                 <xs:appinfo>
                                    <ncx:choice-name>config-source
                                    </ncx:choice-name>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>candidate</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="candidate"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'candidate' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.copy-config.input.target.config-source.candidate.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>running</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="running"
                                    minOccurs="0"/>
                                 <xs:element
                                    name="__.copy-config.input.target.config-source.running.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>startup</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="startup"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'startup' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.copy-config.input.target.config-source.startup.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>url</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="url"
                                    type="ConfigURIType" minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          URL pointing to desired config data output. Only 
                                          available if 'url' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.copy-config.input.target.config-source.url.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:element
                                 name="__.copy-config.input.target.config-source.A__"
                                 minOccurs="0" maxOccurs="unbounded"
                                 abstract="true"/>
                           </xs:choice>
                           <xs:element
                              name="__.copy-config.input.target.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="source">
                     <xs:annotation>
                        <xs:documentation>
                           Particular configuration to copy from.
                        </xs:documentation>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:sequence>
                           <xs:choice>
                              <xs:annotation>
                                 <xs:appinfo>
                                    <ncx:choice-name>config-source
                                    </ncx:choice-name>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>candidate</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="candidate"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'candidate' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.copy-config.input.source.config-source.candidate.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>running</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="running"
                                    minOccurs="0"/>
                                 <xs:element
                                    name="__.copy-config.input.source.config-source.running.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>startup</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="startup"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'startup' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.copy-config.input.source.config-source.startup.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>url</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="url"
                                    type="ConfigURIType" minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          URL pointing to config data. Only available
                                          if 'url' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.copy-config.input.source.config-source.url.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>config</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="config">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Inline configuration data
                                       </xs:documentation>
                                       <xs:appinfo>
                                          <ncx:config>true</ncx:config>
                                          <ncx:root/>
                                       </xs:appinfo>
                                    </xs:annotation>
                                    <xs:complexType>
                                       <xs:sequence>
                                          <xs:element
                                             name="__.copy-config.input.source.config-source.config.config.A__"
                                             minOccurs="0"
                                             maxOccurs="unbounded"
                                             abstract="true"/>
                                       </xs:sequence>
                                    </xs:complexType>
                                 </xs:element>
                                 <xs:element
                                    name="__.copy-config.input.source.config-source.config.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:element
                                 name="__.copy-config.input.source.config-source.A__"
                                 minOccurs="0" maxOccurs="unbounded"
                                 abstract="true"/>
                           </xs:choice>
                           <xs:element
                              name="__.copy-config.input.source.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.copy-config.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="delete-config_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.delete-config.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="delete-config" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            Delete a configuration datastore.  The 'running' configuration
            datastore cannot be deleted.
            
            If a NETCONF peer supports the :url capability (Section 8.8), the
            'url' element can appear as the &lt;target&gt; parameter.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 7.4
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>
               delete-config_output_type__
            </ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="target">
                     <xs:annotation>
                        <xs:documentation>
                           Particular configuration to delete.
                        </xs:documentation>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:sequence>
                           <xs:choice>
                              <xs:annotation>
                                 <xs:appinfo>
                                    <ncx:choice-name>config-source
                                    </ncx:choice-name>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>candidate</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="candidate"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'candidate' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.delete-config.input.target.config-source.candidate.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>running</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="running"
                                    minOccurs="0"/>
                                 <xs:element
                                    name="__.delete-config.input.target.config-source.running.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>startup</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="startup"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'startup' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.delete-config.input.target.config-source.startup.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>url</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="url"
                                    type="ConfigURIType" minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          URL pointing to desired config data output. Only 
                                          available if 'url' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.delete-config.input.target.config-source.url.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:element
                                 name="__.delete-config.input.target.config-source.A__"
                                 minOccurs="0" maxOccurs="unbounded"
                                 abstract="true"/>
                           </xs:choice>
                           <xs:element
                              name="__.delete-config.input.target.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.delete-config.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="lock_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.lock.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="lock" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            The lock operation allows the client to lock the configuration
            system of a device.  Such locks are intended to be short-lived and
            allow a client to make a change without fear of interaction with
            other NETCONF clients, non-NETCONF clients (e.g., SNMP and command
            line interface (CLI) scripts), and human users. ...
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 7.5
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>lock_output_type__</ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="target">
                     <xs:annotation>
                        <xs:documentation>
                           Particular configuration to lock
                        </xs:documentation>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:sequence>
                           <xs:choice>
                              <xs:annotation>
                                 <xs:appinfo>
                                    <ncx:choice-name>config-source
                                    </ncx:choice-name>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>candidate</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="candidate"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'candidate' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.lock.input.target.config-source.candidate.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>running</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="running"
                                    minOccurs="0"/>
                                 <xs:element
                                    name="__.lock.input.target.config-source.running.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>startup</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="startup"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'startup' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.lock.input.target.config-source.startup.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>url</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="url"
                                    type="ConfigURIType" minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          URL pointing to desired config data output. Only 
                                          available if 'url' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.lock.input.target.config-source.url.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:element
                                 name="__.lock.input.target.config-source.A__"
                                 minOccurs="0" maxOccurs="unbounded"
                                 abstract="true"/>
                           </xs:choice>
                           <xs:element name="__.lock.input.target.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.lock.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="unlock_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.unlock.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="unlock" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            The unlock operation is used to release a configuration lock,
            previously obtained with the 'lock' operation.
            
            An unlock operation will not succeed if any of the following
            conditions are true:
            
            *  the specified lock is not currently active
            
            *  the session issuing the &lt;unlock&gt; operation is not the same
               session that obtained the lock
            
            The server MUST respond with either an &lt;ok&gt; element or an
            'rpc-error'.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 7.6
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>unlock_output_type__</ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="target">
                     <xs:annotation>
                        <xs:documentation>
                           Particular configuration to unlock.
                        </xs:documentation>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:sequence>
                           <xs:choice>
                              <xs:annotation>
                                 <xs:appinfo>
                                    <ncx:choice-name>config-source
                                    </ncx:choice-name>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>candidate</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="candidate"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'candidate' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.unlock.input.target.config-source.candidate.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>running</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="running"
                                    minOccurs="0"/>
                                 <xs:element
                                    name="__.unlock.input.target.config-source.running.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>startup</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="startup"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'startup' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.unlock.input.target.config-source.startup.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>url</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="url"
                                    type="ConfigURIType" minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          URL pointing to desired config data output. Only 
                                          available if 'url' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.unlock.input.target.config-source.url.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:element
                                 name="__.unlock.input.target.config-source.A__"
                                 minOccurs="0" maxOccurs="unbounded"
                                 abstract="true"/>
                           </xs:choice>
                           <xs:element
                              name="__.unlock.input.target.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.unlock.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="get_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="data">
                  <xs:annotation>
                     <xs:documentation>
                        Copy of the 'running' database subset which matched
                        the filter criteria (if any).
                     </xs:documentation>
                     <xs:appinfo>
                        <ncx:config>true</ncx:config>
                        <ncx:root/>
                     </xs:appinfo>
                  </xs:annotation>
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="__.get.output.data.A__"
                           minOccurs="0" maxOccurs="unbounded"
                           abstract="true"/>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="__.get.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="get" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            Retrieve running configuration and device state information.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 7.7
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>get_output_type__</ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="filter" type="xs:anyType"
                     minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           This parameter specifies the portion of the system
                           configuration and state data to retrieve.  If this parameter is
                           empty, all the device configuration and state information is
                           returned.
                           
                           The filter element may optionally contain a 'type' attribute.
                           This attribute indicates the type of filtering syntax used
                           within the filter element.  The default filtering mechanism in
                           NETCONF is referred to as subtree filtering and is described in
                           Section 6.  The value 'subtree' explicitly identifies this type
                           of filtering.
                           
                           If the NETCONF peer supports the :xpath capability
                           (Section 8.9), the value 'xpath' may be used to indicate that
                           the select attribute of the filter element contains an XPath
                           expression.
                        </xs:documentation>
                        <xs:appinfo>
                           <ncx:metadata>
                              <ncx:syntax-string>FilterType type
                              </ncx:syntax-string>
                           </ncx:metadata>
                           <ncx:metadata>
                              <ncx:syntax-string>string select
                              </ncx:syntax-string>
                           </ncx:metadata>
                        </xs:appinfo>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="__.get.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="close-session_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.close-session.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="close-session" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            Request graceful termination of a NETCONF session.
            
            When a NETCONF server receives a &lt;close-session&gt; request, it will
            gracefully close the session.  The server will release any locks
            and resources associated with the session and gracefully close any
            associated connections.  Any NETCONF requests received after a
            'close-session' request will be ignored.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 7.8
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>
               close-session_output_type__
            </ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="__.close-session.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="kill-session_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.kill-session.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="kill-session" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            Force the termination of a NETCONF session.
            
            When a NETCONF entity receives a &lt;kill-session&gt; request for an
            open session, it will abort any operations currently in process,
            release any locks and resources associated with the session, and
            close any associated connections.
            
            If a NETCONF server receives a &lt;kill-session&gt; request while
            processing a confirmed commit (Section 8.4), it must restore the
            configuration to its state before the confirmed commit was issued.
            
            Otherwise, the &lt;kill-session&gt; operation does not roll back
            configuration or other device state modifications made by the
            entity holding the lock.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 7.9
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>
               kill-session_output_type__
            </ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="session-id" type="SessionId">
                     <xs:annotation>
                        <xs:documentation>
                           Particular session to kill.
                        </xs:documentation>
                        <xs:appinfo>
                           <ncx:mandatory>true</ncx:mandatory>
                        </xs:appinfo>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="__.kill-session.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="commit_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.commit.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="commit" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            Only available if 'candidate' capability is supported.
            
            When a candidate configuration's content is complete, the
            configuration data can be committed, publishing the data set to
            the rest of the device and requesting the device to conform to
            the behavior described in the new configuration.
            
            To commit the candidate configuration as the device's new
            current configuration, use the &lt;commit&gt; operation.
            
            The 'commit' operation instructs the device to implement the
            configuration data contained in the candidate configuration.
            If the device is unable to commit all of the changes in the
            candidate configuration datastore, then the running
            configuration MUST remain unchanged.  If the device does
            succeed in committing, the running configuration MUST be
            updated with the contents of the candidate configuration.
            
            If the system does not have the :candidate capability, the
            'commit' operation is not available.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 8.3.4.1
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>commit_output_type__</ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="confirmed" minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Request a confirmed commit.  Only available if 
                           'confirmed-commit' capability is supported.
                        </xs:documentation>
                        <ncx:reference>
                           <ncx:text>
                              RFC 4741, section 8.4.5.1
                           </ncx:text>
                           <ncx:url>
                              http://www.ietf.org/rfc/rfc4741.txt
                           </ncx:url>
                        </ncx:reference>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="confirm-timeout"
                     type="ConfirmTimeoutType" default="600"
                     minOccurs="0">
                     <xs:annotation>
                        <xs:documentation>
                           Request a specific timeout period for a confirmed commit
                           if 'confirmed-commit' capability supported.
                        </xs:documentation>
                        <ncx:reference>
                           <ncx:text>
                              RFC 4741, section 8.4.5.1
                           </ncx:text>
                           <ncx:url>
                              http://www.ietf.org/rfc/rfc4741.txt
                           </ncx:url>
                        </ncx:reference>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="__.commit.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="discard-changes_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.discard-changes.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="discard-changes"
      substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            Only available if 'candidate' capability is supported.
            
            If the client decides that the candidate configuration should not be
            committed, the 'discard-changes' operation can be used to revert the
            candidate configuration to the current running configuration.
            
            This operation discards any uncommitted changes by resetting the
            candidate configuration with the content of the running
            configuration.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 8.3.4.2
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>
               discard-changes_output_type__
            </ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="__.discard-changes.A__"
                     minOccurs="0" maxOccurs="unbounded"
                     abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:complexType name="validate_output_type__">
      <xs:complexContent>
         <xs:extension base="nc:dataInlineType">
            <xs:sequence>
               <xs:element name="__.validate.A__" minOccurs="0"
                  maxOccurs="unbounded" abstract="true"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="validate" substitutionGroup="nc:rpcOperation">
      <xs:annotation>
         <xs:documentation>
            Only available if 'validate' capability is supported.
            
            Validates the contents of the specified configuration.
         </xs:documentation>
         <ncx:reference>
            <ncx:text>
               RFC 4741, section 8.6.4.1
            </ncx:text>
            <ncx:url>
               http://www.ietf.org/rfc/rfc4741.txt
            </ncx:url>
         </ncx:reference>
         <xs:appinfo>
            <ncx:rpc-output>
               validate_output_type__
            </ncx:rpc-output>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="nc:rpcOperationType">
               <xs:sequence>
                  <xs:element name="source">
                     <xs:annotation>
                        <xs:documentation>
                           Particular configuration to validate.
                        </xs:documentation>
                     </xs:annotation>
                     <xs:complexType>
                        <xs:sequence>
                           <xs:choice>
                              <xs:annotation>
                                 <xs:appinfo>
                                    <ncx:choice-name>config-source
                                    </ncx:choice-name>
                                    <ncx:mandatory>true</ncx:mandatory>
                                 </xs:appinfo>
                              </xs:annotation>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>candidate</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="candidate"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'candidate' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.validate.input.source.config-source.candidate.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>running</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="running"
                                    minOccurs="0"/>
                                 <xs:element
                                    name="__.validate.input.source.config-source.running.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>startup</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="startup"
                                    minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Only available if 'startup' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.validate.input.source.config-source.startup.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>url</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="url"
                                    type="ConfigURIType" minOccurs="0">
                                    <xs:annotation>
                                       <xs:documentation>
                                          URL pointing to config data. Only available
                                          if 'url' capability supported.
                                       </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element
                                    name="__.validate.input.source.config-source.url.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:sequence>
                                 <xs:annotation>
                                    <xs:appinfo>
                                       <ncx:case-name>config</ncx:case-name>
                                    </xs:appinfo>
                                 </xs:annotation>
                                 <xs:element name="config">
                                    <xs:annotation>
                                       <xs:documentation>
                                          Inline configuration data
                                       </xs:documentation>
                                       <xs:appinfo>
                                          <ncx:config>true</ncx:config>
                                          <ncx:root/>
                                       </xs:appinfo>
                                    </xs:annotation>
                                    <xs:complexType>
                                       <xs:sequence>
                                          <xs:element
                                             name="__.validate.input.source.config-source.config.config.A__"
                                             minOccurs="0"
                                             maxOccurs="unbounded"
                                             abstract="true"/>
                                       </xs:sequence>
                                    </xs:complexType>
                                 </xs:element>
                                 <xs:element
                                    name="__.validate.input.source.config-source.config.A__"
                                    minOccurs="0" maxOccurs="unbounded"
                                    abstract="true"/>
                              </xs:sequence>
                              <xs:element
                                 name="__.validate.input.source.config-source.A__"
                                 minOccurs="0" maxOccurs="unbounded"
                                 abstract="true"/>
                           </xs:choice>
                           <xs:element
                              name="__.validate.input.source.A__"
                              minOccurs="0" maxOccurs="unbounded"
                              abstract="true"/>
                        </xs:sequence>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="__.validate.A__" minOccurs="0"
                     maxOccurs="unbounded" abstract="true"/>
               </xs:sequence>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>

   <xs:element name="config">
      <xs:annotation>
         <xs:documentation>
            Used as the container for NETCONF object definitions.
         </xs:documentation>
         <xs:appinfo>
            <ncx:config>true</ncx:config>
            <ncx:root/>
            <ncx:abstract/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexType>
         <xs:sequence>
            <xs:element name="__.config.A__" minOccurs="0"
               maxOccurs="unbounded" abstract="true"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>

</xs:schema>
