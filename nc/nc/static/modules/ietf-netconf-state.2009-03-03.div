
<div>
   <h1 class="yang">ietf-netconf-state.yang</h1>

   <ul id="nav">
      <li><a href="#">Typedefs</a>
         <ul>
            <li><a href="#SessionId.43">SessionId</a></li>
            <li><a href="#TransportType.68">TransportType</a></li>
            <li><a href="#ProtocolType.80">ProtocolType</a></li>
            <li><a href="#SchemaFormat.88">SchemaFormat</a></li>
         </ul>
      </li>
      <li><a href="#">Groupings</a>
         <ul>
            <li class="daddy"><a href="#NETCONFDatastoreType.50">NETCONFDatastoreType</a>
               <ul>
                  <li class="daddy"><a href="#datastore.54">datastore</a>
                     <ul>
                        <li class="daddy"><a href="#running.56">running</a>
                           <ul>
                              <li><a href="#running.56">running</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#candidate.59">candidate</a>
                           <ul>
                              <li><a href="#candidate.59">candidate</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#startup.62">startup</a>
                           <ul>
                              <li><a href="#startup.62">startup</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
      <li><a href="#">Objects</a>
         <ul>
            <li class="daddy"><a href="#ietf-netconf-state.102">ietf-netconf-state</a>
               <ul>
                  <li class="daddy"><a href="#capabilities.105">capabilities</a>
                     <ul>
                        <li><a href="#capability.110">capability</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#datastores.115">datastores</a>
                     <ul>
                        <li class="daddy"><a href="#datastore.120">datastore</a>
                           <ul>
                              <li><a href="#name.121">name</a></li>
                              <li><a href="#locks.124">locks</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#schemas.180">schemas</a>
                     <ul>
                        <li class="daddy"><a href="#schema.181">schema</a>
                           <ul>
                              <li><a href="#identifier.183">identifier</a></li>
                              <li><a href="#version.188">version</a></li>
                              <li><a href="#format.194">format</a></li>
                              <li><a href="#namespace.199">namespace</a></li>
                              <li><a href="#location.204">location</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#sessions.221">sessions</a>
                     <ul>
                        <li class="daddy"><a href="#session.225">session</a>
                           <ul>
                              <li><a href="#sessionId.227">sessionId</a></li>
                              <li><a href="#transport.230">transport</a></li>
                              <li><a href="#protocol.233">protocol</a></li>
                              <li><a href="#username.236">username</a></li>
                              <li><a href="#sourceHost.239">sourceHost</a></li>
                              <li><a href="#loginTime.242">loginTime</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#subscriptions.250">subscriptions</a>
                     <ul>
                        <li class="daddy"><a href="#subscription.255">subscription</a>
                           <ul>
                              <li><a href="#sessionId.259">sessionId</a></li>
                              <li><a href="#stream.264">stream</a></li>
                              <li><a href="#filter.269">filter</a></li>
                              <li><a href="#startTime.275">startTime</a></li>
                              <li><a href="#stopTime.281">stopTime</a></li>
                              <li><a href="#outNotifications.287">outNotifications</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#statistics.297">statistics</a>
                     <ul>
                        <li><a href="#netconfStartTime.298">netconfStartTime</a></li>
                        <li><a href="#inSessions.305">inSessions</a></li>
                        <li><a href="#inXMLParseErrors.314">inXMLParseErrors</a></li>
                        <li><a href="#inBadHellos.321">inBadHellos</a></li>
                        <li><a href="#inRpcs.329">inRpcs</a></li>
                        <li><a href="#inBadRpcs.334">inBadRpcs</a></li>
                        <li><a href="#inNotSupportedRpcs.341">inNotSupportedRpcs</a></li>
                        <li><a href="#outRpcReplies.348">outRpcReplies</a></li>
                        <li><a href="#outRpcErrors.353">outRpcErrors</a></li>
                        <li><a href="#outNotifications.359">outNotifications</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
      <li><a href="#">RPC&nbsp;Methods</a>
         <ul>
            <li class="daddy"><a href="#get-schema.368">get-schema</a>
               <ul>
                  <li class="daddy"><a href="#input.369">input</a>
                     <ul>
                        <li><a href="#identifier.370">identifier</a></li>
                        <li><a href="#version.374">version</a></li>
                        <li><a href="#format.378">format</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#output.383">output</a>
                     <ul>
                        <li><a href="#data.384">data</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">ietf-netconf-state</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span> <span class="yang_str">"urn:ietf:params:xml:ns:netconf:state"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"ns"</span>;

      <span class="yang_kw">import</span> <a href="/modules/ietf-yang-types">ietf-yang-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"yang"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/ietf-inet-types">ietf-inet-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"inet"</span>;
      }

      <span class="yang_kw">organization</span>
         <span class="yang_str">"IETF NETCONF (Network Configuration) Working Group"</span>;

      <span class="yang_kw">contact</span>
         <span class="yang_str">"WG Web:   &lt;http://tools.ietf.org/wg/netconf/&gt;
         WG List:  &lt;mailto:netconf@ietf.org&gt;
         
         WG Chair: Mehmet Ersue
         	  &lt;mailto:mehmet.ersue@nsn.com&gt;
         
         WG Chair: Bert Wijnen
         	  &lt;mailto:bertietf@bwijnen.net&gt;
         
         Editor:   Mark Scott
         	  &lt;mailto:markscot@nortel.com&gt;"</span>;

      <span class="yang_kw">description</span>
         <span class="yang_str">"NETCONF Monitoring Module.
         All elements in this module are read-only.
         
         Copyright (c) 2009 IETF Trust and the persons identified as the
         document authors.  All rights reserved.
         
         This version of this YANG module is part of RFC XXXX; see the
         RFC itself for full legal notices."</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2009-03-03"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Initial revision, published as RFC XXXX."</span>;
      }


      <a name="SessionId.43"></a><span class="yang_kw">typedef</span> <span class="yang_id">SessionId</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint32</span> {
            <span class="yang_kw">range</span> <span class="yang_str">"1..max"</span>;
         }
         <span class="yang_kw">reference</span>
            <span class="yang_str">"RFC 4741: NETCONF Configuration Protocol"</span>;
      }

      <a name="NETCONFDatastoreType.50"></a><span class="yang_kw">grouping</span> <span class="yang_id">NETCONFDatastoreType</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Enumeration of possible NETCONF datastore types."</span>;
         <span class="yang_kw">reference</span>
            <span class="yang_str">"RFC 4741: NETCONF Configuration Protocol"</span>;
         <a name="datastore.54"></a><span class="yang_kw">choice</span> <span class="yang_id">datastore</span> {
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <a name="running.56"></a><span class="yang_kw">case</span> <span class="yang_id">running</span> {
               <a name="running.56"></a><span class="yang_kw">leaf</span> <span class="yang_id">running</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
               }
            }  <span class="yang_cmt">// case running</span>

            <a name="candidate.59"></a><span class="yang_kw">case</span> <span class="yang_id">candidate</span> {
               <a name="candidate.59"></a><span class="yang_kw">leaf</span> <span class="yang_id">candidate</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
               }
            }  <span class="yang_cmt">// case candidate</span>

            <a name="startup.62"></a><span class="yang_kw">case</span> <span class="yang_id">startup</span> {
               <a name="startup.62"></a><span class="yang_kw">leaf</span> <span class="yang_id">startup</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
               }
            }  <span class="yang_cmt">// case startup</span>
         }  <span class="yang_cmt">// choice datastore</span>
      }  <span class="yang_cmt">// grouping NETCONFDatastoreType</span>

      <a name="TransportType.68"></a><span class="yang_kw">typedef</span> <span class="yang_id">TransportType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"SSH"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"TLS"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"Console"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"HTTP"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">3</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"HTTPS"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">4</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"BEEP"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">5</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"SOAP"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">6</span>;
            }
         }
      }

      <a name="ProtocolType.80"></a><span class="yang_kw">typedef</span> <span class="yang_id">ProtocolType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"CLI"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"NETCONF"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"WebUI"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
         }
      }

      <a name="SchemaFormat.88"></a><span class="yang_kw">typedef</span> <span class="yang_id">SchemaFormat</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"XSD"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"W3C REC REC-xmlschema-1-20041028"</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"YANG"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"draft-ietf-netmod-yang"</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"RNG"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"ISO/IEC 19757-2"</span>;
            }
         }
      }

      <a name="ietf-netconf-state.102"></a><span class="yang_kw">container</span> <span class="yang_id">ietf-netconf-state</span> {
         <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
         <a name="capabilities.105"></a><span class="yang_kw">container</span> <span class="yang_id">capabilities</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"The list of currently provided NETCONF capabilities.  This
               may be different than those exchanged during session setup
               (i.e. hello)."</span>;
            <a name="capability.110"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">capability</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#uri.408">inet:uri</a></span>;
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            }
         }  <span class="yang_cmt">// container capabilities</span>

         <a name="datastores.115"></a><span class="yang_kw">container</span> <span class="yang_id">datastores</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"List of NETCONF configuration datastores (e.g. running,
               startup, candidate) supported on this device and related
               information."</span>;
            <a name="datastore.120"></a><span class="yang_kw">list</span> <span class="yang_id">datastore</span> {
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <a name="name.121"></a><span class="yang_kw">container</span> <span class="yang_id">name</span> {

                  <a name="uses.122"></a><span class="yang_kw">uses</span> <a href="#NETCONFDatastoreType.50">NETCONFDatastoreType</a>;
               }  <span class="yang_cmt">// container name</span>

               <a name="locks.124"></a><span class="yang_kw">container</span> <span class="yang_id">locks</span> {
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"An indication of whether a resource is locked or
                     unlocked.  If locked, additional information about
                     the locking such as user an time stamp is provided."</span>;
                  <a name="LockInfo.130"></a><span class="yang_kw">grouping</span> <span class="yang_id">LockInfo</span> {
                     <a name="lockedBySession.131"></a><span class="yang_kw">leaf</span> <span class="yang_id">lockedBySession</span> {
                        <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionId.43">SessionId</a></span>;
                        <span class="yang_kw">description</span>
                           <span class="yang_str">"The session ID of the session that has locked
                           this resource."</span>;
                     }

                     <a name="lockedTime.137"></a><span class="yang_kw">leaf</span> <span class="yang_id">lockedTime</span> {
                        <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#date-and-time.282">yang:date-and-time</a></span>;
                        <span class="yang_kw">description</span>
                           <span class="yang_str">"The date and time of when the resource was
                           locked."</span>;
                     }
                  }  <span class="yang_cmt">// grouping LockInfo</span>
                  <a name="lockType.145"></a><span class="yang_kw">choice</span> <span class="yang_id">lockType</span> {
                     <a name="globalLock.146"></a><span class="yang_kw">case</span> <span class="yang_id">globalLock</span> {
                        <a name="globalLock.146"></a><span class="yang_kw">container</span> <span class="yang_id">globalLock</span> {
                           <span class="yang_kw">description</span> <span class="yang_str">"Present if the global lock is set."</span>;

                           <a name="uses.149"></a><span class="yang_kw">uses</span> <a href="#LockInfo.130">LockInfo</a>;
                        }  <span class="yang_cmt">// container globalLock</span>
                     }  <span class="yang_cmt">// case globalLock</span>

                     <a name="partialLocks.151"></a><span class="yang_kw">case</span> <span class="yang_id">partialLocks</span> {
                        <a name="partialLocks.151"></a><span class="yang_kw">list</span> <span class="yang_id">partialLocks</span> {
                           <span class="yang_kw">key</span> "<a href="#lockId.156">lockId</a>";
                           <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
                           <span class="yang_kw">description</span>
                              <span class="yang_str">"For a partial lock this is the lock id returned
                               in the &lt;partial-lock&gt; response."</span>;
                           <a name="lockId.156"></a><span class="yang_kw">leaf</span> <span class="yang_id">lockId</span> {
                              <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                           }

                           <a name="uses.160"></a><span class="yang_kw">uses</span> <a href="#LockInfo.130">LockInfo</a>;

                           <a name="select.161"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">select</span> {
                              <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                              <span class="yang_kw">min-elements</span> <span class="yang_str">"1"</span>;
                              <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
                              <span class="yang_kw">description</span>
                                 <span class="yang_str">"The xpath expression which was used to request
                                 the lock."</span>;
                           }

                           <a name="lockedNodes.168"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">lockedNodes</span> {
                              <span class="yang_kw">type</span> <span class="yang_id">instance-identifier</span>;
                              <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
                              <span class="yang_kw">description</span>
                                 <span class="yang_str">"The list of instance-identifiers (i.e. the
                                 locked nodes)."</span>;
                           }
                        }  <span class="yang_cmt">// list partialLocks</span>
                     }  <span class="yang_cmt">// case partialLocks</span>
                  }  <span class="yang_cmt">// choice lockType</span>
               }  <span class="yang_cmt">// container locks</span>
            }  <span class="yang_cmt">// list datastore</span>
         }  <span class="yang_cmt">// container datastores</span>

         <a name="schemas.180"></a><span class="yang_kw">container</span> <span class="yang_id">schemas</span> {
            <a name="schema.181"></a><span class="yang_kw">list</span> <span class="yang_id">schema</span> {
               <span class="yang_kw">key</span> "<a href="#identifier.183">identifier</a> <a href="#version.188">version</a> <a href="#format.194">format</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <a name="identifier.183"></a><span class="yang_kw">leaf</span> <span class="yang_id">identifier</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Identifier to uniquely reference the schema"</span>;
               }

               <a name="version.188"></a><span class="yang_kw">leaf</span> <span class="yang_id">version</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Version of the schema supported.  Multiple versions can be
                     supported simultaneously."</span>;
               }

               <a name="format.194"></a><span class="yang_kw">leaf</span> <span class="yang_id">format</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#SchemaFormat.88">SchemaFormat</a></span>;
                  <span class="yang_kw">description</span> <span class="yang_str">"Schema language for the file/module."</span>;
               }

               <a name="namespace.199"></a><span class="yang_kw">leaf</span> <span class="yang_id">namespace</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#uri.408">inet:uri</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The XML namespace defined by the data model."</span>;
               }

               <a name="location.204"></a><span class="yang_kw">leaf</span> <span class="yang_id">location</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">union</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                        <span class="yang_kw">enum</span> <span class="yang_str">"NETCONF"</span> {
                           <span class="yang_kw">value</span> <span class="yang_str">0</span>;
                        }
                     }
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#uri.408">inet:uri</a></span>;
                  }
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"One or more Locations from which the schema can be
                     retrieved. Can be either on the network device
                     retrievable explicitly via the get-schema netconf
                     operation (denoted by the value 'NETCONF') or some
                     network location (i.e. URL)."</span>;
               }
            }  <span class="yang_cmt">// list schema</span>
         }  <span class="yang_cmt">// container schemas</span>

         <a name="sessions.221"></a><span class="yang_kw">container</span> <span class="yang_id">sessions</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"List of NETCONF sessions currently active on this device."</span>;
            <a name="session.225"></a><span class="yang_kw">list</span> <span class="yang_id">session</span> {
               <span class="yang_kw">key</span> "<a href="#sessionId.227">sessionId</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <a name="sessionId.227"></a><span class="yang_kw">leaf</span> <span class="yang_id">sessionId</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionId.43">SessionId</a></span>;
               }

               <a name="transport.230"></a><span class="yang_kw">leaf</span> <span class="yang_id">transport</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#TransportType.68">TransportType</a></span>;
               }

               <a name="protocol.233"></a><span class="yang_kw">leaf</span> <span class="yang_id">protocol</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#ProtocolType.80">ProtocolType</a></span>;
               }

               <a name="username.236"></a><span class="yang_kw">leaf</span> <span class="yang_id">username</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }

               <a name="sourceHost.239"></a><span class="yang_kw">leaf</span> <span class="yang_id">sourceHost</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#host.398">inet:host</a></span>;
               }

               <a name="loginTime.242"></a><span class="yang_kw">leaf</span> <span class="yang_id">loginTime</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#date-and-time.282">yang:date-and-time</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Time at which the session was established."</span>;
               }
            }  <span class="yang_cmt">// list session</span>
         }  <span class="yang_cmt">// container sessions</span>

         <a name="subscriptions.250"></a><span class="yang_kw">container</span> <span class="yang_id">subscriptions</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains information on the active subscriptions on the
               NETCONF server.  Subscriptions which have ended are not
               reported."</span>;
            <a name="subscription.255"></a><span class="yang_kw">list</span> <span class="yang_id">subscription</span> {
               <span class="yang_kw">key</span> "<a href="#sessionId.259">sessionId</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Information about Netconf Notification Subscriptions."</span>;
               <a name="sessionId.259"></a><span class="yang_kw">leaf</span> <span class="yang_id">sessionId</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="#SessionId.43">SessionId</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The session id associated with this subscription."</span>;
               }

               <a name="stream.264"></a><span class="yang_kw">leaf</span> <span class="yang_id">stream</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The stream associated with this subscription."</span>;
               }

               <a name="filter.269"></a><span class="yang_kw">anyxml</span> <span class="yang_id">filter</span> {
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The filters associated with this subscription."</span>;
                  <span class="yang_kw">reference</span>
                     <span class="yang_str">"RFC 4741: NETCONF Configuration Protocol"</span>;
               }

               <a name="startTime.275"></a><span class="yang_kw">leaf</span> <span class="yang_id">startTime</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#date-and-time.282">yang:date-and-time</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The startTime parameter from the create-subscription
                     invokation, if it was present."</span>;
               }

               <a name="stopTime.281"></a><span class="yang_kw">leaf</span> <span class="yang_id">stopTime</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#date-and-time.282">yang:date-and-time</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The stopTime parameter from the create-subscription
                     invokation, if it was present."</span>;
               }

               <a name="outNotifications.287"></a><span class="yang_kw">leaf</span> <span class="yang_id">outNotifications</span> {
                  <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"A count of event notifications sent along
                     this connection since the subscription was
                     created."</span>;
               }
            }  <span class="yang_cmt">// list subscription</span>
         }  <span class="yang_cmt">// container subscriptions</span>

         <a name="statistics.297"></a><span class="yang_kw">container</span> <span class="yang_id">statistics</span> {
            <a name="netconfStartTime.298"></a><span class="yang_kw">leaf</span> <span class="yang_id">netconfStartTime</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#date-and-time.282">yang:date-and-time</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Date and time at which the NETCONF server process was
                  started.  Allows for calculation of time interval for
                  reported metrics."</span>;
            }

            <a name="inSessions.305"></a><span class="yang_kw">leaf</span> <span class="yang_id">inSessions</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of NETCONF sessions started towards the
                  NETCONF peer.
                  
                   inSessions - inBadHellos = 'number of correctly started
                  			     netconf sessions'"</span>;
            }

            <a name="inXMLParseErrors.314"></a><span class="yang_kw">leaf</span> <span class="yang_id">inXMLParseErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of messages that were unparsable and thus
                  ignored.  This covers both unparsable 'hello' and 'rpc'
                  messages."</span>;
            }

            <a name="inBadHellos.321"></a><span class="yang_kw">leaf</span> <span class="yang_id">inBadHellos</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of sessions silently dropped because an
                  invalid 'hello' message was received.  This includes hello
                  messages with a 'session-id' attribute, bad namespace, and
                  bad capability declarations."</span>;
            }

            <a name="inRpcs.329"></a><span class="yang_kw">leaf</span> <span class="yang_id">inRpcs</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of rpc requests received."</span>;
            }

            <a name="inBadRpcs.334"></a><span class="yang_kw">leaf</span> <span class="yang_id">inBadRpcs</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of rpcs which were parsed correctly, but
                  couldn't be serviced because they contained
                  non-conformant XML,  e.g. missing a mandatory parameter."</span>;
            }

            <a name="inNotSupportedRpcs.341"></a><span class="yang_kw">leaf</span> <span class="yang_id">inNotSupportedRpcs</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of rpcs which were parsed correctly, but
                  couldn't be serviced because they were not supported by
                  the agent."</span>;
            }

            <a name="outRpcReplies.348"></a><span class="yang_kw">leaf</span> <span class="yang_id">outRpcReplies</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of 'rpc-reply' messages sent."</span>;
            }

            <a name="outRpcErrors.353"></a><span class="yang_kw">leaf</span> <span class="yang_id">outRpcErrors</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of 'rpc-reply' messages with 'rpc-error'
                   sent."</span>;
            }

            <a name="outNotifications.359"></a><span class="yang_kw">leaf</span> <span class="yang_id">outNotifications</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#zero-based-counter32.107">yang:zero-based-counter32</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The total number of 'notifications' messages sent."</span>;
            }
         }  <span class="yang_cmt">// container statistics</span>
      }  <span class="yang_cmt">// container ietf-netconf-state</span>

      <a name="get-schema.368"></a><span class="yang_kw">rpc</span> <span class="yang_id">get-schema</span> {
         <a name="input.369"></a><span class="yang_kw">input</span> {
            <a name="identifier.370"></a><span class="yang_kw">leaf</span> <span class="yang_id">identifier</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            }

            <a name="version.374"></a><span class="yang_kw">leaf</span> <span class="yang_id">version</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            }

            <a name="format.378"></a><span class="yang_kw">leaf</span> <span class="yang_id">format</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#SchemaFormat.88">SchemaFormat</a></span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            }
         }

         <a name="output.383"></a><span class="yang_kw">output</span> {
            <a name="data.384"></a><span class="yang_kw">anyxml</span> <span class="yang_id">data</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Contains the schema content."</span>;
            }
         }
      }  <span class="yang_cmt">// rpc get-schema</span>
   }  <span class="yang_cmt">// module ietf-netconf-state</span>
</pre>
</div>
</div>