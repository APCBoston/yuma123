
<div>
   <h1 class="yang">ncx.yang</h1>

   <ul id="nav">
      <li><a href="#">Groupings</a>
         <ul>
            <li class="daddy"><a href="#reference.215">reference</a>
               <ul>
                  <li class="daddy"><a href="#reference.216">reference</a>
                     <ul>
                        <li><a href="#text.225">text</a></li>
                        <li><a href="#url.231">url</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
      <li><a href="#">Objects</a>
         <ul>
            <li><a href="#belongs-to.51">belongs-to</a></li>
            <li><a href="#case-name.59">case-name</a></li>
            <li><a href="#choice-name.67">choice-name</a></li>
            <li><a href="#config.75">config</a></li>
            <li><a href="#contact.84">contact</a></li>
            <li><a href="#default.93">default</a></li>
            <li><a href="#mandatory.102">mandatory</a></li>
            <li><a href="#min-elements.111">min-elements</a></li>
            <li><a href="#max-elements.121">max-elements</a></li>
            <li class="daddy"><a href="#must.136">must</a>
               <ul>
                  <li><a href="#xpath.144">xpath</a></li>
                  <li><a href="#description.152">description</a></li>
                  <li><a href="#uses.159">uses</a></li>
                  <li><a href="#error-app-tag.161">error-app-tag</a></li>
                  <li><a href="#error-message.168">error-message</a></li>
               </ul>
            </li>
            <li><a href="#ordered-by.176">ordered-by</a></li>
            <li><a href="#organization.188">organization</a></li>
            <li><a href="#path.197">path</a></li>
            <li><a href="#position.206">position</a></li>
            <li><a href="#uses.240">uses</a></li>
            <li class="daddy"><a href="#revision.242">revision</a>
               <ul>
                  <li><a href="#version.250">version</a></li>
                  <li><a href="#description.258">description</a></li>
               </ul>
            </li>
            <li><a href="#rpc-output.267">rpc-output</a></li>
            <li><a href="#source.276">source</a></li>
            <li><a href="#units.285">units</a></li>
            <li><a href="#value.295">value</a></li>
         </ul>
      </li>
      <li><a href="#">Extensions</a>
         <ul>
            <li><a href="#abstract.339">abstract</a></li>
            <li><a href="#cli.348">cli</a></li>
            <li><a href="#default-parm.356">default-parm</a></li>
            <li><a href="#hidden.378">hidden</a></li>
            <li><a href="#metadata.389">metadata</a></li>
            <li><a href="#no-duplicates.412">no-duplicates</a></li>
            <li><a href="#password.418">password</a></li>
            <li><a href="#root.425">root</a></li>
            <li><a href="#xsdlist.434">xsdlist</a></li>
            <li><a href="#xpath.448">xpath</a></li>
            <li><a href="#qname.464">qname</a></li>
            <li><a href="#secure.476">secure</a></li>
            <li><a href="#very-secure.489">very-secure</a></li>
            <li><a href="#schema-instance.502">schema-instance</a></li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">ncx</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span> <span class="yang_str">"http://netconfcentral.com/ncx"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"ncx"</span>;

      <span class="yang_kw">organization</span> <span class="yang_str">"Netconf Central"</span>;

      <span class="yang_kw">contact</span>
         <span class="yang_str">"Andy Bierman &lt;andy at netconfcentral.com&gt;"</span>;

      <span class="yang_kw">description</span>
         <span class="yang_str">"This module contains definitions for Netconf Central extensions.
         The elements will be present in appinfo elements,
         used in YANG or NCX to XSD translation.
         The extensions are used within YANG modules to add features
         in YangTools that use particular extensions."</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2009-04-10"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Removed rpc-type extension; use 'ncx:secure' instead"</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"2008-08-23"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Added abstract extension.  Marked all objects as abstract
            so they will not be included in the NETCONF database."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"2008-08-01"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Added password, hidden, xsdlist, and root extensions."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"2008-04-16"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Added metadata and rpc-type extensions."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"2008-03-21"</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Added no-duplicates extension."</span>;
      }

      <span class="yang_kw">revision</span> <span class="yang_str">"2008-02-21"</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Initial revision."</span>;
      }


      <a name="belongs-to.51"></a><span class="yang_kw">leaf</span> <span class="yang_id">belongs-to</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the module name value for a belongs-to-stmt.
            Will be present in appinfo for a YANG submodule."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="case-name.59"></a><span class="yang_kw">leaf</span> <span class="yang_id">case-name</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the identifier-str value for a YANG case name.
            Will be present in appinfo for all choice case definitions."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="choice-name.67"></a><span class="yang_kw">leaf</span> <span class="yang_id">choice-name</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the identifier-str value for a YANG choice name.
            Will be present in appinfo for all choice object definitions."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="config.75"></a><span class="yang_kw">leaf</span> <span class="yang_id">config</span> {
         <span class="yang_kw">type</span> <span class="yang_id">boolean</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the value from the config-stmt.
            Will be present in appinfo for top-level objects
            or if config-stmt is present in the object definition."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="contact.84"></a><span class="yang_kw">leaf</span> <span class="yang_id">contact</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the value from the contact-stmt.
            Will be present in appinfo for the module.
            if defined in the module."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="default.93"></a><span class="yang_kw">leaf</span> <span class="yang_id">default</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the value from the default-stmt.
            Will be present in appinfo for a typedef that includes
            a default-stmt."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="mandatory.102"></a><span class="yang_kw">leaf</span> <span class="yang_id">mandatory</span> {
         <span class="yang_kw">type</span> <span class="yang_id">boolean</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the value from the mandatory-stmt.
            Will be present in appinfo if mandatory-stmt is 
            present in the object definition."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="min-elements.111"></a><span class="yang_kw">leaf</span> <span class="yang_id">min-elements</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the value from the min-elements-stmt.
            Will be present in appinfo for a list or leaf-list
            object, if the min-elements-stmt is present
            in the object definition."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="max-elements.121"></a><span class="yang_kw">leaf</span> <span class="yang_id">max-elements</span> {
         <span class="yang_kw">type</span> <span class="yang_id">union</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
               <span class="yang_kw">enum</span> <span class="yang_str">"unbounded"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">0</span>;
               }
            }
         }
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the value from the max-elements-stmt.
            Will be present in appinfo for a list or leaf-list
            object, if the max-elements-stmt is present
            in the object definition."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="must.136"></a><span class="yang_kw">container</span> <span class="yang_id">must</span> {
         <span class="yang_kw">presence</span>
            <span class="yang_str">"Indicates a must statement is configured."</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the fields from one must-stmt.  Will be present
            in appinfo for each must-stmt defined within an object."</span>;
         <a name="xpath.144"></a><span class="yang_kw">leaf</span> <span class="yang_id">xpath</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The xpath statement specifying the system conditions
               that must be true for a valid configuration."</span>;
         }

         <a name="description.152"></a><span class="yang_kw">leaf</span> <span class="yang_id">description</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains the description-stmt value from the must-stmt,
               if present."</span>;
         }

         <a name="uses.159"></a><span class="yang_kw">uses</span> <a href="#reference.215">reference</a>;

         <a name="error-app-tag.161"></a><span class="yang_kw">leaf</span> <span class="yang_id">error-app-tag</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains the error-app-tag-stmt value from the must-stmt,
               if present."</span>;
         }

         <a name="error-message.168"></a><span class="yang_kw">leaf</span> <span class="yang_id">error-message</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains the error-message-stmt value from the must-stmt,
               if present."</span>;
         }
         <a href="#abstract.339">ncx:abstract</a>;
      }  <span class="yang_cmt">// container must</span>

      <a name="ordered-by.176"></a><span class="yang_kw">leaf</span> <span class="yang_id">ordered-by</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"system"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"user"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
         }
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the value from the ordered-by.
            Will be present in appinfo for all list and leaf-list
            object definitions."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="organization.188"></a><span class="yang_kw">leaf</span> <span class="yang_id">organization</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the value from the organization-stmt.
            Will be present in appinfo if oraganization-stmt is 
            present in the module."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="path.197"></a><span class="yang_kw">leaf</span> <span class="yang_id">path</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the path-stmt Xpath expression value for a leafref.
            Will be present in appinfo for all leafref typedefs, and
            inline type-stmts for leafref leafs and leaf-lists."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="position.206"></a><span class="yang_kw">leaf</span> <span class="yang_id">position</span> {
         <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the position-stmt value for a bit definition.
            Will be present in appinfo for all 'bits' typedefs, and
            inline type-stmts for leafs and leaf-lists."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="reference.215"></a><span class="yang_kw">grouping</span> <span class="yang_id">reference</span> {
         <a name="reference.216"></a><span class="yang_kw">container</span> <span class="yang_id">reference</span> {
            <span class="yang_kw">presence</span>
               <span class="yang_str">"Indicates a reference statement is configured."</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains information from the reference-stmt.  Will
               be present in appinfo for objects which contain a
               reference-stmt."</span>;
            <a name="text.225"></a><span class="yang_kw">leaf</span> <span class="yang_id">text</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Value from the reference-stmt."</span>;
            }

            <a name="url.231"></a><span class="yang_kw">leaf</span> <span class="yang_id">url</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"URL for the specified reference.  Will be present
                  if the 'text' field begins with 'RFC xxxx' or 'draft-'"</span>;
            }
            <a href="#abstract.339">ncx:abstract</a>;
         }  <span class="yang_cmt">// container reference</span>
      }  <span class="yang_cmt">// grouping reference</span>

      <a name="uses.240"></a><span class="yang_kw">uses</span> <a href="#reference.215">reference</a>;

      <a name="revision.242"></a><span class="yang_kw">container</span> <span class="yang_id">revision</span> {
         <span class="yang_kw">presence</span>
            <span class="yang_str">"Indicates a revision statement is configured."</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the fields from one revision-stmt.  Will be present
            in appinfo for each revision-stmt defined within the module."</span>;
         <a name="version.250"></a><span class="yang_kw">leaf</span> <span class="yang_id">version</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains the date string value from the revision-stmt."</span>;
            <a href="#abstract.339">ncx:abstract</a>;
         }

         <a name="description.258"></a><span class="yang_kw">leaf</span> <span class="yang_id">description</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains the description-stmt value from the revision-stmt."</span>;
            <a href="#abstract.339">ncx:abstract</a>;
         }
         <a href="#abstract.339">ncx:abstract</a>;
      }  <span class="yang_cmt">// container revision</span>

      <a name="rpc-output.267"></a><span class="yang_kw">leaf</span> <span class="yang_id">rpc-output</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the XSD type name value for the RPC output data
            for one RPC method.  Will be present in appinfo for
            all rpc definitions which contain an output-stmt."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="source.276"></a><span class="yang_kw">leaf</span> <span class="yang_id">source</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the complete filespec of the source file used
            for the XSD translation. Will be present in the appinfo
            for the module header."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="units.285"></a><span class="yang_kw">leaf</span> <span class="yang_id">units</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the units-stmt value for a type or leaf.
            Will be present in appinfo for typedefs, and 
            inline type-stmts for leafs and leaf-lists,
            which contain a units-stmt."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="value.295"></a><span class="yang_kw">leaf</span> <span class="yang_id">value</span> {
         <span class="yang_kw">type</span> <span class="yang_id">int32</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"Contains the value-stmt value for an enum definition.
            Will be present in appinfo for all 'enumeration' 
            typedefs, and inline type-stmts for leafs and leaf-lists."</span>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="any.309"></a><span class="yang_kw">anyxml</span> <span class="yang_id">any</span> {
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <a href="#hidden.378">ncx:hidden</a>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="struct.314"></a><span class="yang_kw">container</span> <span class="yang_id">struct</span> {
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <a href="#hidden.378">ncx:hidden</a>;
         <a href="#abstract.339">ncx:abstract</a>;
      }  <span class="yang_cmt">// container struct</span>

      <a name="string.319"></a><span class="yang_kw">leaf</span> <span class="yang_id">string</span> {
         <span class="yang_kw">type</span> <span class="yang_id">string</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <a href="#hidden.378">ncx:hidden</a>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="empty.325"></a><span class="yang_kw">leaf</span> <span class="yang_id">empty</span> {
         <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <a href="#hidden.378">ncx:hidden</a>;
         <a href="#abstract.339">ncx:abstract</a>;
      }

      <a name="root.331"></a><span class="yang_kw">container</span> <span class="yang_id">root</span> {
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <a href="#hidden.378">ncx:hidden</a>;
         <a href="#abstract.339">ncx:abstract</a>;
         <a href="#root.425">ncx:root</a>;
      }  <span class="yang_cmt">// container root</span>

      <a name="abstract.339"></a><span class="yang_kw">extension</span> <span class="yang_id">abstract</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used with object definitions to indicate that they
            do not represent CLI or NETCONF configuration database
            data instances.  Instead, the node is simply an object
            identifier, an 'error-info' extension, or some other
            abstract data structure."</span>;
      }

      <a name="cli.348"></a><span class="yang_kw">extension</span> <span class="yang_id">cli</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used within a container definition to indicate it is
            only used as a conceptual container for a set of CLI parameters.
            A top-level container containing this extension will not
            be included in any NETCONF configuration databases."</span>;
      }

      <a name="default-parm.356"></a><span class="yang_kw">extension</span> <span class="yang_id">default-parm</span> {
         <span class="yang_kw">argument</span> <span class="yang_str">"parm"</span> {
            <span class="yang_kw">yin-element</span> <span class="yang_str">"true"</span> {
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used within a CLI container or rpc definition to specify a
            leaf parameter within the CLI container or rpc input
            section, that is used as the default if no parameter name 
            is entered.
            
            These values must not begin with a dash (-) or 
            double dash (--) sequence or they will be mistaken
            for CLI parameter names.
            
            This option is somewhat risky because any unrecognized
            parameter without any prefix (- or --) will be tried
            as the default parameter type, instead of catching
            the unknown parameter error.  It can also be useful though, 
            for assigning file name parameters through shell expansion,
            or if there is only one parameter."</span>;
      }

      <a name="hidden.378"></a><span class="yang_kw">extension</span> <span class="yang_id">hidden</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to prevent publication of a YANG data object.
            Will be ignored for typedefs and other constructs.
            If present, that node and any sub-nodes will be ignored
            when generating HTML documentation or cYANG output.
            
            The yangdump -f=copy mode will not be affected by
            this extension. "</span>;
      }

      <a name="metadata.389"></a><span class="yang_kw">extension</span> <span class="yang_id">metadata</span> {
         <span class="yang_kw">argument</span> <span class="yang_str">"syntax-string"</span> {
            <span class="yang_kw">yin-element</span> <span class="yang_str">"true"</span> {
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to define an XML attribute to be associated with a
            data-def-stmt node.  Only optional metadata can be
            defined.  Errors for missing XML attributes (except
            as specified by the YANG language) will not be
            checked automatically.
            
            The syntax string has the following format:
            
               [prefix:]typename  attribute-name
            
            Any YANG typedef of builtin type can be specified as
            the type name, except 'empty'.
            
            Example from get command in netconf.yang:
               ncx:metadata 'FilterType type';   "</span>;
      }

      <a name="no-duplicates.412"></a><span class="yang_kw">extension</span> <span class="yang_id">no-duplicates</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to indicate that no duplicate values are allowed
            in an ncx:xsdlist leaf or leaf-list object."</span>;
      }

      <a name="password.418"></a><span class="yang_kw">extension</span> <span class="yang_id">password</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to indicate the data type for the leaf is really
            a password.  Only the encrypted version of the password
            is allowed to be generated in any output."</span>;
      }

      <a name="root.425"></a><span class="yang_kw">extension</span> <span class="yang_id">root</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used within a container definition to indicate it is
            really a root container for a conceptual NETCONF database,
            instead of just an empty container.  This is needed
            for yangtools to correctly process any RPC method
            that contains a 'config' parameter."</span>;
      }

      <a name="xsdlist.434"></a><span class="yang_kw">extension</span> <span class="yang_id">xsdlist</span> {
         <span class="yang_kw">argument</span> <span class="yang_str">"type"</span> {
            <span class="yang_kw">yin-element</span> <span class="yang_str">"true"</span> {
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to indicate the leaf string type is really an
            XSD list, which is a series of whitespace separated
            strings. The type argument represents the data type
            to use for the list members, for validation purposes.
            
            Allowed to be present within the type sub-section
            for a string."</span>;
      }

      <a name="xpath.448"></a><span class="yang_kw">extension</span> <span class="yang_id">xpath</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to indicate that the content of a data type
            is an XPath expression.  This is needed to properly
            evaluate the namespace prefixes within the expression.
            
            The xpath extension may appear within the type-stmt,
            within a typedef, leaf, or leaf-list.  The builtin
            data type must be 'string', or the 'xpath' extension
            will be ignored.
            
            All data using the 'instance-identifier' built-in type
            will automatically be processed as an XPath string,
            so the xpath extension is not needed in that case."</span>;
      }

      <a name="qname.464"></a><span class="yang_kw">extension</span> <span class="yang_id">qname</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to indicate that the content of a data type
            is a Qualified Name.  This is needed to properly
            evaluate the namespace prefix, if used.
            
            The qname extension may appear within the type-stmt,
            within a typedef, leaf, or leaf-list.  The builtin
            data type must be 'string', or the 'qname' extension
            will be ignored."</span>;
      }

      <a name="secure.476"></a><span class="yang_kw">extension</span> <span class="yang_id">secure</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to indicate that the data model node 
            controls a sensitive security system parameter.
            
            If present, the netconfd agent will only allow
            the 'root' user to modify or delete the node.
            
            The 'secure' extension may appear within the type-stmt,
            or within a data node definition.  It is ignored
            otherwise."</span>;
      }

      <a name="very-secure.489"></a><span class="yang_kw">extension</span> <span class="yang_id">very-secure</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to indicate that the data model node 
            controls a very sensitive security system parameter.
            
            If present, the netconfd agent will only allow
            the 'root' user to access the node.
            
            The 'very-secure' extension may appear within the type-stmt,
            or within a data node definition.  It is ignored
            otherwise."</span>;
      }

      <a name="schema-instance.502"></a><span class="yang_kw">extension</span> <span class="yang_id">schema-instance</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Used to indicate that the typedef or type statement
            for a string data type really identifies a
            special schema-instance node, not a generic string.
            
            A schema-instance value string is an unrestricted YANG
            instance-identifier expression.  All the same rules
            as an instance-identifier apply except:
            
                * predicates for keys are optional;
                  The dataRule will apply to all instances
                  of any missing key leaf predicate.
            
            This extension will be ignored unless it is present
            in the type-stmt of a typedef-stmt, leaf-stmt, 
            or leaf-list-stmt, or directly within a leaf-stmt or
            leaf-list-stmt."</span>;
      }
   }  <span class="yang_cmt">// module ncx</span>
</pre>
</div>
</div>