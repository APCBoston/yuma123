
<div>
   <h1 class="yang">ipfix-psamp.yang</h1>

   <ul id="nav">
      <li><a href="#">Typedefs</a>
         <ul>
            <li><a href="#direction.154">direction</a></li>
            <li><a href="#cacheType.164">cacheType</a></li>
            <li><a href="#exportMemberType.183">exportMemberType</a></li>
            <li><a href="#optionType.197">optionType</a></li>
            <li><a href="#transportSessionStatus.239">transportSessionStatus</a></li>
            <li><a href="#ipfixTransportProtocol.250">ipfixTransportProtocol</a></li>
            <li><a href="#templateFieldFlags.266">templateFieldFlags</a></li>
            <li><a href="#filterRStateFunction.280">filterRStateFunction</a></li>
         </ul>
      </li>
      <li><a href="#">Groupings</a>
         <ul>
            <li class="daddy"><a href="#informationElement.296">informationElement</a>
               <ul>
                  <li class="daddy"><a href="#nameOrId.298">nameOrId</a>
                     <ul>
                        <li class="daddy"><a href="#ieName.302">ieName</a>
                           <ul>
                              <li><a href="#ieName.302">ieName</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#ieId.303">ieId</a>
                           <ul>
                              <li><a href="#ieId.303">ieId</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li><a href="#ieLength.305">ieLength</a></li>
                  <li><a href="#ieEnterpriseNumber.312">ieEnterpriseNumber</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#interfaceParameters.320">interfaceParameters</a>
               <ul>
                  <li class="daddy"><a href="#indexOrName.322">indexOrName</a>
                     <ul>
                        <li class="daddy"><a href="#ifIndex.327">ifIndex</a>
                           <ul>
                              <li><a href="#ifIndex.327">ifIndex</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#ifName.328">ifName</a>
                           <ul>
                              <li><a href="#ifName.328">ifName</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li><a href="#direction.330">direction</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#linecardParameters.339">linecardParameters</a>
               <ul>
                  <li class="daddy"><a href="#indexOrName.341">indexOrName</a>
                     <ul>
                        <li class="daddy"><a href="#entPhysicalIndex.346">entPhysicalIndex</a>
                           <ul>
                              <li><a href="#entPhysicalIndex.346">entPhysicalIndex</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#entPhysicalName.347">entPhysicalName</a>
                           <ul>
                              <li><a href="#entPhysicalName.347">entPhysicalName</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li><a href="#direction.349">direction</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#selectorParameters.358">selectorParameters</a>
               <ul>
                  <li><a href="#selectorId.360">selectorId</a></li>
                  <li class="daddy"><a href="#Method.368">Method</a>
                     <ul>
                        <li class="daddy"><a href="#selectAll.373">selectAll</a>
                           <ul>
                              <li><a href="#selectAll.373">selectAll</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#sampCountBased.374">sampCountBased</a>
                           <ul>
                              <li class="daddy"><a href="#sampCountBased.374">sampCountBased</a>
                                 <ul>
                                    <li><a href="#interval.376">interval</a></li>
                                    <li><a href="#spacing.380">spacing</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#sampTimeBased.385">sampTimeBased</a>
                           <ul>
                              <li class="daddy"><a href="#sampTimeBased.385">sampTimeBased</a>
                                 <ul>
                                    <li><a href="#interval.387">interval</a></li>
                                    <li><a href="#spacing.391">spacing</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#sampRandOutOfN.396">sampRandOutOfN</a>
                           <ul>
                              <li class="daddy"><a href="#sampRandOutOfN.396">sampRandOutOfN</a>
                                 <ul>
                                    <li><a href="#population.398">population</a></li>
                                    <li><a href="#sample.402">sample</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#sampUniProb.407">sampUniProb</a>
                           <ul>
                              <li class="daddy"><a href="#sampUniProb.407">sampUniProb</a>
                                 <ul>
                                    <li><a href="#probability.409">probability</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#sampNonUniProb.416">sampNonUniProb</a>
                           <ul>
                              <li class="daddy"><a href="#sampNonUniProb.416">sampNonUniProb</a>
                                 <ul>
                                    <li><a href="#function.418">function</a></li>
                                    <li><a href="#funcParam.422">funcParam</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#sampFlowState.427">sampFlowState</a>
                           <ul>
                              <li class="daddy"><a href="#sampFlowState.427">sampFlowState</a>
                                 <ul>
                                    <li><a href="#function.429">function</a></li>
                                    <li><a href="#funcParam.433">funcParam</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#filterMatch.438">filterMatch</a>
                           <ul>
                              <li class="daddy"><a href="#filterMatch.438">filterMatch</a>
                                 <ul>
                                    <li><a href="#nameOrId.441">nameOrId</a></li>
                                    <li><a href="#ieEnterpriseNumber.453">ieEnterpriseNumber</a></li>
                                    <li><a href="#startValue.459">startValue</a></li>
                                    <li><a href="#stopValue.463">stopValue</a></li>
                                    <li><a href="#mask.467">mask</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#filterHash.472">filterHash</a>
                           <ul>
                              <li class="daddy"><a href="#filterHash.472">filterHash</a>
                                 <ul>
                                    <li><a href="#addrType.474">addrType</a></li>
                                    <li><a href="#headerBits.478">headerBits</a></li>
                                    <li><a href="#payloadBytes.486">payloadBytes</a></li>
                                    <li><a href="#payloadBits.490">payloadBits</a></li>
                                    <li><a href="#function.495">function</a></li>
                                    <li><a href="#funcParam.499">funcParam</a></li>
                                    <li><a href="#inputBits.503">inputBits</a></li>
                                    <li><a href="#outputBits.507">outputBits</a></li>
                                    <li><a href="#outputMask.511">outputMask</a></li>
                                    <li><a href="#selection.515">selection</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#filterRState.520">filterRState</a>
                           <ul>
                              <li class="daddy"><a href="#filterRState.520">filterRState</a>
                                 <ul>
                                    <li><a href="#function.522">function</a></li>
                                    <li><a href="#negate.526">negate</a></li>
                                    <li><a href="#ifIndex.530">ifIndex</a></li>
                                    <li><a href="#startAS.537">startAS</a></li>
                                    <li><a href="#stopAS.541">stopAS</a></li>
                                    <li><a href="#vendorFunc.545">vendorFunc</a></li>
                                 </ul>
                              </li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li><a href="#packetsObserved.551">packetsObserved</a></li>
                  <li><a href="#packetsDropped.559">packetsDropped</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#cacheLayoutParameters.569">cacheLayoutParameters</a>
               <ul>
                  <li class="daddy"><a href="#cacheField.571">cacheField</a>
                     <ul>
                        <li><a href="#name.574">name</a></li>
                        <li><a href="#uses.575">uses</a></li>
                        <li><a href="#isFlowKey.576">isFlowKey</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#destinationParameters.583">destinationParameters</a>
               <ul>
                  <li><a href="#type.585">type</a></li>
                  <li><a href="#transportProtocol.592">transportProtocol</a></li>
                  <li><a href="#destinationIpAddress.596">destinationIpAddress</a></li>
                  <li><a href="#destinationPort.600">destinationPort</a></li>
                  <li><a href="#sourceIpAddress.604">sourceIpAddress</a></li>
                  <li><a href="#localIpAddress.611">localIpAddress</a></li>
                  <li><a href="#sendBufferSize.619">sendBufferSize</a></li>
                  <li><a href="#rateLimit.626">rateLimit</a></li>
                  <li><a href="#timedReliability.635">timedReliability</a></li>
                  <li><a href="#numberOfStreams.643">numberOfStreams</a></li>
                  <li><a href="#orderedDelivery.652">orderedDelivery</a></li>
                  <li><a href="#templateRefreshTimeout.660">templateRefreshTimeout</a></li>
                  <li><a href="#optionTemplateRefreshTimeout.669">optionTemplateRefreshTimeout</a></li>
                  <li><a href="#templateRefreshPacket.678">templateRefreshPacket</a></li>
                  <li><a href="#optionTemplateRefreshPacket.687">optionTemplateRefreshPacket</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#optionParameters.698">optionParameters</a>
               <ul>
                  <li><a href="#type.701">type</a></li>
                  <li><a href="#timeout.705">timeout</a></li>
                  <li class="daddy"><a href="#optionTemplate.711">optionTemplate</a>
                     <ul>
                        <li class="daddy"><a href="#optionField.715">optionField</a>
                           <ul>
                              <li><a href="#name.718">name</a></li>
                              <li><a href="#uses.719">uses</a></li>
                              <li><a href="#isScope.720">isScope</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#receiverParameters.728">receiverParameters</a>
               <ul>
                  <li><a href="#transportProtocol.729">transportProtocol</a></li>
                  <li><a href="#localIpAddress.733">localIpAddress</a></li>
                  <li><a href="#localPort.742">localPort</a></li>
                  <li><a href="#maxAllowedStreams.746">maxAllowedStreams</a></li>
                  <li><a href="#templateLifetime.753">templateLifetime</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#fileWriterParameters.763">fileWriterParameters</a>
               <ul>
                  <li><a href="#type.765">type</a></li>
                  <li><a href="#uri.773">uri</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#fileReaderParameters.780">fileReaderParameters</a>
               <ul>
                  <li><a href="#uri.782">uri</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#templateParameters.789">templateParameters</a>
               <ul>
                  <li><a href="#observationDomainId.796">observationDomainId</a></li>
                  <li><a href="#templateId.797">templateId</a></li>
                  <li><a href="#setId.798">setId</a></li>
                  <li><a href="#accessTime.799">accessTime</a></li>
                  <li><a href="#dataRecords.800">dataRecords</a></li>
                  <li class="daddy"><a href="#field.801">field</a>
                     <ul>
                        <li><a href="#ieId.802">ieId</a></li>
                        <li><a href="#ieLength.803">ieLength</a></li>
                        <li><a href="#enterprise.804">enterprise</a></li>
                        <li><a href="#flags.805">flags</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#transportSessionParameters.809">transportSessionParameters</a>
               <ul>
                  <li><a href="#index.816">index</a></li>
                  <li><a href="#sourceAddress.817">sourceAddress</a></li>
                  <li><a href="#destinationAddress.818">destinationAddress</a></li>
                  <li><a href="#sourcePort.819">sourcePort</a></li>
                  <li><a href="#destinationPort.820">destinationPort</a></li>
                  <li><a href="#sctpAssocId.821">sctpAssocId</a></li>
                  <li><a href="#templateRefreshTimeout.822">templateRefreshTimeout</a></li>
                  <li><a href="#optionTemplateRefreshTimeout.826">optionTemplateRefreshTimeout</a></li>
                  <li><a href="#templateRefreshPacket.830">templateRefreshPacket</a></li>
                  <li><a href="#optionTemplateRefreshPacket.834">optionTemplateRefreshPacket</a></li>
                  <li><a href="#status.838">status</a></li>
                  <li><a href="#rate.839">rate</a></li>
                  <li><a href="#packets.843">packets</a></li>
                  <li><a href="#bytes.847">bytes</a></li>
                  <li><a href="#messages.851">messages</a></li>
                  <li><a href="#discardedMessages.855">discardedMessages</a></li>
                  <li><a href="#records.859">records</a></li>
                  <li><a href="#templates.863">templates</a></li>
                  <li><a href="#optionTemplates.867">optionTemplates</a></li>
               </ul>
            </li>
         </ul>
      </li>
      <li><a href="#">Objects</a>
         <ul>
            <li class="daddy"><a href="#ipfix.873">ipfix</a>
               <ul>
                  <li class="daddy"><a href="#collectingProcess.874">collectingProcess</a>
                     <ul>
                        <li><a href="#name.878">name</a></li>
                        <li class="daddy"><a href="#receiver.879">receiver</a>
                           <ul>
                              <li><a href="#name.883">name</a></li>
                              <li><a href="#uses.884">uses</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#fileReader.886">fileReader</a>
                           <ul>
                              <li><a href="#name.891">name</a></li>
                              <li><a href="#uses.892">uses</a></li>
                           </ul>
                        </li>
                        <li><a href="#exportingProcess.894">exportingProcess</a></li>
                        <li class="daddy"><a href="#template.900">template</a>
                           <ul>
                              <li><a href="#uses.902">uses</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#transportSession.904">transportSession</a>
                           <ul>
                              <li><a href="#uses.906">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#observationPoint.910">observationPoint</a>
                     <ul>
                        <li><a href="#name.914">name</a></li>
                        <li><a href="#observationPointId.915">observationPointId</a></li>
                        <li><a href="#observationDomainId.920">observationDomainId</a></li>
                        <li class="daddy"><a href="#OPType.928">OPType</a>
                           <ul>
                              <li><a href="#interface.930">interface</a></li>
                              <li><a href="#linecard.931">linecard</a></li>
                           </ul>
                        </li>
                        <li><a href="#selectionProcess.933">selectionProcess</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#selectionProcess.940">selectionProcess</a>
                     <ul>
                        <li><a href="#name.944">name</a></li>
                        <li><a href="#selectionSequenceId.945">selectionSequenceId</a></li>
                        <li class="daddy"><a href="#selector.953">selector</a>
                           <ul>
                              <li><a href="#name.961">name</a></li>
                              <li><a href="#uses.962">uses</a></li>
                           </ul>
                        </li>
                        <li><a href="#selectionProcess.964">selectionProcess</a></li>
                        <li><a href="#cache.969">cache</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#cache.976">cache</a>
                     <ul>
                        <li><a href="#name.980">name</a></li>
                        <li><a href="#cacheType.981">cacheType</a></li>
                        <li><a href="#maxRecords.985">maxRecords</a></li>
                        <li><a href="#activeTimeout.990">activeTimeout</a></li>
                        <li><a href="#inactiveTimeout.997">inactiveTimeout</a></li>
                        <li class="daddy"><a href="#cacheLayout.1004">cacheLayout</a>
                           <ul>
                              <li><a href="#uses.1004">uses</a></li>
                           </ul>
                        </li>
                        <li><a href="#exportingProcess.1005">exportingProcess</a></li>
                        <li><a href="#activeFlows.1010">activeFlows</a></li>
                        <li><a href="#inactiveFlows.1019">inactiveFlows</a></li>
                        <li><a href="#dataRecords.1028">dataRecords</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#exportingProcess.1039">exportingProcess</a>
                     <ul>
                        <li><a href="#name.1043">name</a></li>
                        <li><a href="#exportingProcessId.1044">exportingProcessId</a></li>
                        <li class="daddy"><a href="#destination.1049">destination</a>
                           <ul>
                              <li><a href="#name.1052">name</a></li>
                              <li><a href="#uses.1053">uses</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#fileWriter.1055">fileWriter</a>
                           <ul>
                              <li><a href="#name.1058">name</a></li>
                              <li><a href="#uses.1059">uses</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#options.1061">options</a>
                           <ul>
                              <li><a href="#name.1063">name</a></li>
                              <li><a href="#uses.1064">uses</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#template.1066">template</a>
                           <ul>
                              <li><a href="#uses.1068">uses</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#transportSession.1070">transportSession</a>
                           <ul>
                              <li><a href="#uses.1072">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">ipfix-psamp</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span>
         <span class="yang_str">"urn:ietf:params:xml:ns:ipfix-psamp-config"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"ipfix"</span>;

      <span class="yang_kw">import</span> <a href="/modules/ietf-yang-types">ietf-yang-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"yang"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/ietf-inet-types">ietf-inet-types</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"inet"</span>;
      }

      <span class="yang_kw">organization</span> <span class="yang_str">"IPFIX WG"</span>;

      <span class="yang_kw">contact</span> <span class="yang_str">"muenz@net.in.tum.de"</span>;

      <span class="yang_kw">description</span> <span class="yang_str">"IPFIX/PSAMP Configuration Data Model"</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2009-03-02"</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Version of draft-ietf-ipfix-configuration-model-02
            Changes in draft-ietf-ipfix-configuration-model-02:
            - conformance to draft-ietf-netmod-yang-03 and
            draft-ietf-netmod-yang-types-01
            - canonical form
            - observationDomainId is now mandatory parameter
            - usage of YANG features
            - renamed parameter 'idleTimeout' in 'inactiveTimeout'
            - state data: Selector statistics, Cache statistics, Templates,
            Transport Sessions
            - Exporting Process: new structure of destination, fileWriter
            - Collecting Process: new structure of receiver, fileReader
            - more groupings and typedefs
            - options configured per Exporting Process, not per destination
            - verified optional parameters, added default values or
            description clause if necessary
            Changes in draft-ietf-ipfix-configuration-model-01:
            - separation of Selectors and Selection Processes as in PSAMP
            documents
            - parameter modifications in filterMatch
            - new rateLimit parameter in destinations of Exporting Process
            - Cache Type 'normal' now called 'timeout'
            Changes in draft-ietf-ipfix-configuration-model-00:
            - Metering Process container replaced by direct reference to
            Selection Process
            - meteringProcessId parameter disappears together with the
            Metering Process container
            - concatenation of Selection Processes realize Selection Sequence
            - removal of premature support of IPFIX Mediators/Concentrators.
            - more SCTP parameters in SctpReceiver and SctpExport classes
            - sendBufferSize parameter for all *Export classes
            - templateId no longer configuration parameter
            Changes in draft-muenz-ipfix-configuration-04:
            - first version in yang
            - Collecting Process can be configured for file import
            - Collecting Process can be configured to export received
            records without modifications (e.g., to file or other
            collectors)
            - SCTP export parameter timedReliability
            - parameter for eligible local IP addresses for SCTP endpoint
            - all tags names uncapitalized, types names etc. capitalized
            - CacheParameters renamed as Cache
            - description attribute removed
            Changes in -03:
            - Linecard and Interface classes now have direction element
            - sec =&gt; s (SI unit)
            - optional description attribute for annotations
            - simplifications in ExportingProcess class
            - new parameters: observationPointId, meteringProcessId,
            selectorId, exportingProcessId (note that devices do not
            have to support the configuration of these parameters)
            - new FileExport class for exporting into a file
            - Reporting class renamed Options Class
            Changes in -02:
            - new structure without next pointers
            - packet reporting and flow metering replaced by record cache
            - added reporting with options"</span>;
      }


      <a name="exporter.73"></a><span class="yang_kw">feature</span> <span class="yang_id">exporter</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device can be used as an Exporter.
            Exporting Processes can be configured."</span>;
      }

      <a name="collector.78"></a><span class="yang_kw">feature</span> <span class="yang_id">collector</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device can be used as a Collector.
            Collecting Processes can be configured."</span>;
      }

      <a name="meter.83"></a><span class="yang_kw">feature</span> <span class="yang_id">meter</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, Observation Points, Selection
            Processes, and Caches can be configured."</span>;
      }

      <a name="psampSampCountBased.88"></a><span class="yang_kw">feature</span> <span class="yang_id">psampSampCountBased</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports count-based Sampling.
            The Selector method sampCountBased can be configured."</span>;
      }

      <a name="psampSampTimeBased.93"></a><span class="yang_kw">feature</span> <span class="yang_id">psampSampTimeBased</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports time-based Sampling.
            The Selector method sampTimeBased can be configured."</span>;
      }

      <a name="psampSampRandOutOfN.98"></a><span class="yang_kw">feature</span> <span class="yang_id">psampSampRandOutOfN</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports random n-out-of-N
            Sampling. The Selector method sampRandOutOfN can be configured."</span>;
      }

      <a name="psampSampUniProb.103"></a><span class="yang_kw">feature</span> <span class="yang_id">psampSampUniProb</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports uniform probabilistic
            Sampling. The Selector method sampUniProb can be configured."</span>;
      }

      <a name="psampSampNonUniProb.108"></a><span class="yang_kw">feature</span> <span class="yang_id">psampSampNonUniProb</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports non-uniform
            probabilistic Sampling. The Selector method sampNonUniProb can be
            configured."</span>;
      }

      <a name="psampSampFlowState.114"></a><span class="yang_kw">feature</span> <span class="yang_id">psampSampFlowState</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports flow state dependent
            Sampling. The Selector method sampFlowState can be configured."</span>;
      }

      <a name="psampFilterMatch.119"></a><span class="yang_kw">feature</span> <span class="yang_id">psampFilterMatch</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports property match
            Filtering. The Selector method filterMatch can be configured."</span>;
      }

      <a name="psampFilterHash.124"></a><span class="yang_kw">feature</span> <span class="yang_id">psampFilterHash</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports hash-based Filtering.
            The Selector method filterHash can be configured."</span>;
      }

      <a name="psampFilterRState.129"></a><span class="yang_kw">feature</span> <span class="yang_id">psampFilterRState</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports router state
            Filtering. The Selector method filterRState can be configured."</span>;
      }

      <a name="udpTransport.134"></a><span class="yang_kw">feature</span> <span class="yang_id">udpTransport</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports UDP as transport
            protocol."</span>;
      }

      <a name="tcpTransport.139"></a><span class="yang_kw">feature</span> <span class="yang_id">tcpTransport</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports TCP as transport
            protocol."</span>;
      }

      <a name="fileReader.144"></a><span class="yang_kw">feature</span> <span class="yang_id">fileReader</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports the configuration
            of Collecting Processes as File Readers."</span>;
      }

      <a name="fileWriter.149"></a><span class="yang_kw">feature</span> <span class="yang_id">fileWriter</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"If supported, the device supports the configuration
            of Exporting Processes as File Writers."</span>;
      }

      <a name="direction.154"></a><span class="yang_kw">typedef</span> <span class="yang_id">direction</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"ingress"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"egress"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"both"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"Direction of packets going through an interface or
            linecard."</span>;
      }

      <a name="cacheType.164"></a><span class="yang_kw">typedef</span> <span class="yang_id">cacheType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"immediate"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Flow expiration after the first packet,
                  generation of Packet Records."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"timeout"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Flow expiration after active and inactive timeout,
                  generation of Flow Records."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"permanent"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"No flow expiration, periodical export after
                  active timeout, generation of Flow Records."</span>;
            }
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"Cache Type specifies the Flow expiration policy of a
            Cache."</span>;
      }

      <a name="exportMemberType.183"></a><span class="yang_kw">typedef</span> <span class="yang_id">exportMemberType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"primary"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"secondary"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"duplicate"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"loadBalancing"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">3</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"unused"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">4</span>;
            }
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"This type defines different usages of an export
            destination among all destinations of an Exporting Process.
            It corresponds to ipfixExportMemberType in IPFIX-MIB."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"draft-ietf-ipfix-mib-05."</span>;
      }

      <a name="optionType.197"></a><span class="yang_kw">typedef</span> <span class="yang_id">optionType</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"meteringStatistics"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Metering Process Statistics."</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"RFC 5101, section 4.1."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"meteringReliability"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Metering Process Reliability Statistics."</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"RFC 5101, section 4.2."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"exportingReliability"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Exporting Process Reliability
                  Statistics."</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"RFC 5101, section 4.3."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"flowKeys"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">3</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Flow Keys."</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"RFC 5101, section 4.4."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"selectionSequence"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">4</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Selection Sequence and Selector Reports."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"draft-ietf-psamp-protocol-09, section 6.5.1
                  and 6.5.2."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"selectionStatistics"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">5</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Selection Sequence Statistics Report."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"draft-ietf-psamp-protocol-09, section
                  6.5.3."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"accuracy"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">6</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Accuracy Report."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"draft-ietf-psamp-protocol-09, section
                  6.5.4."</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"reducingRedundancy"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">7</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Application of ipfix-reducing-redundancy."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"draft-ietf-ipfix-reducing-redundancy-04"</span>;
            }
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"Options Templates specified by IPFIX and PSAMP."</span>;
      }

      <a name="transportSessionStatus.239"></a><span class="yang_kw">typedef</span> <span class="yang_id">transportSessionStatus</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"inactive"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"active"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"unknown"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
         }
         <span class="yang_kw">description</span> <span class="yang_str">"Status of a Transport Session."</span>;
         <span class="yang_kw">reference</span>
            <span class="yang_str">"draft-ietf-ipfix-mib-05, section 7
            (ipfixTransportSessionStatus)."</span>;
      }

      <a name="ipfixTransportProtocol.250"></a><span class="yang_kw">typedef</span> <span class="yang_id">ipfixTransportProtocol</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"sctp"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"udp"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"only applicable if the feature udpTransport is
                  supported"</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"tcp"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"only applicable if the feature tcpTransport is
                  supported"</span>;
            }
         }
         <span class="yang_kw">description</span> <span class="yang_str">"Transport protocols of IPFIX."</span>;
         <span class="yang_kw">reference</span> <span class="yang_str">"RFC5101."</span>;
      }

      <a name="templateFieldFlags.266"></a><span class="yang_kw">typedef</span> <span class="yang_id">templateFieldFlags</span> {
         <span class="yang_kw">type</span> <span class="yang_id">bits</span> {
            <span class="yang_kw">bit</span> <span class="yang_str">"scope"</span> {
               <span class="yang_kw">position</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">bit</span> <span class="yang_str">"flowKey"</span> {
               <span class="yang_kw">position</span> <span class="yang_str">1</span>;
            }
         }
         <span class="yang_kw">description</span> <span class="yang_str">"Attributes of a field in a Template."</span>;
         <span class="yang_kw">reference</span>
            <span class="yang_str">"draft-ietf-ipfix-mib-05, section 7
            (ipfixTemplateDefinitionFlags)"</span>;
      }

      <a name="filterRStateFunction.280"></a><span class="yang_kw">typedef</span> <span class="yang_id">filterRStateFunction</span> {
         <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
            <span class="yang_kw">enum</span> <span class="yang_str">"other"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">0</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"ingressIf"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">1</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"egressIf"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">2</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"aclViolation"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">3</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"rpfFailure"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">4</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"noResources"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">5</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"noRoute"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">6</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"originAS"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">7</span>;
            }
            <span class="yang_kw">enum</span> <span class="yang_str">"destAS"</span> {
               <span class="yang_kw">value</span> <span class="yang_str">8</span>;
            }
         }
         <span class="yang_kw">description</span>
            <span class="yang_str">"Filter function applied to router state."</span>;
         <span class="yang_kw">reference</span>
            <span class="yang_str">"draft-ietf-psamp-mib-06, section 5.2.3."</span>;
      }

      <a name="informationElement.296"></a><span class="yang_kw">grouping</span> <span class="yang_id">informationElement</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Parameters of an Information Element."</span>;
         <a name="nameOrId.298"></a><span class="yang_kw">choice</span> <span class="yang_id">nameOrId</span> {
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span> <span class="yang_str">"Name or ID of the Information Element."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC5102"</span>;
            <a name="ieName.302"></a><span class="yang_kw">case</span> <span class="yang_id">ieName</span> {
               <a name="ieName.302"></a><span class="yang_kw">leaf</span> <span class="yang_id">ieName</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }
            }  <span class="yang_cmt">// case ieName</span>

            <a name="ieId.303"></a><span class="yang_kw">case</span> <span class="yang_id">ieId</span> {
               <a name="ieId.303"></a><span class="yang_kw">leaf</span> <span class="yang_id">ieId</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
               }
            }  <span class="yang_cmt">// case ieId</span>
         }  <span class="yang_cmt">// choice nameOrId</span>

         <a name="ieLength.305"></a><span class="yang_kw">leaf</span> <span class="yang_id">ieLength</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Length can be omitted if a default length exists
               for the specified Information Element. A value of 65535
               specifies a variable-length Information Element."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC5102"</span>;
         }

         <a name="ieEnterpriseNumber.312"></a><span class="yang_kw">leaf</span> <span class="yang_id">ieEnterpriseNumber</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"If present, this is an enterprise-specific
               Information Element."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC5101, RFC5102"</span>;
         }
      }  <span class="yang_cmt">// grouping informationElement</span>

      <a name="interfaceParameters.320"></a><span class="yang_kw">grouping</span> <span class="yang_id">interfaceParameters</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Interface as input to Observation Point."</span>;
         <a name="indexOrName.322"></a><span class="yang_kw">choice</span> <span class="yang_id">indexOrName</span> {
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Index or name of the interface as stored in the
               ifTable of IF-MIB."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC 1229."</span>;
            <a name="ifIndex.327"></a><span class="yang_kw">case</span> <span class="yang_id">ifIndex</span> {
               <a name="ifIndex.327"></a><span class="yang_kw">leaf</span> <span class="yang_id">ifIndex</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               }
            }  <span class="yang_cmt">// case ifIndex</span>

            <a name="ifName.328"></a><span class="yang_kw">case</span> <span class="yang_id">ifName</span> {
               <a name="ifName.328"></a><span class="yang_kw">leaf</span> <span class="yang_id">ifName</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }
            }  <span class="yang_cmt">// case ifName</span>
         }  <span class="yang_cmt">// choice indexOrName</span>

         <a name="direction.330"></a><span class="yang_kw">leaf</span> <span class="yang_id">direction</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#direction.154">direction</a></span>;
            <span class="yang_kw">default</span> <span class="yang_str">"both"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Direction of packets. If not applicable (e.g., in
               the case of a sniffing interface in promiscuous mode), this
               parameter is ignored."</span>;
         }
      }  <span class="yang_cmt">// grouping interfaceParameters</span>

      <a name="linecardParameters.339"></a><span class="yang_kw">grouping</span> <span class="yang_id">linecardParameters</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Linecard as input to Observation Point."</span>;
         <a name="indexOrName.341"></a><span class="yang_kw">choice</span> <span class="yang_id">indexOrName</span> {
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Index or name of the linecard as stored in the
               entPhysicalTable of ENTITY-MIB."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4133."</span>;
            <a name="entPhysicalIndex.346"></a><span class="yang_kw">case</span> <span class="yang_id">entPhysicalIndex</span> {
               <a name="entPhysicalIndex.346"></a><span class="yang_kw">leaf</span> <span class="yang_id">entPhysicalIndex</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               }
            }  <span class="yang_cmt">// case entPhysicalIndex</span>

            <a name="entPhysicalName.347"></a><span class="yang_kw">case</span> <span class="yang_id">entPhysicalName</span> {
               <a name="entPhysicalName.347"></a><span class="yang_kw">leaf</span> <span class="yang_id">entPhysicalName</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }
            }  <span class="yang_cmt">// case entPhysicalName</span>
         }  <span class="yang_cmt">// choice indexOrName</span>

         <a name="direction.349"></a><span class="yang_kw">leaf</span> <span class="yang_id">direction</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#direction.154">direction</a></span>;
            <span class="yang_kw">default</span> <span class="yang_str">"both"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Direction of packets. If not applicable (e.g., in
               the case of a sniffing interface in promiscuous mode), this
               parameter is ignored."</span>;
         }
      }  <span class="yang_cmt">// grouping linecardParameters</span>

      <a name="selectorParameters.358"></a><span class="yang_kw">grouping</span> <span class="yang_id">selectorParameters</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Configuration and state parameters of a Selector."</span>;
         <a name="selectorId.360"></a><span class="yang_kw">leaf</span> <span class="yang_id">selectorId</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The Selector ID must be unique within the
               Observation Domain.
               If not configured, this parameter is set by the monitoring
               device."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"draft-ietf-psamp-info-11"</span>;
         }

         <a name="Method.368"></a><span class="yang_kw">choice</span> <span class="yang_id">Method</span> {
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"See PSAMP-MIB for details about the selection
               methods and their parameters."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"draft-ietf-psamp-mib-06."</span>;
            <a name="selectAll.373"></a><span class="yang_kw">case</span> <span class="yang_id">selectAll</span> {
               <a name="selectAll.373"></a><span class="yang_kw">leaf</span> <span class="yang_id">selectAll</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
               }
            }  <span class="yang_cmt">// case selectAll</span>

            <a name="sampCountBased.374"></a><span class="yang_kw">case</span> <span class="yang_id">sampCountBased</span> {
               <a name="sampCountBased.374"></a><span class="yang_kw">container</span> <span class="yang_id">sampCountBased</span> {
                  <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#psampSampCountBased.88">psampSampCountBased</a></span>;
                  <a name="interval.376"></a><span class="yang_kw">leaf</span> <span class="yang_id">interval</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="spacing.380"></a><span class="yang_kw">leaf</span> <span class="yang_id">spacing</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }
               }  <span class="yang_cmt">// container sampCountBased</span>
            }  <span class="yang_cmt">// case sampCountBased</span>

            <a name="sampTimeBased.385"></a><span class="yang_kw">case</span> <span class="yang_id">sampTimeBased</span> {
               <a name="sampTimeBased.385"></a><span class="yang_kw">container</span> <span class="yang_id">sampTimeBased</span> {
                  <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#psampSampTimeBased.93">psampSampTimeBased</a></span>;
                  <a name="interval.387"></a><span class="yang_kw">leaf</span> <span class="yang_id">interval</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="spacing.391"></a><span class="yang_kw">leaf</span> <span class="yang_id">spacing</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }
               }  <span class="yang_cmt">// container sampTimeBased</span>
            }  <span class="yang_cmt">// case sampTimeBased</span>

            <a name="sampRandOutOfN.396"></a><span class="yang_kw">case</span> <span class="yang_id">sampRandOutOfN</span> {
               <a name="sampRandOutOfN.396"></a><span class="yang_kw">container</span> <span class="yang_id">sampRandOutOfN</span> {
                  <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#psampSampRandOutOfN.98">psampSampRandOutOfN</a></span>;
                  <a name="population.398"></a><span class="yang_kw">leaf</span> <span class="yang_id">population</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="sample.402"></a><span class="yang_kw">leaf</span> <span class="yang_id">sample</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }
               }  <span class="yang_cmt">// container sampRandOutOfN</span>
            }  <span class="yang_cmt">// case sampRandOutOfN</span>

            <a name="sampUniProb.407"></a><span class="yang_kw">case</span> <span class="yang_id">sampUniProb</span> {
               <a name="sampUniProb.407"></a><span class="yang_kw">container</span> <span class="yang_id">sampUniProb</span> {
                  <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#psampSampUniProb.103">psampSampUniProb</a></span>;
                  <a name="probability.409"></a><span class="yang_kw">leaf</span> <span class="yang_id">probability</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"The given value must be divided by
                        4294967295."</span>;
                  }
               }  <span class="yang_cmt">// container sampUniProb</span>
            }  <span class="yang_cmt">// case sampUniProb</span>

            <a name="sampNonUniProb.416"></a><span class="yang_kw">case</span> <span class="yang_id">sampNonUniProb</span> {
               <a name="sampNonUniProb.416"></a><span class="yang_kw">container</span> <span class="yang_id">sampNonUniProb</span> {
                  <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#psampSampNonUniProb.108">psampSampNonUniProb</a></span>;
                  <a name="function.418"></a><span class="yang_kw">leaf</span> <span class="yang_id">function</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#object-identifier.237">yang:object-identifier</a></span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="funcParam.422"></a><span class="yang_kw">leaf</span> <span class="yang_id">funcParam</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#object-identifier.237">yang:object-identifier</a></span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }
               }  <span class="yang_cmt">// container sampNonUniProb</span>
            }  <span class="yang_cmt">// case sampNonUniProb</span>

            <a name="sampFlowState.427"></a><span class="yang_kw">case</span> <span class="yang_id">sampFlowState</span> {
               <a name="sampFlowState.427"></a><span class="yang_kw">container</span> <span class="yang_id">sampFlowState</span> {
                  <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#psampSampFlowState.114">psampSampFlowState</a></span>;
                  <a name="function.429"></a><span class="yang_kw">leaf</span> <span class="yang_id">function</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#object-identifier.237">yang:object-identifier</a></span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="funcParam.433"></a><span class="yang_kw">leaf</span> <span class="yang_id">funcParam</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#object-identifier.237">yang:object-identifier</a></span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }
               }  <span class="yang_cmt">// container sampFlowState</span>
            }  <span class="yang_cmt">// case sampFlowState</span>

            <a name="filterMatch.438"></a><span class="yang_kw">case</span> <span class="yang_id">filterMatch</span> {
               <a name="filterMatch.438"></a><span class="yang_kw">container</span> <span class="yang_id">filterMatch</span> {
                  <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#psampFilterMatch.119">psampFilterMatch</a></span>;
                  <a name="nameOrId.441"></a><span class="yang_kw">choice</span> <span class="yang_id">nameOrId</span> {
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Deviating from the PSAMP MIB, the field is
                        specified by either the name or the ID of the
                        Information Element."</span>;
                     <a name="ieName.446"></a><span class="yang_kw">case</span> <span class="yang_id">ieName</span> {
                        <a name="ieName.446"></a><span class="yang_kw">leaf</span> <span class="yang_id">ieName</span> {
                           <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                        }
                     }  <span class="yang_cmt">// case ieName</span>

                     <a name="ieId.449"></a><span class="yang_kw">case</span> <span class="yang_id">ieId</span> {
                        <a name="ieId.449"></a><span class="yang_kw">leaf</span> <span class="yang_id">ieId</span> {
                           <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
                        }
                     }  <span class="yang_cmt">// case ieId</span>
                  }  <span class="yang_cmt">// choice nameOrId</span>

                  <a name="ieEnterpriseNumber.453"></a><span class="yang_kw">leaf</span> <span class="yang_id">ieEnterpriseNumber</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Deviating from the PSAMP MIB, an enterprise
                        number may be specified to refer to an
                        enterprise-specific Information Element."</span>;
                  }

                  <a name="startValue.459"></a><span class="yang_kw">leaf</span> <span class="yang_id">startValue</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="stopValue.463"></a><span class="yang_kw">leaf</span> <span class="yang_id">stopValue</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="mask.467"></a><span class="yang_kw">leaf</span> <span class="yang_id">mask</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"If not configured, no mask is applied."</span>;
                  }
               }  <span class="yang_cmt">// container filterMatch</span>
            }  <span class="yang_cmt">// case filterMatch</span>

            <a name="filterHash.472"></a><span class="yang_kw">case</span> <span class="yang_id">filterHash</span> {
               <a name="filterHash.472"></a><span class="yang_kw">container</span> <span class="yang_id">filterHash</span> {
                  <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#psampFilterHash.124">psampFilterHash</a></span>;
                  <a name="addrType.474"></a><span class="yang_kw">leaf</span> <span class="yang_id">addrType</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#ip-version.77">inet:ip-version</a></span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="headerBits.478"></a><span class="yang_kw">leaf</span> <span class="yang_id">headerBits</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">string</span> {
                        <span class="yang_kw">length</span> <span class="yang_str">"40"</span>;
                     }
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"If addrType is 'ipv4', only the first 20 bytes
                        are used."</span>;
                  }

                  <a name="payloadBytes.486"></a><span class="yang_kw">leaf</span> <span class="yang_id">payloadBytes</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">default</span> <span class="yang_str">"0"</span>;
                  }

                  <a name="payloadBits.490"></a><span class="yang_kw">leaf</span> <span class="yang_id">payloadBits</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"If not configured, all bits included in the
                        payload section defined by payloadBytes are used."</span>;
                  }

                  <a name="function.495"></a><span class="yang_kw">leaf</span> <span class="yang_id">function</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#object-identifier.237">yang:object-identifier</a></span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="funcParam.499"></a><span class="yang_kw">leaf</span> <span class="yang_id">funcParam</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#object-identifier.237">yang:object-identifier</a></span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="inputBits.503"></a><span class="yang_kw">leaf</span> <span class="yang_id">inputBits</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="outputBits.507"></a><span class="yang_kw">leaf</span> <span class="yang_id">outputBits</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="outputMask.511"></a><span class="yang_kw">leaf</span> <span class="yang_id">outputMask</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="selection.515"></a><span class="yang_kw">leaf</span> <span class="yang_id">selection</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }
               }  <span class="yang_cmt">// container filterHash</span>
            }  <span class="yang_cmt">// case filterHash</span>

            <a name="filterRState.520"></a><span class="yang_kw">case</span> <span class="yang_id">filterRState</span> {
               <a name="filterRState.520"></a><span class="yang_kw">container</span> <span class="yang_id">filterRState</span> {
                  <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#psampFilterRState.129">psampFilterRState</a></span>;
                  <a name="function.522"></a><span class="yang_kw">leaf</span> <span class="yang_id">function</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="#filterRStateFunction.280">filterRStateFunction</a></span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                  }

                  <a name="negate.526"></a><span class="yang_kw">leaf</span> <span class="yang_id">negate</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">boolean</span>;
                     <span class="yang_kw">default</span> <span class="yang_str">"false"</span>;
                  }

                  <a name="ifIndex.530"></a><span class="yang_kw">leaf</span> <span class="yang_id">ifIndex</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
                     <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Index of the interface as stored in the
                        ifTable of IF-MIB."</span>;
                     <span class="yang_kw">reference</span> <span class="yang_str">"RFC 2863."</span>;
                  }

                  <a name="startAS.537"></a><span class="yang_kw">leaf</span> <span class="yang_id">startAS</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#as-number.168">inet:as-number</a></span>;
                     <span class="yang_kw">must</span>
                        <span class="yang_str">"../function='originAS' or ../function='destAS'"</span>;
                  }

                  <a name="stopAS.541"></a><span class="yang_kw">leaf</span> <span class="yang_id">stopAS</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#as-number.168">inet:as-number</a></span>;
                     <span class="yang_kw">must</span>
                        <span class="yang_str">"../function='originAS' or ../function='destAS'"</span>;
                  }

                  <a name="vendorFunc.545"></a><span class="yang_kw">leaf</span> <span class="yang_id">vendorFunc</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#object-identifier.237">yang:object-identifier</a></span>;
                     <span class="yang_kw">must</span> <span class="yang_str">"../function='other'"</span>;
                  }
               }  <span class="yang_cmt">// container filterRState</span>
            }  <span class="yang_cmt">// case filterRState</span>
         }  <span class="yang_cmt">// choice Method</span>

         <a name="packetsObserved.551"></a><span class="yang_kw">leaf</span> <span class="yang_id">packetsObserved</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter64.133">yang:counter64</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Corresponds to ipfixSelectorStatsPacketsObserved
               in IPFIX-MIB."</span>;
            <span class="yang_kw">reference</span>
               <span class="yang_str">"draft-ietf-ipfix-mib-05, section 7
               (ipfixSelectorStatsPacketsObserved)."</span>;
         }

         <a name="packetsDropped.559"></a><span class="yang_kw">leaf</span> <span class="yang_id">packetsDropped</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter64.133">yang:counter64</a></span>;
            <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Corresponds to ipfixSelectorStatsPacketsDropped
               in IPFIX-MIB."</span>;
            <span class="yang_kw">reference</span>
               <span class="yang_str">"draft-ietf-ipfix-mib-05, section 7
               (ipfixSelectorStatsPacketsDropped)."</span>;
         }
      }  <span class="yang_cmt">// grouping selectorParameters</span>

      <a name="cacheLayoutParameters.569"></a><span class="yang_kw">grouping</span> <span class="yang_id">cacheLayoutParameters</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Fields of a Cache Layout."</span>;
         <a name="cacheField.571"></a><span class="yang_kw">list</span> <span class="yang_id">cacheField</span> {
            <span class="yang_kw">key</span> "<a href="#name.574">name</a>";
            <span class="yang_kw">min-elements</span> <span class="yang_str">"1"</span>;
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <a name="name.574"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            }

            <a name="uses.575"></a><span class="yang_kw">uses</span> <a href="#informationElement.296">informationElement</a>;

            <a name="isFlowKey.576"></a><span class="yang_kw">leaf</span> <span class="yang_id">isFlowKey</span> {
               <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"If present, this is a flow key."</span>;
            }
         }  <span class="yang_cmt">// list cacheField</span>
      }  <span class="yang_cmt">// grouping cacheLayoutParameters</span>

      <a name="destinationParameters.583"></a><span class="yang_kw">grouping</span> <span class="yang_id">destinationParameters</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Parameters specifying an export destination."</span>;
         <a name="type.585"></a><span class="yang_kw">leaf</span> <span class="yang_id">type</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#exportMemberType.183">exportMemberType</a></span>;
            <span class="yang_kw">default</span> <span class="yang_str">"primary"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Member type within the Transport Session group
               that is composed of all destinations and fileWriters of the
               Exporting Process."</span>;
         }

         <a name="transportProtocol.592"></a><span class="yang_kw">leaf</span> <span class="yang_id">transportProtocol</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ipfixTransportProtocol.250">ipfixTransportProtocol</a></span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
         }

         <a name="destinationIpAddress.596"></a><span class="yang_kw">leaf</span> <span class="yang_id">destinationIpAddress</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#ip-address.199">inet:ip-address</a></span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
         }

         <a name="destinationPort.600"></a><span class="yang_kw">leaf</span> <span class="yang_id">destinationPort</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#port-number.142">inet:port-number</a></span>;
            <span class="yang_kw">default</span> <span class="yang_str">"4739"</span>;
         }

         <a name="sourceIpAddress.604"></a><span class="yang_kw">leaf</span> <span class="yang_id">sourceIpAddress</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#ip-address.199">inet:ip-address</a></span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='udp'"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Sets source IP address if UDP is transport
               protocol. If not configured, the IP address assigned to the
               outgoing interface is used."</span>;
         }

         <a name="localIpAddress.611"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">localIpAddress</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#ip-address.199">inet:ip-address</a></span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='sctp'"</span>;
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"List of eligible local IP addresses to be
               used by the SCTP endpoint. If not configured, all locally
               assigned IP addresses are used by the local endpoint."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC 3758, RFC 4960."</span>;
         }

         <a name="sendBufferSize.619"></a><span class="yang_kw">leaf</span> <span class="yang_id">sendBufferSize</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"bytes"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Size of the socket send buffer.
               If not configured, this parameter is set by the monitoring
               device"</span>;
         }

         <a name="rateLimit.626"></a><span class="yang_kw">leaf</span> <span class="yang_id">rateLimit</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"bytes per second"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Maximum number of bytes per second the Exporting
               Process may export to the given destination. The number of
               bytes is calculated from the lengths of the IPFIX Messages
               exported. If not configured, no rate limiting is performed."</span>;
            <span class="yang_kw">reference</span>
               <span class="yang_str">"draft-ietf-psamp-protocol-09, section 6.3."</span>;
         }

         <a name="timedReliability.635"></a><span class="yang_kw">leaf</span> <span class="yang_id">timedReliability</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#timeticks.337">yang:timeticks</a></span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='sctp'"</span>;
            <span class="yang_kw">default</span> <span class="yang_str">"0"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"PR-SCTP lifetime for IPFIX Messages
               containing Data Sets only. Zero means reliable transport."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC 3758, RFC 4960."</span>;
         }

         <a name="numberOfStreams.643"></a><span class="yang_kw">leaf</span> <span class="yang_id">numberOfStreams</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='sctp'"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Number of outbound streams requested for the
               SCTP association.
               If not configured, this parameter is set by the monitoring
               device."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC 3758, RFC 4960."</span>;
         }

         <a name="orderedDelivery.652"></a><span class="yang_kw">leaf</span> <span class="yang_id">orderedDelivery</span> {
            <span class="yang_kw">type</span> <span class="yang_id">boolean</span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='sctp'"</span>;
            <span class="yang_kw">default</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Ordered delivery of IPFIX Messages
               containing Data Sets."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC 3758, RFC 4960."</span>;
         }

         <a name="templateRefreshTimeout.660"></a><span class="yang_kw">leaf</span> <span class="yang_id">templateRefreshTimeout</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"seconds"</span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='udp'"</span>;
            <span class="yang_kw">default</span> <span class="yang_str">"600"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Sets time after which Templates are resent if UDP
               is transport protocol."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC5101."</span>;
         }

         <a name="optionTemplateRefreshTimeout.669"></a><span class="yang_kw">leaf</span> <span class="yang_id">optionTemplateRefreshTimeout</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"seconds"</span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='udp'"</span>;
            <span class="yang_kw">default</span> <span class="yang_str">"600"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Sets time after which Options Templates are resent
               if UDP is transport protocol."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC5101."</span>;
         }

         <a name="templateRefreshPacket.678"></a><span class="yang_kw">leaf</span> <span class="yang_id">templateRefreshPacket</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"IPFIX Messages"</span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='udp'"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Sets number of IPFIX Messages after which
               Templates are resent if UDP is transport protocol.
               If omitted, Templates are only resent after timeout."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC5101."</span>;
         }

         <a name="optionTemplateRefreshPacket.687"></a><span class="yang_kw">leaf</span> <span class="yang_id">optionTemplateRefreshPacket</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"IPFIX Messages"</span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='udp'"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Sets number of IPFIX Messages after which
               Options Templates are resent if UDP is transport protocol.
               If omitted, Templates are only resent after timeout."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC5101."</span>;
         }
      }  <span class="yang_cmt">// grouping destinationParameters</span>

      <a name="optionParameters.698"></a><span class="yang_kw">grouping</span> <span class="yang_id">optionParameters</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Parameters specifying the data export using an
            Options Template."</span>;
         <a name="type.701"></a><span class="yang_kw">leaf</span> <span class="yang_id">type</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#optionType.197">optionType</a></span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
         }

         <a name="timeout.705"></a><span class="yang_kw">leaf</span> <span class="yang_id">timeout</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#timeticks.337">yang:timeticks</a></span>;
            <span class="yang_kw">default</span> <span class="yang_str">"0"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Time interval for exporting options data.
               If set to zero, the options data is sent once."</span>;
         }

         <a name="optionTemplate.711"></a><span class="yang_kw">container</span> <span class="yang_id">optionTemplate</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"If no Options Template is specified, the
               Exporter defines a template according to options type and
               available options data."</span>;
            <a name="optionField.715"></a><span class="yang_kw">list</span> <span class="yang_id">optionField</span> {
               <span class="yang_kw">key</span> "<a href="#name.718">name</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"user"</span>;
               <a name="name.718"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }

               <a name="uses.719"></a><span class="yang_kw">uses</span> <a href="#informationElement.296">informationElement</a>;

               <a name="isScope.720"></a><span class="yang_kw">leaf</span> <span class="yang_id">isScope</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                  <span class="yang_kw">description</span> <span class="yang_str">"If present, this is a scope field."</span>;
               }
            }  <span class="yang_cmt">// list optionField</span>
         }  <span class="yang_cmt">// container optionTemplate</span>
      }  <span class="yang_cmt">// grouping optionParameters</span>

      <a name="receiverParameters.728"></a><span class="yang_kw">grouping</span> <span class="yang_id">receiverParameters</span> {
         <a name="transportProtocol.729"></a><span class="yang_kw">leaf</span> <span class="yang_id">transportProtocol</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#ipfixTransportProtocol.250">ipfixTransportProtocol</a></span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
         }

         <a name="localIpAddress.733"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">localIpAddress</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#ip-address.199">inet:ip-address</a></span>;
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"List of local IP addresses on which the Collecting
               Process listens for IPFIX Messages. If not configured, all
               locally assigned IP addresses are used. In the case of SCTP,
               these IP addresses correspond to the eligible local IP
               addresses to be used by the SCTP endpoint."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC 4960."</span>;
         }

         <a name="localPort.742"></a><span class="yang_kw">leaf</span> <span class="yang_id">localPort</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#port-number.142">inet:port-number</a></span>;
            <span class="yang_kw">default</span> <span class="yang_str">"4739"</span>;
         }

         <a name="maxAllowedStreams.746"></a><span class="yang_kw">leaf</span> <span class="yang_id">maxAllowedStreams</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='sctp'"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Maximum number of allowed inbound streams
               per SCTP association. If not configured, the maximum number of
               inbound streams is not restricted."</span>;
         }

         <a name="templateLifetime.753"></a><span class="yang_kw">leaf</span> <span class="yang_id">templateLifetime</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"seconds"</span>;
            <span class="yang_kw">must</span> <span class="yang_str">"../transportProtocol='udp'"</span>;
            <span class="yang_kw">default</span> <span class="yang_str">"1800"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Template lifetime if UDP is transport protocol."</span>;
            <span class="yang_kw">reference</span> <span class="yang_str">"RFC5101, section 10.3.7"</span>;
         }
      }  <span class="yang_cmt">// grouping receiverParameters</span>

      <a name="fileWriterParameters.763"></a><span class="yang_kw">grouping</span> <span class="yang_id">fileWriterParameters</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"File Writer parameters."</span>;
         <a name="type.765"></a><span class="yang_kw">leaf</span> <span class="yang_id">type</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#exportMemberType.183">exportMemberType</a></span>;
            <span class="yang_kw">must</span> <span class="yang_str">"current()!='loadBalancing'"</span>;
            <span class="yang_kw">default</span> <span class="yang_str">"primary"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Member type within the Transport Session group
               that is composed of all destinations and fileWriters of the
               Exporting Process."</span>;
         }

         <a name="uri.773"></a><span class="yang_kw">leaf</span> <span class="yang_id">uri</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#uri.408">inet:uri</a></span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"URI specifying the location of the file."</span>;
         }
      }  <span class="yang_cmt">// grouping fileWriterParameters</span>

      <a name="fileReaderParameters.780"></a><span class="yang_kw">grouping</span> <span class="yang_id">fileReaderParameters</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"File Reader parameters."</span>;
         <a name="uri.782"></a><span class="yang_kw">leaf</span> <span class="yang_id">uri</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#uri.408">inet:uri</a></span>;
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"URI specifying the location of the file."</span>;
         }
      }  <span class="yang_cmt">// grouping fileReaderParameters</span>

      <a name="templateParameters.789"></a><span class="yang_kw">grouping</span> <span class="yang_id">templateParameters</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"State parameters of a Template used by an Exporting
            Process or received by a Collecting Process. Parameter names
            and semantics correspond to the managed objects in IPFIX-MIB"</span>;
         <span class="yang_kw">reference</span>
            <span class="yang_str">"draft-ietf-ipfix-mib-05, section 7
            (ipfixTemplateEntry, ipfixTemplateDefinitionEntry,
            ipfixTemplateStatsEntry)"</span>;
         <a name="observationDomainId.796"></a><span class="yang_kw">leaf</span> <span class="yang_id">observationDomainId</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
         }

         <a name="templateId.797"></a><span class="yang_kw">leaf</span> <span class="yang_id">templateId</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
         }

         <a name="setId.798"></a><span class="yang_kw">leaf</span> <span class="yang_id">setId</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
         }

         <a name="accessTime.799"></a><span class="yang_kw">leaf</span> <span class="yang_id">accessTime</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#date-and-time.282">yang:date-and-time</a></span>;
         }

         <a name="dataRecords.800"></a><span class="yang_kw">leaf</span> <span class="yang_id">dataRecords</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter64.133">yang:counter64</a></span>;
         }

         <a name="field.801"></a><span class="yang_kw">list</span> <span class="yang_id">field</span> {
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <a name="ieId.802"></a><span class="yang_kw">leaf</span> <span class="yang_id">ieId</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
            }

            <a name="ieLength.803"></a><span class="yang_kw">leaf</span> <span class="yang_id">ieLength</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint16</span>;
            }

            <a name="enterprise.804"></a><span class="yang_kw">leaf</span> <span class="yang_id">enterprise</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            }

            <a name="flags.805"></a><span class="yang_kw">leaf</span> <span class="yang_id">flags</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#templateFieldFlags.266">templateFieldFlags</a></span>;
            }
         }  <span class="yang_cmt">// list field</span>
      }  <span class="yang_cmt">// grouping templateParameters</span>

      <a name="transportSessionParameters.809"></a><span class="yang_kw">grouping</span> <span class="yang_id">transportSessionParameters</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"State parameters of a Transport Session originating
            from an Exporting or terminating at a Collecting Process.
            Parameter names and semantics correspond to the managed
            objects in IPFIX-MIB"</span>;
         <span class="yang_kw">reference</span>
            <span class="yang_str">"draft-ietf-ipfix-mib-05, section 7
            (ipfixTransportSessionEntry, ipfixTransportSessionStatsEntry)"</span>;
         <a name="index.816"></a><span class="yang_kw">leaf</span> <span class="yang_id">index</span> {
            <span class="yang_kw">type</span> <span class="yang_id">int32</span>;
         }

         <a name="sourceAddress.817"></a><span class="yang_kw">leaf</span> <span class="yang_id">sourceAddress</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#ip-address.199">inet:ip-address</a></span>;
         }

         <a name="destinationAddress.818"></a><span class="yang_kw">leaf</span> <span class="yang_id">destinationAddress</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#ip-address.199">inet:ip-address</a></span>;
         }

         <a name="sourcePort.819"></a><span class="yang_kw">leaf</span> <span class="yang_id">sourcePort</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#port-number.142">inet:port-number</a></span>;
         }

         <a name="destinationPort.820"></a><span class="yang_kw">leaf</span> <span class="yang_id">destinationPort</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-inet-types/2009-05-13#port-number.142">inet:port-number</a></span>;
         }

         <a name="sctpAssocId.821"></a><span class="yang_kw">leaf</span> <span class="yang_id">sctpAssocId</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
         }

         <a name="templateRefreshTimeout.822"></a><span class="yang_kw">leaf</span> <span class="yang_id">templateRefreshTimeout</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"seconds"</span>;
         }

         <a name="optionTemplateRefreshTimeout.826"></a><span class="yang_kw">leaf</span> <span class="yang_id">optionTemplateRefreshTimeout</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"seconds"</span>;
         }

         <a name="templateRefreshPacket.830"></a><span class="yang_kw">leaf</span> <span class="yang_id">templateRefreshPacket</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"IPFIX Messages"</span>;
         }

         <a name="optionTemplateRefreshPacket.834"></a><span class="yang_kw">leaf</span> <span class="yang_id">optionTemplateRefreshPacket</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"IPFIX Messages"</span>;
         }

         <a name="status.838"></a><span class="yang_kw">leaf</span> <span class="yang_id">status</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="#transportSessionStatus.239">transportSessionStatus</a></span>;
         }

         <a name="rate.839"></a><span class="yang_kw">leaf</span> <span class="yang_id">rate</span> {
            <span class="yang_kw">type</span> <span class="yang_id">int32</span>;
            <span class="yang_kw">units</span> <span class="yang_str">"bytes per second"</span>;
         }

         <a name="packets.843"></a><span class="yang_kw">leaf</span> <span class="yang_id">packets</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter64.133">yang:counter64</a></span>;
            <span class="yang_kw">units</span> <span class="yang_str">"packets"</span>;
         }

         <a name="bytes.847"></a><span class="yang_kw">leaf</span> <span class="yang_id">bytes</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter64.133">yang:counter64</a></span>;
            <span class="yang_kw">units</span> <span class="yang_str">"bytes"</span>;
         }

         <a name="messages.851"></a><span class="yang_kw">leaf</span> <span class="yang_id">messages</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter64.133">yang:counter64</a></span>;
            <span class="yang_kw">units</span> <span class="yang_str">"IPFIX Messages"</span>;
         }

         <a name="discardedMessages.855"></a><span class="yang_kw">leaf</span> <span class="yang_id">discardedMessages</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter64.133">yang:counter64</a></span>;
            <span class="yang_kw">units</span> <span class="yang_str">"IPFIX Messages"</span>;
         }

         <a name="records.859"></a><span class="yang_kw">leaf</span> <span class="yang_id">records</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter64.133">yang:counter64</a></span>;
            <span class="yang_kw">units</span> <span class="yang_str">"Data Records"</span>;
         }

         <a name="templates.863"></a><span class="yang_kw">leaf</span> <span class="yang_id">templates</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter32.77">yang:counter32</a></span>;
            <span class="yang_kw">units</span> <span class="yang_str">"Templates"</span>;
         }

         <a name="optionTemplates.867"></a><span class="yang_kw">leaf</span> <span class="yang_id">optionTemplates</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter32.77">yang:counter32</a></span>;
            <span class="yang_kw">units</span> <span class="yang_str">"Options Templates"</span>;
         }
      }  <span class="yang_cmt">// grouping transportSessionParameters</span>

      <a name="ipfix.873"></a><span class="yang_kw">container</span> <span class="yang_id">ipfix</span> {
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <a name="collectingProcess.874"></a><span class="yang_kw">list</span> <span class="yang_id">collectingProcess</span> {
            <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#collector.78">collector</a></span>;
            <span class="yang_kw">key</span> "<a href="#name.878">name</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span> <span class="yang_str">"Parameters of a Collecting Process."</span>;
            <a name="name.878"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            }

            <a name="receiver.879"></a><span class="yang_kw">list</span> <span class="yang_id">receiver</span> {
               <span class="yang_kw">key</span> "<a href="#name.883">name</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"List of receivers (sockets) on which the
                  Collecting Process receives IPFIX Messages."</span>;
               <a name="name.883"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }

               <a name="uses.884"></a><span class="yang_kw">uses</span> <a href="#receiverParameters.728">receiverParameters</a>;
            }  <span class="yang_cmt">// list receiver</span>

            <a name="fileReader.886"></a><span class="yang_kw">list</span> <span class="yang_id">fileReader</span> {
               <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#fileReader.144">fileReader</a></span>;
               <span class="yang_kw">key</span> "<a href="#name.891">name</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"List of File Readers from which the Collecting
                  Process reads IPFIX Messages."</span>;
               <a name="name.891"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }

               <a name="uses.892"></a><span class="yang_kw">uses</span> <a href="#fileReaderParameters.780">fileReaderParameters</a>;
            }  <span class="yang_cmt">// list fileReader</span>

            <a name="exportingProcess.894"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">exportingProcess</span> {
               <span class="yang_kw">type</span> <span class="yang_id">leafref</span> {
                  <span class="yang_kw">path</span> <span class="yang_str">"/ipfix/exportingProcess/name"</span>;
                  <span class="yang_kw">require-instance</span> <span class="yang_str">"true"</span>;
               }
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Export of received records without any
                  modifications. Records are processed by all Exporting
                  Processes in the list."</span>;
            }

            <a name="template.900"></a><span class="yang_kw">list</span> <span class="yang_id">template</span> {
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;

               <a name="uses.902"></a><span class="yang_kw">uses</span> <a href="#templateParameters.789">templateParameters</a>;
            }  <span class="yang_cmt">// list template</span>

            <a name="transportSession.904"></a><span class="yang_kw">list</span> <span class="yang_id">transportSession</span> {
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;

               <a name="uses.906"></a><span class="yang_kw">uses</span> <a href="#transportSessionParameters.809">transportSessionParameters</a>;
            }  <span class="yang_cmt">// list transportSession</span>
         }  <span class="yang_cmt">// list collectingProcess</span>

         <a name="observationPoint.910"></a><span class="yang_kw">list</span> <span class="yang_id">observationPoint</span> {
            <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#meter.83">meter</a></span>;
            <span class="yang_kw">key</span> "<a href="#name.914">name</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span> <span class="yang_str">"Parameters of an Observation Point."</span>;
            <a name="name.914"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            }

            <a name="observationPointId.915"></a><span class="yang_kw">leaf</span> <span class="yang_id">observationPointId</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"If not configured, this parameter is set by the
                  Monitoring Device."</span>;
            }

            <a name="observationDomainId.920"></a><span class="yang_kw">leaf</span> <span class="yang_id">observationDomainId</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The Observation Domain ID associates the
                  Observation Point to an Observation Domain. Observation
                  Points with identical Observation Domain ID belong to the
                  same Observation Domain."</span>;
            }

            <a name="OPType.928"></a><span class="yang_kw">choice</span> <span class="yang_id">OPType</span> {
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <a name="interface.930"></a><span class="yang_kw">case</span> <span class="yang_id">interface</span> {
                  <a name="interface.930"></a><span class="yang_kw">container</span> <span class="yang_id">interface</span> {

                     <a name="uses.930"></a><span class="yang_kw">uses</span> <a href="#interfaceParameters.320">interfaceParameters</a>;
                  }  <span class="yang_cmt">// container interface</span>
               }  <span class="yang_cmt">// case interface</span>

               <a name="linecard.931"></a><span class="yang_kw">case</span> <span class="yang_id">linecard</span> {
                  <a name="linecard.931"></a><span class="yang_kw">container</span> <span class="yang_id">linecard</span> {

                     <a name="uses.931"></a><span class="yang_kw">uses</span> <a href="#linecardParameters.339">linecardParameters</a>;
                  }  <span class="yang_cmt">// container linecard</span>
               }  <span class="yang_cmt">// case linecard</span>
            }  <span class="yang_cmt">// choice OPType</span>

            <a name="selectionProcess.933"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">selectionProcess</span> {
               <span class="yang_kw">type</span> <span class="yang_id">leafref</span> {
                  <span class="yang_kw">path</span> <span class="yang_str">"/ipfix/selectionProcess/name"</span>;
                  <span class="yang_kw">require-instance</span> <span class="yang_str">"true"</span>;
               }
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Selection Processes in this list process packets
                  in parallel."</span>;
            }
         }  <span class="yang_cmt">// list observationPoint</span>

         <a name="selectionProcess.940"></a><span class="yang_kw">list</span> <span class="yang_id">selectionProcess</span> {
            <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#meter.83">meter</a></span>;
            <span class="yang_kw">key</span> "<a href="#name.944">name</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span> <span class="yang_str">"Parameters of a Selection Process."</span>;
            <a name="name.944"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            }

            <a name="selectionSequenceId.945"></a><span class="yang_kw">leaf</span> <span class="yang_id">selectionSequenceId</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint64</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The Selection Sequence ID must be unique within
                  the Observation Domain.
                  If not configured, this parameter is set by the monitoring
                  device."</span>;
               <span class="yang_kw">reference</span> <span class="yang_str">"draft-ietf-psamp-info-11"</span>;
            }

            <a name="selector.953"></a><span class="yang_kw">list</span> <span class="yang_id">selector</span> {
               <span class="yang_kw">key</span> "<a href="#name.961">name</a>";
               <span class="yang_kw">min-elements</span> <span class="yang_str">"1"</span>;
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"user"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"List of Selectors that define the action of the
                  Selection Process on a single packet. The Selectors are
                  serially invoked in the same order as they appear in this
                  list."</span>;
               <a name="name.961"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }

               <a name="uses.962"></a><span class="yang_kw">uses</span> <a href="#selectorParameters.358">selectorParameters</a>;
            }  <span class="yang_cmt">// list selector</span>

            <a name="selectionProcess.964"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">selectionProcess</span> {
               <span class="yang_kw">type</span> <span class="yang_id">leafref</span> {
                  <span class="yang_kw">path</span> <span class="yang_str">"/ipfix/selectionProcess/name"</span>;
                  <span class="yang_kw">require-instance</span> <span class="yang_str">"true"</span>;
               }
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Selection Processes in this list receive the
                  selected packets in parallel."</span>;
            }

            <a name="cache.969"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">cache</span> {
               <span class="yang_kw">type</span> <span class="yang_id">leafref</span> {
                  <span class="yang_kw">path</span> <span class="yang_str">"/ipfix/cache/name"</span>;
                  <span class="yang_kw">require-instance</span> <span class="yang_str">"true"</span>;
               }
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Caches in this list receive the selected packets
                  in parallel."</span>;
            }
         }  <span class="yang_cmt">// list selectionProcess</span>

         <a name="cache.976"></a><span class="yang_kw">list</span> <span class="yang_id">cache</span> {
            <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#meter.83">meter</a></span>;
            <span class="yang_kw">key</span> "<a href="#name.980">name</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span> <span class="yang_str">"Parameters of a Cache."</span>;
            <a name="name.980"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            }

            <a name="cacheType.981"></a><span class="yang_kw">leaf</span> <span class="yang_id">cacheType</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="#cacheType.164">cacheType</a></span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            }

            <a name="maxRecords.985"></a><span class="yang_kw">leaf</span> <span class="yang_id">maxRecords</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"If not configured, this parameter is set by the
                  Monitoring Device."</span>;
            }

            <a name="activeTimeout.990"></a><span class="yang_kw">leaf</span> <span class="yang_id">activeTimeout</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">units</span> <span class="yang_str">"seconds"</span>;
               <span class="yang_kw">must</span> <span class="yang_str">"../cacheType!='immediate'"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"If not configured, this parameter is set by the
                  Monitoring Device."</span>;
            }

            <a name="inactiveTimeout.997"></a><span class="yang_kw">leaf</span> <span class="yang_id">inactiveTimeout</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">units</span> <span class="yang_str">"seconds"</span>;
               <span class="yang_kw">must</span> <span class="yang_str">"../cacheType!='permanent'"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"If not configured, this parameter is set by the
                  Monitoring Device."</span>;
            }

            <a name="cacheLayout.1004"></a><span class="yang_kw">container</span> <span class="yang_id">cacheLayout</span> {

               <a name="uses.1004"></a><span class="yang_kw">uses</span> <a href="#cacheLayoutParameters.569">cacheLayoutParameters</a>;
            }  <span class="yang_cmt">// container cacheLayout</span>

            <a name="exportingProcess.1005"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">exportingProcess</span> {
               <span class="yang_kw">type</span> <span class="yang_id">leafref</span> {
                  <span class="yang_kw">path</span> <span class="yang_str">"/ipfix/exportingProcess/name"</span>;
                  <span class="yang_kw">require-instance</span> <span class="yang_str">"true"</span>;
               }
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Records are exported by all Exporting Processes in
                  the list."</span>;
            }

            <a name="activeFlows.1010"></a><span class="yang_kw">leaf</span> <span class="yang_id">activeFlows</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">units</span> <span class="yang_str">"flows"</span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Corresponds to
                  ipfixMeteringProcessCacheActiveFlows in IPFIX-MIB."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"ietf-draft-ipfix-mib-05, section 7
                  (ipfixMeteringProcessCacheActiveFlows)"</span>;
            }

            <a name="inactiveFlows.1019"></a><span class="yang_kw">leaf</span> <span class="yang_id">inactiveFlows</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">units</span> <span class="yang_str">"flows"</span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Corresponds to
                  ipfixMeteringProcessCacheInactiveFlows in IPFIX-MIB."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"ietf-draft-ipfix-mib-0, section 7
                  (ipfixMeteringProcessCacheInactiveFlows)"</span>;
            }

            <a name="dataRecords.1028"></a><span class="yang_kw">leaf</span> <span class="yang_id">dataRecords</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ietf-yang-types/2009-05-13#counter64.133">yang:counter64</a></span>;
               <span class="yang_kw">units</span> <span class="yang_str">"Data Records"</span>;
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Corresponds to
                  ipfixMeteringProcessDataRecords in IPFIX-MIB."</span>;
               <span class="yang_kw">reference</span>
                  <span class="yang_str">"ietf-draft-ipfix-mib-0, section 7
                  (ipfixMeteringProcessDataRecords)"</span>;
            }
         }  <span class="yang_cmt">// list cache</span>

         <a name="exportingProcess.1039"></a><span class="yang_kw">list</span> <span class="yang_id">exportingProcess</span> {
            <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#exporter.73">exporter</a></span>;
            <span class="yang_kw">key</span> "<a href="#name.1043">name</a>";
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span> <span class="yang_str">"Parameters of an Exporting Process."</span>;
            <a name="name.1043"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            }

            <a name="exportingProcessId.1044"></a><span class="yang_kw">leaf</span> <span class="yang_id">exportingProcessId</span> {
               <span class="yang_kw">type</span> <span class="yang_id">uint32</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"If not configured, this parameter is set by the
                  Monitoring Device."</span>;
            }

            <a name="destination.1049"></a><span class="yang_kw">list</span> <span class="yang_id">destination</span> {
               <span class="yang_kw">key</span> "<a href="#name.1052">name</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <a name="name.1052"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }

               <a name="uses.1053"></a><span class="yang_kw">uses</span> <a href="#destinationParameters.583">destinationParameters</a>;
            }  <span class="yang_cmt">// list destination</span>

            <a name="fileWriter.1055"></a><span class="yang_kw">list</span> <span class="yang_id">fileWriter</span> {
               <span class="yang_kw">if-feature</span> <span class="yang_id"><a href="/modules/ipfix-psamp/2009-03-02#fileWriter.149">fileWriter</a></span>;
               <span class="yang_kw">key</span> "<a href="#name.1058">name</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <a name="name.1058"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }

               <a name="uses.1059"></a><span class="yang_kw">uses</span> <a href="#fileWriterParameters.763">fileWriterParameters</a>;
            }  <span class="yang_cmt">// list fileWriter</span>

            <a name="options.1061"></a><span class="yang_kw">list</span> <span class="yang_id">options</span> {
               <span class="yang_kw">key</span> "<a href="#name.1063">name</a>";
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
               <a name="name.1063"></a><span class="yang_kw">leaf</span> <span class="yang_id">name</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               }

               <a name="uses.1064"></a><span class="yang_kw">uses</span> <a href="#optionParameters.698">optionParameters</a>;
            }  <span class="yang_cmt">// list options</span>

            <a name="template.1066"></a><span class="yang_kw">list</span> <span class="yang_id">template</span> {
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;

               <a name="uses.1068"></a><span class="yang_kw">uses</span> <a href="#templateParameters.789">templateParameters</a>;
            }  <span class="yang_cmt">// list template</span>

            <a name="transportSession.1070"></a><span class="yang_kw">list</span> <span class="yang_id">transportSession</span> {
               <span class="yang_kw">config</span> <span class="yang_str">"false"</span>;
               <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;

               <a name="uses.1072"></a><span class="yang_kw">uses</span> <a href="#transportSessionParameters.809">transportSessionParameters</a>;
            }  <span class="yang_cmt">// list transportSession</span>
         }  <span class="yang_cmt">// list exportingProcess</span>
      }  <span class="yang_cmt">// container ipfix</span>
   }  <span class="yang_cmt">// module ipfix-psamp</span>
</pre>
</div>
</div>