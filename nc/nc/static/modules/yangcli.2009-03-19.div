
<div>
   <h1 class="yang">yangcli.yang</h1>

   <ul id="nav">
      <li><a href="#">Groupings</a>
         <ul>
            <li class="daddy"><a href="#FillParms.52">FillParms</a>
               <ul>
                  <li><a href="#target.53">target</a></li>
                  <li><a href="#optional.71">optional</a></li>
                  <li><a href="#value.78">value</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#CommonPduParms.108">CommonPduParms</a>
               <ul>
                  <li class="daddy"><a href="#from.113">from</a>
                     <ul>
                        <li class="daddy"><a href="#varref.116">varref</a>
                           <ul>
                              <li><a href="#varref.116">varref</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#from-cli.123">from-cli</a>
                           <ul>
                              <li><a href="#uses.124">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#EditParms.129">EditParms</a>
               <ul>
                  <li><a href="#uses.133">uses</a></li>
                  <li><a href="#timeout.135">timeout</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#SGetParms.141">SGetParms</a>
               <ul>
                  <li><a href="#nofill.145">nofill</a></li>
                  <li><a href="#uses.154">uses</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#XGetParms.157">XGetParms</a>
               <ul>
                  <li class="daddy"><a href="#from.161">from</a>
                     <ul>
                        <li class="daddy"><a href="#varref.164">varref</a>
                           <ul>
                              <li><a href="#varref.164">varref</a></li>
                           </ul>
                        </li>
                        <li class="daddy"><a href="#select.171">select</a>
                           <ul>
                              <li><a href="#select.171">select</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li><a href="#timeout.186">timeout</a></li>
                  <li><a href="#uses.191">uses</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#ConnectParms.194">ConnectParms</a>
               <ul>
                  <li><a href="#user.201">user</a></li>
                  <li><a href="#agent.207">agent</a></li>
                  <li><a href="#password.213">password</a></li>
                  <li><a href="#port.221">port</a></li>
                  <li><a href="#timeout.231">timeout</a></li>
               </ul>
            </li>
         </ul>
      </li>
      <li><a href="#">Objects</a>
         <ul>
            <li class="daddy"><a href="#yangcli.247">yangcli</a>
               <ul>
                  <li><a href="#uses.253">uses</a></li>
                  <li><a href="#uses.255">uses</a></li>
                  <li><a href="#autocomp.257">autocomp</a></li>
                  <li><a href="#autoload.268">autoload</a></li>
                  <li><a href="#baddata.279">baddata</a></li>
                  <li><a href="#batch-mode.310">batch-mode</a></li>
                  <li><a href="#default-module.318">default-module</a></li>
                  <li><a href="#fixorder.326">fixorder</a></li>
                  <li><a href="#modules.337">modules</a></li>
                  <li><a href="#run-script.344">run-script</a></li>
               </ul>
            </li>
         </ul>
      </li>
      <li><a href="#">RPC&nbsp;Methods</a>
         <ul>
            <li class="daddy"><a href="#cd.362">cd</a>
               <ul>
                  <li class="daddy"><a href="#input.364">input</a>
                     <ul>
                        <li><a href="#dir.367">dir</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.362">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#connect.375">connect</a>
               <ul>
                  <li class="daddy"><a href="#input.377">input</a>
                     <ul>
                        <li><a href="#uses.380">uses</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.375">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#create.396">create</a>
               <ul>
                  <li class="daddy"><a href="#input.399">input</a>
                     <ul>
                        <li><a href="#uses.401">uses</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.396">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#delete.405">delete</a>
               <ul>
                  <li class="daddy"><a href="#input.408">input</a>
                     <ul>
                        <li><a href="#target.410">target</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.405">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#fill.420">fill</a>
               <ul>
                  <li class="daddy"><a href="#input.430">input</a>
                     <ul>
                        <li><a href="#uses.432">uses</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#output.434">output</a>
                     <ul>
                        <li><a href="#data.435">data</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#help.452">help</a>
               <ul>
                  <li class="daddy"><a href="#input.454">input</a>
                     <ul>
                        <li class="daddy"><a href="#helptype.457">helptype</a>
                           <ul>
                              <li><a href="#command.458">command</a></li>
                              <li><a href="#commands.463">commands</a></li>
                              <li><a href="#notification.467">notification</a></li>
                              <li><a href="#object.471">object</a></li>
                              <li><a href="#type.475">type</a></li>
                           </ul>
                        </li>
                        <li><a href="#uses.480">uses</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.452">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#insert.484">insert</a>
               <ul>
                  <li class="daddy"><a href="#input.487">input</a>
                     <ul>
                        <li><a href="#uses.490">uses</a></li>
                        <li><a href="#order.492">order</a></li>
                        <li><a href="#operation.506">operation</a></li>
                        <li><a href="#edit-target.516">edit-target</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.484">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#list.541">list</a>
               <ul>
                  <li class="daddy"><a href="#input.543">input</a>
                     <ul>
                        <li class="daddy"><a href="#listtype.544">listtype</a>
                           <ul>
                              <li><a href="#commands.547">commands</a></li>
                              <li><a href="#objects.552">objects</a></li>
                              <li><a href="#oids.557">oids</a></li>
                           </ul>
                        </li>
                        <li><a href="#module.564">module</a></li>
                        <li><a href="#uses.569">uses</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.541">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#merge.573">merge</a>
               <ul>
                  <li class="daddy"><a href="#input.576">input</a>
                     <ul>
                        <li><a href="#uses.578">uses</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.573">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#mgrload.582">mgrload</a>
               <ul>
                  <li class="daddy"><a href="#input.587">input</a>
                     <ul>
                        <li><a href="#module.589">module</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.582">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#pwd.598">pwd</a>
               <ul>
                  <li><a href="#input.598">input</a></li>
                  <li><a href="#output.598">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#replace.602">replace</a>
               <ul>
                  <li class="daddy"><a href="#input.605">input</a>
                     <ul>
                        <li><a href="#uses.607">uses</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.602">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#quit.611">quit</a>
               <ul>
                  <li><a href="#input.611">input</a></li>
                  <li><a href="#output.611">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#run.615">run</a>
               <ul>
                  <li class="daddy"><a href="#input.617">input</a>
                     <ul>
                        <li><a href="#script.620">script</a></li>
                        <li><a href="#P1.630">P1</a></li>
                        <li><a href="#P2.634">P2</a></li>
                        <li><a href="#P3.638">P3</a></li>
                        <li><a href="#P4.642">P4</a></li>
                        <li><a href="#P5.646">P5</a></li>
                        <li><a href="#P6.650">P6</a></li>
                        <li><a href="#P7.654">P7</a></li>
                        <li><a href="#P8.658">P8</a></li>
                        <li><a href="#P9.662">P9</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.615">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#save.669">save</a>
               <ul>
                  <li><a href="#input.669">input</a></li>
                  <li><a href="#output.669">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#sget.673">sget</a>
               <ul>
                  <li class="daddy"><a href="#input.677">input</a>
                     <ul>
                        <li><a href="#uses.679">uses</a></li>
                        <li><a href="#uses.680">uses</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#output.682">output</a>
                     <ul>
                        <li><a href="#data.683">data</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#sget-config.690">sget-config</a>
               <ul>
                  <li class="daddy"><a href="#input.694">input</a>
                     <ul>
                        <li><a href="#uses.696">uses</a></li>
                        <li><a href="#uses.697">uses</a></li>
                        <li class="daddy"><a href="#source.698">source</a>
                           <ul>
                              <li><a href="#uses.700">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#output.703">output</a>
                     <ul>
                        <li><a href="#data.704">data</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#show.711">show</a>
               <ul>
                  <li class="daddy"><a href="#input.713">input</a>
                     <ul>
                        <li class="daddy"><a href="#showtype.714">showtype</a>
                           <ul>
                              <li><a href="#module.717">module</a></li>
                              <li><a href="#modules.722">modules</a></li>
                              <li><a href="#local.727">local</a></li>
                              <li><a href="#locals.732">locals</a></li>
                              <li><a href="#global.737">global</a></li>
                              <li><a href="#globals.742">globals</a></li>
                              <li><a href="#objects.747">objects</a></li>
                              <li><a href="#var.753">var</a></li>
                              <li><a href="#vars.758">vars</a></li>
                              <li><a href="#version.763">version</a></li>
                           </ul>
                        </li>
                        <li><a href="#uses.768">uses</a></li>
                     </ul>
                  </li>
                  <li><a href="#output.711">output</a></li>
               </ul>
            </li>
            <li class="daddy"><a href="#xget.772">xget</a>
               <ul>
                  <li class="daddy"><a href="#input.776">input</a>
                     <ul>
                        <li><a href="#uses.778">uses</a></li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#output.780">output</a>
                     <ul>
                        <li><a href="#data.781">data</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
            <li class="daddy"><a href="#xget-config.788">xget-config</a>
               <ul>
                  <li class="daddy"><a href="#input.792">input</a>
                     <ul>
                        <li><a href="#uses.794">uses</a></li>
                        <li class="daddy"><a href="#source.796">source</a>
                           <ul>
                              <li><a href="#uses.798">uses</a></li>
                           </ul>
                        </li>
                     </ul>
                  </li>
                  <li class="daddy"><a href="#output.801">output</a>
                     <ul>
                        <li><a href="#data.802">data</a></li>
                     </ul>
                  </li>
               </ul>
            </li>
         </ul>
      </li>
   </ul>

<br />
<div class="yang">
<pre>

   <span class="yang_kw">module</span> <span class="yang_id">yangcli</span> {

      <span class="yang_kw">yang-version</span> <span class="yang_str">1</span>;

      <span class="yang_kw">namespace</span> <span class="yang_str">"http://netconfcentral.com/ns/yangcli"</span>;

      <span class="yang_kw">prefix</span> <span class="yang_str">"yc"</span>;

      <span class="yang_kw">import</span> <a href="/modules/ncx">ncx</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"ncx"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/ncx-app-common">ncx-app-common</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"ncxapp"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/ncxtypes">ncxtypes</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"nt"</span>;
      }
      <span class="yang_kw">import</span> <a href="/modules/netconf">netconf</a> {
         <span class="yang_kw">prefix</span> <span class="yang_str">"nc"</span>;
      }

      <span class="yang_kw">organization</span> <span class="yang_str">"Netconf Central"</span>;

      <span class="yang_kw">contact</span>
         <span class="yang_str">"Andy Bierman &lt;support@netconfcentral.com&gt;."</span>;

      <span class="yang_kw">description</span>
         <span class="yang_str">"
         Command Line Interface for the NETCONF protocol: Manager side
         
         Usage:
            yangcli [parameters]
         
         Normal Mode:
            An interactive CLI shell with command line history.
         
         Autostart-mode:
            If the 'agent' parameter is present, then yangcli will
             attempt to connect to that agent upon startup.  If the
            'user' and 'password' parameters are also present, then
            the user will not be prompted before the connection 
            is attempted.
         
          Script-mode:
             If the 'run-script' parameter is present, then the
             specified script will be run automatically upon startup.
         
          "</span>;

      <span class="yang_kw">revision</span> <span class="yang_str">"2009-03-19"</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Initial published version (TBD)"</span>;
      }


      <a name="FillParms.52"></a><span class="yang_kw">grouping</span> <span class="yang_id">FillParms</span> {
         <a name="target.53"></a><span class="yang_kw">leaf</span> <span class="yang_id">target</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span> {
               <span class="yang_kw">length</span> <span class="yang_str">"1..max"</span>;
            }
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"XPath target object to fill.  If prefixes are missing
               then the first match in any namespace will be used.
               Any prefix used must be the default prefix
               assigned to the desired YANG module. Prefix usage is
               optional."</span>;
            <a href="/modules/ncx/2009-04-10#schema-instance.502">ncx:schema-instance</a>;
         }

         <a name="optional.71"></a><span class="yang_kw">leaf</span> <span class="yang_id">optional</span> {
            <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"If present, then prompt for leafs that are optional.
               If not, skip these objects."</span>;
         }

         <a name="value.78"></a><span class="yang_kw">anyxml</span> <span class="yang_id">value</span> {
            <span class="yang_kw">description</span>
               <span class="yang_str">"Contains a string representing the content
               to use for the filled variable.
               
               If a string is entered, then the target value being
               filled must be a leaf or leaf-list.
               
               If a variable is referenced, then it will 
               be used as the content, if the target value being
               filled is a leaf or a leaf-list.
               
               If the target value is a complex object,
               then the referenced variable must also be
               a complex object of the same type. E.g.,
               
               The global variable 'foo' would be specified as:
               
                   value=$$foo
               
               The local variable 'bar' would be specified as:
               
                   value=$bar
               
               An error will be reported if the global or local
               variable does not reference the same object type
               as the target parameter."</span>;
         }
      }  <span class="yang_cmt">// grouping FillParms</span>

      <a name="CommonPduParms.108"></a><span class="yang_kw">grouping</span> <span class="yang_id">CommonPduParms</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Common parms for some local commands that
            generate NETCONF PDUs"</span>;
         <a name="from.113"></a><span class="yang_kw">choice</span> <span class="yang_id">from</span> {
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <a name="varref.116"></a><span class="yang_kw">case</span> <span class="yang_id">varref</span> {
               <a name="varref.116"></a><span class="yang_kw">leaf</span> <span class="yang_id">varref</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Use the contents of the specified variable 
                     as the content"</span>;
               }
            }  <span class="yang_cmt">// case varref</span>

            <a name="from-cli.123"></a><span class="yang_kw">case</span> <span class="yang_id">from-cli</span> {

               <a name="uses.124"></a><span class="yang_kw">uses</span> <a href="#FillParms.52">FillParms</a>;
            }  <span class="yang_cmt">// case from-cli</span>
         }  <span class="yang_cmt">// choice from</span>
      }  <span class="yang_cmt">// grouping CommonPduParms</span>

      <a name="EditParms.129"></a><span class="yang_kw">grouping</span> <span class="yang_id">EditParms</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Common parms for create, merge, replace commands"</span>;

         <a name="uses.133"></a><span class="yang_kw">uses</span> <a href="#CommonPduParms.108">CommonPduParms</a>;

         <a name="timeout.135"></a><span class="yang_kw">leaf</span> <span class="yang_id">timeout</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#Timeout.262">nt:Timeout</a></span>;
            <span class="yang_kw">description</span> <span class="yang_str">"Timeout to use"</span>;
         }
      }  <span class="yang_cmt">// grouping EditParms</span>

      <a name="SGetParms.141"></a><span class="yang_kw">grouping</span> <span class="yang_id">SGetParms</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Common parms for sget and sget-config operations."</span>;
         <a name="nofill.145"></a><span class="yang_kw">leaf</span> <span class="yang_id">nofill</span> {
            <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"If present, and the 'from-cli' option is used
               for input, then filling of mandatory nodes
               and key leafs will be skipped.  Instead, the target
               object will be treated as a terminating select node
               in the filter element."</span>;
         }

         <a name="uses.154"></a><span class="yang_kw">uses</span> <a href="/modules/ncx-app-common/2009-04-10#CliWithDefaultsParm.31">ncxapp:CliWithDefaultsParm</a>;
      }  <span class="yang_cmt">// grouping SGetParms</span>

      <a name="XGetParms.157"></a><span class="yang_kw">grouping</span> <span class="yang_id">XGetParms</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Common parms for xget and xget-config operations."</span>;
         <a name="from.161"></a><span class="yang_kw">choice</span> <span class="yang_id">from</span> {
            <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
            <a name="varref.164"></a><span class="yang_kw">case</span> <span class="yang_id">varref</span> {
               <a name="varref.164"></a><span class="yang_kw">leaf</span> <span class="yang_id">varref</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Use the contents of the specified variable 
                     as the content"</span>;
               }
            }  <span class="yang_cmt">// case varref</span>

            <a name="select.171"></a><span class="yang_kw">case</span> <span class="yang_id">select</span> {
               <a name="select.171"></a><span class="yang_kw">leaf</span> <span class="yang_id">select</span> {
                  <span class="yang_kw">type</span> <span class="yang_id">string</span> {
                     <span class="yang_kw">length</span> <span class="yang_str">"1..max"</span>;
                  }
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"The XPath expression to use in the retrieval
                     operation.  The string may only contain
                     single quotes, which are required for
                     string literals.  The entire string
                     will be inserted into a double-quoted
                     string, within the get-config PDU.
                     Character entities will be inserted as
                     needed to maintain well-formed XML."</span>;
                  <a href="/modules/ncx/2009-04-10#xpath.448">ncx:xpath</a>;
               }
            }  <span class="yang_cmt">// case select</span>
         }  <span class="yang_cmt">// choice from</span>

         <a name="timeout.186"></a><span class="yang_kw">leaf</span> <span class="yang_id">timeout</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#Timeout.262">nt:Timeout</a></span>;
            <span class="yang_kw">description</span> <span class="yang_str">"Timeout to use"</span>;
         }

         <a name="uses.191"></a><span class="yang_kw">uses</span> <a href="/modules/ncx-app-common/2009-04-10#CliWithDefaultsParm.31">ncxapp:CliWithDefaultsParm</a>;
      }  <span class="yang_cmt">// grouping XGetParms</span>

      <a name="ConnectParms.194"></a><span class="yang_kw">grouping</span> <span class="yang_id">ConnectParms</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Common parms for connecting to a NETCONF agent.
            Used by the connect operation and if present at
            the command line invocation, then the connect
            operation will be invoked automatically."</span>;
         <a name="user.201"></a><span class="yang_kw">leaf</span> <span class="yang_id">user</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxUserName.124">nt:NcxUserName</a></span>;
            <span class="yang_kw">description</span> <span class="yang_str">"User name to use for NETCONF sessions."</span>;
         }

         <a name="agent.207"></a><span class="yang_kw">leaf</span> <span class="yang_id">agent</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"IP address or DNS name of the NETCONF agent target."</span>;
         }

         <a name="password.213"></a><span class="yang_kw">leaf</span> <span class="yang_id">password</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"User password to use for NETCONF sessions.
               If none, then user will be prompted before connecting."</span>;
            <a href="/modules/ncx/2009-04-10#password.418">ncx:password</a>;
         }

         <a name="port.221"></a><span class="yang_kw">leaf</span> <span class="yang_id">port</span> {
            <span class="yang_kw">type</span> <span class="yang_id">uint16</span> {
               <span class="yang_kw">range</span> <span class="yang_str">"1..max"</span>;
            }
            <span class="yang_kw">default</span> <span class="yang_str">"830"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"NETCONF port number to use.  If not present, then
               port 830, followed by port 22, will be tried."</span>;
         }

         <a name="timeout.231"></a><span class="yang_kw">leaf</span> <span class="yang_id">timeout</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#Timeout.262">nt:Timeout</a></span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Number of seconds to wait for a response
               from the agent before declaring a timeout.
               Zero means no timeout at all."</span>;
         }
      }  <span class="yang_cmt">// grouping ConnectParms</span>

      <a name="yangcli.247"></a><span class="yang_kw">container</span> <span class="yang_id">yangcli</span> {
         <span class="yang_kw">config</span> <span class="yang_str">"true"</span>;
         <span class="yang_kw">description</span>
            <span class="yang_str">"CLI Parameter Set for the NETCONF Manager Application."</span>;

         <a name="uses.253"></a><span class="yang_kw">uses</span> <a href="/modules/ncx-app-common/2009-04-10#NcxAppCommon.50">ncxapp:NcxAppCommon</a>;

         <a name="uses.255"></a><span class="yang_kw">uses</span> <a href="#ConnectParms.194">ConnectParms</a>;

         <a name="autocomp.257"></a><span class="yang_kw">leaf</span> <span class="yang_id">autocomp</span> {
            <span class="yang_kw">type</span> <span class="yang_id">boolean</span>;
            <span class="yang_kw">default</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Controls whether partial keywords will be 
               checked for interactive or script commands.
               By default, the first match for a partial keyword
               will be used if no definition is found for
               a command name or parameter name."</span>;
         }

         <a name="autoload.268"></a><span class="yang_kw">leaf</span> <span class="yang_id">autoload</span> {
            <span class="yang_kw">type</span> <span class="yang_id">boolean</span>;
            <span class="yang_kw">default</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Controls whether any modules (except this one)
               will be automatically loaded upon startup or
               upon session startup with an agent. If false,
               the 'load-module' command must be used to
               explicitly load all the desired definition modules."</span>;
         }

         <a name="baddata.279"></a><span class="yang_kw">leaf</span> <span class="yang_id">baddata</span> {
            <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
               <span class="yang_kw">enum</span> <span class="yang_str">"ignore"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">0</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Silently accept invalid PDU and data model 
                     parameters.  Intended for advanced agent 
                     testing mode only."</span>;
               }
               <span class="yang_kw">enum</span> <span class="yang_str">"warn"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">1</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Warn, but accept invalid PDU and data model 
                     parameters."</span>;
               }
               <span class="yang_kw">enum</span> <span class="yang_str">"check"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">2</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Prompt the user to keep the invalid value
                     or re-enter the value."</span>;
               }
               <span class="yang_kw">enum</span> <span class="yang_str">"error"</span> {
                  <span class="yang_kw">value</span> <span class="yang_str">3</span>;
                  <span class="yang_kw">description</span>
                     <span class="yang_str">"Prompt the user to re-enter the invalid value."</span>;
               }
            }
            <span class="yang_kw">default</span> <span class="yang_str">"check"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Specifies how invalid user input from the CLI
               will be handled when filling PDUs for remote
               operations."</span>;
         }

         <a name="batch-mode.310"></a><span class="yang_kw">leaf</span> <span class="yang_id">batch-mode</span> {
            <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"If present, the interactive CLI will not be used.
               A script should be provided with the 'run-script'
               parameter, or else the program will simply exit."</span>;
         }

         <a name="default-module.318"></a><span class="yang_kw">leaf</span> <span class="yang_id">default-module</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxName.46">nt:NcxName</a></span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Default module name string to use before 'netconf' 
               and 'ncx' are tried.  The module prefix must be
               used for other modules."</span>;
         }

         <a name="fixorder.326"></a><span class="yang_kw">leaf</span> <span class="yang_id">fixorder</span> {
            <span class="yang_kw">type</span> <span class="yang_id">boolean</span>;
            <span class="yang_kw">default</span> <span class="yang_str">"true"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"Controls whether PDU parameters will be
               automatically sent to the agent in the
               correct order.  If false, the specified order
               will be used. If true, then canonical order will
               be used"</span>;
         }

         <a name="modules.337"></a><span class="yang_kw">leaf-list</span> <span class="yang_id">modules</span> {
            <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcModuleSpec.233">nt:NcModuleSpec</a></span>;
            <span class="yang_kw">ordered-by</span> <span class="yang_str">"system"</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"List of NCX module names to load at boot-time.
               Any imported modules required will be loaded automatically."</span>;
         }

         <a name="run-script.344"></a><span class="yang_kw">leaf</span> <span class="yang_id">run-script</span> {
            <span class="yang_kw">type</span> <span class="yang_id">string</span>;
            <span class="yang_kw">description</span>
               <span class="yang_str">"The specified script will be invoked upon startup.
               If the auto-connect parameters are provided, then
               a session will be established before running the
               script.  If a quoted string is used, then any parameters
               after the script name will be passed to the script."</span>;
         }
         <a href="/modules/ncx/2009-04-10#cli.348">ncx:cli</a>;
      }  <span class="yang_cmt">// container yangcli</span>

      <a name="cd.362"></a><span class="yang_kw">rpc</span> <span class="yang_id">cd</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Change the current working directory."</span>;
         <a name="input.364"></a><span class="yang_kw">input</span> {
            <a name="dir.367"></a><span class="yang_kw">leaf</span> <span class="yang_id">dir</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Directory path to use."</span>;
            }
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"dir"</span>;
         }
      }  <span class="yang_cmt">// rpc cd</span>

      <a name="connect.375"></a><span class="yang_kw">rpc</span> <span class="yang_id">connect</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Connect to a NETCONF agent."</span>;
         <a name="input.377"></a><span class="yang_kw">input</span> {

            <a name="uses.380"></a><span class="yang_kw">uses</span> <a href="#ConnectParms.194">ConnectParms</a> {
            }
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"agent"</span>;
         }
      }  <span class="yang_cmt">// rpc connect</span>

      <a name="create.396"></a><span class="yang_kw">rpc</span> <span class="yang_id">create</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Create some NETCONF config data with the edit-config operation"</span>;
         <a name="input.399"></a><span class="yang_kw">input</span> {

            <a name="uses.401"></a><span class="yang_kw">uses</span> <a href="#EditParms.129">EditParms</a>;
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"target"</span>;
         }
      }  <span class="yang_cmt">// rpc create</span>

      <a name="delete.405"></a><span class="yang_kw">rpc</span> <span class="yang_id">delete</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Delete some NETCONF config data with the edit-config operation"</span>;
         <a name="input.408"></a><span class="yang_kw">input</span> {
            <a name="target.410"></a><span class="yang_kw">leaf</span> <span class="yang_id">target</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"Xpath expression indicating the node which is going
                  to be deleted."</span>;
            }
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"target"</span>;
         }
      }  <span class="yang_cmt">// rpc delete</span>

      <a name="fill.420"></a><span class="yang_kw">rpc</span> <span class="yang_id">fill</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Fill a value for reuse in a NETCONF PDU or other operation.
            
            Used in an assignment statement to create a variable
            for later use:
            
                $foo = fill --target=/t:foo-con/bar-list \
            		--optional \
            		--current-value=$bar    "</span>;
         <a name="input.430"></a><span class="yang_kw">input</span> {

            <a name="uses.432"></a><span class="yang_kw">uses</span> <a href="#FillParms.52">FillParms</a>;
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"target"</span>;
         }

         <a name="output.434"></a><span class="yang_kw">output</span> {
            <a name="data.435"></a><span class="yang_kw">anyxml</span> <span class="yang_id">data</span> {
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The result of the fill operation.
                  
                  The name of the value node may not really 
                  be 'data'. If the 'target' or 'current-value'
                  input parameters are used, then the name
                  of the result node will be copied instead.
                  
                  The data type will be inherited from the 'target'
                  or 'current_value' parameters, and not really be 
                  an 'anyxml' structure.  YANG does have a data 
                  type that supports this feature."</span>;
            }
         }
      }  <span class="yang_cmt">// rpc fill</span>

      <a name="help.452"></a><span class="yang_kw">rpc</span> <span class="yang_id">help</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Print the yangcli help text"</span>;
         <a name="input.454"></a><span class="yang_kw">input</span> {
            <a name="helptype.457"></a><span class="yang_kw">choice</span> <span class="yang_id">helptype</span> {
               <a name="command.458"></a><span class="yang_kw">case</span> <span class="yang_id">command</span> {
                  <a name="command.458"></a><span class="yang_kw">leaf</span> <span class="yang_id">command</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxIdentifier.102">nt:NcxIdentifier</a></span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Show help for the specified command,
                        also called an RPC method"</span>;
                  }
               }  <span class="yang_cmt">// case command</span>

               <a name="commands.463"></a><span class="yang_kw">case</span> <span class="yang_id">commands</span> {
                  <a name="commands.463"></a><span class="yang_kw">leaf</span> <span class="yang_id">commands</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"Show info for all local commands"</span>;
                  }
               }  <span class="yang_cmt">// case commands</span>

               <a name="notification.467"></a><span class="yang_kw">case</span> <span class="yang_id">notification</span> {
                  <a name="notification.467"></a><span class="yang_kw">leaf</span> <span class="yang_id">notification</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxIdentifier.102">nt:NcxIdentifier</a></span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Show help for the specified notification"</span>;
                  }
               }  <span class="yang_cmt">// case notification</span>

               <a name="object.471"></a><span class="yang_kw">case</span> <span class="yang_id">object</span> {
                  <a name="object.471"></a><span class="yang_kw">leaf</span> <span class="yang_id">object</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxIdentifier.102">nt:NcxIdentifier</a></span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"Show help for the specified object"</span>;
                  }
               }  <span class="yang_cmt">// case object</span>

               <a name="type.475"></a><span class="yang_kw">case</span> <span class="yang_id">type</span> {
                  <a name="type.475"></a><span class="yang_kw">leaf</span> <span class="yang_id">type</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxIdentifier.102">nt:NcxIdentifier</a></span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"Show help for the specified type"</span>;
                  }
               }  <span class="yang_cmt">// case type</span>
            }  <span class="yang_cmt">// choice helptype</span>

            <a name="uses.480"></a><span class="yang_kw">uses</span> <a href="/modules/ncx-app-common/2009-04-10#HelpMode.37">ncxapp:HelpMode</a>;
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"command"</span>;
         }
      }  <span class="yang_cmt">// rpc help</span>

      <a name="insert.484"></a><span class="yang_kw">rpc</span> <span class="yang_id">insert</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Insert some NETCONF config data with the edit-config operation"</span>;
         <a name="input.487"></a><span class="yang_kw">input</span> {

            <a name="uses.490"></a><span class="yang_kw">uses</span> <a href="#EditParms.129">EditParms</a>;

            <a name="order.492"></a><span class="yang_kw">leaf</span> <span class="yang_id">order</span> {
               <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                  <span class="yang_kw">enum</span> <span class="yang_str">"first"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">0</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"last"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">1</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"before"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">2</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"after"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">3</span>;
                  }
               }
               <span class="yang_kw">default</span> <span class="yang_str">"last"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The insert order that should be used.
                  If the values 'before' or 'after' are selected,
                  then the edit-target parameter must also be present."</span>;
            }

            <a name="operation.506"></a><span class="yang_kw">leaf</span> <span class="yang_id">operation</span> {
               <span class="yang_kw">type</span> <span class="yang_id">enumeration</span> {
                  <span class="yang_kw">enum</span> <span class="yang_str">"create"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">0</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"merge"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">1</span>;
                  }
                  <span class="yang_kw">enum</span> <span class="yang_str">"replace"</span> {
                     <span class="yang_kw">value</span> <span class="yang_str">2</span>;
                  }
               }
               <span class="yang_kw">default</span> <span class="yang_str">"merge"</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The edit-config operation that should be used."</span>;
            }

            <a name="edit-target.516"></a><span class="yang_kw">leaf</span> <span class="yang_id">edit-target</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The value or key clause that should be used.
                  This parameter shoul only be present if the
                  order selected is 'before' or 'after'.
                  
                  For a leaf-list, the edit-target contains the
                  value of the target leaf-list node within the
                  configuration being edited.  The new config
                  will be inserted before or after this leaf-list
                  node, depending on the order selected.
                  E.g., edit-target='some leaf content'.
                  
                  For a list, the edit-target contains the
                  key values of the target list node within the
                  configuration being edited.  The new config
                  will be inserted before or after this list
                  node, depending on the order selected.
                  E.g., edit-target=[name='fred'][zipcode=90210]."</span>;
            }
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"target"</span>;
         }
      }  <span class="yang_cmt">// rpc insert</span>

      <a name="list.541"></a><span class="yang_kw">rpc</span> <span class="yang_id">list</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"List some NETCONF info."</span>;
         <a name="input.543"></a><span class="yang_kw">input</span> {
            <a name="listtype.544"></a><span class="yang_kw">choice</span> <span class="yang_id">listtype</span> {
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <a name="commands.547"></a><span class="yang_kw">case</span> <span class="yang_id">commands</span> {
                  <a name="commands.547"></a><span class="yang_kw">leaf</span> <span class="yang_id">commands</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"List all local and remote commands"</span>;
                  }
               }  <span class="yang_cmt">// case commands</span>

               <a name="objects.552"></a><span class="yang_kw">case</span> <span class="yang_id">objects</span> {
                  <a name="objects.552"></a><span class="yang_kw">leaf</span> <span class="yang_id">objects</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"List all available top-level object names."</span>;
                  }
               }  <span class="yang_cmt">// case objects</span>

               <a name="oids.557"></a><span class="yang_kw">case</span> <span class="yang_id">oids</span> {
                  <a name="oids.557"></a><span class="yang_kw">leaf</span> <span class="yang_id">oids</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"List all available object identifiers."</span>;
                  }
               }  <span class="yang_cmt">// case oids</span>
            }  <span class="yang_cmt">// choice listtype</span>

            <a name="module.564"></a><span class="yang_kw">leaf</span> <span class="yang_id">module</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxIdentifier.102">nt:NcxIdentifier</a></span>;
               <span class="yang_kw">description</span>
                  <span class="yang_str">"List only from this module, if specified."</span>;
            }

            <a name="uses.569"></a><span class="yang_kw">uses</span> <a href="/modules/ncx-app-common/2009-04-10#HelpMode.37">ncxapp:HelpMode</a>;
         }
      }  <span class="yang_cmt">// rpc list</span>

      <a name="merge.573"></a><span class="yang_kw">rpc</span> <span class="yang_id">merge</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Merge some NETCONF config data with the edit-config operation"</span>;
         <a name="input.576"></a><span class="yang_kw">input</span> {

            <a name="uses.578"></a><span class="yang_kw">uses</span> <a href="#EditParms.129">EditParms</a>;
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"target"</span>;
         }
      }  <span class="yang_cmt">// rpc merge</span>

      <a name="mgrload.582"></a><span class="yang_kw">rpc</span> <span class="yang_id">mgrload</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Load a module or other file into the manager.
            Use the 'load' command to load a module into
            the agent."</span>;
         <a name="input.587"></a><span class="yang_kw">input</span> {
            <a name="module.589"></a><span class="yang_kw">leaf</span> <span class="yang_id">module</span> {
               <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxName.46">nt:NcxName</a></span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"Module name to load"</span>;
            }
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"module"</span>;
         }
      }  <span class="yang_cmt">// rpc mgrload</span>

      <a name="pwd.598"></a><span class="yang_kw">rpc</span> <span class="yang_id">pwd</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Print the current working directory."</span>;
      }  <span class="yang_cmt">// rpc pwd</span>

      <a name="replace.602"></a><span class="yang_kw">rpc</span> <span class="yang_id">replace</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Create some NETCONF config data with the edit-config operation"</span>;
         <a name="input.605"></a><span class="yang_kw">input</span> {

            <a name="uses.607"></a><span class="yang_kw">uses</span> <a href="#EditParms.129">EditParms</a>;
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"target"</span>;
         }
      }  <span class="yang_cmt">// rpc replace</span>

      <a name="quit.611"></a><span class="yang_kw">rpc</span> <span class="yang_id">quit</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Quit the yangcli application"</span>;
      }  <span class="yang_cmt">// rpc quit</span>

      <a name="run.615"></a><span class="yang_kw">rpc</span> <span class="yang_id">run</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Internal command to run a script."</span>;
         <a name="input.617"></a><span class="yang_kw">input</span> {
            <a name="script.620"></a><span class="yang_kw">leaf</span> <span class="yang_id">script</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script filespec to run"</span>;
            }

            <a name="P1.630"></a><span class="yang_kw">leaf</span> <span class="yang_id">P1</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script parameter $1"</span>;
            }

            <a name="P2.634"></a><span class="yang_kw">leaf</span> <span class="yang_id">P2</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script parameter $2"</span>;
            }

            <a name="P3.638"></a><span class="yang_kw">leaf</span> <span class="yang_id">P3</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script parameter $3"</span>;
            }

            <a name="P4.642"></a><span class="yang_kw">leaf</span> <span class="yang_id">P4</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script parameter $4"</span>;
            }

            <a name="P5.646"></a><span class="yang_kw">leaf</span> <span class="yang_id">P5</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script parameter $5"</span>;
            }

            <a name="P6.650"></a><span class="yang_kw">leaf</span> <span class="yang_id">P6</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script parameter $6"</span>;
            }

            <a name="P7.654"></a><span class="yang_kw">leaf</span> <span class="yang_id">P7</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script parameter $7"</span>;
            }

            <a name="P8.658"></a><span class="yang_kw">leaf</span> <span class="yang_id">P8</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script parameter $8"</span>;
            }

            <a name="P9.662"></a><span class="yang_kw">leaf</span> <span class="yang_id">P9</span> {
               <span class="yang_kw">type</span> <span class="yang_id">string</span>;
               <span class="yang_kw">description</span> <span class="yang_str">"script parameter $9"</span>;
            }
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"script"</span>;
         }
      }  <span class="yang_cmt">// rpc run</span>

      <a name="save.669"></a><span class="yang_kw">rpc</span> <span class="yang_id">save</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Meta command to save configuration edits."</span>;
      }  <span class="yang_cmt">// rpc save</span>

      <a name="sget.673"></a><span class="yang_kw">rpc</span> <span class="yang_id">sget</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Get some NETCONF running config or state data with the get
            operation, using an optional subtree filter."</span>;
         <a name="input.677"></a><span class="yang_kw">input</span> {

            <a name="uses.679"></a><span class="yang_kw">uses</span> <a href="#CommonPduParms.108">CommonPduParms</a>;

            <a name="uses.680"></a><span class="yang_kw">uses</span> <a href="#SGetParms.141">SGetParms</a>;
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"target"</span>;
         }

         <a name="output.682"></a><span class="yang_kw">output</span> {
            <a name="data.683"></a><span class="yang_kw">anyxml</span> <span class="yang_id">data</span> {
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The data resulting from the retrieval operation."</span>;
            }
         }
      }  <span class="yang_cmt">// rpc sget</span>

      <a name="sget-config.690"></a><span class="yang_kw">rpc</span> <span class="yang_id">sget-config</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Get some NETCONF config data with the get-config
            operation, using an optional subtree filter."</span>;
         <a name="input.694"></a><span class="yang_kw">input</span> {

            <a name="uses.696"></a><span class="yang_kw">uses</span> <a href="#CommonPduParms.108">CommonPduParms</a>;

            <a name="uses.697"></a><span class="yang_kw">uses</span> <a href="#SGetParms.141">SGetParms</a>;

            <a name="source.698"></a><span class="yang_kw">container</span> <span class="yang_id">source</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to retrieve."</span>;

               <a name="uses.700"></a><span class="yang_kw">uses</span> <a href="/modules/netconf/2009-04-10#GetConfigSourceType.509">nc:GetConfigSourceType</a>;
            }  <span class="yang_cmt">// container source</span>
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"target"</span>;
         }

         <a name="output.703"></a><span class="yang_kw">output</span> {
            <a name="data.704"></a><span class="yang_kw">anyxml</span> <span class="yang_id">data</span> {
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The data resulting from the retrieval operation."</span>;
            }
         }
      }  <span class="yang_cmt">// rpc sget-config</span>

      <a name="show.711"></a><span class="yang_kw">rpc</span> <span class="yang_id">show</span> {
         <span class="yang_kw">description</span> <span class="yang_str">"Local show command for yangcli info."</span>;
         <a name="input.713"></a><span class="yang_kw">input</span> {
            <a name="showtype.714"></a><span class="yang_kw">choice</span> <span class="yang_id">showtype</span> {
               <span class="yang_kw">mandatory</span> <span class="yang_str">"true"</span>;
               <a name="module.717"></a><span class="yang_kw">case</span> <span class="yang_id">module</span> {
                  <a name="module.717"></a><span class="yang_kw">leaf</span> <span class="yang_id">module</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxIdentifier.102">nt:NcxIdentifier</a></span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"Show full info for one module"</span>;
                  }
               }  <span class="yang_cmt">// case module</span>

               <a name="modules.722"></a><span class="yang_kw">case</span> <span class="yang_id">modules</span> {
                  <a name="modules.722"></a><span class="yang_kw">leaf</span> <span class="yang_id">modules</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"Show info for all modules"</span>;
                  }
               }  <span class="yang_cmt">// case modules</span>

               <a name="local.727"></a><span class="yang_kw">case</span> <span class="yang_id">local</span> {
                  <a name="local.727"></a><span class="yang_kw">leaf</span> <span class="yang_id">local</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxName.46">nt:NcxName</a></span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"Show info for one local user variable"</span>;
                  }
               }  <span class="yang_cmt">// case local</span>

               <a name="locals.732"></a><span class="yang_kw">case</span> <span class="yang_id">locals</span> {
                  <a name="locals.732"></a><span class="yang_kw">leaf</span> <span class="yang_id">locals</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"Show info for all local user variables"</span>;
                  }
               }  <span class="yang_cmt">// case locals</span>

               <a name="global.737"></a><span class="yang_kw">case</span> <span class="yang_id">global</span> {
                  <a name="global.737"></a><span class="yang_kw">leaf</span> <span class="yang_id">global</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxName.46">nt:NcxName</a></span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Show full info for one global user variable"</span>;
                  }
               }  <span class="yang_cmt">// case global</span>

               <a name="globals.742"></a><span class="yang_kw">case</span> <span class="yang_id">globals</span> {
                  <a name="globals.742"></a><span class="yang_kw">leaf</span> <span class="yang_id">globals</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Show info for all global user variables"</span>;
                  }
               }  <span class="yang_cmt">// case globals</span>

               <a name="objects.747"></a><span class="yang_kw">case</span> <span class="yang_id">objects</span> {
                  <a name="objects.747"></a><span class="yang_kw">leaf</span> <span class="yang_id">objects</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Show config database objects available at this time"</span>;
                  }
               }  <span class="yang_cmt">// case objects</span>

               <a name="var.753"></a><span class="yang_kw">case</span> <span class="yang_id">var</span> {
                  <a name="var.753"></a><span class="yang_kw">leaf</span> <span class="yang_id">var</span> {
                     <span class="yang_kw">type</span> <span class="yang_id"><a href="/modules/ncxtypes/2008-07-20#NcxName.46">nt:NcxName</a></span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Show info for one local or global variable"</span>;
                  }
               }  <span class="yang_cmt">// case var</span>

               <a name="vars.758"></a><span class="yang_kw">case</span> <span class="yang_id">vars</span> {
                  <a name="vars.758"></a><span class="yang_kw">leaf</span> <span class="yang_id">vars</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span>
                        <span class="yang_str">"Show truncated info for all program variables"</span>;
                  }
               }  <span class="yang_cmt">// case vars</span>

               <a name="version.763"></a><span class="yang_kw">case</span> <span class="yang_id">version</span> {
                  <a name="version.763"></a><span class="yang_kw">leaf</span> <span class="yang_id">version</span> {
                     <span class="yang_kw">type</span> <span class="yang_id">empty</span>;
                     <span class="yang_kw">description</span> <span class="yang_str">"Show yangcli version info"</span>;
                  }
               }  <span class="yang_cmt">// case version</span>
            }  <span class="yang_cmt">// choice showtype</span>

            <a name="uses.768"></a><span class="yang_kw">uses</span> <a href="/modules/ncx-app-common/2009-04-10#HelpMode.37">ncxapp:HelpMode</a>;
         }
      }  <span class="yang_cmt">// rpc show</span>

      <a name="xget.772"></a><span class="yang_kw">rpc</span> <span class="yang_id">xget</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Get some NETCONF running config or state data with the get
            operation, using an optional XPath filter."</span>;
         <a name="input.776"></a><span class="yang_kw">input</span> {

            <a name="uses.778"></a><span class="yang_kw">uses</span> <a href="#XGetParms.157">XGetParms</a>;
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"select"</span>;
         }

         <a name="output.780"></a><span class="yang_kw">output</span> {
            <a name="data.781"></a><span class="yang_kw">anyxml</span> <span class="yang_id">data</span> {
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The data resulting from the retrieval operation."</span>;
            }
         }
      }  <span class="yang_cmt">// rpc xget</span>

      <a name="xget-config.788"></a><span class="yang_kw">rpc</span> <span class="yang_id">xget-config</span> {
         <span class="yang_kw">description</span>
            <span class="yang_str">"Get some NETCONF config data with the get-config
            operation, using an optional XPath filter."</span>;
         <a name="input.792"></a><span class="yang_kw">input</span> {

            <a name="uses.794"></a><span class="yang_kw">uses</span> <a href="#XGetParms.157">XGetParms</a>;

            <a name="source.796"></a><span class="yang_kw">container</span> <span class="yang_id">source</span> {
               <span class="yang_kw">description</span> <span class="yang_str">"Particular configuration to retrieve."</span>;

               <a name="uses.798"></a><span class="yang_kw">uses</span> <a href="/modules/netconf/2009-04-10#GetConfigSourceType.509">nc:GetConfigSourceType</a>;
            }  <span class="yang_cmt">// container source</span>
            <a href="/modules/ncx/2009-04-10#default-parm.356">ncx:default-parm</a> <span class="yang_str">"select"</span>;
         }

         <a name="output.801"></a><span class="yang_kw">output</span> {
            <a name="data.802"></a><span class="yang_kw">anyxml</span> <span class="yang_id">data</span> {
               <span class="yang_kw">description</span>
                  <span class="yang_str">"The data resulting from the retrieval operation."</span>;
            }
         }
      }  <span class="yang_cmt">// rpc xget-config</span>
   }  <span class="yang_cmt">// module yangcli</span>
</pre>
</div>
</div>