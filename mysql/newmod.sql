
#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/UDP-MIB.yang
# module: UDP-MIB
# version: 2005-05-20
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'UDP-MIB');

INSERT INTO ncmodule VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udp-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:UDP-MIB',
    'IETF IPv6 Working Group
http://www.ietf.org/html.charters/ipv6-charter.html',
    'The MIB module for managing UDP implementations.
Copyright (C) The Internet Society (2005).  This
version of this MIB module is ...',
    'The MIB module for managing UDP implementations.
Copyright (C) The Internet Society (2005).  This
version of this MIB module is part of RFC 4113;
see the RFC itself for full legal notices.',
    '',
    'Bill Fenner (editor)

AT&T Labs -- Research
75 Willow Rd.
Menlo Park, CA 94025

Phone: +1 650 330-7893
Email: <fenner@research.att.com>

John Flick (editor)

Hewlett-Packard Company
8000 Foothills Blvd. M/S 5557
Roseville, CA 95747

Phone: +1 916 785 4018
Email: <john.flick@hp.com>

Send comments to <ipv6@ietf.org>',
    'IP version neutral revision, incorporating the
following revisions:

- Added udpHCInDatagrams and udpHCOutDatagrams in order
  to provide high-capacity counters for fast networks.
- Added text to the descriptions of all counter objects
  to indicate how discontinuities are detected.
- Deprecated the IPv4-specific udpTable and replaced it
  with the version neutral udpEndpointTable.  This
  table includes support for connected UDP endpoints
  and support for identification of the operating
  system process associated with a UDP endpoint.
- Deprecated the udpGroup and replaced it with object
  groups representing the current set of objects.
- Deprecated udpMIBCompliance and replaced it with
  udpMIBCompliance2, which includes the compliance
  information for the new object groups.

This version published as RFC 4113.',
    '/xsd/UDP-MIB_2005-05-20.xsd',
    '/modules/UDP-MIB/2005-05-20', 
    '/src/UDP-MIB_2005-05-20.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/UDP-MIB.yang',
    'UDP-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udp', '88',
    '/udp',
    '',
    '',
    '/modules/UDP-MIB/2005-05-20#udp.88', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'udpInDatagrams udpNoPorts udpInErrors udpOutDatagrams udpEntry udpEndpointEntry udpHCInDatagrams udpHCOutDatagrams',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpInDatagrams', '90',
    '/udp/udpInDatagrams',
    'The total number of UDP datagrams delivered to UDP
users.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by discontinuities in the
value of sysUpTime.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpInDatagrams.90', 
    'leaf', 
    '/udp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpNoPorts', '104',
    '/udp/udpNoPorts',
    'The total number of received UDP datagrams for which
there was no application at the destination port.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by discontinuities in the
value of sysUpTime.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpNoPorts.104', 
    'leaf', 
    '/udp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpInErrors', '118',
    '/udp/udpInErrors',
    'The number of received UDP datagrams that could not be
delivered for reasons other than the lack of an
application at the destination port.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by discontinuities in the
value of sysUpTime.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpInErrors.118', 
    'leaf', 
    '/udp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpOutDatagrams', '133',
    '/udp/udpOutDatagrams',
    'The total number of UDP datagrams sent from this
entity.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by discontinuities in the
value of sysUpTime.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpOutDatagrams.133', 
    'leaf', 
    '/udp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEntry', '150',
    '/udp/udpEntry',
    'Information about a particular current UDP listener.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEntry.150', 
    'list', 
    '/udp',
    '0',
    '1',
    '',
    '',
    'udpLocalAddress udpLocalPort',
    '',
    'udpLocalAddress udpLocalPort',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpLocalAddress', '159',
    '/udp/udpEntry/udpLocalAddress',
    'The local IP address for this UDP listener.  In the
case of a UDP listener that is willing to accept
datagrams for any IP interface associated with the
node, the value 0.0.0.0 is used.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpLocalAddress.159', 
    'leaf', 
    '/udp/udpEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpLocalPort', '171',
    '/udp/udpEntry/udpLocalPort',
    'The local port number for this UDP listener.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpLocalPort.171', 
    'leaf', 
    '/udp/udpEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEndpointEntry', '186',
    '/udp/udpEndpointEntry',
    'Information about a particular current UDP endpoint.

Implementers need to be aware that if the total number
of elements (octets or sub-identifiers) in
udpEndpointLocalAddress and udpEndpointRemoteAddress
exceeds 111, then OIDs of column instances in this table
will have more than 128 sub-identifiers and cannot be
accessed using SNMPv1, SNMPv2c, or SNMPv3.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEndpointEntry.186', 
    'list', 
    '/udp',
    '0',
    '1',
    '',
    '',
    'udpEndpointLocalAddressType udpEndpointLocalAddress udpEndpointLocalPort udpEndpointRemoteAddressType udpEndpointRemoteAddress udpEndpointRemotePort udpEndpointInstance udpEndpointProcess',
    '',
    'udpEndpointLocalAddressType 
udpEndpointLocalAddress udpEndpointLocalPort 
udpEndpointRemoteAddressType 
udpEndpointRemoteAddress udpEndpointRemotePort 
udpEndpointInstance',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEndpointLocalAddressType', '205',
    '/udp/udpEndpointEntry/udpEndpointLocalAddressType',
    'The address type of udpEndpointLocalAddress.  Only
IPv4, IPv4z, IPv6, and IPv6z addresses are expected, or
unknown(0) if datagrams for all local IP addresses are
accepted.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEndpointLocalAddressType.205', 
    'leaf', 
    '/udp/udpEndpointEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEndpointLocalAddress', '216',
    '/udp/udpEndpointEntry/udpEndpointLocalAddress',
    'The local IP address for this UDP endpoint.

The value of this object can be represented in three

possible ways, depending on the characteristics of the
listening application:

1. For an application that is willing to accept both
   IPv4 and IPv6 datagrams, the value of this object
   must be \'\'h (a zero-length octet-string), with
   the value of the corresponding instance of the
   udpEndpointLocalAddressType object being unknown(0).

2. For an application that is willing to accept only IPv4
   or only IPv6 datagrams, the value of this object
   must be \'0.0.0.0\' or \'::\', respectively, while the
   corresponding instance of the
   udpEndpointLocalAddressType object represents the
   appropriate address type.

3. For an application that is listening for data
   destined only to a specific IP address, the value
   of this object is the specific IP address for which
   this node is receiving packets, with the
   corresponding instance of the
   udpEndpointLocalAddressType object representing the
   appropriate address type.

As this object is used in the index for the
udpEndpointTable, implementors of this table should be
careful not to create entries that would result in OIDs
with more than 128 subidentifiers; else the information
cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEndpointLocalAddress.216', 
    'leaf', 
    '/udp/udpEndpointEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEndpointLocalPort', '256',
    '/udp/udpEndpointEntry/udpEndpointLocalPort',
    'The local port number for this UDP endpoint.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEndpointLocalPort.256', 
    'leaf', 
    '/udp/udpEndpointEntry',
    '0',
    '1',
    'InetPortNumber',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEndpointRemoteAddressType', '264',
    '/udp/udpEndpointEntry/udpEndpointRemoteAddressType',
    'The address type of udpEndpointRemoteAddress.  Only
IPv4, IPv4z, IPv6, and IPv6z addresses are expected, or
unknown(0) if datagrams for all remote IP addresses are
accepted.  Also, note that some combinations of

udpEndpointLocalAdressType and
udpEndpointRemoteAddressType are not supported.  In
particular, if the value of this object is not
unknown(0), it is expected to always refer to the
same IP version as udpEndpointLocalAddressType.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEndpointRemoteAddressType.264', 
    'leaf', 
    '/udp/udpEndpointEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEndpointRemoteAddress', '281',
    '/udp/udpEndpointEntry/udpEndpointRemoteAddress',
    'The remote IP address for this UDP endpoint.  If
datagrams from any remote system are to be accepted,
this value is \'\'h (a zero-length octet-string).
Otherwise, it has the type described by
udpEndpointRemoteAddressType and is the address of the
remote system from which datagrams are to be accepted
(or to which all datagrams will be sent).

As this object is used in the index for the
udpEndpointTable, implementors of this table should be
careful not to create entries that would result in OIDs
with more than 128 subidentifiers; else the information
cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEndpointRemoteAddress.281', 
    'leaf', 
    '/udp/udpEndpointEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEndpointRemotePort', '301',
    '/udp/udpEndpointEntry/udpEndpointRemotePort',
    'The remote port number for this UDP endpoint.  If
datagrams from any remote system are to be accepted,
this value is zero.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEndpointRemotePort.301', 
    'leaf', 
    '/udp/udpEndpointEntry',
    '0',
    '1',
    'InetPortNumber',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEndpointInstance', '311',
    '/udp/udpEndpointEntry/udpEndpointInstance',
    'The instance of this tuple.  This object is used to
distinguish among multiple processes \'connected\' to
the same UDP endpoint.  For example, on a system
implementing the BSD sockets interface, this would be
used to support the SO_REUSEADDR and SO_REUSEPORT
socket options.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEndpointInstance.311', 
    'leaf', 
    '/udp/udpEndpointEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpEndpointProcess', '326',
    '/udp/udpEndpointEntry/udpEndpointProcess',
    'The system\'s process ID for the process associated with
this endpoint, or zero if there is no such process.
This value is expected to be the same as
HOST-RESOURCES-MIB::hrSWRunIndex or SYSAPPL-MIB::
sysApplElmtRunIndex for some row in the appropriate
tables.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpEndpointProcess.326', 
    'leaf', 
    '/udp/udpEndpointEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpHCInDatagrams', '340',
    '/udp/udpHCInDatagrams',
    'The total number of UDP datagrams delivered to UDP
users, for devices that can receive more than 1
million UDP datagrams per second.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by discontinuities in the
value of sysUpTime.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpHCInDatagrams.340', 
    'leaf', 
    '/udp',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'UDP-MIB', 'UDP-MIB', '2005-05-20', 'udpHCOutDatagrams', '355',
    '/udp/udpHCOutDatagrams',
    'The total number of UDP datagrams sent from this
entity, for devices that can transmit more than 1
million UDP datagrams per second.

Discontinuities in the value of this counter can occur
at re-initialization of the management system, and at
other times as indicated by discontinuities in the
value of sysUpTime.',
    '',
    '/modules/UDP-MIB/2005-05-20#udpHCOutDatagrams.355', 
    'leaf', 
    '/udp',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/TRANSPORT-ADDRESS-MIB.yang
# module: TRANSPORT-ADDRESS-MIB
# version: 2002-11-01
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'TRANSPORT-ADDRESS-MIB');

INSERT INTO ncmodule VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'transport-address',
    'urn:ietf:params:xml:ns:yang:smiv2:TRANSPORT-ADDRESS-MIB',
    'IETF Operations and Management Area',
    'This MIB module provides commonly used transport
address definitions.

Copyright (C) The Internet Society (2002). This version o...',
    'This MIB module provides commonly used transport
address definitions.

Copyright (C) The Internet Society (2002). This version of
this MIB module is part of RFC 3419; see the RFC itself for
full legal notices.',
    '',
    'Juergen Schoenwaelder (Editor)
TU Braunschweig
Bueltenweg 74/75
38106 Braunschweig, Germany
Phone: +49 531 391-3289
EMail: schoenw@ibr.cs.tu-bs.de

Send comments to <mibs@ops.ietf.org>.',
    'Initial version, published as RFC 3419.',
    '/xsd/TRANSPORT-ADDRESS-MIB_2002-11-01.xsd',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01', 
    '/src/TRANSPORT-ADDRESS-MIB_2002-11-01.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/TRANSPORT-ADDRESS-MIB.yang',
    'TRANSPORT-ADDRESS-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'TransportDomain', '51',
    'A value that represents a transport domain.

Some possible values, such as transportDomainUdpIpv4, are
defined in this module.  Other possible values can be
defined in other MIB modules.',
    '',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01#TransportDomain.51', 'string', 'object-identifier', 
    'yang-types', '175', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'TransportAddressType', '61',
    'A value that represents a transport domain. This is the
enumerated version of the transport domain registrations
in this MIB module. The enumerated values have the
following meaning:

unknown(0)     unknown transport address type
udpIpv4(1)     transportDomainUdpIpv4
udpIpv6(2)     transportDomainUdpIpv6
udpIpv4z(3)    transportDomainUdpIpv4z
udpIpv6z(4)    transportDomainUdpIpv6z
tcpIpv4(5)     transportDomainTcpIpv4
tcpIpv6(6)     transportDomainTcpIpv6
tcpIpv4z(7)    transportDomainTcpIpv4z
tcpIpv6z(8)    transportDomainTcpIpv6z
sctpIpv4(9)    transportDomainSctpIpv4
sctpIpv6(10)   transportDomainSctpIpv6
sctpIpv4z(11)  transportDomainSctpIpv4z
sctpIpv6z(12)  transportDomainSctpIpv6z
local(13)      transportDomainLocal
udpDns(14)     transportDomainUdpDns
tcpDns(15)     transportDomainTcpDns
sctpDns(16)    transportDomainSctpDns

This textual convention can be used to represent transport
domains in situations where a syntax of TransportDomain is
unwieldy (for example, when used as an index).

The usage of this textual convention implies that additional
transport domains can only be supported by updating this MIB
module. This extensibility restriction does not apply for the
TransportDomain textual convention which allows MIB authors
to define additional transport domains independently in
other MIB modules.',
    '',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01#TransportAddressType.61', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'TransportAddress', '117',
    'Denotes a generic transport address.

A TransportAddress value is always interpreted within the
context of a TransportAddressType or TransportDomain value.
Every usage of the TransportAddress textual convention MUST
specify the TransportAddressType or TransportDomain object
which provides the context. Furthermore, MIB authors SHOULD
define a separate TransportAddressType or TransportDomain
object for each TransportAddress object. It is suggested that
the TransportAddressType or TransportDomain is logically
registered before the object(s) which use the
TransportAddress textual convention if they appear in the
same logical row.

The value of a TransportAddress object must always be
consistent with the value of the associated
TransportAddressType or TransportDomain object. Attempts
to set a TransportAddress object to a value which is
inconsistent with the associated TransportAddressType or
TransportDomain must fail with an inconsistentValue error.

When this textual convention is used as a syntax of an
index object, there may be issues with the limit of 128
sub-identifiers specified in SMIv2, STD 58. In this case,
the OBJECT-TYPE declaration MUST include a \'SIZE\' clause
to limit the number of potential instance sub-identifiers.',
    '',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01#TransportAddress.117', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'TransportAddressIPv4', '150',
    'Represents a transport address consisting of an IPv4
address and a port number (as used for example by UDP,
TCP and SCTP):

 octets       contents         encoding
  1-4         IPv4 address     network-byte order
  5-6         port number      network-byte order

This textual convention SHOULD NOT be used directly in object
definitions since it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or
in conjunction with TransportAddressType or TransportDomain
as a pair.',
    '',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01#TransportAddressIPv4.150', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'TransportAddressIPv6', '172',
    'Represents a transport address consisting of an IPv6
address and a port number (as used for example by UDP,
TCP and SCTP):

 octets       contents         encoding
  1-16        IPv6 address     network-byte order
 17-18        port number      network-byte order

This textual convention SHOULD NOT be used directly in object
definitions since it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or
in conjunction with TransportAddressType or TransportDomain
as a pair.',
    '',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01#TransportAddressIPv6.172', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'TransportAddressIPv4z', '194',
    'Represents a transport address consisting of an IPv4
address, a zone index and a port number (as used for
example by UDP, TCP and SCTP):

 octets       contents         encoding
  1-4         IPv4 address     network-byte order
  5-8         zone index       network-byte order
  9-10        port number      network-byte order

This textual convention SHOULD NOT be used directly in object
definitions since it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or
in conjunction with TransportAddressType or TransportDomain
as a pair.',
    '',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01#TransportAddressIPv4z.194', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'TransportAddressIPv6z', '217',
    'Represents a transport address consisting of an IPv6
address, a zone index and a port number (as used for
example by UDP, TCP and SCTP):

 octets       contents         encoding
  1-16        IPv6 address     network-byte order
 17-20        zone index       network-byte order
 21-22        port number      network-byte order

This textual convention SHOULD NOT be used directly in object
definitions since it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or
in conjunction with TransportAddressType or TransportDomain
as a pair.',
    '',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01#TransportAddressIPv6z.217', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'TransportAddressLocal', '240',
    'Represents a POSIX Local IPC transport address:

octets       contents                   encoding
 all         POSIX Local IPC address    string

The Posix Local IPC transport domain subsumes UNIX domain
sockets.

This textual convention SHOULD NOT be used directly in object
definitions since it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or
in conjunction with TransportAddressType or TransportDomain
as a pair.

When this textual convention is used as a syntax of an
index object, there may be issues with the limit of 128
sub-identifiers specified in SMIv2, STD 58. In this case,
the OBJECT-TYPE declaration MUST include a \'SIZE\' clause
to limit the number of potential instance sub-identifiers.',
    'Protocol Independent Interfaces (IEEE POSIX 1003.1g)',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01#TransportAddressLocal.240', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'TRANSPORT-ADDRESS-MIB', 'TRANSPORT-ADDRESS-MIB', '2002-11-01', 'TransportAddressDns', '270',
    'Represents a DNS domain name followed by a colon \':\'
(ASCII character 0x3A) and a port number in ASCII.
The name SHOULD be fully qualified whenever possible.

Values of this textual convention are not directly useable as
transport-layer addressing information, and require runtime
resolution. As such, applications that write them must be
prepared for handling errors if such values are not
supported, or cannot be resolved (if resolution occurs at the
time of the management operation).

The DESCRIPTION clause of TransportAddress objects that may
have TransportAddressDns values must fully describe how (and
when) such names are to be resolved to IP addresses and vice
versa.

This textual convention SHOULD NOT be used directly in object
definitions since it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or
in conjunction with TransportAddressType or TransportDomain
as a pair.

When this textual convention is used as a syntax of an
index object, there may be issues with the limit of 128
sub-identifiers specified in SMIv2, STD 58. In this case,
the OBJECT-TYPE declaration MUST include a \'SIZE\' clause
to limit the number of potential instance sub-identifiers.',
    '',
    '/modules/TRANSPORT-ADDRESS-MIB/2002-11-01#TransportAddressDns.270', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/ENTITY-SENSOR-MIB.yang
# module: ENTITY-SENSOR-MIB
# version: 2002-12-16
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'ENTITY-SENSOR-MIB');

INSERT INTO ncmodule VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entity-sensor',
    'urn:ietf:params:xml:ns:yang:smiv2:ENTITY-SENSOR-MIB',
    'IETF Entity MIB Working Group',
    'This module defines Entity MIB extensions for physical
sensors.

Copyright (C) The Internet Society (2002). This version
of this...',
    'This module defines Entity MIB extensions for physical
sensors.

Copyright (C) The Internet Society (2002). This version
of this MIB module is part of RFC 3433; see the RFC
itself for full legal notices.',
    '',
    '        Andy Bierman
Cisco Systems, Inc.
Tel: +1 408-527-3711
E-mail: abierman@cisco.com
Postal: 170 West Tasman Drive
San Jose, CA USA 95134

Dan Romascanu
Avaya Inc.
Tel: +972-3-645-8414
Email: dromasca@avaya.com
Postal: Atidim technology Park, Bldg. #3
Tel Aviv, Israel, 61131

K.C. Norseth
L-3 Communications
Tel: +1 801-594-2809
Email: kenyon.c.norseth@L-3com.com
Postal: 640 N. 2200 West.



Salt Lake City, Utah 84116-0850

Send comments to <entmib@ietf.org>
Mailing list subscription info:
http://www.ietf.org/mailman/listinfo/entmib ',
    'Initial version of the Entity Sensor MIB module, published
as RFC 3433.',
    '/xsd/ENTITY-SENSOR-MIB_2002-12-16.xsd',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16', 
    '/src/ENTITY-SENSOR-MIB_2002-12-16.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/ENTITY-SENSOR-MIB.yang',
    'ENTITY-SENSOR-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'EntitySensorDataType', '73',
    'An object using this data type represents the Entity Sensor
measurement data type associated with a physical sensor
value. The actual data units are determined by examining an
object of this type together with the associated
EntitySensorDataScale object.

An object of this type SHOULD be defined together with
objects of type EntitySensorDataScale and
EntitySensorPrecision.  Together, associated objects of
these three types are used to identify the semantics of an
object of type EntitySensorValue.






Valid values are:

   other(1):        a measure other than those listed below
   unknown(2):      unknown measurement, or arbitrary,
		    relative numbers
   voltsAC(3):      electric potential
   voltsDC(4):      electric potential
   amperes(5):      electric current
   watts(6):        power
   hertz(7):        frequency
   celsius(8):      temperature
   percentRH(9):    percent relative humidity
   rpm(10):         shaft revolutions per minute
   cmm(11),:        cubic meters per minute (airflow)
   truthvalue(12):  value takes { true(1), false(2) }',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#EntitySensorDataType.73', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'EntitySensorDataScale', '123',
    'An object using this data type represents a data scaling
factor, represented with an International System of Units
(SI) prefix.  The actual data units are determined by
examining an object of this type together with the
associated EntitySensorDataType object.

An object of this type SHOULD be defined together with
objects of type EntitySensorDataType and
EntitySensorPrecision.  Together, associated objects of
these three types are used to identify the semantics of an
object of type EntitySensorValue.',
    'The International System of Units (SI),



National Institute of Standards and Technology,
Spec. Publ. 330, August 1991.',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#EntitySensorDataScale.123', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'EntitySensorPrecision', '164',
    'An object using this data type represents a sensor
precision range.

An object of this type SHOULD be defined together with
objects of type EntitySensorDataType and
EntitySensorDataScale.  Together, associated objects of
these three types are used to identify the semantics of an
object of type EntitySensorValue.

If an object of this type contains a value in the range 1 to
9, it represents the number of decimal places in the
fractional part of an associated EntitySensorValue fixed-
point number.

If an object of this type contains a value in the range -8
to -1, it represents the number of accurate digits in the
associated EntitySensorValue fixed-point number.

The value zero indicates the associated EntitySensorValue
object is not a fixed-point number.

Agent implementors must choose a value for the associated
EntitySensorPrecision object so that the precision and



accuracy of the associated EntitySensorValue object is
correctly indicated.

For example, a physical entity representing a temperature
sensor that can measure 0 degrees to 100 degrees C in 0.1
degree increments, +/- 0.05 degrees, would have an
EntitySensorPrecision value of \'1\', an EntitySensorDataScale
value of \'units(9)\', and an EntitySensorValue ranging from
\'0\' to \'1000\'.  The EntitySensorValue would be interpreted
as \'degrees C * 10\'.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#EntitySensorPrecision.164', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'EntitySensorValue', '207',
    'An object using this data type represents an Entity Sensor
value.
An object of this type SHOULD be defined together with
objects of type EntitySensorDataType, EntitySensorDataScale
and EntitySensorPrecision.  Together, associated objects of
those three types are used to identify the semantics of an
object of this data type.

The semantics of an object using this data type are
determined by the value of the associated
EntitySensorDataType object.

If the associated EntitySensorDataType object is equal to
\'voltsAC(3)\', \'voltsDC(4)\', \'amperes(5)\', \'watts(6),
\'hertz(7)\', \'celsius(8)\', or \'cmm(11)\', then an object of
this type MUST contain a fixed point number ranging from
-999,999,999 to +999,999,999.  The value -1000000000
indicates an underflow error. The value +1000000000
indicates an overflow error.  The EntitySensorPrecision
indicates how many fractional digits are represented in the
associated EntitySensorValue object.

If the associated EntitySensorDataType object is equal to
\'percentRH(9)\', then an object of this type MUST contain a
number ranging from 0 to 100.

If the associated EntitySensorDataType object is equal to
\'rpm(10)\', then an object of this type MUST contain a number
ranging from -999,999,999 to +999,999,999.

If the associated EntitySensorDataType object is equal to
\'truthvalue(12)\', then an object of this type MUST contain
either the value \'true(1)\' or the value \'false(2)\'.



If the associated EntitySensorDataType object is equal to
\'other(1)\' or unknown(2)\', then an object of this type MUST
contain a number ranging from -1000000000 to 1000000000.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#EntitySensorValue.207', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'EntitySensorStatus', '253',
    'An object using this data type represents the operational
status of a physical sensor.

The value \'ok(1)\' indicates that the agent can obtain the
sensor value.

The value \'unavailable(2)\' indicates that the agent
presently cannot obtain the sensor value.

The value \'nonoperational(3)\' indicates that the agent
believes the sensor is broken.  The sensor could have a hard
failure (disconnected wire), or a soft failure such as out-
of-range, jittery, or wildly fluctuating readings.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#EntitySensorStatus.253', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entitySensorObjects', '275',
    '/entitySensorObjects',
    '',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entitySensorObjects.275', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'entPhySensorEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhySensorEntry', '280',
    '/entitySensorObjects/entPhySensorEntry',
    'Information about a particular physical sensor.





An entry in this table describes the present reading of a
sensor, the measurement units and scale, and sensor
operational status.

Entries are created in this table by the agent.  An entry
for each physical sensor SHOULD be created at the same time
as the associated entPhysicalEntry.  An entry SHOULD be
destroyed if the associated entPhysicalEntry is destroyed.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhySensorEntry.280', 
    'list', 
    '/entitySensorObjects',
    '0',
    '1',
    '',
    '',
    'entPhysicalIndex entPhySensorType entPhySensorScale entPhySensorPrecision entPhySensorValue entPhySensorOperStatus entPhySensorUnitsDisplay entPhySensorValueTimeStamp entPhySensorValueUpdateRate',
    '',
    'entPhysicalIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhysicalIndex', '300',
    '/entitySensorObjects/entPhySensorEntry/entPhysicalIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhysicalIndex.300', 
    'leaf', 
    '/entitySensorObjects/entPhySensorEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhySensorType', '309',
    '/entitySensorObjects/entPhySensorEntry/entPhySensorType',
    'The type of data returned by the associated
entPhySensorValue object.

This object SHOULD be set by the agent during entry
creation, and the value SHOULD NOT change during operation.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhySensorType.309', 
    'leaf', 
    '/entitySensorObjects/entPhySensorEntry',
    '0',
    '1',
    'EntitySensorDataType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhySensorScale', '321',
    '/entitySensorObjects/entPhySensorEntry/entPhySensorScale',
    'The exponent to apply to values returned by the associated
entPhySensorValue object.

This object SHOULD be set by the agent during entry
creation, and the value SHOULD NOT change during operation.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhySensorScale.321', 
    'leaf', 
    '/entitySensorObjects/entPhySensorEntry',
    '0',
    '1',
    'EntitySensorDataScale',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhySensorPrecision', '333',
    '/entitySensorObjects/entPhySensorEntry/entPhySensorPrecision',
    'The number of decimal places of precision in fixed-point
sensor values returned by the associated entPhySensorValue
object.

This object SHOULD be set to \'0\' when the associated
entPhySensorType value is not a fixed-point type: e.g.,
\'percentRH(9)\', \'rpm(10)\', \'cmm(11)\', or \'truthvalue(12)\'.

This object SHOULD be set by the agent during entry
creation, and the value SHOULD NOT change during operation.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhySensorPrecision.333', 
    'leaf', 
    '/entitySensorObjects/entPhySensorEntry',
    '0',
    '1',
    'EntitySensorPrecision',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhySensorValue', '350',
    '/entitySensorObjects/entPhySensorEntry/entPhySensorValue',
    'The most recent measurement obtained by the agent for this
sensor.

To correctly interpret the value of this object, the
associated entPhySensorType, entPhySensorScale, and
entPhySensorPrecision objects must also be examined.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhySensorValue.350', 
    'leaf', 
    '/entitySensorObjects/entPhySensorEntry',
    '0',
    '1',
    'EntitySensorValue',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhySensorOperStatus', '363',
    '/entitySensorObjects/entPhySensorEntry/entPhySensorOperStatus',
    'The operational status of the sensor.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhySensorOperStatus.363', 
    'leaf', 
    '/entitySensorObjects/entPhySensorEntry',
    '0',
    '1',
    'EntitySensorStatus',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhySensorUnitsDisplay', '371',
    '/entitySensorObjects/entPhySensorEntry/entPhySensorUnitsDisplay',
    'A textual description of the data units that should be used
in the display of entPhySensorValue.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhySensorUnitsDisplay.371', 
    'leaf', 
    '/entitySensorObjects/entPhySensorEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhySensorValueTimeStamp', '380',
    '/entitySensorObjects/entPhySensorEntry/entPhySensorValueTimeStamp',
    'The value of sysUpTime at the time the status and/or value
of this sensor was last obtained by the agent.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhySensorValueTimeStamp.380', 
    'leaf', 
    '/entitySensorObjects/entPhySensorEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-SENSOR-MIB', 'ENTITY-SENSOR-MIB', '2002-12-16', 'entPhySensorValueUpdateRate', '389',
    '/entitySensorObjects/entPhySensorEntry/entPhySensorValueUpdateRate',
    'An indication of the frequency that the agent updates the
associated entPhySensorValue object, representing in
milliseconds.

The value zero indicates:

    - the sensor value is updated on demand (e.g.,
      when polled by the agent for a get-request),
    - the sensor value is updated when the sensor
      value changes (event-driven),
    - the agent does not know the update rate.',
    '',
    '/modules/ENTITY-SENSOR-MIB/2002-12-16#entPhySensorValueUpdateRate.389', 
    'leaf', 
    '/entitySensorObjects/entPhySensorEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/ietf/SNMPv2-TC.yang
# module: SNMPv2-TC
# version: 1999-04-01
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMPv2-TC');

INSERT INTO ncmodule VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'smiv2',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-TC',
    '',
    '',
    '',
    '',
    '',
    'From RFC 2579.',
    '/xsd/SNMPv2-TC_1999-04-01.xsd',
    '/modules/SNMPv2-TC/1999-04-01', 
    '/src/SNMPv2-TC_1999-04-01.yang',
    '/home/andy/swdev/trunk/netconf/modules/ietf/SNMPv2-TC.yang',
    'SNMPv2-TC.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'DisplayString', '39',
    'Represents textual information taken from the NVT ASCII

character set, as defined in pages 4, 10-11 of RFC 854.

To summarize RFC 854, the NVT ASCII repertoire specifies:

  - the use of character codes 0-127 (decimal)

  - the graphics characters (32-126) are interpreted as
    US ASCII

  - NUL, LF, CR, BEL, BS, HT, VT and FF have the special
    meanings specified in RFC 854

  - the other 25 codes have no standard interpretation

  - the sequence \'CR LF\' means newline

  - the sequence \'CR NUL\' means carriage-return

  - an \'LF\' not preceded by a \'CR\' means moving to the
    same column on the next line.

  - the sequence \'CR x\' for any x other than LF or NUL is
    illegal.  (Note that this also means that a string may
    end with either \'CR LF\' or \'CR NUL\', but not with CR.)

Any object defined using this syntax may not exceed 255
characters in length.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#DisplayString.39', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'PhysAddress', '77',
    'Represents media- or physical-level addresses.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#PhysAddress.77', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'MacAddress', '86',
    'Represents an 802 MAC address represented in the
`canonical\' order defined by IEEE 802.1a, i.e., as if it
were transmitted least significant bit first, even though
802.5 (in contrast to other 802.x protocols) requires MAC
addresses to be transmitted most significant bit first.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#MacAddress.86', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'TruthValue', '100',
    'Represents a boolean value.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#TruthValue.100', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'TestAndIncr', '109',
    'Represents integer-valued information used for atomic
operations.  When the management protocol is used to specify
that an object instance having this syntax is to be
modified, the new value supplied via the management protocol
must precisely match the value presently held by the
instance.  If not, the management protocol set operation
fails with an error of `inconsistentValue\'.  Otherwise, if
the current value is the maximum value of 2^31-1 (2147483647
decimal), then the value held by the instance is wrapped to
zero; otherwise, the value held by the instance is
incremented by one.  (Note that regardless of whether the
management protocol set operation succeeds, the variable-
binding in the request and response PDUs are identical.)

The value of the ACCESS clause for objects having this
syntax is either `read-write\' or `read-create\'.  When an
instance of a columnar object having this syntax is created,
any value may be supplied via the management protocol.

When the network management portion of the system is re-
initialized, the value of every object instance having this
syntax must either be incremented from its value prior to
the re-initialization, or (if the value prior to the re-
initialization is unknown) be set to a pseudo-randomly
generated value.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#TestAndIncr.109', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'AutonomousType', '141',
    'Represents an independently extensible type identification
value.  It may, for example, indicate a particular sub-tree
with further MIB definitions, or define a particular type of
protocol or hardware.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#AutonomousType.141', 'string', 'object-identifier', 
    'yang-types', '175', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'InstancePointer', '150',
    'A pointer to either a specific instance of a MIB object or
a conceptual row of a MIB table in the managed device.  In
the latter case, by convention, it is the name of the
particular instance of the first accessible columnar object
in the conceptual row.

The two uses of this textual convention are replaced by
VariablePointer and RowPointer, respectively.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#InstancePointer.150', 'string', 'object-identifier', 
    'yang-types', '175', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'VariablePointer', '164',
    'A pointer to a specific object instance.  For example,
sysContact.0 or ifInOctets.3.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#VariablePointer.164', 'string', 'object-identifier', 
    'yang-types', '175', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'RowPointer', '171',
    'Represents a pointer to a conceptual row.  The value is the
name of the instance of the first accessible columnar object
in the conceptual row.

For example, ifIndex.3 would point to the 3rd row in the
ifTable (note that if ifIndex were not-accessible, then
ifDescr.3 would be used instead).',
    '',
    '/modules/SNMPv2-TC/1999-04-01#RowPointer.171', 'string', 'object-identifier', 
    'yang-types', '175', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'RowStatus', '183',
    'The RowStatus textual convention is used to manage the
creation and deletion of conceptual rows, and is used as the
value of the SYNTAX clause for the status column of a
conceptual row (as described in Section 7.7.1 of [2].)

The status column has six defined values:

     - `active\', which indicates that the conceptual row is
     available for use by the managed device;

     - `notInService\', which indicates that the conceptual
     row exists in the agent, but is unavailable for use by
     the managed device (see NOTE below); \'notInService\' has
     no implication regarding the internal consistency of
     the row, availability of resources, or consistency with
     the current state of the managed device;

     - `notReady\', which indicates that the conceptual row
     exists in the agent, but is missing information
     necessary in order to be available for use by the
     managed device (i.e., one or more required columns in
     the conceptual row have not been instanciated);

     - `createAndGo\', which is supplied by a management
     station wishing to create a new instance of a
     conceptual row and to have its status automatically set
     to active, making it available for use by the managed
     device;

     - `createAndWait\', which is supplied by a management
     station wishing to create a new instance of a
     conceptual row (but not make it available for use by
     the managed device); and,
     - `destroy\', which is supplied by a management station
     wishing to delete all of the instances associated with
     an existing conceptual row.

Whereas five of the six values (all except `notReady\') may
be specified in a management protocol set operation, only
three values will be returned in response to a management
protocol retrieval operation:  `notReady\', `notInService\' or
`active\'.  That is, when queried, an existing conceptual row
has only three states:  it is either available for use by
the managed device (the status column has value `active\');
it is not available for use by the managed device, though
the agent has sufficient information to attempt to make it
so (the status column has value `notInService\'); or, it is
not available for use by the managed device, and an attempt
to make it so would fail because the agent has insufficient
information (the state column has value `notReady\').

			 NOTE WELL

     This textual convention may be used for a MIB table,
     irrespective of whether the values of that table\'s
     conceptual rows are able to be modified while it is
     active, or whether its conceptual rows must be taken
     out of service in order to be modified.  That is, it is
     the responsibility of the DESCRIPTION clause of the
     status column to specify whether the status column must
     not be `active\' in order for the value of some other
     column of the same conceptual row to be modified.  If
     such a specification is made, affected columns may be
     changed by an SNMP set PDU if the RowStatus would not
     be equal to `active\' either immediately before or after
     processing the PDU.  In other words, if the PDU also
     contained a varbind that would change the RowStatus
     value, the column in question may be changed if the
     RowStatus was not equal to `active\' as the PDU was
     received, or if the varbind sets the status to a value
     other than \'active\'.

Also note that whenever any elements of a row exist, the
RowStatus column must also exist.

To summarize the effect of having a conceptual row with a
status column having a SYNTAX clause value of RowStatus,
consider the following state diagram:

			     STATE
  +--------------+-----------+-------------+-------------
  |      A       |     B     |      C      |      D
  |              |status col.|status column|
  |status column |    is     |      is     |status column
ACTION    |does not exist|  notReady | notInService|  is active
--------------+--------------+-----------+-------------+-------------
set status    |noError    ->D|inconsist- |inconsistent-|inconsistent-
column to     |       or     |   entValue|        Value|        Value
createAndGo   |inconsistent- |           |             |
  |         Value|           |             |
--------------+--------------+-----------+-------------+-------------
set status    |noError  see 1|inconsist- |inconsistent-|inconsistent-
column to     |       or     |   entValue|        Value|        Value
createAndWait |wrongValue    |           |             |
--------------+--------------+-----------+-------------+-------------
set status    |inconsistent- |inconsist- |noError      |noError
column to     |         Value|   entValue|             |
active        |              |           |             |
  |              |     or    |             |
  |              |           |             |
  |              |see 2   ->D|see 8     ->D|          ->D
--------------+--------------+-----------+-------------+-------------
set status    |inconsistent- |inconsist- |noError      |noError   ->C
column to     |         Value|   entValue|             |
notInService  |              |           |             |
  |              |     or    |             |      or
  |              |           |             |
  |              |see 3   ->C|          ->C|see 6
--------------+--------------+-----------+-------------+-------------
set status    |noError       |noError    |noError      |noError   ->A
column to     |              |           |             |      or
destroy       |           ->A|        ->A|          ->A|see 7
--------------+--------------+-----------+-------------+-------------
set any other |see 4         |noError    |noError      |see 5
column to some|              |           |             |
value         |              |      see 1|          ->C|          ->D
--------------+--------------+-----------+-------------+-------------

(1) goto B or C, depending on information available to the
agent.

(2) if other variable bindings included in the same PDU,
provide values for all columns which are missing but
required, and all columns have acceptable values, then
return noError and goto D.

(3) if other variable bindings included in the same PDU,
provide legal values for all columns which are missing but
required, then return noError and goto C.

(4) at the discretion of the agent, the return value may be
either:

     inconsistentName:  because the agent does not choose to
     create such an instance when the corresponding
     RowStatus instance does not exist, or

     inconsistentValue:  if the supplied value is
     inconsistent with the state of some other MIB object\'s
     value, or

     noError: because the agent chooses to create the
     instance.

If noError is returned, then the instance of the status
column must also be created, and the new state is B or C,
depending on the information available to the agent.  If
inconsistentName or inconsistentValue is returned, the row
remains in state A.

(5) depending on the MIB definition for the column/table,
either noError or inconsistentValue may be returned.

(6) the return value can indicate one of the following
errors:

     wrongValue: because the agent does not support
     notInService (e.g., an agent which does not support
     createAndWait), or

     inconsistentValue: because the agent is unable to take
     the row out of service at this time, perhaps because it
     is in use and cannot be de-activated.

(7) the return value can indicate the following error:

     inconsistentValue: because the agent is unable to
     remove the row at this time, perhaps because it is in
     use and cannot be de-activated.

(8) the transition to D can fail, e.g., if the values of the
conceptual row are inconsistent, then the error code would
be inconsistentValue.

NOTE: Other processing of (this and other varbinds of) the
set request may result in a response other than noError
being returned, e.g., wrongValue, noCreation, etc.

		  Conceptual Row Creation

There are four potential interactions when creating a
conceptual row:  selecting an instance-identifier which is
not in use; creating the conceptual row; initializing any
objects for which the agent does not supply a default; and,
making the conceptual row available for use by the managed
device.

Interaction 1: Selecting an Instance-Identifier

The algorithm used to select an instance-identifier varies
for each conceptual row.  In some cases, the instance-
identifier is semantically significant, e.g., the
destination address of a route, and a management station
selects the instance-identifier according to the semantics.

In other cases, the instance-identifier is used solely to
distinguish conceptual rows, and a management station
without specific knowledge of the conceptual row might
examine the instances present in order to determine an
unused instance-identifier.  (This approach may be used, but
it is often highly sub-optimal; however, it is also a
questionable practice for a naive management station to
attempt conceptual row creation.)

Alternately, the MIB module which defines the conceptual row
might provide one or more objects which provide assistance
in determining an unused instance-identifier.  For example,
if the conceptual row is indexed by an integer-value, then
an object having an integer-valued SYNTAX clause might be
defined for such a purpose, allowing a management station to
issue a management protocol retrieval operation.  In order
to avoid unnecessary collisions between competing management
stations, `adjacent\' retrievals of this object should be
different.

Finally, the management station could select a pseudo-random
number to use as the index.  In the event that this index

was already in use and an inconsistentValue was returned in
response to the management protocol set operation, the
management station should simply select a new pseudo-random
number and retry the operation.

A MIB designer should choose between the two latter
algorithms based on the size of the table (and therefore the
efficiency of each algorithm).  For tables in which a large
number of entries are expected, it is recommended that a MIB
object be defined that returns an acceptable index for
creation.  For tables with small numbers of entries, it is
recommended that the latter pseudo-random index mechanism be
used.

Interaction 2: Creating the Conceptual Row

Once an unused instance-identifier has been selected, the
management station determines if it wishes to create and
activate the conceptual row in one transaction or in a
negotiated set of interactions.

Interaction 2a: Creating and Activating the Conceptual Row

The management station must first determine the column
requirements, i.e., it must determine those columns for
which it must or must not provide values.  Depending on the
complexity of the table and the management station\'s
knowledge of the agent\'s capabilities, this determination
can be made locally by the management station.  Alternately,
the management station issues a management protocol get
operation to examine all columns in the conceptual row that
it wishes to create.  In response, for each column, there
are three possible outcomes:

     - a value is returned, indicating that some other
     management station has already created this conceptual
     row.  We return to interaction 1.

     - the exception `noSuchInstance\' is returned,
     indicating that the agent implements the object-type
     associated with this column, and that this column in at
     least one conceptual row would be accessible in the MIB
     view used by the retrieval were it to exist. For those
     columns to which the agent provides read-create access,
     the `noSuchInstance\' exception tells the management
     station that it should supply a value for this column
     when the conceptual row is to be created.

     - the exception `noSuchObject\' is returned, indicating
     that the agent does not implement the object-type
     associated with this column or that there is no
     conceptual row for which this column would be
     accessible in the MIB view used by the retrieval.  As
     such, the management station can not issue any
     management protocol set operations to create an
     instance of this column.

Once the column requirements have been determined, a
management protocol set operation is accordingly issued.
This operation also sets the new instance of the status
column to `createAndGo\'.

When the agent processes the set operation, it verifies that
it has sufficient information to make the conceptual row
available for use by the managed device.  The information
available to the agent is provided by two sources:  the
management protocol set operation which creates the
conceptual row, and, implementation-specific defaults
supplied by the agent (note that an agent must provide
implementation-specific defaults for at least those objects
which it implements as read-only).  If there is sufficient
information available, then the conceptual row is created, a
`noError\' response is returned, the status column is set to
`active\', and no further interactions are necessary (i.e.,
interactions 3 and 4 are skipped).  If there is insufficient
information, then the conceptual row is not created, and the
set operation fails with an error of `inconsistentValue\'.
On this error, the management station can issue a management
protocol retrieval operation to determine if this was
because it failed to specify a value for a required column,
or, because the selected instance of the status column
already existed.  In the latter case, we return to
interaction 1.  In the former case, the management station
can re-issue the set operation with the additional
information, or begin interaction 2 again using
`createAndWait\' in order to negotiate creation of the
conceptual row.

			 NOTE WELL

     Regardless of the method used to determine the column
     requirements, it is possible that the management
     station might deem a column necessary when, in fact,
     the agent will not allow that particular columnar
     instance to be created or written.  In this case, the
     management protocol set operation will fail with an
     error such as `noCreation\' or `notWritable\'.  In this
     case, the management station decides whether it needs
     to be able to set a value for that particular columnar
     instance.  If not, the management station re-issues the
     management protocol set operation, but without setting
     a value for that particular columnar instance;
     otherwise, the management station aborts the row
     creation algorithm.

Interaction 2b: Negotiating the Creation of the Conceptual
Row

The management station issues a management protocol set
operation which sets the desired instance of the status
column to `createAndWait\'.  If the agent is unwilling to
process a request of this sort, the set operation fails with
an error of `wrongValue\'.  (As a consequence, such an agent
must be prepared to accept a single management protocol set
operation, i.e., interaction 2a above, containing all of the
columns indicated by its column requirements.)  Otherwise,
the conceptual row is created, a `noError\' response is
returned, and the status column is immediately set to either
`notInService\' or `notReady\', depending on whether it has
sufficient information to (attempt to) make the conceptual
row available for use by the managed device.  If there is
sufficient information available, then the status column is
set to `notInService\'; otherwise, if there is insufficient
information, then the status column is set to `notReady\'.
Regardless, we proceed to interaction 3.

Interaction 3: Initializing non-defaulted Objects

The management station must now determine the column
requirements.  It issues a management protocol get operation
to examine all columns in the created conceptual row.  In
the response, for each column, there are three possible
outcomes:

     - a value is returned, indicating that the agent
     implements the object-type associated with this column
     and had sufficient information to provide a value.  For
     those columns to which the agent provides read-create
     access (and for which the agent allows their values to
     be changed after their creation), a value return tells
     the management station that it may issue additional
     management protocol set operations, if it desires, in
     order to change the value associated with this column.

     - the exception `noSuchInstance\' is returned,
     indicating that the agent implements the object-type
     associated with this column, and that this column in at
     least one conceptual row would be accessible in the MIB
     view used by the retrieval were it to exist. However,
     the agent does not have sufficient information to
     provide a value, and until a value is provided, the
     conceptual row may not be made available for use by the
     managed device.  For those columns to which the agent
     provides read-create access, the `noSuchInstance\'
     exception tells the management station that it must
     issue additional management protocol set operations, in
     order to provide a value associated with this column.

     - the exception `noSuchObject\' is returned, indicating
     that the agent does not implement the object-type
     associated with this column or that there is no
     conceptual row for which this column would be
     accessible in the MIB view used by the retrieval.  As
     such, the management station can not issue any
     management protocol set operations to create an
     instance of this column.

If the value associated with the status column is
`notReady\', then the management station must first deal with
all `noSuchInstance\' columns, if any.  Having done so, the
value of the status column becomes `notInService\', and we
proceed to interaction 4.

Interaction 4: Making the Conceptual Row Available

Once the management station is satisfied with the values
associated with the columns of the conceptual row, it issues
a management protocol set operation to set the status column
to `active\'.  If the agent has sufficient information to
make the conceptual row available for use by the managed
device, the management protocol set operation succeeds (a
`noError\' response is returned).  Otherwise, the management
protocol set operation fails with an error of
`inconsistentValue\'.

			 NOTE WELL

     A conceptual row having a status column with value
     `notInService\' or `notReady\' is unavailable to the
     managed device.  As such, it is possible for the
     managed device to create its own instances during the
     time between the management protocol set operation
     which sets the status column to `createAndWait\' and the
     management protocol set operation which sets the status
     column to `active\'.  In this case, when the management
     protocol set operation is issued to set the status
     column to `active\', the values held in the agent
     supersede those used by the managed device.

If the management station is prevented from setting the
status column to `active\' (e.g., due to management station
or network failure) the conceptual row will be left in the
`notInService\' or `notReady\' state, consuming resources
indefinitely.  The agent must detect conceptual rows that
have been in either state for an abnormally long period of
time and remove them.  It is the responsibility of the
DESCRIPTION clause of the status column to indicate what an
abnormally long period of time would be.  This period of
time should be long enough to allow for human response time
(including `think time\') between the creation of the
conceptual row and the setting of the status to `active\'.
In the absence of such information in the DESCRIPTION
clause, it is suggested that this period be approximately 5
minutes in length.  This removal action applies not only to
newly-created rows, but also to previously active rows which
are set to, and left in, the notInService state for a
prolonged period exceeding that which is considered normal
for such a conceptual row.

		 Conceptual Row Suspension

When a conceptual row is `active\', the management station
may issue a management protocol set operation which sets the
instance of the status column to `notInService\'.  If the
agent is unwilling to do so, the set operation fails with an
error of `wrongValue\' or `inconsistentValue\'.  Otherwise,
the conceptual row is taken out of service, and a `noError\'
response is returned.  It is the responsibility of the
DESCRIPTION clause of the status column to indicate under
what circumstances the status column should be taken out of
service (e.g., in order for the value of some other column
of the same conceptual row to be modified).

		  Conceptual Row Deletion

For deletion of conceptual rows, a management protocol set
operation is issued which sets the instance of the status
column to `destroy\'.  This request may be made regardless of
the current value of the status column (e.g., it is possible
to delete conceptual rows which are either `notReady\',
`notInService\' or `active\'.)  If the operation succeeds,
then all instances associated with the conceptual row are
immediately removed.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#RowStatus.183', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'TimeStamp', '656',
    'The value of the sysUpTime object at which a specific
occurrence happened.  The specific occurrence must be

defined in the description of any object defined using this
type.

If sysUpTime is reset to zero as a result of a re-
initialization of the network management (sub)system, then
the values of all TimeStamp objects are also reset.
However, after approximately 497 days without a re-
initialization, the sysUpTime object will reach 2^^32-1 and
then increment around to zero; in this case, existing values
of TimeStamp objects do not change.  This can lead to
ambiguities in the value of TimeStamp objects.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#TimeStamp.656', 'uint32', 'timeticks', 
    'yang-types', '231', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'TimeInterval', '675',
    'A period of time, measured in units of 0.01 seconds.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#TimeInterval.675', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'DateAndTime', '683',
    'A date-time specification.

field  octets  contents                  range
-----  ------  --------                  -----
  1      1-2   year*                     0..65536
  2       3    month                     1..12
  3       4    day                       1..31
  4       5    hour                      0..23
  5       6    minutes                   0..59
  6       7    seconds                   0..60
	       (use 60 for leap-second)
  7       8    deci-seconds              0..9
  8       9    direction from UTC        \'+\' / \'-\'
  9      10    hours from UTC*           0..13
 10      11    minutes from UTC          0..59

* Notes:
- the value of year is in network-byte order
- daylight saving time in New Zealand is +13

For example, Tuesday May 26, 1992 at 1:30:15 PM EDT would be
displayed as:

		 1992-5-26,13:30:15.0,-4:0

Note that if only local time is known, then timezone
information (fields 8-10) is not present.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#DateAndTime.683', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'StorageType', '719',
    'Describes the memory realization of a conceptual row.  A
row which is volatile(2) is lost upon reboot.  A row which
is either nonVolatile(3), permanent(4) or readOnly(5), is
backed up by stable storage.  A row which is permanent(4)
can be changed but not deleted.  A row which is readOnly(5)
cannot be changed nor deleted.

If the value of an object with this syntax is either
permanent(4) or readOnly(5), it cannot be written.
Conversely, if the value is either other(1), volatile(2) or
nonVolatile(3), it cannot be modified to be permanent(4) or
readOnly(5).  (All illegal modifications result in a
\'wrongValue\' error.)

Every usage of this textual convention is required to
specify the columnar objects which a permanent(4) row must
at a minimum allow to be writable.',
    '',
    '/modules/SNMPv2-TC/1999-04-01#StorageType.719', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'TDomain', '747',
    'Denotes a kind of transport service.

Some possible values, such as snmpUDPDomain, are defined in
the SNMPv2-TM MIB module.  Other possible values are defined
in other MIB modules.',
    'The SNMPv2-TM MIB module is defined in RFC 1906.',
    '/modules/SNMPv2-TC/1999-04-01#TDomain.747', 'string', 'object-identifier', 
    'yang-types', '175', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TC', 'SNMPv2-TC', '1999-04-01', 'TAddress', '759',
    'Denotes a transport service address.

A TAddress value is always interpreted within the context of a
TDomain value.  Thus, each definition of a TDomain value must
be accompanied by a definition of a textual convention for use
with that TDomain.  Some possible textual conventions, such as
SnmpUDPAddress for snmpUDPDomain, are defined in the SNMPv2-TM
MIB module.  Other possible textual conventions are defined in
other MIB modules.',
    'The SNMPv2-TM MIB module is defined in RFC 1906.',
    '/modules/SNMPv2-TC/1999-04-01#TAddress.759', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-USM-AES-MIB.yang
# module: SNMP-USM-AES-MIB
# version: 2004-06-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-USM-AES-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-USM-AES-MIB', 'SNMP-USM-AES-MIB', '2004-06-14', 'snmp-usm',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-USM-AES-MIB',
    'IETF',
    'Definitions of Object Identities needed for
the use of AES by SNMP\'s User-based Security
Model.

Copyright (C) The Internet Soci...',
    'Definitions of Object Identities needed for
the use of AES by SNMP\'s User-based Security
Model.

Copyright (C) The Internet Society (2004).

This version of this MIB module is part of RFC 3826;
see the RFC itself for full legal notices.
Supplementary information may be available on
http://www.ietf.org/copyrights/ianamib.html.',
    '',
    'Uri Blumenthal
Lucent Technologies / Bell Labs
67 Whippany Rd.
14D-318
Whippany, NJ  07981, USA
973-386-2163
uri@bell-labs.com

Fabio Maino
Andiamo Systems, Inc.
375 East Tasman Drive
San Jose, CA  95134, USA
408-853-7530
fmaino@andiamo.com

Keith McCloghrie
Cisco Systems, Inc.
170 West Tasman Drive
San Jose, CA  95134-1706, USA

408-526-5260
kzm@cisco.com',
    'Initial version, published as RFC3826',
    '/xsd/SNMP-USM-AES-MIB_2004-06-14.xsd',
    '/modules/SNMP-USM-AES-MIB/2004-06-14', 
    '/src/SNMP-USM-AES-MIB_2004-06-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-USM-AES-MIB.yang',
    'SNMP-USM-AES-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/ietf/ENTITY-MIB.yang
# module: ENTITY-MIB
# version: 2005-08-10
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'ENTITY-MIB');

INSERT INTO ncmodule VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entity-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:ENTITY-MIB',
    'IETF ENTMIB Working Group',
    'The MIB module for representing multiple logical
entities supported by a single SNMP agent.

Copyright (C) The Internet Society ...',
    'The MIB module for representing multiple logical
entities supported by a single SNMP agent.

Copyright (C) The Internet Society (2005).  This
version of this MIB module is part of RFC 4133; see
the RFC itself for full legal notices.',
    '',
    '        WG E-mail: entmib@ietf.org
Mailing list subscription info:
  http://www.ietf.org/mailman/listinfo/entmib

Andy Bierman
ietf@andybierman.com

Keith McCloghrie
Cisco Systems Inc.
170 West Tasman Drive
San Jose, CA 95134



+1 408-526-5260
kzm@cisco.com',
    'Initial Version of Entity MIB (Version 3).
This revision obsoletes RFC 2737.
Additions:
  - cpu(12) enumeration added to PhysicalClass TC
  - DISPLAY-HINT clause to PhysicalIndex TC
  - PhysicalIndexOrZero TC
  - entPhysicalMfgDate object
  - entPhysicalUris object
Changes:
  - entPhysicalContainedIn SYNTAX changed from
    INTEGER to PhysicalIndexOrZero

This version published as RFC 4133.',
    '/xsd/ENTITY-MIB_2005-08-10.xsd',
    '/modules/ENTITY-MIB/2005-08-10', 
    '/src/ENTITY-MIB_2005-08-10.yang',
    '/home/andy/swdev/trunk/netconf/modules/ietf/ENTITY-MIB.yang',
    'ENTITY-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'PhysicalIndex', '84',
    'An arbitrary value that uniquely identifies the physical
entity.  The value should be a small, positive integer.
Index values for different physical entities are not
necessarily contiguous.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#PhysicalIndex.84', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'PhysicalIndexOrZero', '96',
    'This textual convention is an extension of the
PhysicalIndex convention, which defines a greater than zero
value used to identify a physical entity.  This extension
permits the additional value of zero.  The semantics of the
value zero are object-specific and must, therefore, be
defined as part of the description of any object that uses
this syntax.  Examples of the usage of this extension are
situations where none or all physical entities need to be
referenced.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#PhysicalIndexOrZero.96', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'PhysicalClass', '113',
    'An enumerated value which provides an indication of the
general hardware type of a particular physical entity.
There are no restrictions as to the number of
entPhysicalEntries of each entPhysicalClass, which must be
instantiated by an agent.

The enumeration \'other\' is applicable if the physical entity
class is known, but does not match any of the supported
values.

The enumeration \'unknown\' is applicable if the physical
entity class is unknown to the agent.

The enumeration \'chassis\' is applicable if the physical
entity class is an overall container for networking
equipment.  Any class of physical entity, except a stack,
may be contained within a chassis; and a chassis may only
be contained within a stack.




The enumeration \'backplane\' is applicable if the physical
entity class is some sort of device for aggregating and
forwarding networking traffic, such as a shared backplane in
a modular ethernet switch.  Note that an agent may model a
backplane as a single physical entity, which is actually
implemented as multiple discrete physical components (within
a chassis or stack).

The enumeration \'container\' is applicable if the physical
entity class is capable of containing one or more removable
physical entities, possibly of different types.  For
example, each (empty or full) slot in a chassis will be
modeled as a container.  Note that all removable physical
entities should be modeled within a container entity, such
as field-replaceable modules, fans, or power supplies.  Note
that all known containers should be modeled by the agent,
including empty containers.

The enumeration \'powerSupply\' is applicable if the physical
entity class is a power-supplying component.

The enumeration \'fan\' is applicable if the physical entity
class is a fan or other heat-reduction component.

The enumeration \'sensor\' is applicable if the physical
entity class is some sort of sensor, such as a temperature
sensor within a router chassis.

The enumeration \'module\' is applicable if the physical
entity class is some sort of self-contained sub-system.  If
the enumeration \'module\' is removable, then it should be
modeled within a container entity, otherwise it should be
modeled directly within another physical entity (e.g., a
chassis or another module).

The enumeration \'port\' is applicable if the physical entity
class is some sort of networking port, capable of receiving
and/or transmitting networking traffic.

The enumeration \'stack\' is applicable if the physical entity
class is some sort of super-container (possibly virtual),
intended to group together multiple chassis entities.  A
stack may be realized by a \'virtual\' cable, a real
interconnect cable, attached to multiple chassis, or may in
fact be comprised of multiple interconnect cables.  A stack
should not be modeled within any other physical entities,
but a stack may be contained within another stack.  Only
chassis entities should be contained within a stack.



The enumeration \'cpu\' is applicable if the physical entity
class is some sort of central processing unit.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#PhysicalClass.113', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'SnmpEngineIdOrNone', '206',
    'A specially formatted SnmpEngineID string for use with the
Entity MIB.

If an instance of an object of SYNTAX SnmpEngineIdOrNone has
a non-zero length, then the object encoding and semantics
are defined by the SnmpEngineID textual convention (see STD
62, RFC 3411 [RFC3411]).

If an instance of an object of SYNTAX SnmpEngineIdOrNone
contains a zero-length string, then no appropriate
SnmpEngineID is associated with the logical entity (i.e.,
SNMPv3 is not supported).',
    '',
    '/modules/ENTITY-MIB/2005-08-10#SnmpEngineIdOrNone.206', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entityPhysical', '225',
    '/entityPhysical',
    '',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entityPhysical.225', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'entPhysicalEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalEntry', '230',
    '/entityPhysical/entPhysicalEntry',
    'Information about a particular physical entity.

Each entry provides objects (entPhysicalDescr,
entPhysicalVendorType, and entPhysicalClass) to help an NMS
identify and characterize the entry, and objects
(entPhysicalContainedIn and entPhysicalParentRelPos) to help
an NMS relate the particular entry to other entries in this
table.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalEntry.230', 
    'list', 
    '/entityPhysical',
    '0',
    '1',
    '',
    '',
    'entPhysicalIndex entPhysicalDescr entPhysicalVendorType entPhysicalContainedIn entPhysicalClass entPhysicalParentRelPos entPhysicalName entPhysicalHardwareRev entPhysicalFirmwareRev entPhysicalSoftwareRev entPhysicalSerialNum entPhysicalMfgName entPhysicalModelName entPhysicalAlias entPhysicalAssetID entPhysicalIsFRU entPhysicalMfgDate entPhysicalUris',
    '',
    'entPhysicalIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalIndex', '245',
    '/entityPhysical/entPhysicalEntry/entPhysicalIndex',
    'The index for this entry.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalIndex.245', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'PhysicalIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalDescr', '253',
    '/entityPhysical/entPhysicalEntry/entPhysicalDescr',
    'A textual description of physical entity.  This object
should contain a string that identifies the manufacturer\'s
name for the physical entity, and should be set to a
distinct value for each version or model of the physical
entity.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalDescr.253', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalVendorType', '265',
    '/entityPhysical/entPhysicalEntry/entPhysicalVendorType',
    'An indication of the vendor-specific hardware type of the
physical entity.  Note that this is different from the
definition of MIB-II\'s sysObjectID.

An agent should set this object to an enterprise-specific
registration identifier value indicating the specific
equipment type in detail.  The associated instance of
entPhysicalClass is used to indicate the general type of
hardware device.

If no vendor-specific registration identifier exists for
this physical entity, or the value is unknown by this agent,
then the value { 0 0 } is returned.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalVendorType.265', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalContainedIn', '285',
    '/entityPhysical/entPhysicalEntry/entPhysicalContainedIn',
    'The value of entPhysicalIndex for the physical entity which
\'contains\' this physical entity.  A value of zero indicates
this physical entity is not contained in any other physical
entity.  Note that the set of \'containment\' relationships
define a strict hierarchy; that is, recursion is not
allowed.

In the event that a physical entity is contained by more
than one physical entity (e.g., double-wide modules), this
object should identify the containing entity with the lowest
value of entPhysicalIndex.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalContainedIn.285', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'PhysicalIndexOrZero',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalClass', '303',
    '/entityPhysical/entPhysicalEntry/entPhysicalClass',
    'An indication of the general hardware type of the physical
entity.

An agent should set this object to the standard enumeration
value that most accurately indicates the general class of
the physical entity, or the primary class if there is more
than one entity.

If no appropriate standard registration identifier exists
for this physical entity, then the value \'other(1)\' is
returned.  If the value is unknown by this agent, then the
value \'unknown(2)\' is returned.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalClass.303', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'PhysicalClass',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalParentRelPos', '322',
    '/entityPhysical/entPhysicalEntry/entPhysicalParentRelPos',
    'An indication of the relative position of this \'child\'
component among all its \'sibling\' components.  Sibling
components are defined as entPhysicalEntries that share the
same instance values of each of the entPhysicalContainedIn
and entPhysicalClass objects.

An NMS can use this object to identify the relative ordering
for all sibling components of a particular parent
(identified by the entPhysicalContainedIn instance in each
sibling entry).

If possible, this value should match any external labeling
of the physical component.  For example, for a container
(e.g., card slot) labeled as \'slot #3\',
entPhysicalParentRelPos should have the value \'3\'.  Note
that the entPhysicalEntry for the module plugged in slot 3
should have an entPhysicalParentRelPos value of \'1\'.

If the physical position of this component does not match
any external numbering or clearly visible ordering, then
user documentation or other external reference material
should be used to determine the parent-relative position.
If this is not possible, then the agent should assign a
consistent (but possibly arbitrary) ordering to a given set
of \'sibling\' components, perhaps based on internal
representation of the components.




If the agent cannot determine the parent-relative position
for some reason, or if the associated value of
entPhysicalContainedIn is \'0\', then the value \'-1\' is
returned.  Otherwise, a non-negative integer is returned,
indicating the parent-relative position of this physical
entity.

Parent-relative ordering normally starts from \'1\' and
continues to \'N\', where \'N\' represents the highest
positioned child entity.  However, if the physical entities
(e.g., slots) are labeled from a starting position of zero,
then the first sibling should be associated with an
entPhysicalParentRelPos value of \'0\'.  Note that this
ordering may be sparse or dense, depending on agent
implementation.

The actual values returned are not globally meaningful, as
each \'parent\' component may use different numbering
algorithms.  The ordering is only meaningful among siblings
of the same parent component.

The agent should retain parent-relative position values
across reboots, either through algorithmic assignment or use
of non-volatile storage.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalParentRelPos.322', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalName', '385',
    '/entityPhysical/entPhysicalEntry/entPhysicalName',
    'The textual name of the physical entity.  The value of this
object should be the name of the component as assigned by
the local device and should be suitable for use in commands
entered at the device\'s `console\'.  This might be a text
name (e.g., `console\') or a simple component number (e.g.,
port or module number, such as `1\'), depending on the
physical component naming syntax of the device.

If there is no local name, or if this object is otherwise
not applicable, then this object contains a zero-length
string.

Note that the value of entPhysicalName for two physical
entities will be the same in the event that the console
interface does not distinguish between them, e.g., slot-1
and the card in slot-1.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalName.385', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalHardwareRev', '408',
    '/entityPhysical/entPhysicalEntry/entPhysicalHardwareRev',
    'The vendor-specific hardware revision string for the
physical entity.  The preferred value is the hardware
revision identifier actually printed on the component itself
(if present).

Note that if revision information is stored internally in a
non-printable (e.g., binary) format, then the agent must
convert such information to a printable format, in an
implementation-specific manner.

If no specific hardware revision string is associated with
the physical component, or if this information is unknown to
the agent, then this object will contain a zero-length
string.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalHardwareRev.408', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalFirmwareRev', '429',
    '/entityPhysical/entPhysicalEntry/entPhysicalFirmwareRev',
    'The vendor-specific firmware revision string for the
physical entity.

Note that if revision information is stored internally in a
non-printable (e.g., binary) format, then the agent must
convert such information to a printable format, in an
implementation-specific manner.

If no specific firmware programs are associated with the
physical component, or if this information is unknown to the
agent, then this object will contain a zero-length string.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalFirmwareRev.429', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalSoftwareRev', '447',
    '/entityPhysical/entPhysicalEntry/entPhysicalSoftwareRev',
    'The vendor-specific software revision string for the
physical entity.

Note that if revision information is stored internally in a



non-printable (e.g., binary) format, then the agent must
convert such information to a printable format, in an
implementation-specific manner.

If no specific software programs are associated with the
physical component, or if this information is unknown to the
agent, then this object will contain a zero-length string.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalSoftwareRev.447', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalSerialNum', '468',
    '/entityPhysical/entPhysicalEntry/entPhysicalSerialNum',
    'The vendor-specific serial number string for the physical
entity.  The preferred value is the serial number string
actually printed on the component itself (if present).

On the first instantiation of an physical entity, the value
of entPhysicalSerialNum associated with that entity is set
to the correct vendor-assigned serial number, if this
information is available to the agent.  If a serial number
is unknown or non-existent, the entPhysicalSerialNum will be
set to a zero-length string instead.

Note that implementations that can correctly identify the
serial numbers of all installed physical entities do not
need to provide write access to the entPhysicalSerialNum
object.  Agents which cannot provide non-volatile storage
for the entPhysicalSerialNum strings are not required to
implement write access for this object.

Not every physical component will have a serial number, or
even need one.  Physical entities for which the associated
value of the entPhysicalIsFRU object is equal to \'false(2)\'
(e.g., the repeater ports within a repeater module), do not
need their own unique serial number.  An agent does not have
to provide write access for such entities, and may return a
zero-length string.

If write access is implemented for an instance of
entPhysicalSerialNum, and a value is written into the
instance, the agent must retain the supplied value in the
entPhysicalSerialNum instance (associated with the same
physical entity) for as long as that entity remains
instantiated.  This includes instantiations across all
re-initializations/reboots of the network management system,
including those resulting in a change of the physical



entity\'s entPhysicalIndex value.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalSerialNum.468', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalMfgName', '515',
    '/entityPhysical/entPhysicalEntry/entPhysicalMfgName',
    'The name of the manufacturer of this physical component.
The preferred value is the manufacturer name string actually
printed on the component itself (if present).

Note that comparisons between instances of the
entPhysicalModelName, entPhysicalFirmwareRev,
entPhysicalSoftwareRev, and the entPhysicalSerialNum
objects, are only meaningful amongst entPhysicalEntries with
the same value of entPhysicalMfgName.

If the manufacturer name string associated with the physical
component is unknown to the agent, then this object will
contain a zero-length string.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalMfgName.515', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalModelName', '535',
    '/entityPhysical/entPhysicalEntry/entPhysicalModelName',
    'The vendor-specific model name identifier string associated
with this physical component.  The preferred value is the
customer-visible part number, which may be printed on the
component itself.

If the model name string associated with the physical
component is unknown to the agent, then this object will
contain a zero-length string.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalModelName.535', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalAlias', '550',
    '/entityPhysical/entPhysicalEntry/entPhysicalAlias',
    'This object is an \'alias\' name for the physical entity, as
specified by a network manager, and provides a non-volatile
\'handle\' for the physical entity.

On the first instantiation of a physical entity, the value



of entPhysicalAlias associated with that entity is set to
the zero-length string.  However, the agent may set the
value to a locally unique default value, instead of a
zero-length string.

If write access is implemented for an instance of
entPhysicalAlias, and a value is written into the instance,
the agent must retain the supplied value in the
entPhysicalAlias instance (associated with the same physical
entity) for as long as that entity remains instantiated.
This includes instantiations across all
re-initializations/reboots of the network management system,
including those resulting in a change of the physical
entity\'s entPhysicalIndex value.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalAlias.550', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalAssetID', '581',
    '/entityPhysical/entPhysicalEntry/entPhysicalAssetID',
    'This object is a user-assigned asset tracking identifier
(as specified by a network manager) for the physical entity,
and provides non-volatile storage of this information.

On the first instantiation of a physical entity, the value
of entPhysicalAssetID associated with that entity is set to
the zero-length string.

Not every physical component will have an asset tracking
identifier, or even need one.  Physical entities for which
the associated value of the entPhysicalIsFRU object is equal
to \'false(2)\' (e.g., the repeater ports within a repeater
module), do not need their own unique asset tracking
identifier.  An agent does not have to provide write access
for such entities, and may instead return a zero-length
string.

If write access is implemented for an instance of
entPhysicalAssetID, and a value is written into the
instance, the agent must retain the supplied value in the
entPhysicalAssetID instance (associated with the same
physical entity) for as long as that entity remains
instantiated.  This includes instantiations across all
re-initializations/reboots of the network management system,
including those resulting in a change of the physical
entity\'s entPhysicalIndex value.




If no asset tracking information is associated with the
physical component, then this object will contain a
zero-length string.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalAssetID.581', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalIsFRU', '623',
    '/entityPhysical/entPhysicalEntry/entPhysicalIsFRU',
    'This object indicates whether or not this physical entity
is considered a \'field replaceable unit\' by the vendor.  If
this object contains the value \'true(1)\' then this
entPhysicalEntry identifies a field replaceable unit.  For
all entPhysicalEntries that represent components
permanently contained within a field replaceable unit, the
value \'false(2)\' should be returned for this object.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalIsFRU.623', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalMfgDate', '637',
    '/entityPhysical/entPhysicalEntry/entPhysicalMfgDate',
    'This object contains the date of manufacturing of the
managed entity.  If the manufacturing date is unknown or not
supported, the object is not instantiated.  The special
value \'0000000000000000\'H may also be returned in this
case.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalMfgDate.637', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalUris', '649',
    '/entityPhysical/entPhysicalEntry/entPhysicalUris',
    'This object contains additional identification information
about the physical entity.  The object contains URIs and,
therefore, the syntax of this object must conform to RFC
3986, section 2.

Multiple URIs may be present and are separated by white
space characters.  Leading and trailing white space
characters are ignored.

If no additional identification information is known
about the physical entity or supported, the object is not
instantiated.  A zero length octet string may also be



returned in this case.',
    'RFC 3986, Uniform Resource Identifiers (URI): Generic
Syntax, section 2, August 1998.',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalUris.649', 
    'leaf', 
    '/entityPhysical/entPhysicalEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entityLogical', '678',
    '/entityLogical',
    '',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entityLogical.678', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'entLogicalEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalEntry', '683',
    '/entityLogical/entLogicalEntry',
    'Information about a particular logical entity.  Entities
may be managed by this agent or other SNMP agents (possibly)
in the same chassis.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalEntry.683', 
    'list', 
    '/entityLogical',
    '0',
    '1',
    '',
    '',
    'entLogicalIndex entLogicalDescr entLogicalType entLogicalCommunity entLogicalTAddress entLogicalTDomain entLogicalContextEngineID entLogicalContextName',
    '',
    'entLogicalIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalIndex', '693',
    '/entityLogical/entLogicalEntry/entLogicalIndex',
    'The value of this object uniquely identifies the logical
entity.  The value should be a small positive integer; index
values for different logical entities are not necessarily
contiguous.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalIndex.693', 
    'leaf', 
    '/entityLogical/entLogicalEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalDescr', '706',
    '/entityLogical/entLogicalEntry/entLogicalDescr',
    'A textual description of the logical entity.  This object
should contain a string that identifies the manufacturer\'s
name for the logical entity, and should be set to a distinct
value for each version of the logical entity.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalDescr.706', 
    'leaf', 
    '/entityLogical/entLogicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalType', '717',
    '/entityLogical/entLogicalEntry/entLogicalType',
    'An indication of the type of logical entity.  This will
typically be the OBJECT IDENTIFIER name of the node in the
SMI\'s naming hierarchy which represents the major MIB
module, or the majority of the MIB modules, supported by the
logical entity.  For example:
   a logical entity of a regular host/router -> mib-2
   a logical entity of a 802.1d bridge -> dot1dBridge
   a logical entity of a 802.3 repeater -> snmpDot3RptrMgmt
If an appropriate node in the SMI\'s naming hierarchy cannot
be identified, the value \'mib-2\' should be used.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalType.717', 
    'leaf', 
    '/entityLogical/entLogicalEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalCommunity', '734',
    '/entityLogical/entLogicalEntry/entLogicalCommunity',
    'An SNMPv1 or SNMPv2C community-string, which can be used to
access detailed management information for this logical
entity.  The agent should allow read access with this
community string (to an appropriate subset of all managed
objects) and may also return a community string based on the
privileges of the request used to read this object.  Note
that an agent may return a community string with read-only
privileges, even if this object is accessed with a
read-write community string.  However, the agent must take



care not to return a community string that allows more
privileges than the community string used to access this
object.

A compliant SNMP agent may wish to conserve naming scopes by
representing multiple logical entities in a single \'default\'
naming scope.  This is possible when the logical entities,
represented by the same value of entLogicalCommunity, have
no object instances in common.  For example, \'bridge1\' and
\'repeater1\' may be part of the main naming scope, but at
least one additional community string is needed to represent
\'bridge2\' and \'repeater2\'.

Logical entities \'bridge1\' and \'repeater1\' would be
represented by sysOREntries associated with the \'default\'
naming scope.

For agents not accessible via SNMPv1 or SNMPv2C, the value
of this object is the empty string.  This object may also
contain an empty string if a community string has not yet
been assigned by the agent, or if no community string with
suitable access rights can be returned for a particular SNMP
request.

Note that this object is deprecated.  Agents which implement
SNMPv3 access should use the entLogicalContextEngineID and
entLogicalContextName objects to identify the context
associated with each logical entity.  SNMPv3 agents may
return a zero-length string for this object, or may continue
to return a community string (e.g., tri-lingual agent
support).',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalCommunity.734', 
    'leaf', 
    '/entityLogical/entLogicalEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalTAddress', '787',
    '/entityLogical/entLogicalEntry/entLogicalTAddress',
    'The transport service address by which the logical entity
receives network management traffic, formatted according to
the corresponding value of entLogicalTDomain.

For snmpUDPDomain, a TAddress is 6 octets long: the initial
4 octets contain the IP-address in network-byte order and
the last 2 contain the UDP port in network-byte order.
Consult \'Transport Mappings for the Simple Network
Management Protocol\' (STD 62, RFC 3417 [RFC3417]) for
further information on snmpUDPDomain.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalTAddress.787', 
    'leaf', 
    '/entityLogical/entLogicalEntry',
    '0',
    '1',
    'TAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalTDomain', '804',
    '/entityLogical/entLogicalEntry/entLogicalTDomain',
    'Indicates the kind of transport service by which the
logical entity receives network management traffic.
Possible values for this object are presently found in the
Transport Mappings for Simple Network Management Protocol\'
(STD 62, RFC 3417 [RFC3417]).',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalTDomain.804', 
    'leaf', 
    '/entityLogical/entLogicalEntry',
    '0',
    '1',
    'TDomain',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalContextEngineID', '816',
    '/entityLogical/entLogicalEntry/entLogicalContextEngineID',
    'The authoritative contextEngineID that can be used to send
an SNMP message concerning information held by this logical
entity, to the address specified by the associated
\'entLogicalTAddress/entLogicalTDomain\' pair.

This object, together with the associated
entLogicalContextName object, defines the context associated
with a particular logical entity, and allows access to SNMP
engines identified by a contextEngineId and contextName
pair.

If no value has been configured by the agent, a zero-length
string is returned, or the agent may choose not to
instantiate this object at all.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalContextEngineID.816', 
    'leaf', 
    '/entityLogical/entLogicalEntry',
    '0',
    '1',
    'SnmpEngineIdOrNone',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalContextName', '837',
    '/entityLogical/entLogicalEntry/entLogicalContextName',
    'The contextName that can be used to send an SNMP message
concerning information held by this logical entity, to the
address specified by the associated
\'entLogicalTAddress/entLogicalTDomain\' pair.

This object, together with the associated
entLogicalContextEngineID object, defines the context
associated with a particular logical entity, and allows



access to SNMP engines identified by a contextEngineId and
contextName pair.

If no value has been configured by the agent, a zero-length
string is returned, or the agent may choose not to
instantiate this object at all.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalContextName.837', 
    'leaf', 
    '/entityLogical/entLogicalEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entityMapping', '864',
    '/entityMapping',
    '',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entityMapping.864', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'entLPMappingEntry entAliasMappingEntry entPhysicalContainsEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLPMappingEntry', '869',
    '/entityMapping/entLPMappingEntry',
    'Information about a particular logical entity to physical
equipment association.  Note that the nature of the
association is not specifically identified in this entry.
It is expected that sufficient information exists in the
MIBs used to manage a particular logical entity to infer how
physical component information is utilized.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLPMappingEntry.869', 
    'list', 
    '/entityMapping',
    '0',
    '1',
    '',
    '',
    'entLogicalIndex entLPPhysicalIndex',
    '',
    'entLogicalIndex entLPPhysicalIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLogicalIndex', '881',
    '/entityMapping/entLPMappingEntry/entLogicalIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLogicalIndex.881', 
    'leaf', 
    '/entityMapping/entLPMappingEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLPPhysicalIndex', '890',
    '/entityMapping/entLPMappingEntry/entLPPhysicalIndex',
    'The value of this object identifies the index value of a
particular entPhysicalEntry associated with the indicated
entLogicalEntity.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLPPhysicalIndex.890', 
    'leaf', 
    '/entityMapping/entLPMappingEntry',
    '0',
    '1',
    'PhysicalIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entAliasMappingEntry', '904',
    '/entityMapping/entAliasMappingEntry',
    'Information about a particular physical equipment, logical



entity to external identifier binding.  Each logical
entity/physical component pair may be associated with one
alias mapping.  The logical entity index may also be used as
a \'wildcard\' (refer to the entAliasLogicalIndexOrZero object
DESCRIPTION clause for details.)

Note that only entPhysicalIndex values that represent
physical ports (i.e., associated entPhysicalClass value is
\'port(10)\') are permitted to exist in this table.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entAliasMappingEntry.904', 
    'list', 
    '/entityMapping',
    '0',
    '1',
    '',
    '',
    'entPhysicalIndex entAliasLogicalIndexOrZero entAliasMappingIdentifier',
    '',
    'entPhysicalIndex entAliasLogicalIndexOrZero',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalIndex', '923',
    '/entityMapping/entAliasMappingEntry/entPhysicalIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalIndex.923', 
    'leaf', 
    '/entityMapping/entAliasMappingEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entAliasLogicalIndexOrZero', '932',
    '/entityMapping/entAliasMappingEntry/entAliasLogicalIndexOrZero',
    'The value of this object identifies the logical entity
that defines the naming scope for the associated instance
of the \'entAliasMappingIdentifier\' object.

If this object has a non-zero value, then it identifies the
logical entity named by the same value of entLogicalIndex.

If this object has a value of zero, then the mapping between
the physical component and the alias identifier for this
entAliasMapping entry is associated with all unspecified
logical entities.  That is, a value of zero (the default
mapping) identifies any logical entity that does not have
an explicit entry in this table for a particular
entPhysicalIndex/entAliasMappingIdentifier pair.

For example, to indicate that a particular interface (e.g.,
physical component 33) is identified by the same value of
ifIndex for all logical entities, the following instance
might exist:

	entAliasMappingIdentifier.33.0 = ifIndex.5

In the event an entPhysicalEntry is associated differently
for some logical entities, additional entAliasMapping
entries may exist, e.g.:




	entAliasMappingIdentifier.33.0 = ifIndex.6
	entAliasMappingIdentifier.33.4 =  ifIndex.1
	entAliasMappingIdentifier.33.5 =  ifIndex.1
	entAliasMappingIdentifier.33.10 = ifIndex.12

Note that entries with non-zero entAliasLogicalIndexOrZero
index values have precedence over zero-indexed entries.  In
this example, all logical entities except 4, 5, and 10,
associate physical entity 33 with ifIndex.6.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entAliasLogicalIndexOrZero.932', 
    'leaf', 
    '/entityMapping/entAliasMappingEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entAliasMappingIdentifier', '979',
    '/entityMapping/entAliasMappingEntry/entAliasMappingIdentifier',
    'The value of this object identifies a particular conceptual
row associated with the indicated entPhysicalIndex and
entLogicalIndex pair.

Because only physical ports are modeled in this table, only
entries that represent interfaces or ports are allowed.  If
an ifEntry exists on behalf of a particular physical port,
then this object should identify the associated \'ifEntry\'.
For repeater ports, the appropriate row in the
\'rptrPortGroupTable\' should be identified instead.

For example, suppose a physical port was represented by
entPhysicalEntry.3, entLogicalEntry.15 existed for a
repeater, and entLogicalEntry.22 existed for a bridge.  Then
there might be two related instances of
entAliasMappingIdentifier:
   entAliasMappingIdentifier.3.15 == rptrPortGroupIndex.5.2
   entAliasMappingIdentifier.3.22 == ifIndex.17
It is possible that other mappings (besides interfaces and
repeater ports) may be defined in the future, as required.

Bridge ports are identified by examining the Bridge MIB and
appropriate ifEntries associated with each \'dot1dBasePort\',
and are thus not represented in this table.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entAliasMappingIdentifier.979', 
    'leaf', 
    '/entityMapping/entAliasMappingEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalContainsEntry', '1014',
    '/entityMapping/entPhysicalContainsEntry',
    'A single container/\'containee\' relationship.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalContainsEntry.1014', 
    'list', 
    '/entityMapping',
    '0',
    '1',
    '',
    '',
    'entPhysicalIndex entPhysicalChildIndex',
    '',
    'entPhysicalIndex entPhysicalChildIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalIndex', '1021',
    '/entityMapping/entPhysicalContainsEntry/entPhysicalIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalIndex.1021', 
    'leaf', 
    '/entityMapping/entPhysicalContainsEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entPhysicalChildIndex', '1030',
    '/entityMapping/entPhysicalContainsEntry/entPhysicalChildIndex',
    'The value of entPhysicalIndex for the contained physical
entity.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entPhysicalChildIndex.1030', 
    'leaf', 
    '/entityMapping/entPhysicalContainsEntry',
    '0',
    '1',
    'PhysicalIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entityGeneral', '1042',
    '/entityGeneral',
    '',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entityGeneral.1042', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'entLastChangeTime',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entLastChangeTime', '1044',
    '/entityGeneral/entLastChangeTime',
    'The value of sysUpTime at the time a conceptual row is
created, modified, or deleted in any of these tables:
	- entPhysicalTable
	- entLogicalTable
	- entLPMappingTable
	- entAliasMappingTable



	- entPhysicalContainsTable',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entLastChangeTime.1044', 
    'leaf', 
    '/entityGeneral',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-MIB', 'ENTITY-MIB', '2005-08-10', 'entConfigChange', '1063',
    '/entConfigChange',
    'An entConfigChange notification is generated when the value
of entLastChangeTime changes.  It can be utilized by an NMS
to trigger logical/physical entity table maintenance polls.

An agent should not generate more than one entConfigChange
\'notification-event\' in a given time interval (five seconds
is the suggested default).  A \'notification-event\' is the
transmission of a single trap or inform PDU to a list of
notification destinations.

If additional configuration changes occur within the
throttling period, then notification-events for these
changes should be suppressed by the agent until the current
throttling period expires.  At the end of a throttling
period, one notification-event should be generated if any
configuration changes occurred since the start of the
throttling period.  In such a case, another throttling
period is started right away.

An NMS should periodically check the value of
entLastChangeTime to detect any missed entConfigChange
notification-events, e.g., due to throttling or transmission
loss.',
    '',
    '/modules/ENTITY-MIB/2005-08-10#entConfigChange.1063', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    '',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/HOST-RESOURCES-MIB.yang
# module: HOST-RESOURCES-MIB
# version: 2000-03-06
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'HOST-RESOURCES-MIB');

INSERT INTO ncmodule VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'host-resources',
    'urn:ietf:params:xml:ns:yang:smiv2:HOST-RESOURCES-MIB',
    'IETF Host Resources MIB Working Group',
    'This MIB is for use in managing host systems. The term
`host\' is construed to mean any computer that communicates
with other sim...',
    'This MIB is for use in managing host systems. The term
`host\' is construed to mean any computer that communicates
with other similar computers attached to the internet and
that is directly used by one or more human beings. Although
this MIB does not necessarily apply to devices whose primary
function is communications services (e.g., terminal servers,
routers, bridges, monitoring equipment), such relevance is
not explicitly precluded.  This MIB instruments attributes
common to all internet hosts including, for example, both
personal computers and systems that run variants of Unix.',
    '',
    'Steve Waldbusser
Postal: Lucent Technologies, Inc.
	1213 Innsbruck Dr.
	Sunnyvale, CA 94089
	USA
Phone:  650-318-1251
Fax:    650-318-1633
Email:  waldbusser@lucent.com

In addition, the Host Resources MIB mailing list is
dedicated to discussion of this MIB. To join the
mailing list, send a request message to
hostmib-request@andrew.cmu.edu. The mailing list
address is hostmib@andrew.cmu.edu.',
    'Clarifications and bug fixes based on implementation
experience.  This revision was also reformatted in the SMIv2
format. The revisions made were:

New RFC document standards:
   Added Copyright notice, updated introduction to SNMP
   Framework, updated references section, added reference to
   RFC 2119, and added a meaningful Security Considerations
   section.

New IANA considerations section for registration of new types

Conversion to new SMIv2 syntax for the following types and
macros:
    Counter32, Integer32, Gauge32, MODULE-IDENTITY,
    OBJECT-TYPE, TEXTUAL-CONVENTION, OBJECT-IDENTITY,
    MODULE-COMPLIANCE, OBJECT-GROUP

Used new Textual Conventions:
    TruthValue, DateAndTime, AutonomousType,
    InterfaceIndexOrZero

Fixed typo in hrPrinterStatus.

Added missing error bits to hrPrinterDetectedErrorState and
clarified confusion resulting from suggested mappings to
hrPrinterStatus.

Clarified that size of objects of type
InternationalDisplayString is number of octets, not number
of encoded symbols.

Clarified the use of the following objects based on
implementation experience:
    hrSystemInitialLoadDevice, hrSystemInitialLoadParameters,
    hrMemorySize, hrStorageSize, hrStorageAllocationFailures,
    hrDeviceErrors, hrProcessorLoad, hrNetworkIfIndex,
    hrDiskStorageCapacity, hrSWRunStatus, hrSWRunPerfCPU,
    and hrSWInstalledDate.

Clarified implementation technique for hrSWInstalledTable.

Used new AUGMENTS clause for hrSWRunPerfTable.

Added Internationalization Considerations section.

This revision published as RFC2790.',
    '/xsd/HOST-RESOURCES-MIB_2000-03-06.xsd',
    '/modules/HOST-RESOURCES-MIB/2000-03-06', 
    '/src/HOST-RESOURCES-MIB_2000-03-06.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/HOST-RESOURCES-MIB.yang',
    'HOST-RESOURCES-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'KBytes', '114',
    'Storage size, expressed in units of 1024 bytes.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#KBytes.114', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'ProductID', '122',
    'This textual convention is intended to identify the

manufacturer, model, and version of a specific
hardware or software product.  It is suggested that
these OBJECT IDENTIFIERs are allocated such that all
products from a particular manufacturer are registered
under a subtree distinct to that manufacturer.  In
addition, all versions of a product should be
registered under a subtree distinct to that product.
With this strategy, a management station may uniquely
determine the manufacturer and/or model of a product
whose productID is unknown to the management station.
Objects of this type may be useful for inventory
purposes or for automatically detecting
incompatibilities or version mismatches between
various hardware and software components on a system.

For example, the product ID for the ACME 4860 66MHz
clock doubled processor might be:
enterprises.acme.acmeProcessors.a4860DX2.MHz66

A software product might be registered as:
enterprises.acme.acmeOperatingSystems.acmeDOS.six(6).one(1)',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#ProductID.122', 'string', 'object-identifier', 
    'yang-types', '175', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'InternationalDisplayString', '150',
    'This data type is used to model textual information
in some character set.  A network management station
should use a local algorithm to determine which
character set is in use and how it should be
displayed.  Note that this character set may be
encoded with more than one octet per symbol, but will
most often be NVT ASCII. When a size clause is
specified for an object of this type, the size refers
to the length in octets, not the number of symbols.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#InternationalDisplayString.150', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSystem', '164',
    '/hrSystem',
    '',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSystem.164', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'hrSystemUptime hrSystemDate hrSystemInitialLoadDevice hrSystemInitialLoadParameters hrSystemNumUsers hrSystemProcesses hrSystemMaxProcesses',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSystemUptime', '166',
    '/hrSystem/hrSystemUptime',
    'The amount of time since this host was last
initialized.  Note that this is different from
sysUpTime in the SNMPv2-MIB [RFC1907] because
sysUpTime is the uptime of the network management
portion of the system.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSystemUptime.166', 
    'leaf', 
    '/hrSystem',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSystemDate', '178',
    '/hrSystem/hrSystemDate',
    'The host\'s notion of the local date and time of day.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSystemDate.178', 
    'leaf', 
    '/hrSystem',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSystemInitialLoadDevice', '186',
    '/hrSystem/hrSystemInitialLoadDevice',
    'The index of the hrDeviceEntry for the device from
which this host is configured to load its initial
operating system configuration (i.e., which operating
system code and/or boot parameters).

Note that writing to this object just changes the
configuration that will be used the next time the
operating system is loaded and does not actually cause
the reload to occur.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSystemInitialLoadDevice.186', 
    'leaf', 
    '/hrSystem',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSystemInitialLoadParameters', '204',
    '/hrSystem/hrSystemInitialLoadParameters',
    'This object contains the parameters (e.g. a pathname
and parameter) supplied to the load device when
requesting the initial operating system configuration
from that device.

Note that writing to this object just changes the
configuration that will be used the next time the
operating system is loaded and does not actually cause
the reload to occur.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSystemInitialLoadParameters.204', 
    'leaf', 
    '/hrSystem',
    '0',
    '1',
    'InternationalDisplayString',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSystemNumUsers', '222',
    '/hrSystem/hrSystemNumUsers',
    'The number of user sessions for which this host is
storing state information.  A session is a collection
of processes requiring a single act of user
authentication and possibly subject to collective job
control.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSystemNumUsers.222', 
    'leaf', 
    '/hrSystem',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSystemProcesses', '234',
    '/hrSystem/hrSystemProcesses',
    'The number of process contexts currently loaded or
running on this system.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSystemProcesses.234', 
    'leaf', 
    '/hrSystem',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSystemMaxProcesses', '243',
    '/hrSystem/hrSystemMaxProcesses',
    'The maximum number of process contexts this system
can support.  If there is no fixed maximum, the value
should be zero.  On systems that have a fixed maximum,
this object can help diagnose failures that occur when
this maximum is reached.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSystemMaxProcesses.243', 
    'leaf', 
    '/hrSystem',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrStorage', '259',
    '/hrStorage',
    '',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrStorage.259', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'hrMemorySize hrStorageEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrMemorySize', '261',
    '/hrStorage/hrMemorySize',
    'The amount of physical read-write main memory,
typically RAM, contained by the host.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrMemorySize.261', 
    'leaf', 
    '/hrStorage',
    '0',
    '1',
    'KBytes',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrStorageEntry', '274',
    '/hrStorage/hrStorageEntry',
    'A (conceptual) entry for one logical storage area on
the host.  As an example, an instance of the
hrStorageType object might be named hrStorageType.3',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrStorageEntry.274', 
    'list', 
    '/hrStorage',
    '0',
    '1',
    '',
    '',
    'hrStorageIndex hrStorageType hrStorageDescr hrStorageAllocationUnits hrStorageSize hrStorageUsed hrStorageAllocationFailures',
    '',
    'hrStorageIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrStorageIndex', '284',
    '/hrStorage/hrStorageEntry/hrStorageIndex',
    'A unique value for each logical storage area
contained by the host.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrStorageIndex.284', 
    'leaf', 
    '/hrStorage/hrStorageEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrStorageType', '295',
    '/hrStorage/hrStorageEntry/hrStorageType',
    'The type of storage represented by this entry.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrStorageType.295', 
    'leaf', 
    '/hrStorage/hrStorageEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrStorageDescr', '303',
    '/hrStorage/hrStorageEntry/hrStorageDescr',
    'A description of the type and instance of the storage
described by this entry.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrStorageDescr.303', 
    'leaf', 
    '/hrStorage/hrStorageEntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrStorageAllocationUnits', '312',
    '/hrStorage/hrStorageEntry/hrStorageAllocationUnits',
    'The size, in bytes, of the data objects allocated
from this pool.  If this entry is monitoring sectors,
blocks, buffers, or packets, for example, this number
will commonly be greater than one.  Otherwise this
number will typically be one.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrStorageAllocationUnits.312', 
    'leaf', 
    '/hrStorage/hrStorageEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrStorageSize', '327',
    '/hrStorage/hrStorageEntry/hrStorageSize',
    'The size of the storage represented by this entry, in
units of hrStorageAllocationUnits. This object is
writable to allow remote configuration of the size of
the storage area in those cases where such an
operation makes sense and is possible on the
underlying system. For example, the amount of main
memory allocated to a buffer pool might be modified or
the amount of disk space allocated to virtual memory
might be modified.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrStorageSize.327', 
    'leaf', 
    '/hrStorage/hrStorageEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrStorageUsed', '345',
    '/hrStorage/hrStorageEntry/hrStorageUsed',
    'The amount of the storage represented by this entry
that is allocated, in units of
hrStorageAllocationUnits.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrStorageUsed.345', 
    'leaf', 
    '/hrStorage/hrStorageEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrStorageAllocationFailures', '357',
    '/hrStorage/hrStorageEntry/hrStorageAllocationFailures',
    'The number of requests for storage represented by
this entry that could not be honored due to not enough
storage.  It should be noted that as this object has a
SYNTAX of Counter32, that it does not have a defined
initial value.  However, it is recommended that this
object be initialized to zero, even though management
stations must not depend on such an initialization.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrStorageAllocationFailures.357', 
    'leaf', 
    '/hrStorage/hrStorageEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDevice', '374',
    '/hrDevice',
    '',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDevice.374', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'hrDeviceEntry hrProcessorEntry hrNetworkEntry hrPrinterEntry hrDiskStorageEntry hrPartitionEntry hrFSEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceEntry', '379',
    '/hrDevice/hrDeviceEntry',
    'A (conceptual) entry for one device contained by the
host.  As an example, an instance of the hrDeviceType
object might be named hrDeviceType.3',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceEntry.379', 
    'list', 
    '/hrDevice',
    '0',
    '1',
    '',
    '',
    'hrDeviceIndex hrDeviceType hrDeviceDescr hrDeviceID hrDeviceStatus hrDeviceErrors',
    '',
    'hrDeviceIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceIndex', '389',
    '/hrDevice/hrDeviceEntry/hrDeviceIndex',
    'A unique value for each device contained by the host.
The value for each device must remain constant at
least from one re-initialization of the agent to the
next re-initialization.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceIndex.389', 
    'leaf', 
    '/hrDevice/hrDeviceEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceType', '402',
    '/hrDevice/hrDeviceEntry/hrDeviceType',
    'An indication of the type of device.

If this value is
`hrDeviceProcessor { hrDeviceTypes 3 }\' then an entry
exists in the hrProcessorTable which corresponds to
this device.

If this value is
`hrDeviceNetwork { hrDeviceTypes 4 }\', then an entry
exists in the hrNetworkTable which corresponds to this
device.

If this value is
`hrDevicePrinter { hrDeviceTypes 5 }\', then an entry
exists in the hrPrinterTable which corresponds to this
device.

If this value is
`hrDeviceDiskStorage { hrDeviceTypes 6 }\', then an
entry exists in the hrDiskStorageTable which
corresponds to this device.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceType.402', 
    'leaf', 
    '/hrDevice/hrDeviceEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceDescr', '430',
    '/hrDevice/hrDeviceEntry/hrDeviceDescr',
    'A textual description of this device, including the
device\'s manufacturer and revision, and optionally,
its serial number.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceDescr.430', 
    'leaf', 
    '/hrDevice/hrDeviceEntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceID', '442',
    '/hrDevice/hrDeviceEntry/hrDeviceID',
    'The product ID for this device.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceID.442', 
    'leaf', 
    '/hrDevice/hrDeviceEntry',
    '0',
    '1',
    'ProductID',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceStatus', '450',
    '/hrDevice/hrDeviceEntry/hrDeviceStatus',
    'The current operational state of the device described
by this row of the table.  A value unknown(1)
indicates that the current state of the device is
unknown.  running(2) indicates that the device is up
and running and that no unusual error conditions are
known.  The warning(3) state indicates that agent has
been informed of an unusual error condition by the
operational software (e.g., a disk device driver) but
that the device is still \'operational\'.  An example
would be a high number of soft errors on a disk.  A
value of testing(4), indicates that the device is not
available for use because it is in the testing state.
The state of down(5) is used only when the agent has
been informed that the device is not available for any
use.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceStatus.450', 
    'leaf', 
    '/hrDevice/hrDeviceEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceErrors', '478',
    '/hrDevice/hrDeviceEntry/hrDeviceErrors',
    'The number of errors detected on this device.  It
should be noted that as this object has a SYNTAX of
Counter32, that it does not have a defined initial
value.  However, it is recommended that this object be
initialized to zero, even though management stations
must not depend on such an initialization.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceErrors.478', 
    'leaf', 
    '/hrDevice/hrDeviceEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrProcessorEntry', '495',
    '/hrDevice/hrProcessorEntry',
    'A (conceptual) entry for one processor contained by
the host.  The hrDeviceIndex in the index represents
the entry in the hrDeviceTable that corresponds to the
hrProcessorEntry.

As an example of how objects in this table are named,
an instance of the hrProcessorFrwID object might be
named hrProcessorFrwID.3',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrProcessorEntry.495', 
    'list', 
    '/hrDevice',
    '0',
    '1',
    '',
    '',
    'hrDeviceIndex hrProcessorFrwID hrProcessorLoad',
    '',
    'hrDeviceIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceIndex', '509',
    '/hrDevice/hrProcessorEntry/hrDeviceIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceIndex.509', 
    'leaf', 
    '/hrDevice/hrProcessorEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrProcessorFrwID', '518',
    '/hrDevice/hrProcessorEntry/hrProcessorFrwID',
    'The product ID of the firmware associated with the
processor.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrProcessorFrwID.518', 
    'leaf', 
    '/hrDevice/hrProcessorEntry',
    '0',
    '1',
    'ProductID',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrProcessorLoad', '527',
    '/hrDevice/hrProcessorEntry/hrProcessorLoad',
    'The average, over the last minute, of the percentage
of time that this processor was not idle.
Implementations may approximate this one minute
smoothing period if necessary.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrProcessorLoad.527', 
    'leaf', 
    '/hrDevice/hrProcessorEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrNetworkEntry', '544',
    '/hrDevice/hrNetworkEntry',
    'A (conceptual) entry for one network device contained
by the host.  The hrDeviceIndex in the index
represents the entry in the hrDeviceTable that
corresponds to the hrNetworkEntry.

As an example of how objects in this table are named,
an instance of the hrNetworkIfIndex object might be
named hrNetworkIfIndex.3',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrNetworkEntry.544', 
    'list', 
    '/hrDevice',
    '0',
    '1',
    '',
    '',
    'hrDeviceIndex hrNetworkIfIndex',
    '',
    'hrDeviceIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceIndex', '558',
    '/hrDevice/hrNetworkEntry/hrDeviceIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceIndex.558', 
    'leaf', 
    '/hrDevice/hrNetworkEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrNetworkIfIndex', '567',
    '/hrDevice/hrNetworkEntry/hrNetworkIfIndex',
    'The value of ifIndex which corresponds to this
network device. If this device is not represented in
the ifTable, then this value shall be zero.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrNetworkIfIndex.567', 
    'leaf', 
    '/hrDevice/hrNetworkEntry',
    '0',
    '1',
    'InterfaceIndexOrZero',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrPrinterEntry', '581',
    '/hrDevice/hrPrinterEntry',
    'A (conceptual) entry for one printer local to the
host.  The hrDeviceIndex in the index represents the
entry in the hrDeviceTable that corresponds to the
hrPrinterEntry.

As an example of how objects in this table are named,
an instance of the hrPrinterStatus object might be
named hrPrinterStatus.3',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrPrinterEntry.581', 
    'list', 
    '/hrDevice',
    '0',
    '1',
    '',
    '',
    'hrDeviceIndex hrPrinterStatus hrPrinterDetectedErrorState',
    '',
    'hrDeviceIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceIndex', '595',
    '/hrDevice/hrPrinterEntry/hrDeviceIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceIndex.595', 
    'leaf', 
    '/hrDevice/hrPrinterEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrPrinterStatus', '604',
    '/hrDevice/hrPrinterEntry/hrPrinterStatus',
    'The current status of this printer device.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrPrinterStatus.604', 
    'leaf', 
    '/hrDevice/hrPrinterEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrPrinterDetectedErrorState', '618',
    '/hrDevice/hrPrinterEntry/hrPrinterDetectedErrorState',
    'This object represents any error conditions detected
by the printer.  The error conditions are encoded as
bits in an octet string, with the following
definitions:

     Condition         Bit #

     lowPaper              0

     noPaper               1
     lowToner              2
     noToner               3
     doorOpen              4
     jammed                5
     offline               6
     serviceRequested      7
     inputTrayMissing      8
     outputTrayMissing     9
     markerSupplyMissing  10
     outputNearFull       11
     outputFull           12
     inputTrayEmpty       13
     overduePreventMaint  14

Bits are numbered starting with the most significant
bit of the first byte being bit 0, the least
significant bit of the first byte being bit 7, the
most significant bit of the second byte being bit 8,
and so on.  A one bit encodes that the condition was
detected, while a zero bit encodes that the condition
was not detected.

This object is useful for alerting an operator to
specific warning or error conditions that may occur,
especially those requiring human intervention.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrPrinterDetectedErrorState.618', 
    'leaf', 
    '/hrDevice/hrPrinterEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDiskStorageEntry', '664',
    '/hrDevice/hrDiskStorageEntry',
    'A (conceptual) entry for one long-term storage device
contained by the host.  The hrDeviceIndex in the index
represents the entry in the hrDeviceTable that
corresponds to the hrDiskStorageEntry. As an example,
an instance of the hrDiskStorageCapacity object might
be named hrDiskStorageCapacity.3',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDiskStorageEntry.664', 
    'list', 
    '/hrDevice',
    '0',
    '1',
    '',
    '',
    'hrDeviceIndex hrDiskStorageAccess hrDiskStorageMedia hrDiskStorageRemoveble hrDiskStorageCapacity',
    '',
    'hrDeviceIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceIndex', '676',
    '/hrDevice/hrDiskStorageEntry/hrDeviceIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceIndex.676', 
    'leaf', 
    '/hrDevice/hrDiskStorageEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDiskStorageAccess', '685',
    '/hrDevice/hrDiskStorageEntry/hrDiskStorageAccess',
    'An indication if this long-term storage device is
readable and writable or only readable.  This should
reflect the media type, any write-protect mechanism,
and any device configuration that affects the entire
device.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDiskStorageAccess.685', 
    'leaf', 
    '/hrDevice/hrDiskStorageEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDiskStorageMedia', '700',
    '/hrDevice/hrDiskStorageEntry/hrDiskStorageMedia',
    'An indication of the type of media used in this long-
term storage device.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDiskStorageMedia.700', 
    'leaf', 
    '/hrDevice/hrDiskStorageEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDiskStorageRemoveble', '718',
    '/hrDevice/hrDiskStorageEntry/hrDiskStorageRemoveble',
    'Denotes whether or not the disk media may be removed
from the drive.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDiskStorageRemoveble.718', 
    'leaf', 
    '/hrDevice/hrDiskStorageEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDiskStorageCapacity', '727',
    '/hrDevice/hrDiskStorageEntry/hrDiskStorageCapacity',
    'The total size for this long-term storage device. If
the media is removable and is currently removed, this
value should be zero.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDiskStorageCapacity.727', 
    'leaf', 
    '/hrDevice/hrDiskStorageEntry',
    '0',
    '1',
    'KBytes',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrPartitionEntry', '742',
    '/hrDevice/hrPartitionEntry',
    'A (conceptual) entry for one partition.  The
hrDeviceIndex in the index represents the entry in the
hrDeviceTable that corresponds to the
hrPartitionEntry.

As an example of how objects in this table are named,
an instance of the hrPartitionSize object might be
named hrPartitionSize.3.1',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrPartitionEntry.742', 
    'list', 
    '/hrDevice',
    '0',
    '1',
    '',
    '',
    'hrDeviceIndex hrPartitionIndex hrPartitionLabel hrPartitionID hrPartitionSize hrPartitionFSIndex',
    '',
    'hrDeviceIndex hrPartitionIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrDeviceIndex', '756',
    '/hrDevice/hrPartitionEntry/hrDeviceIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrDeviceIndex.756', 
    'leaf', 
    '/hrDevice/hrPartitionEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrPartitionIndex', '765',
    '/hrDevice/hrPartitionEntry/hrPartitionIndex',
    'A unique value for each partition on this long-term
storage device.  The value for each long-term storage
device must remain constant at least from one re-
initialization of the agent to the next re-
initialization.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrPartitionIndex.765', 
    'leaf', 
    '/hrDevice/hrPartitionEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrPartitionLabel', '779',
    '/hrDevice/hrPartitionEntry/hrPartitionLabel',
    'A textual description of this partition.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrPartitionLabel.779', 
    'leaf', 
    '/hrDevice/hrPartitionEntry',
    '0',
    '1',
    'InternationalDisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrPartitionID', '789',
    '/hrDevice/hrPartitionEntry/hrPartitionID',
    'A descriptor which uniquely represents this partition
to the responsible operating system.  On some systems,
this might take on a binary representation.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrPartitionID.789', 
    'leaf', 
    '/hrDevice/hrPartitionEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrPartitionSize', '799',
    '/hrDevice/hrPartitionEntry/hrPartitionSize',
    'The size of this partition.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrPartitionSize.799', 
    'leaf', 
    '/hrDevice/hrPartitionEntry',
    '0',
    '1',
    'KBytes',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrPartitionFSIndex', '808',
    '/hrDevice/hrPartitionEntry/hrPartitionFSIndex',
    'The index of the file system mounted on this
partition.  If no file system is mounted on this
partition, then this value shall be zero.  Note that
multiple partitions may point to one file system,
denoting that that file system resides on those
partitions.  Multiple file systems may not reside on
one partition.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrPartitionFSIndex.808', 
    'leaf', 
    '/hrDevice/hrPartitionEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSEntry', '828',
    '/hrDevice/hrFSEntry',
    'A (conceptual) entry for one file system local to
this host or remotely mounted from a file server.
File systems that are in only one user\'s environment
on a multi-user system will not be included in this
table.

As an example of how objects in this table are named,
an instance of the hrFSMountPoint object might be
named hrFSMountPoint.3',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSEntry.828', 
    'list', 
    '/hrDevice',
    '0',
    '1',
    '',
    '',
    'hrFSIndex hrFSMountPoint hrFSRemoteMountPoint hrFSType hrFSAccess hrFSBootable hrFSStorageIndex hrFSLastFullBackupDate hrFSLastPartialBackupDate',
    '',
    'hrFSIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSIndex', '844',
    '/hrDevice/hrFSEntry/hrFSIndex',
    'A unique value for each file system local to this
host.  The value for each file system must remain
constant at least from one re-initialization of the
agent to the next re-initialization.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSIndex.844', 
    'leaf', 
    '/hrDevice/hrFSEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSMountPoint', '857',
    '/hrDevice/hrFSEntry/hrFSMountPoint',
    'The path name of the root of this file system.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSMountPoint.857', 
    'leaf', 
    '/hrDevice/hrFSEntry',
    '0',
    '1',
    'InternationalDisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSRemoteMountPoint', '867',
    '/hrDevice/hrFSEntry/hrFSRemoteMountPoint',
    'A description of the name and/or address of the
server that this file system is mounted from.  This
may also include parameters such as the mount point on
the remote file system.  If this is not a remote file
system, this string should have a length of zero.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSRemoteMountPoint.867', 
    'leaf', 
    '/hrDevice/hrFSEntry',
    '0',
    '1',
    'InternationalDisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSType', '881',
    '/hrDevice/hrFSEntry/hrFSType',
    'The value of this object identifies the type of this
file system.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSType.881', 
    'leaf', 
    '/hrDevice/hrFSEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSAccess', '890',
    '/hrDevice/hrFSEntry/hrFSAccess',
    'An indication if this file system is logically
configured by the operating system to be readable and
writable or only readable.  This does not represent
any local access-control policy, except one that is
applied to the file system as a whole.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSAccess.890', 
    'leaf', 
    '/hrDevice/hrFSEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSBootable', '905',
    '/hrDevice/hrFSEntry/hrFSBootable',
    'A flag indicating whether this file system is
bootable.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSBootable.905', 
    'leaf', 
    '/hrDevice/hrFSEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSStorageIndex', '914',
    '/hrDevice/hrFSEntry/hrFSStorageIndex',
    'The index of the hrStorageEntry that represents
information about this file system.  If there is no
such information available, then this value shall be
zero.  The relevant storage entry will be useful in
tracking the percent usage of this file system and
diagnosing errors that may occur when it runs out of
space.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSStorageIndex.914', 
    'leaf', 
    '/hrDevice/hrFSEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSLastFullBackupDate', '930',
    '/hrDevice/hrFSEntry/hrFSLastFullBackupDate',
    'The last date at which this complete file system was

copied to another storage device for backup.  This
information is useful for ensuring that backups are
being performed regularly.

If this information is not known, then this variable
shall have the value corresponding to January 1, year
0000, 00:00:00.0, which is encoded as
(hex)\'00 00 01 01 00 00 00 00\'.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSLastFullBackupDate.930', 
    'leaf', 
    '/hrDevice/hrFSEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrFSLastPartialBackupDate', '947',
    '/hrDevice/hrFSEntry/hrFSLastPartialBackupDate',
    'The last date at which a portion of this file system
was copied to another storage device for backup.  This
information is useful for ensuring that backups are
being performed regularly.

If this information is not known, then this variable
shall have the value corresponding to January 1, year
0000, 00:00:00.0, which is encoded as
(hex)\'00 00 01 01 00 00 00 00\'.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrFSLastPartialBackupDate.947', 
    'leaf', 
    '/hrDevice/hrFSEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRun', '967',
    '/hrSWRun',
    '',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRun.967', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'hrSWOSIndex hrSWRunEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWOSIndex', '969',
    '/hrSWRun/hrSWOSIndex',
    'The value of the hrSWRunIndex for the hrSWRunEntry
that represents the primary operating system running
on this host.  This object is useful for quickly and
uniquely identifying that primary operating system.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWOSIndex.969', 
    'leaf', 
    '/hrSWRun',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunEntry', '985',
    '/hrSWRun/hrSWRunEntry',
    'A (conceptual) entry for one piece of software
running on the host Note that because the installed
software table only contains information for software
stored locally on this host, not every piece of
running software will be found in the installed
software table.  This is true of software that was
loaded and run from a non-local source, such as a
network-mounted file system.

As an example of how objects in this table are named,
an instance of the hrSWRunName object might be named
hrSWRunName.1287',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunEntry.985', 
    'list', 
    '/hrSWRun',
    '0',
    '1',
    '',
    '',
    'hrSWRunIndex hrSWRunName hrSWRunID hrSWRunPath hrSWRunParameters hrSWRunType hrSWRunStatus hrSWRunPerfCPU hrSWRunPerfMem',
    '',
    'hrSWRunIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunIndex', '1004',
    '/hrSWRun/hrSWRunEntry/hrSWRunIndex',
    'A unique value for each piece of software running on
the host.  Wherever possible, this should be the
system\'s native, unique identification number.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunIndex.1004', 
    'leaf', 
    '/hrSWRun/hrSWRunEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunName', '1016',
    '/hrSWRun/hrSWRunEntry/hrSWRunName',
    'A textual description of this running piece of
software, including the manufacturer, revision,  and
the name by which it is commonly known.  If this
software was installed locally, this should be the
same string as used in the corresponding
hrSWInstalledName.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunName.1016', 
    'leaf', 
    '/hrSWRun/hrSWRunEntry',
    '0',
    '1',
    'InternationalDisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunID', '1031',
    '/hrSWRun/hrSWRunEntry/hrSWRunID',
    'The product ID of this running piece of software.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunID.1031', 
    'leaf', 
    '/hrSWRun/hrSWRunEntry',
    '0',
    '1',
    'ProductID',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunPath', '1039',
    '/hrSWRun/hrSWRunEntry/hrSWRunPath',
    'A description of the location on long-term storage
(e.g. a disk drive) from which this software was
loaded.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunPath.1039', 
    'leaf', 
    '/hrSWRun/hrSWRunEntry',
    '0',
    '1',
    'InternationalDisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunParameters', '1051',
    '/hrSWRun/hrSWRunEntry/hrSWRunParameters',
    'A description of the parameters supplied to this
software when it was initially loaded.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunParameters.1051', 
    'leaf', 
    '/hrSWRun/hrSWRunEntry',
    '0',
    '1',
    'InternationalDisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunType', '1062',
    '/hrSWRun/hrSWRunEntry/hrSWRunType',
    'The type of this software.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunType.1062', 
    'leaf', 
    '/hrSWRun/hrSWRunEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunStatus', '1075',
    '/hrSWRun/hrSWRunEntry/hrSWRunStatus',
    'The status of this running piece of software.
Setting this value to invalid(4) shall cause this
software to stop running and to be unloaded. Sets to
other values are not valid.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunStatus.1075', 
    'leaf', 
    '/hrSWRun/hrSWRunEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunPerfCPU', '1217',
    '/hrSWRun/hrSWRunEntry/hrSWRunPerfCPU',
    'The number of centi-seconds of the total system\'s CPU
resources consumed by this process.  Note that on a
multi-processor system, this value may increment by
more than one centi-second in one centi-second of real
(wall clock) time.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunPerfCPU.1217', 
    'leaf', 
    '/hrSWRun/hrSWRunEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunPerfMem', '1231',
    '/hrSWRun/hrSWRunEntry/hrSWRunPerfMem',
    'The total amount of real system memory allocated to
this process.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunPerfMem.1231', 
    'leaf', 
    '/hrSWRun/hrSWRunEntry',
    '0',
    '1',
    'KBytes',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWRunPerf', '1094',
    '/hrSWRunPerf',
    '',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWRunPerf.1094', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWInstalled', '1099',
    '/hrSWInstalled',
    '',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWInstalled.1099', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'hrSWInstalledLastChange hrSWInstalledLastUpdateTime hrSWInstalledEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWInstalledLastChange', '1101',
    '/hrSWInstalled/hrSWInstalledLastChange',
    'The value of sysUpTime when an entry in the
hrSWInstalledTable was last added, renamed, or
deleted.  Because this table is likely to contain many
entries, polling of this object allows a management
station to determine when re-downloading of the table
might be useful.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWInstalledLastChange.1101', 
    'leaf', 
    '/hrSWInstalled',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWInstalledLastUpdateTime', '1114',
    '/hrSWInstalled/hrSWInstalledLastUpdateTime',
    'The value of sysUpTime when the hrSWInstalledTable
was last completely updated.  Because caching of this
data will be a popular implementation strategy,
retrieval of this object allows a management station
to obtain a guarantee that no data in this table is
older than the indicated time.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWInstalledLastUpdateTime.1114', 
    'leaf', 
    '/hrSWInstalled',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWInstalledEntry', '1130',
    '/hrSWInstalled/hrSWInstalledEntry',
    'A (conceptual) entry for a piece of software
installed on this host.

As an example of how objects in this table are named,
an instance of the hrSWInstalledName object might be
named hrSWInstalledName.96',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWInstalledEntry.1130', 
    'list', 
    '/hrSWInstalled',
    '0',
    '1',
    '',
    '',
    'hrSWInstalledIndex hrSWInstalledName hrSWInstalledID hrSWInstalledType hrSWInstalledDate',
    '',
    'hrSWInstalledIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWInstalledIndex', '1143',
    '/hrSWInstalled/hrSWInstalledEntry/hrSWInstalledIndex',
    'A unique value for each piece of software installed
on the host.  This value shall be in the range from 1
to the number of pieces of software installed on the
host.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWInstalledIndex.1143', 
    'leaf', 
    '/hrSWInstalled/hrSWInstalledEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWInstalledName', '1156',
    '/hrSWInstalled/hrSWInstalledEntry/hrSWInstalledName',
    'A textual description of this installed piece of
software, including the manufacturer, revision, the
name by which it is commonly known, and optionally,
its serial number.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWInstalledName.1156', 
    'leaf', 
    '/hrSWInstalled/hrSWInstalledEntry',
    '0',
    '1',
    'InternationalDisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWInstalledID', '1169',
    '/hrSWInstalled/hrSWInstalledEntry/hrSWInstalledID',
    'The product ID of this installed piece of software.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWInstalledID.1169', 
    'leaf', 
    '/hrSWInstalled/hrSWInstalledEntry',
    '0',
    '1',
    'ProductID',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWInstalledType', '1177',
    '/hrSWInstalled/hrSWInstalledEntry/hrSWInstalledType',
    'The type of this software.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWInstalledType.1177', 
    'leaf', 
    '/hrSWInstalled/hrSWInstalledEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'HOST-RESOURCES-MIB', 'HOST-RESOURCES-MIB', '2000-03-06', 'hrSWInstalledDate', '1190',
    '/hrSWInstalled/hrSWInstalledEntry/hrSWInstalledDate',
    'The last-modification date of this application as it
would appear in a directory listing.

If this information is not known, then this variable
shall have the value corresponding to January 1, year
0000, 00:00:00.0, which is encoded as
(hex)\'00 00 01 01 00 00 00 00\'.',
    '',
    '/modules/HOST-RESOURCES-MIB/2000-03-06#hrSWInstalledDate.1190', 
    'leaf', 
    '/hrSWInstalled/hrSWInstalledEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/DISMAN-SCRIPT-MIB.yang
# module: DISMAN-SCRIPT-MIB
# version: 2001-08-21
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'DISMAN-SCRIPT-MIB');

INSERT INTO ncmodule VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'disman-script',
    'urn:ietf:params:xml:ns:yang:smiv2:DISMAN-SCRIPT-MIB',
    'IETF Distributed Management Working Group',
    'This MIB module defines a set of objects that allow to
delegate management scripts to distributed managers.',
    'This MIB module defines a set of objects that allow to
delegate management scripts to distributed managers.',
    '',
    'WG EMail:  disman@dorothy.bmc.com
Subscribe: disman-request@dorothy.bmc.com

Chair:     Randy Presuhn
	   BMC Software, Inc.

Postal:    Office 1-3141
	   2141 North First Street
	   San Jose,  California 95131
	   USA
EMail:     rpresuhn@bmc.com
Phone:     +1 408 546-1006

Editor:    David B. Levi
	   Nortel Networks
Postal:    4401 Great America Parkway
	   Santa Clara, CA 95052-8185
	   USA
EMail:     dlevi@nortelnetworks.com
Phone:     +1 423 686 0432

Editor:    Juergen Schoenwaelder
	   TU Braunschweig
Postal:    Bueltenweg 74/75
	   38106 Braunschweig
	   Germany
EMail:     schoenw@ibr.cs.tu-bs.de
Phone:     +49 531 391-3283',
    'Revised version, published as RFC 3165.

This revision introduces several new objects: smScriptError,
smScriptLastChange, smLaunchError, smLaunchLastChange,
smLaunchRowExpireTime, smRunResultTime, and smRunErrorTime.

The following existing objects were updated: the maximum
value of smRunLifeTime now disables the timer, an
autostart value was added to the smLaunchAdminStatus
object, and a new expired state was added to the
smLaunchOperStatus object.

A new smScriptException notification has been added to
support runtime error notifications.

Created new conformance and compliance statements that
take care of the new objects and notifications.

Clarifications have been added in several places to remove
ambiguities or contradictions that were discovered and
reported by implementors.',
    '/xsd/DISMAN-SCRIPT-MIB_2001-08-21.xsd',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21', 
    '/src/DISMAN-SCRIPT-MIB_2001-08-21.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/DISMAN-SCRIPT-MIB.yang',
    'DISMAN-SCRIPT-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smObjects', '91',
    '/smObjects',
    '',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smObjects.91', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'smLangEntry smExtsnEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLangEntry', '96',
    '/smObjects/smLangEntry',
    'An entry describing a particular language.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLangEntry.96', 
    'list', 
    '/smObjects',
    '0',
    '1',
    '',
    '',
    'smLangIndex smLangLanguage smLangVersion smLangVendor smLangRevision smLangDescr',
    '',
    'smLangIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLangIndex', '104',
    '/smObjects/smLangEntry/smLangIndex',
    'The locally arbitrary, but unique identifier associated
with this language entry.

The value is expected to remain constant at least from one
re-initialization of the entity\'s network management system
to the next re-initialization.

Note that the data type and the range of this object must
be consistent with the definition of smScriptLanguage.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLangIndex.104', 
    'leaf', 
    '/smObjects/smLangEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLangLanguage', '122',
    '/smObjects/smLangEntry/smLangLanguage',
    'The globally unique identification of the language.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLangLanguage.122', 
    'leaf', 
    '/smObjects/smLangEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLangVersion', '130',
    '/smObjects/smLangEntry/smLangVersion',
    'The version number of the language. The zero-length string
shall be used if the language does not have a version
number.

It is suggested that the version number consist of one or
more decimal numbers separated by dots, where the first
number is called the major version number.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLangVersion.130', 
    'leaf', 
    '/smObjects/smLangEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLangVendor', '146',
    '/smObjects/smLangEntry/smLangVendor',
    'An object identifier which identifies the vendor who
provides the implementation of the language. This object
identifier SHALL point to the object identifier directly
below the enterprise object identifier {1 3 6 1 4 1}
allocated for the vendor. The value must be the object
identifier {0 0} if the vendor is not known.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLangVendor.146', 
    'leaf', 
    '/smObjects/smLangEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLangRevision', '159',
    '/smObjects/smLangEntry/smLangRevision',
    'The version number of the language implementation.
The value of this object must be an empty string if
version number of the implementation is unknown.

It is suggested that the value consist of one or more
decimal numbers separated by dots, where the first
number is called the major version number.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLangRevision.159', 
    'leaf', 
    '/smObjects/smLangEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLangDescr', '175',
    '/smObjects/smLangEntry/smLangDescr',
    'A textual description of the language.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLangDescr.175', 
    'leaf', 
    '/smObjects/smLangEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smExtsnEntry', '187',
    '/smObjects/smExtsnEntry',
    'An entry describing a particular language extension.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smExtsnEntry.187', 
    'list', 
    '/smObjects',
    '0',
    '1',
    '',
    '',
    'smLangIndex smExtsnIndex smExtsnExtension smExtsnVersion smExtsnVendor smExtsnRevision smExtsnDescr',
    '',
    'smLangIndex smExtsnIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLangIndex', '194',
    '/smObjects/smExtsnEntry/smLangIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLangIndex.194', 
    'leaf', 
    '/smObjects/smExtsnEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smExtsnIndex', '203',
    '/smObjects/smExtsnEntry/smExtsnIndex',
    'The locally arbitrary, but unique identifier associated
with this language extension entry.

The value is expected to remain constant at least from one
re-initialization of the entity\'s network management system
to the next re-initialization.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smExtsnIndex.203', 
    'leaf', 
    '/smObjects/smExtsnEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smExtsnExtension', '218',
    '/smObjects/smExtsnEntry/smExtsnExtension',
    'The globally unique identification of the language
extension.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smExtsnExtension.218', 
    'leaf', 
    '/smObjects/smExtsnEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smExtsnVersion', '227',
    '/smObjects/smExtsnEntry/smExtsnVersion',
    'The version number of the language extension.
It is suggested that the version number consist of one or
more decimal numbers separated by dots, where the first
number is called the major version number.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smExtsnVersion.227', 
    'leaf', 
    '/smObjects/smExtsnEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smExtsnVendor', '240',
    '/smObjects/smExtsnEntry/smExtsnVendor',
    'An object identifier which identifies the vendor who
provides the implementation of the extension. The
object identifier value should point to the OID node
directly below the enterprise OID {1 3 6 1 4 1}
allocated for the vendor. The value must by the object
identifier {0 0} if the vendor is not known.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smExtsnVendor.240', 
    'leaf', 
    '/smObjects/smExtsnEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smExtsnRevision', '253',
    '/smObjects/smExtsnEntry/smExtsnRevision',
    'The version number of the extension implementation.
The value of this object must be an empty string if
version number of the implementation is unknown.

It is suggested that the value consist of one or more
decimal numbers separated by dots, where the first
number is called the major version number.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smExtsnRevision.253', 
    'leaf', 
    '/smObjects/smExtsnEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smExtsnDescr', '269',
    '/smObjects/smExtsnEntry/smExtsnDescr',
    'A textual description of the language extension.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smExtsnDescr.269', 
    'leaf', 
    '/smObjects/smExtsnEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptObjects', '282',
    '/smScriptObjects',
    '',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptObjects.282', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'smScriptEntry smCodeEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptEntry', '287',
    '/smScriptObjects/smScriptEntry',
    'An entry describing a particular script. Every script that
is stored in non-volatile memory is required to appear in
this script table.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptEntry.287', 
    'list', 
    '/smScriptObjects',
    '0',
    '1',
    '',
    '',
    'smScriptOwner smScriptName smScriptDescr smScriptLanguage smScriptSource smScriptAdminStatus smScriptOperStatus smScriptStorageType smScriptRowStatus smScriptError smScriptLastChange',
    '',
    'smScriptOwner smScriptName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptOwner', '297',
    '/smScriptObjects/smScriptEntry/smScriptOwner',
    'The manager who owns this row in the smScriptTable.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptOwner.297', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptName', '307',
    '/smScriptObjects/smScriptEntry/smScriptName',
    'The locally-unique, administratively assigned name for this
script. This object allows an smScriptOwner to have multiple
entries in the smScriptTable.

This value of this object may be used to derive the name
(e.g. a file name) which is used by the Script MIB
implementation to access the script in non-volatile
storage. The details of this mapping are implementation
specific. However, the mapping needs to ensure that scripts
created by different owners with the same script name do not
map to the same name in non-volatile storage.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptName.307', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptDescr', '327',
    '/smScriptObjects/smScriptEntry/smScriptDescr',
    'A description of the purpose of the script.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptDescr.327', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptLanguage', '335',
    '/smScriptObjects/smScriptEntry/smScriptLanguage',
    'The value of this object type identifies an entry in the
smLangTable which is used to execute this script.
The special value 0 may be used by hard-wired scripts
that can not be modified and that are executed by
internal functions.

Set requests to change this object are invalid if the
value of smScriptOperStatus is `enabled\' or `compiling\'
and will result in an inconsistentValue error.

Note that the data type and the range of this object must
be consistent with the definition of smLangIndex.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptLanguage.335', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptSource', '356',
    '/smScriptObjects/smScriptEntry/smScriptSource',
    'This object either contains a reference to the script
source or an empty string. A reference must be given
in the form of a Uniform Resource Locator (URL) as
defined in RFC 2396. The allowed character sets and the
encoding rules defined in RFC 2396 section 2 apply.

When the smScriptAdminStatus object is set to `enabled\',
the Script MIB implementation will `pull\' the script
source from the URL contained in this object if the URL
is not empty.

An empty URL indicates that the script source is loaded
from local storage. The script is read from the smCodeTable
if the value of smScriptStorageType is volatile. Otherwise,
the script is read from non-volatile storage.

Note: This document does not mandate implementation of any
specific URL scheme. An attempt to load a script from a
nonsupported URL scheme will cause the smScriptOperStatus
to report an `unknownProtocol\' error.

Set requests to change this object are invalid if the
value of smScriptOperStatus is `enabled\', `editing\',
`retrieving\' or `compiling\' and will result in an
inconsistentValue error.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptSource.356', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptAdminStatus', '389',
    '/smScriptObjects/smScriptEntry/smScriptAdminStatus',
    'The value of this object indicates the desired status of
the script. See the definition of smScriptOperStatus for
a description of the values.

When the smScriptAdminStatus object is set to `enabled\' and
the smScriptOperStatus is `disabled\' or one of the error
states, the Script MIB implementation will `pull\' the script
source from the URL contained in the smScriptSource object
if the URL is not empty.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptAdminStatus.389', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptOperStatus', '410',
    '/smScriptObjects/smScriptEntry/smScriptOperStatus',
    'The actual status of the script in the runtime system. The
value of this object is only meaningful when the value of
the smScriptRowStatus object is `active\'.

The smScriptOperStatus object may have the following values:

- `enabled\' indicates that the script is available and can
   be started by a launch table entry.

- `disabled\' indicates that the script can not be used.

- `editing\' indicates that the script can be modified in the
  smCodeTable.

- `retrieving\' indicates that the script is currently being
  loaded from non-volatile storage or a remote system.

- `compiling\' indicates that the script is currently being
  compiled by the runtime system.

- `noSuchScript\' indicates that the script does not exist
  at the smScriptSource.

- `accessDenied\' indicates that the script can not be loaded
  from the smScriptSource due to a lack of permissions.

- `wrongLanguage\' indicates that the script can not be
   loaded from the smScriptSource because of a language
   mismatch.

- `wrongVersion\' indicates that the script can not be loaded
  from the smScriptSource because of a language version
  mismatch.

- `compilationFailed\' indicates that the compilation failed.

- `noResourcesLeft\' indicates that the runtime system does
  not have enough resources to load the script.

- `unknownProtocol\' indicates that the script could not be
  loaded from the smScriptSource because the requested
  protocol is not supported.

- `protocolFailure\' indicates that the script could not be
  loaded from the smScriptSource because of a protocol
  failure.

- `genericError\' indicates that the script could not be

  loaded due to an error condition not listed above.

The `retrieving\' and `compiling\' states are transient states
which will either lead to one of the error states or the
`enabled\' state. The `disabled\' and `editing\' states are
administrative states which are only reached by explicit
management operations.

All launch table entries that refer to this script table
entry shall have an smLaunchOperStatus value of `disabled\'
when the value of this object is not `enabled\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptOperStatus.410', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptStorageType', '493',
    '/smScriptObjects/smScriptEntry/smScriptStorageType',
    'This object defines whether this row and the script
controlled by this row are kept in volatile storage and
lost upon reboot or if this row is backed up by
non-volatile or permanent storage.

The storage type of this row always complies with the value
of this entry if the value of the corresponding RowStatus
object is `active\'.

However, the storage type of the script controlled by this
row may be different, if the value of this entry is
`non-volatile\'. The script controlled by this row is written
into local non-volatile storage if the following condition
becomes true:

(a) the URL contained in the smScriptSource object is empty
    and
(b) the smScriptStorageType is `nonVolatile\'
    and
(c) the smScriptOperStatus is `enabled\'

Setting this object to `volatile\' removes a script from
non-volatile storage if the script controlled by this row
has been in non-volatile storage before. Attempts to set
this object to permanent will always fail with an
inconsistentValue error.

The value of smScriptStorageType is only meaningful if the
value of the corresponding RowStatus object is `active\'.

If smScriptStorageType has the value permanent(4), then all
objects whose MAX-ACCESS value is read-create must be
writable, with the exception of the smScriptStorageType and
smScriptRowStatus objects, which shall be read-only.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptStorageType.493', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptRowStatus', '535',
    '/smScriptObjects/smScriptEntry/smScriptRowStatus',
    'A control that allows entries to be added and removed from
this table.

Changing the smScriptRowStatus from `active\' to
`notInService\' will remove the associated script from the
runtime system.

Deleting conceptual rows from this table may affect the
deletion of other resources associated with this row. For
example, a script stored in non-volatile storage may be
removed from non-volatile storage.

An entry may not exist in the `active\' state unless all
required objects in the entry have appropriate values. Rows
that are not complete or not in service are not known by the
script runtime system.

Attempts to `destroy\' a row or to set a row `notInService\'
while the smScriptOperStatus is `enabled\' will result in an
inconsistentValue error.

Attempts to `destroy\' a row or to set a row `notInService\'
where the value of the smScriptStorageType object is
`permanent\' or `readOnly\' will result in an
inconsistentValue error.

The value of this object has no effect on whether other
objects in this conceptual row can be modified.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptRowStatus.535', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptError', '570',
    '/smScriptObjects/smScriptEntry/smScriptError',
    'This object contains a descriptive error message if the

transition into the operational status `enabled\' failed.
Implementations must reset the error message to a
zero-length string when a new attempt to change the
script status to `enabled\' is started.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptError.570', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptLastChange', '584',
    '/smScriptObjects/smScriptEntry/smScriptLastChange',
    'The date and time when this script table entry was last
modified. The value \'0000000000000000\'H is returned if
the script table entry has not yet been modified.

Note that the resetting of smScriptError is not considered
a change of the script table entry.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptLastChange.584', 
    'leaf', 
    '/smScriptObjects/smScriptEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smCodeEntry', '602',
    '/smScriptObjects/smCodeEntry',
    'An entry describing a particular fragment of a script.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smCodeEntry.602', 
    'list', 
    '/smScriptObjects',
    '0',
    '1',
    '',
    '',
    'smScriptOwner smScriptName smCodeIndex smCodeText smCodeRowStatus',
    '',
    'smScriptOwner smScriptName smCodeIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptOwner', '609',
    '/smScriptObjects/smCodeEntry/smScriptOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptOwner.609', 
    'leaf', 
    '/smScriptObjects/smCodeEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptName', '617',
    '/smScriptObjects/smCodeEntry/smScriptName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptName.617', 
    'leaf', 
    '/smScriptObjects/smCodeEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smCodeIndex', '626',
    '/smScriptObjects/smCodeEntry/smCodeIndex',
    'The index value identifying this code fragment.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smCodeIndex.626', 
    'leaf', 
    '/smScriptObjects/smCodeEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smCodeText', '636',
    '/smScriptObjects/smCodeEntry/smCodeText',
    'The code that makes up a fragment of a script. The format
of this code fragment depends on the script language which
is identified by the associated smScriptLanguage object.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smCodeText.636', 
    'leaf', 
    '/smScriptObjects/smCodeEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smCodeRowStatus', '648',
    '/smScriptObjects/smCodeEntry/smCodeRowStatus',
    'A control that allows entries to be added and removed from
this table.

The value of this object has no effect on whether other
objects in this conceptual row can be modified.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smCodeRowStatus.648', 
    'leaf', 
    '/smScriptObjects/smCodeEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunObjects', '663',
    '/smRunObjects',
    '',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunObjects.663', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'smLaunchEntry smRunEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchEntry', '668',
    '/smRunObjects/smLaunchEntry',
    'An entry describing a particular executable script.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchEntry.668', 
    'list', 
    '/smRunObjects',
    '0',
    '1',
    '',
    '',
    'smLaunchOwner smLaunchName smLaunchScriptOwner smLaunchScriptName smLaunchArgument smLaunchMaxRunning smLaunchMaxCompleted smLaunchLifeTime smLaunchExpireTime smLaunchStart smLaunchControl smLaunchAdminStatus smLaunchOperStatus smLaunchRunIndexNext smLaunchStorageType smLaunchRowStatus smLaunchError smLaunchLastChange smLaunchRowExpireTime',
    '',
    'smLaunchOwner smLaunchName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchOwner', '676',
    '/smRunObjects/smLaunchEntry/smLaunchOwner',
    'The manager who owns this row in the smLaunchTable. Every
instance of a running script started from a particular entry
in the smLaunchTable (i.e. entries in the smRunTable) will
be owned by the same smLaunchOwner used to index the entry
in the smLaunchTable. This owner is not necessarily the same
as the owner of the script itself (smLaunchScriptOwner).',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchOwner.676', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchName', '691',
    '/smRunObjects/smLaunchEntry/smLaunchName',
    'The locally-unique, administratively assigned name for this
launch table entry. This object allows an smLaunchOwner to
have multiple entries in the smLaunchTable. The smLaunchName
is an arbitrary name that must be different from any other
smLaunchTable entries with the same smLaunchOwner but can be
the same as other entries in the smLaunchTable with
different smLaunchOwner values. Note that the value of
smLaunchName is not related in any way to the name of the
script being launched.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchName.691', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchScriptOwner', '709',
    '/smRunObjects/smLaunchEntry/smLaunchScriptOwner',
    'The value of this object in combination with the value of
smLaunchScriptName identifies the script that can be
launched from this smLaunchTable entry. Attempts to write
this object will fail with an inconsistentValue error if
the value of smLaunchOperStatus is `enabled\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchScriptOwner.709', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchScriptName', '723',
    '/smRunObjects/smLaunchEntry/smLaunchScriptName',
    'The value of this object in combination with the value of
the smLaunchScriptOwner identifies the script that can be
launched from this smLaunchTable entry. The zero-length
string may be used to point to a non-existing script.

Attempts to write this object will fail with an
inconsistentValue error if the value of smLaunchOperStatus
is `enabled\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchScriptName.723', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchArgument', '741',
    '/smRunObjects/smLaunchEntry/smLaunchArgument',
    'The argument supplied to the script. When a script is
invoked, the value of this object is used to initialize
the smRunArgument object.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchArgument.741', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchMaxRunning', '752',
    '/smRunObjects/smLaunchEntry/smLaunchMaxRunning',
    'The maximum number of concurrently running scripts that may
be invoked from this entry in the smLaunchTable. Lowering
the current value of this object does not affect any scripts
that are already executing.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchMaxRunning.752', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchMaxCompleted', '766',
    '/smRunObjects/smLaunchEntry/smLaunchMaxCompleted',
    'The maximum number of finished scripts invoked from this
entry in the smLaunchTable allowed to be retained in the
smRunTable. Whenever the value of this object is changed
and whenever a script terminates, entries in the smRunTable
are deleted if necessary until the number of completed
scripts is smaller than the value of this object. Scripts
whose smRunEndTime value indicates the oldest completion
time are deleted first.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchMaxCompleted.766', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchLifeTime', '784',
    '/smRunObjects/smLaunchEntry/smLaunchLifeTime',
    'The default maximum amount of time a script launched
from this entry may run. The value of this object is used
to initialize the smRunLifeTime object when a script is
launched. Changing the value of an smLaunchLifeTime
instance does not affect scripts previously launched from

this entry.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchLifeTime.784', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'TimeInterval',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchExpireTime', '800',
    '/smRunObjects/smLaunchEntry/smLaunchExpireTime',
    'The default maximum amount of time information about a
script launched from this entry is kept in the smRunTable
after the script has completed execution.  The value of
this object is used to initialize the smRunExpireTime
object when a script is launched. Changing the value of an
smLaunchExpireTime instance does not affect scripts
previously launched from this entry.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchExpireTime.800', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'TimeInterval',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchStart', '816',
    '/smRunObjects/smLaunchEntry/smLaunchStart',
    'This object is used to start the execution of scripts.
When retrieved, the value will be the value of smRunIndex
for the last script that started execution by manipulating
this object. The value will be zero if no script started
execution yet.

A script is started by setting this object to an unused
smRunIndex value. A new row in the smRunTable will be
created which is indexed by the value supplied by the
set-request in addition to the value of smLaunchOwner and
smLaunchName. An unused value can be obtained by reading
the smLaunchRunIndexNext object.

Setting this object to the special value 0 will start
the script with a self-generated smRunIndex value. The
consequence is that the script invoker has no reliable
way to determine the smRunIndex value for this script
invocation and that the invoker has therefore no way
to obtain the results from this script invocation. The
special value 0 is however useful for scheduled script
invocations.

If this object is set, the following checks must be

performed:

1) The value of the smLaunchOperStatus object in this
   entry of the smLaunchTable must be `enabled\'.
2) The values of smLaunchScriptOwner and
   smLaunchScriptName of this row must identify an
   existing entry in the smScriptTable.
3) The value of smScriptOperStatus of this entry must
   be `enabled\'.
4) The principal performing the set operation must have
   read access to the script. This must be checked by
   calling the isAccessAllowed abstract service interface
   defined in RFC 2271 on the row in the smScriptTable
   identified by smLaunchScriptOwner and smLaunchScriptName.
   The isAccessAllowed abstract service interface must be
   called on all columnar objects in the smScriptTable with
   a MAX-ACCESS value different than `not-accessible\'. The
   test fails as soon as a call indicates that access is
   not allowed.
5) If the value provided by the set operation is not 0,
   a check must be made that the value is currently not
   in use. Otherwise, if the value provided by the set
   operation is 0, a suitable unused value must be
   generated.
6) The number of currently executing scripts invoked
   from this smLaunchTable entry must be less than
   smLaunchMaxRunning.

Attempts to start a script will fail with an
inconsistentValue error if one of the checks described
above fails.

Otherwise, if all checks have been passed, a new entry
in the smRunTable will be created indexed by smLaunchOwner,
smLaunchName and the new value for smRunIndex. The value
of smLaunchArgument will be copied into smRunArgument,
the value of smLaunchLifeTime will be copied to
smRunLifeTime, and the value of smLaunchExpireTime
will be copied to smRunExpireTime.

The smRunStartTime will be set to the current time and
the smRunState will be set to `initializing\' before the
script execution is initiated in the appropriate runtime
system.

Note that the data type and the range of this object must
be consistent with the smRunIndex object. Since this
object might be written from the scheduling MIB, the

data type Integer32 rather than Unsigned32 is used.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchStart.816', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchControl', '900',
    '/smRunObjects/smLaunchEntry/smLaunchControl',
    'This object is used to request a state change for all
running scripts in the smRunTable that were started from
this row in the smLaunchTable.

Setting this object to abort(1), suspend(2) or resume(3)
will set the smRunControl object of all applicable rows
in the smRunTable to abort(1), suspend(2) or resume(3)
respectively. The phrase `applicable rows\' means the set of
rows which were created from this entry in the smLaunchTable
and whose value of smRunState allows the corresponding
state change as described in the definition of the
smRunControl object. Setting this object to nop(4) has no
effect.

Attempts to set this object lead to an inconsistentValue
error only if all implicated sets on all the applicable
rows lead to inconsistentValue errors. It is not allowed
to return an inconsistentValue error if at least one state
change on one of the applicable rows was successful.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchControl.900', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchAdminStatus', '932',
    '/smRunObjects/smLaunchEntry/smLaunchAdminStatus',
    'The value of this object indicates the desired status of
this launch table entry. The values enabled(1) and
autostart(3) both indicate that the launch table entry

should transition into the operational enabled(1) state as
soon as the associated script table entry is enabled(1).

The value autostart(3) further indicates that the script
is started automatically by conceptually writing the
value 0 into the associated smLaunchStart object during
the transition from the `disabled\' into the `enabled\'
operational state. This is useful for scripts that are
to be launched on system start-up.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchAdminStatus.932', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchOperStatus', '957',
    '/smRunObjects/smLaunchEntry/smLaunchOperStatus',
    'The value of this object indicates the actual status of
this launch table entry.  The smLaunchOperStatus object
may have the following values:

- `enabled\' indicates that the launch table entry is
  available and can be used to start scripts.

- `disabled\' indicates that the launch table entry can
  not be used to start scripts.

- `expired\' indicates that the launch table entry can
  not be used to start scripts and will disappear as
  soon as all smRunTable entries associated with this
  launch table entry have disappeared.

The value `enabled\' requires that the smLaunchRowStatus
object is active. The value `disabled\' requires that there
are no entries in the smRunTable associated with this
smLaunchTable entry.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchOperStatus.957', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchRunIndexNext', '988',
    '/smRunObjects/smLaunchEntry/smLaunchRunIndexNext',
    'This variable is used for creating rows in the smRunTable.
The value of this variable is a currently unused value
for smRunIndex, which can be written into the smLaunchStart
object associated with this row to launch a script.

The value returned when reading this variable must be unique
for the smLaunchOwner and smLaunchName associated with this
row. Subsequent attempts to read this variable must return
different values.

This variable will return the special value 0 if no new rows
can be created.

Note that the data type and the range of this object must be
consistent with the definition of smRunIndex.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchRunIndexNext.988', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchStorageType', '1012',
    '/smRunObjects/smLaunchEntry/smLaunchStorageType',
    'This object defines if this row is kept in volatile storage
and lost upon reboot or if this row is backed up by stable
storage.

The value of smLaunchStorageType is only meaningful if the
value of the corresponding RowStatus object is active.

If smLaunchStorageType has the value permanent(4), then all
objects whose MAX-ACCESS value is read-create must be
writable, with the exception of the smLaunchStorageType and
smLaunchRowStatus objects, which shall be read-only.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchStorageType.1012', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchRowStatus', '1031',
    '/smRunObjects/smLaunchEntry/smLaunchRowStatus',
    'A control that allows entries to be added and removed from
this table.

Attempts to `destroy\' a row or to set a row `notInService\'
while the smLaunchOperStatus is `enabled\' will result in
an inconsistentValue error.

Attempts to `destroy\' a row or to set a row `notInService\'
where the value of the smLaunchStorageType object is
`permanent\' or `readOnly\' will result in an
inconsistentValue error.

The value of this object has no effect on whether other
objects in this conceptual row can be modified.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchRowStatus.1031', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchError', '1052',
    '/smRunObjects/smLaunchEntry/smLaunchError',
    'This object contains a descriptive error message if an
attempt to launch a script fails. Implementations must reset
the error message to a zero-length string when a new attempt
to launch a script is started.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchError.1052', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchLastChange', '1064',
    '/smRunObjects/smLaunchEntry/smLaunchLastChange',
    'The date and time when this launch table entry was last
modified. The value \'0000000000000000\'H is returned if
the launch table entry has not yet been modified.

Note that a change of smLaunchStart, smLaunchControl,
smLaunchRunIndexNext, smLaunchRowExpireTime, or the
resetting of smLaunchError is not considered a change
of this launch table entry.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchLastChange.1064', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchRowExpireTime', '1080',
    '/smRunObjects/smLaunchEntry/smLaunchRowExpireTime',
    'The value of this object specifies how long this row remains
in the `enabled\' or `disabled\' operational state. The value
reported by this object ticks backwards. When the value
reaches 0, it stops ticking backward and the row is
deleted if there are no smRunTable entries associated with

this smLaunchTable entry. Otherwise, the smLaunchOperStatus
changes to `expired\' and the row deletion is deferred
until there are no smRunTable entries associated with this
smLaunchTable entry.

The smLaunchRowExpireTime will not tick backwards if it is
set to its maximum value (2147483647). In other words,
setting this object to its maximum value turns the timer
off.

The value of this object may be set in order to increase
or reduce the remaining time that the launch table entry
may be used. Setting the value to 0 will cause an immediate
row deletion or transition into the `expired\' operational
state.

It is not possible to set this object while the operational
status is `expired\'. Attempts to modify this object while
the operational status is `expired\' leads to an
inconsistentValue error.

Note that the timer ticks backwards independent of the
operational state of the launch table entry.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchRowExpireTime.1080', 
    'leaf', 
    '/smRunObjects/smLaunchEntry',
    '0',
    '1',
    'TimeInterval',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunEntry', '1122',
    '/smRunObjects/smRunEntry',
    'An entry describing a particular running or finished
script.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunEntry.1122', 
    'list', 
    '/smRunObjects',
    '0',
    '1',
    '',
    '',
    'smLaunchOwner smLaunchName smRunIndex smRunArgument smRunStartTime smRunEndTime smRunLifeTime smRunExpireTime smRunExitCode smRunResult smRunControl smRunState smRunError smRunResultTime smRunErrorTime',
    '',
    'smLaunchOwner smLaunchName smRunIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchOwner', '1130',
    '/smRunObjects/smRunEntry/smLaunchOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchOwner.1130', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchName', '1138',
    '/smRunObjects/smRunEntry/smLaunchName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchName.1138', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunIndex', '1147',
    '/smRunObjects/smRunEntry/smRunIndex',
    'The locally arbitrary, but unique identifier associated
with this running or finished script. This value must be
unique for all rows in the smRunTable with the same
smLaunchOwner and smLaunchName.

Note that the data type and the range of this object must
be consistent with the definition of smLaunchRunIndexNext
and smLaunchStart.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunIndex.1147', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunArgument', '1164',
    '/smRunObjects/smRunEntry/smRunArgument',
    'The argument supplied to the script when it started.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunArgument.1164', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunStartTime', '1173',
    '/smRunObjects/smRunEntry/smRunStartTime',
    'The date and time when the execution started. The value
\'0000000000000000\'H is returned if the script has not
started yet.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunStartTime.1173', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunEndTime', '1184',
    '/smRunObjects/smRunEntry/smRunEndTime',
    'The date and time when the execution terminated. The value
\'0000000000000000\'H is returned if the script has not
terminated yet.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunEndTime.1184', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunLifeTime', '1195',
    '/smRunObjects/smRunEntry/smRunLifeTime',
    'This object specifies how long the script can execute.
This object returns the remaining time that the script
may run. The object is initialized with the value of the
associated smLaunchLifeTime object and ticks backwards.
The script is aborted immediately when the value reaches 0.

The value of this object may be set in order to increase or
reduce the remaining time that the script may run. Setting
this value to 0 will abort script execution immediately,
and, if the value of smRunExpireTime is also 0, will remove
this entry from the smRunTable once it has terminated.

If smRunLifeTime is set to its maximum value (2147483647),
either by a set operation or by its initialization from the
smLaunchLifeTime object, then it will not tick backwards.
A running script with a maximum smRunLifeTime value will
thus never be terminated with a `lifeTimeExceeded\' exit
code.

The value of smRunLifeTime reflects the real-time execution
time as seen by the outside world. The value of this object
will always be 0 for a script that finished execution, that
is smRunState has the value `terminated\'.

The value of smRunLifeTime does not change while a script
is suspended, that is smRunState has the value `suspended\'.
Note that this does not affect set operations. It is legal
to modify smRunLifeTime via set operations while a script
is suspended.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunLifeTime.1195', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'TimeInterval',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunExpireTime', '1232',
    '/smRunObjects/smRunEntry/smRunExpireTime',
    'The value of this object specifies how long this row can
exist in the smRunTable after the script has terminated.
This object returns the remaining time that the row may
exist before it is aged out. The object is initialized with
the value of the associated smLaunchExpireTime object and
ticks backwards. The entry in the smRunTable is destroyed
when the value reaches 0 and the smRunState has the value
`terminated\'.

The value of this object may be set in order to increase or
reduce the remaining time that the row may exist.  Setting
the value to 0 will destroy this entry as soon as the
smRunState has the value `terminated\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunExpireTime.1232', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'TimeInterval',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunExitCode', '1253',
    '/smRunObjects/smRunEntry/smRunExitCode',
    'The value of this object indicates the reason why a
script finished execution. The smRunExitCode code may have
one of the following values:

- `noError\', which indicates that the script completed
   successfully without errors;

- `halted\', which indicates that the script was halted
   by a request from an authorized manager;

- `lifeTimeExceeded\', which indicates that the script
   exited because a time limit was exceeded;

- `noResourcesLeft\', which indicates that the script
   exited because it ran out of resources (e.g. memory);

- `languageError\', which indicates that the script exited
   because of a language error (e.g. a syntax error in an
   interpreted language);

- `runtimeError\', which indicates that the script exited
   due to a runtime error (e.g. a division by zero);

- `invalidArgument\', which indicates that the script could
   not be run because of invalid script arguments;

- `securityViolation\', which indicates that the script
   exited due to a security violation;

- `genericError\', which indicates that the script exited
   for an unspecified reason.

If the script has not yet begun running, or is currently
running, the value will be `noError\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunExitCode.1253', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunResult', '1305',
    '/smRunObjects/smRunEntry/smRunResult',
    'The result value produced by the running script. Note that
the result may change while the script is executing.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunResult.1305', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunControl', '1315',
    '/smRunObjects/smRunEntry/smRunControl',
    'The value of this object indicates the desired status of the
script execution defined by this row.

Setting this object to `abort\' will abort execution if the

value of smRunState is `initializing\', `executing\',
`suspending\', `suspended\' or `resuming\'. Setting this object
to `abort\' when the value of smRunState is `aborting\' or
`terminated\', or if the implementation can determine that
the attempt to abort the execution would fail, will result
in an inconsistentValue error.

Setting this object to `suspend\' will suspend execution
if the value of smRunState is `executing\'. Setting this
object to `suspend\' will cause an inconsistentValue error
if the value of smRunState is not `executing\' or if the
implementation can determine that the attempt to suspend
the execution would fail.

Setting this object to `resume\' will resume execution
if the value of smRunState is `suspending\' or
`suspended\'. Setting this object to `resume\' will cause an
inconsistentValue error if the value of smRunState is
not `suspended\' or if the implementation can determine
that the attempt to resume the execution would fail.

Setting this object to nop(4) has no effect.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunControl.1315', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunState', '1355',
    '/smRunObjects/smRunEntry/smRunState',
    'The value of this object indicates the script\'s execution
state. If the script has been invoked but has not yet
begun execution, the value will be `initializing\'. If the
script is running, the value will be `executing\'.

A running script which received a request to suspend
execution first transitions into a temporary `suspending\'
state.  The temporary `suspending\' state changes to
`suspended\' when the script has actually been suspended. The
temporary `suspending\' state changes back to `executing\' if

the attempt to suspend the running script fails.

A suspended script which received a request to resume
execution first transitions into a temporary `resuming\'
state. The temporary `resuming\' state changes to `running\'
when the script has actually been resumed. The temporary
`resuming\' state changes back to `suspended\' if the attempt
to resume the suspended script fails.

A script which received a request to abort execution but
which is still running first transitions into a temporary
`aborting\' state.

A script which has finished its execution is `terminated\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunState.1355', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunError', '1395',
    '/smRunObjects/smRunEntry/smRunError',
    'This object contains a descriptive error message if the
script startup or execution raised an abnormal condition.
An implementation must store a descriptive error message
in this object if the script exits with the smRunExitCode
`genericError\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunError.1395', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunResultTime', '1408',
    '/smRunObjects/smRunEntry/smRunResultTime',
    'The date and time when the smRunResult was last updated.
The value \'0000000000000000\'H is returned if smRunResult
has not yet been updated after the creation of this
smRunTable entry.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunResultTime.1408', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunErrorTime', '1420',
    '/smRunObjects/smRunEntry/smRunErrorTime',
    'The date and time when the smRunError was last updated.
The value \'0000000000000000\'H is returned if smRunError

has not yet been updated after the creation of this
smRunTable entry.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunErrorTime.1420', 
    'leaf', 
    '/smRunObjects/smRunEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptAbort', '1436',
    '/smScriptAbort',
    'This notification is generated whenever a running script
terminates with an smRunExitCode unequal to `noError\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptAbort.1436', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'smScriptAbort-smRunExitCode smScriptAbort-smRunEndTime smScriptAbort-smRunError',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptAbort-smRunExitCode', '1442',
    '/smScriptAbort/smScriptAbort-smRunExitCode',
    '',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptAbort-smRunExitCode.1442', 
    'container', 
    '/smScriptAbort',
    '0',
    '0',
    '',
    '',
    'smLaunchOwner smLaunchName smRunIndex smRunExitCode',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchOwner', '1443',
    '/smScriptAbort/smScriptAbort-smRunExitCode/smLaunchOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchOwner.1443', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunExitCode',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchName', '1451',
    '/smScriptAbort/smScriptAbort-smRunExitCode/smLaunchName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchName.1451', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunExitCode',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunIndex', '1459',
    '/smScriptAbort/smScriptAbort-smRunExitCode/smRunIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunIndex.1459', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunExitCode',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunExitCode', '1467',
    '/smScriptAbort/smScriptAbort-smRunExitCode/smRunExitCode',
    'The value of this object indicates the reason why a
script finished execution. The smRunExitCode code may have
one of the following values:

- `noError\', which indicates that the script completed
   successfully without errors;

- `halted\', which indicates that the script was halted
   by a request from an authorized manager;

- `lifeTimeExceeded\', which indicates that the script
   exited because a time limit was exceeded;

- `noResourcesLeft\', which indicates that the script
   exited because it ran out of resources (e.g. memory);

- `languageError\', which indicates that the script exited
   because of a language error (e.g. a syntax error in an
   interpreted language);

- `runtimeError\', which indicates that the script exited
   due to a runtime error (e.g. a division by zero);

- `invalidArgument\', which indicates that the script could
   not be run because of invalid script arguments;

- `securityViolation\', which indicates that the script
   exited due to a security violation;

- `genericError\', which indicates that the script exited
   for an unspecified reason.

If the script has not yet begun running, or is currently
running, the value will be `noError\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunExitCode.1467', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunExitCode',
    '0',
    '0',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptAbort-smRunEndTime', '1520',
    '/smScriptAbort/smScriptAbort-smRunEndTime',
    '',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptAbort-smRunEndTime.1520', 
    'container', 
    '/smScriptAbort',
    '0',
    '0',
    '',
    '',
    'smLaunchOwner smLaunchName smRunIndex smRunEndTime',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchOwner', '1521',
    '/smScriptAbort/smScriptAbort-smRunEndTime/smLaunchOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchOwner.1521', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunEndTime',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchName', '1529',
    '/smScriptAbort/smScriptAbort-smRunEndTime/smLaunchName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchName.1529', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunEndTime',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunIndex', '1537',
    '/smScriptAbort/smScriptAbort-smRunEndTime/smRunIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunIndex.1537', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunEndTime',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunEndTime', '1545',
    '/smScriptAbort/smScriptAbort-smRunEndTime/smRunEndTime',
    'The date and time when the execution terminated. The value
\'0000000000000000\'H is returned if the script has not
terminated yet.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunEndTime.1545', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunEndTime',
    '0',
    '0',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptAbort-smRunError', '1557',
    '/smScriptAbort/smScriptAbort-smRunError',
    '',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptAbort-smRunError.1557', 
    'container', 
    '/smScriptAbort',
    '0',
    '0',
    '',
    '',
    'smLaunchOwner smLaunchName smRunIndex smRunError',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchOwner', '1558',
    '/smScriptAbort/smScriptAbort-smRunError/smLaunchOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchOwner.1558', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunError',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchName', '1566',
    '/smScriptAbort/smScriptAbort-smRunError/smLaunchName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchName.1566', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunError',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunIndex', '1574',
    '/smScriptAbort/smScriptAbort-smRunError/smRunIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunIndex.1574', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunError',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunError', '1582',
    '/smScriptAbort/smScriptAbort-smRunError/smRunError',
    'This object contains a descriptive error message if the
script startup or execution raised an abnormal condition.
An implementation must store a descriptive error message
in this object if the script exits with the smRunExitCode
`genericError\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunError.1582', 
    'leaf', 
    '/smScriptAbort/smScriptAbort-smRunError',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptResult', '1598',
    '/smScriptResult',
    'This notification can be used by scripts to notify other
management applications about results produced by the
script.

This notification is not automatically generated by the
Script MIB implementation. It is the responsibility of
the executing script to emit this notification where it
is appropriate to do so.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptResult.1598', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'smScriptResult-smRunResult',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptResult-smRunResult', '1610',
    '/smScriptResult/smScriptResult-smRunResult',
    '',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptResult-smRunResult.1610', 
    'container', 
    '/smScriptResult',
    '0',
    '0',
    '',
    '',
    'smLaunchOwner smLaunchName smRunIndex smRunResult',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchOwner', '1611',
    '/smScriptResult/smScriptResult-smRunResult/smLaunchOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchOwner.1611', 
    'leaf', 
    '/smScriptResult/smScriptResult-smRunResult',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchName', '1619',
    '/smScriptResult/smScriptResult-smRunResult/smLaunchName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchName.1619', 
    'leaf', 
    '/smScriptResult/smScriptResult-smRunResult',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunIndex', '1627',
    '/smScriptResult/smScriptResult-smRunResult/smRunIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunIndex.1627', 
    'leaf', 
    '/smScriptResult/smScriptResult-smRunResult',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunResult', '1635',
    '/smScriptResult/smScriptResult-smRunResult/smRunResult',
    'The result value produced by the running script. Note that
the result may change while the script is executing.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunResult.1635', 
    'leaf', 
    '/smScriptResult/smScriptResult-smRunResult',
    '0',
    '0',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptException', '1648',
    '/smScriptException',
    'This notification can be used by scripts to notify other
management applications about script errors.

This notification is not automatically generated by the
Script MIB implementation. It is the responsibility of
the executing script or the runtime system to emit this
notification where it is appropriate to do so.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptException.1648', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'smScriptException-smRunError',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smScriptException-smRunError', '1659',
    '/smScriptException/smScriptException-smRunError',
    '',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smScriptException-smRunError.1659', 
    'container', 
    '/smScriptException',
    '0',
    '0',
    '',
    '',
    'smLaunchOwner smLaunchName smRunIndex smRunError',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchOwner', '1660',
    '/smScriptException/smScriptException-smRunError/smLaunchOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchOwner.1660', 
    'leaf', 
    '/smScriptException/smScriptException-smRunError',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smLaunchName', '1668',
    '/smScriptException/smScriptException-smRunError/smLaunchName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smLaunchName.1668', 
    'leaf', 
    '/smScriptException/smScriptException-smRunError',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunIndex', '1676',
    '/smScriptException/smScriptException-smRunError/smRunIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunIndex.1676', 
    'leaf', 
    '/smScriptException/smScriptException-smRunError',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCRIPT-MIB', 'DISMAN-SCRIPT-MIB', '2001-08-21', 'smRunError', '1684',
    '/smScriptException/smScriptException-smRunError/smRunError',
    'This object contains a descriptive error message if the
script startup or execution raised an abnormal condition.
An implementation must store a descriptive error message
in this object if the script exits with the smRunExitCode
`genericError\'.',
    '',
    '/modules/DISMAN-SCRIPT-MIB/2001-08-21#smRunError.1684', 
    'leaf', 
    '/smScriptException/smScriptException-smRunError',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/EtherLike-MIB.yang
# module: EtherLike-MIB
# version: 2003-09-19
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'EtherLike-MIB');

INSERT INTO ncmodule VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'etherlike-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:EtherLike-MIB',
    'IETF Ethernet Interfaces and Hub MIB
Working Group',
    'The MIB module to describe generic objects for
ethernet-like network interfaces.

The following reference is used throughout thi...',
    'The MIB module to describe generic objects for
ethernet-like network interfaces.

The following reference is used throughout this
MIB module:

[IEEE 802.3 Std] refers to:
   IEEE Std 802.3, 2002 Edition: \'IEEE Standard

   for Information technology -
   Telecommunications and information exchange
   between systems - Local and metropolitan
   area networks - Specific requirements -
   Part 3: Carrier sense multiple access with
   collision detection (CSMA/CD) access method
   and physical layer specifications\', as
   amended by IEEE Std 802.3ae-2002:
   \'Amendment: Media Access Control (MAC)
   Parameters, Physical Layer, and Management
   Parameters for 10 Gb/s Operation\', August,
   2002.

Of particular interest is Clause 30, \'10 Mb/s,
100 Mb/s, 1000 Mb/s, and 10 Gb/s Management\'.

Copyright (C) The Internet Society (2003).  This
version of this MIB module is part of RFC 3635;
see the RFC itself for full legal notices.',
    '',
    'WG E-mail: hubmib@ietf.org
To subscribe: hubmib-request@ietf.org

       Chair: Dan Romascanu
      Postal: Avaya Inc.
	      Atidum Technology Park, Bldg. 3
	      Tel Aviv 61131
	      Israel
	 Tel: +972 3 645 8414
      E-mail: dromasca@avaya.com

     Editor: John Flick
     Postal: Hewlett-Packard Company
	     8000 Foothills Blvd. M/S 5557
	     Roseville, CA 95747-5557
	     USA
	Tel: +1 916 785 4018
	Fax: +1 916 785 1199
     E-mail: johnf@rose.hp.com',
    'Updated to include support for 10 Gb/sec
interfaces.  This resulted in the following
revisions:

- Updated dot3StatsAlignmentErrors and
  dot3StatsSymbolErrors DESCRIPTIONs to
  reflect behaviour at 10 Gb/s
- Added dot3StatsRateControlAbility and
  dot3RateControlStatus for management
  of the Rate Control function in 10 Gb/s
  WAN applications
- Added 64-bit versions of all counters
  that are used on high-speed ethernet
  interfaces
- Added object groups to contain the new
  objects
- Deprecated etherStatsBaseGroup and
  split into etherStatsBaseGroup2 and
  etherStatsHalfDuplexGroup, so that
  interfaces which can only operate at
  full-duplex do not need to implement
  half-duplex-only statistics
- Deprecated dot3Compliance and replaced
  it with dot3Compliance2, which includes
  the compliance information for the new
  object groups

In addition, the dot3Tests and dot3Errors
object identities have been deprecated,
since there is no longer a standard method
for using them.

This version published as RFC 3635.',
    '/xsd/EtherLike-MIB_2003-09-19.xsd',
    '/modules/EtherLike-MIB/2003-09-19', 
    '/src/EtherLike-MIB_2003-09-19.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/EtherLike-MIB.yang',
    'EtherLike-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3', '133',
    '/dot3',
    '',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3.133', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'dot3StatsEntry dot3CollEntry dot3ControlEntry dot3PauseEntry dot3HCStatsEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsEntry', '138',
    '/dot3/dot3StatsEntry',
    'Statistics for a particular interface to an
ethernet-like medium.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsEntry.138', 
    'list', 
    '/dot3',
    '0',
    '1',
    '',
    '',
    'dot3StatsIndex dot3StatsAlignmentErrors dot3StatsFCSErrors dot3StatsSingleCollisionFrames dot3StatsMultipleCollisionFrames dot3StatsSQETestErrors dot3StatsDeferredTransmissions dot3StatsLateCollisions dot3StatsExcessiveCollisions dot3StatsInternalMacTransmitErrors dot3StatsCarrierSenseErrors dot3StatsFrameTooLongs dot3StatsInternalMacReceiveErrors dot3StatsEtherChipSet dot3StatsSymbolErrors dot3StatsDuplexStatus dot3StatsRateControlAbility dot3StatsRateControlStatus',
    '',
    'dot3StatsIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsIndex', '147',
    '/dot3/dot3StatsEntry/dot3StatsIndex',
    'An index value that uniquely identifies an
interface to an ethernet-like medium.  The
interface identified by a particular value of
this index is the same interface as identified
by the same value of ifIndex.',
    'RFC 2863, ifIndex',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsIndex.147', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsAlignmentErrors', '161',
    '/dot3/dot3StatsEntry/dot3StatsAlignmentErrors',
    'A count of frames received on a particular
interface that are not an integral number of
octets in length and do not pass the FCS check.

The count represented by an instance of this
object is incremented when the alignmentError
status is returned by the MAC service to the
LLC (or other MAC user). Received frames for
which multiple error conditions pertain are,
according to the conventions of IEEE 802.3
Layer Management, counted exclusively according

to the error status presented to the LLC.

This counter does not increment for group
encoding schemes greater than 4 bits per group.

For interfaces operating at 10 Gb/s, this
counter can roll over in less than 5 minutes if
it is incrementing at its maximum rate.  Since
that amount of time could be less than a
management station\'s poll cycle time, in order
to avoid a loss of information, a management
station is advised to poll the
dot3HCStatsAlignmentErrors object for 10 Gb/s
or faster interfaces.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.7,
aAlignmentErrors',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsAlignmentErrors.161', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsFCSErrors', '202',
    '/dot3/dot3StatsEntry/dot3StatsFCSErrors',
    'A count of frames received on a particular
interface that are an integral number of octets
in length but do not pass the FCS check.  This
count does not include frames received with
frame-too-long or frame-too-short error.

The count represented by an instance of this
object is incremented when the frameCheckError
status is returned by the MAC service to the
LLC (or other MAC user). Received frames for
which multiple error conditions pertain are,
according to the conventions of IEEE 802.3
Layer Management, counted exclusively according
to the error status presented to the LLC.

Note:  Coding errors detected by the physical
layer for speeds above 10 Mb/s will cause the
frame to fail the FCS check.

For interfaces operating at 10 Gb/s, this
counter can roll over in less than 5 minutes if

it is incrementing at its maximum rate.  Since
that amount of time could be less than a
management station\'s poll cycle time, in order
to avoid a loss of information, a management
station is advised to poll the
dot3HCStatsFCSErrors object for 10 Gb/s or
faster interfaces.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.6,
aFrameCheckSequenceErrors.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsFCSErrors.202', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsSingleCollisionFrames', '246',
    '/dot3/dot3StatsEntry/dot3StatsSingleCollisionFrames',
    'A count of frames that are involved in a single
collision, and are subsequently transmitted
successfully.

A frame that is counted by an instance of this
object is also counted by the corresponding
instance of either the ifOutUcastPkts,
ifOutMulticastPkts, or ifOutBroadcastPkts,
and is not counted by the corresponding
instance of the dot3StatsMultipleCollisionFrames
object.

This counter does not increment when the
interface is operating in full-duplex mode.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.3,
aSingleCollisionFrames.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsSingleCollisionFrames.246', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsMultipleCollisionFrames', '275',
    '/dot3/dot3StatsEntry/dot3StatsMultipleCollisionFrames',
    'A count of frames that are involved in more

than one collision and are subsequently
transmitted successfully.

A frame that is counted by an instance of this
object is also counted by the corresponding
instance of either the ifOutUcastPkts,
ifOutMulticastPkts, or ifOutBroadcastPkts,
and is not counted by the corresponding
instance of the dot3StatsSingleCollisionFrames
object.

This counter does not increment when the
interface is operating in full-duplex mode.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.4,
aMultipleCollisionFrames.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsMultipleCollisionFrames.275', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsSQETestErrors', '305',
    '/dot3/dot3StatsEntry/dot3StatsSQETestErrors',
    'A count of times that the SQE TEST ERROR
is received on a particular interface. The
SQE TEST ERROR is set in accordance with the
rules for verification of the SQE detection
mechanism in the PLS Carrier Sense Function as
described in IEEE Std. 802.3, 2000 Edition,
section 7.2.4.6.

This counter does not increment on interfaces
operating at speeds greater than 10 Mb/s, or on
interfaces operating in full-duplex mode.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 7.2.4.6, also 30.3.2.1.4,
aSQETestErrors.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsSQETestErrors.305', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsDeferredTransmissions', '331',
    '/dot3/dot3StatsEntry/dot3StatsDeferredTransmissions',
    'A count of frames for which the first
transmission attempt on a particular interface
is delayed because the medium is busy.

The count represented by an instance of this
object does not include frames involved in
collisions.

This counter does not increment when the
interface is operating in full-duplex mode.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.9,
aFramesWithDeferredXmissions.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsDeferredTransmissions.331', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsLateCollisions', '356',
    '/dot3/dot3StatsEntry/dot3StatsLateCollisions',
    'The number of times that a collision is
detected on a particular interface later than
one slotTime into the transmission of a packet.

A (late) collision included in a count
represented by an instance of this object is
also considered as a (generic) collision for
purposes of other collision-related
statistics.

This counter does not increment when the
interface is operating in full-duplex mode.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.10,
aLateCollisions.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsLateCollisions.356', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsExcessiveCollisions', '383',
    '/dot3/dot3StatsEntry/dot3StatsExcessiveCollisions',
    'A count of frames for which transmission on a
particular interface fails due to excessive
collisions.

This counter does not increment when the
interface is operating in full-duplex mode.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.11,
aFramesAbortedDueToXSColls.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsExcessiveCollisions.383', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsInternalMacTransmitErrors', '404',
    '/dot3/dot3StatsEntry/dot3StatsInternalMacTransmitErrors',
    'A count of frames for which transmission on a
particular interface fails due to an internal
MAC sublayer transmit error. A frame is only
counted by an instance of this object if it is
not counted by the corresponding instance of
either the dot3StatsLateCollisions object, the
dot3StatsExcessiveCollisions object, or the
dot3StatsCarrierSenseErrors object.

The precise meaning of the count represented by
an instance of this object is implementation-
specific.  In particular, an instance of this
object may represent a count of transmission
errors on a particular interface that are not
otherwise counted.

For interfaces operating at 10 Gb/s, this
counter can roll over in less than 5 minutes if
it is incrementing at its maximum rate.  Since
that amount of time could be less than a
management station\'s poll cycle time, in order
to avoid a loss of information, a management
station is advised to poll the
dot3HCStatsInternalMacTransmitErrors object for
10 Gb/s or faster interfaces.

Discontinuities in the value of this counter can

occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.12,
aFramesLostDueToIntMACXmitError.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsInternalMacTransmitErrors.404', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsCarrierSenseErrors', '445',
    '/dot3/dot3StatsEntry/dot3StatsCarrierSenseErrors',
    'The number of times that the carrier sense
condition was lost or never asserted when
attempting to transmit a frame on a particular
interface.

The count represented by an instance of this
object is incremented at most once per
transmission attempt, even if the carrier sense
condition fluctuates during a transmission
attempt.

This counter does not increment when the
interface is operating in full-duplex mode.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.13,
aCarrierSenseErrors.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsCarrierSenseErrors.445', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsFrameTooLongs', '473',
    '/dot3/dot3StatsEntry/dot3StatsFrameTooLongs',
    'A count of frames received on a particular
interface that exceed the maximum permitted
frame size.

The count represented by an instance of this
object is incremented when the frameTooLong
status is returned by the MAC service to the
LLC (or other MAC user). Received frames for
which multiple error conditions pertain are,
according to the conventions of IEEE 802.3
Layer Management, counted exclusively according
to the error status presented to the LLC.

For interfaces operating at 10 Gb/s, this
counter can roll over in less than 80 minutes if
it is incrementing at its maximum rate.  Since
that amount of time could be less than a
management station\'s poll cycle time, in order
to avoid a loss of information, a management
station is advised to poll the
dot3HCStatsFrameTooLongs object for 10 Gb/s
or faster interfaces.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.25,
aFrameTooLongErrors.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsFrameTooLongs.473', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsInternalMacReceiveErrors', '510',
    '/dot3/dot3StatsEntry/dot3StatsInternalMacReceiveErrors',
    'A count of frames for which reception on a
particular interface fails due to an internal
MAC sublayer receive error. A frame is only
counted by an instance of this object if it is
not counted by the corresponding instance of
either the dot3StatsFrameTooLongs object, the
dot3StatsAlignmentErrors object, or the
dot3StatsFCSErrors object.

The precise meaning of the count represented by
an instance of this object is implementation-
specific.  In particular, an instance of this
object may represent a count of receive errors
on a particular interface that are not
otherwise counted.

For interfaces operating at 10 Gb/s, this
counter can roll over in less than 5 minutes if

it is incrementing at its maximum rate.  Since
that amount of time could be less than a
management station\'s poll cycle time, in order
to avoid a loss of information, a management
station is advised to poll the
dot3HCStatsInternalMacReceiveErrors object for
10 Gb/s or faster interfaces.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.15,
aFramesLostDueToIntMACRcvError.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsInternalMacReceiveErrors.510', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsEtherChipSet', '551',
    '/dot3/dot3StatsEntry/dot3StatsEtherChipSet',
    '******** THIS OBJECT IS DEPRECATED ********

This object contains an OBJECT IDENTIFIER
which identifies the chipset used to
realize the interface. Ethernet-like
interfaces are typically built out of
several different chips. The MIB implementor
is presented with a decision of which chip
to identify via this object. The implementor
should identify the chip which is usually
called the Medium Access Control chip.
If no such chip is easily identifiable,
the implementor should identify the chip
which actually gathers the transmit
and receive statistics and error
indications. This would allow a
manager station to correlate the
statistics and the chip generating
them, giving it the ability to take
into account any known anomalies
in the chip.

This object has been deprecated.  Implementation
feedback indicates that it is of limited use for
debugging network problems in the field, and
the administrative overhead involved in
maintaining a registry of chipset OIDs is not
justified.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsEtherChipSet.551', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsSymbolErrors', '587',
    '/dot3/dot3StatsEntry/dot3StatsSymbolErrors',
    'For an interface operating at 100 Mb/s, the
number of times there was an invalid data symbol
when a valid carrier was present.

For an interface operating in half-duplex mode
at 1000 Mb/s, the number of times the receiving
media is non-idle (a carrier event) for a period
of time equal to or greater than slotTime, and
during which there was at least one occurrence
of an event that causes the PHY to indicate
\'Data reception error\' or \'carrier extend error\'
on the GMII.

For an interface operating in full-duplex mode
at 1000 Mb/s, the number of times the receiving
media is non-idle (a carrier event) for a period
of time equal to or greater than minFrameSize,
and during which there was at least one
occurrence of an event that causes the PHY to
indicate \'Data reception error\' on the GMII.

For an interface operating at 10 Gb/s, the
number of times the receiving media is non-idle
(a carrier event) for a period of time equal to
or greater than minFrameSize, and during which
there was at least one occurrence of an event
that causes the PHY to indicate \'Receive Error\'
on the XGMII.

The count represented by an instance of this
object is incremented at most once per carrier
event, even if multiple symbol errors occur
during the carrier event.  This count does
not increment if a collision is present.

This counter does not increment when the
interface is operating at 10 Mb/s.

For interfaces operating at 10 Gb/s, this
counter can roll over in less than 5 minutes if
it is incrementing at its maximum rate.  Since
that amount of time could be less than a

management station\'s poll cycle time, in order
to avoid a loss of information, a management
station is advised to poll the
dot3HCStatsSymbolErrors object for 10 Gb/s
or faster interfaces.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.2.1.5,
aSymbolErrorDuringCarrier.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsSymbolErrors.587', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsDuplexStatus', '650',
    '/dot3/dot3StatsEntry/dot3StatsDuplexStatus',
    'The current mode of operation of the MAC
entity.  \'unknown\' indicates that the current
duplex mode could not be determined.

Management control of the duplex mode is
accomplished through the MAU MIB.  When
an interface does not support autonegotiation,
or when autonegotiation is not enabled, the
duplex mode is controlled using
ifMauDefaultType.  When autonegotiation is
supported and enabled, duplex mode is controlled
using ifMauAutoNegAdvertisedBits.  In either
case, the currently operating duplex mode is
reflected both in this object and in ifMauType.

Note that this object provides redundant
information with ifMauType.  Normally, redundant
objects are discouraged.  However, in this
instance, it allows a management application to
determine the duplex status of an interface
without having to know every possible value of
ifMauType.  This was felt to be sufficiently
valuable to justify the redundancy.',
    '[IEEE 802.3 Std.], 30.3.1.1.32,
aDuplexStatus.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsDuplexStatus.650', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsRateControlAbility', '687',
    '/dot3/dot3StatsEntry/dot3StatsRateControlAbility',
    '\'true\' for interfaces operating at speeds above
1000 Mb/s that support Rate Control through
lowering the average data rate of the MAC
sublayer, with frame granularity, and \'false\'
otherwise.',
    '[IEEE 802.3 Std.], 30.3.1.1.33,
aRateControlAbility.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsRateControlAbility.687', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsRateControlStatus', '702',
    '/dot3/dot3StatsEntry/dot3StatsRateControlStatus',
    'The current Rate Control mode of operation of
the MAC sublayer of this interface.',
    '[IEEE 802.3 Std.], 30.3.1.1.34,
aRateControlStatus.',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsRateControlStatus.702', 
    'leaf', 
    '/dot3/dot3StatsEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3CollEntry', '722',
    '/dot3/dot3CollEntry',
    'A cell in the histogram of per-frame
collisions for a particular interface.  An

instance of this object represents the
frequency of individual MAC frames for which
the transmission (successful or otherwise) on a
particular interface is accompanied by a
particular number of media collisions.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3CollEntry.722', 
    'list', 
    '/dot3',
    '0',
    '1',
    '',
    '',
    'ifIndex dot3CollCount dot3CollFrequencies',
    '',
    'ifIndex dot3CollCount',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'ifIndex', '736',
    '/dot3/dot3CollEntry/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#ifIndex.736', 
    'leaf', 
    '/dot3/dot3CollEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3CollCount', '745',
    '/dot3/dot3CollEntry/dot3CollCount',
    'The number of per-frame media collisions for
which a particular collision histogram cell
represents the frequency on a particular
interface.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3CollCount.745', 
    'leaf', 
    '/dot3/dot3CollEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3CollFrequencies', '758',
    '/dot3/dot3CollEntry/dot3CollFrequencies',
    'A count of individual MAC frames for which the
transmission (successful or otherwise) on a
particular interface occurs after the
frame has experienced exactly the number
of collisions in the associated
dot3CollCount object.

For example, a frame which is transmitted
on interface 77 after experiencing
exactly 4 collisions would be indicated
by incrementing only dot3CollFrequencies.77.4.
No other instance of dot3CollFrequencies would
be incremented in this example.

This counter does not increment when the
interface is operating in full-duplex mode.

Discontinuities in the value of this counter can

occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3CollFrequencies.758', 
    'leaf', 
    '/dot3/dot3CollEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3ControlEntry', '793',
    '/dot3/dot3ControlEntry',
    'An entry in the table, containing information
about the MAC Control sublayer on a single
ethernet-like interface.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3ControlEntry.793', 
    'list', 
    '/dot3',
    '0',
    '1',
    '',
    '',
    'dot3StatsIndex dot3ControlFunctionsSupported dot3ControlInUnknownOpcodes dot3HCControlInUnknownOpcodes',
    '',
    'dot3StatsIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsIndex', '802',
    '/dot3/dot3ControlEntry/dot3StatsIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsIndex.802', 
    'leaf', 
    '/dot3/dot3ControlEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3ControlFunctionsSupported', '811',
    '/dot3/dot3ControlEntry/dot3ControlFunctionsSupported',
    'A list of the possible MAC Control functions
implemented for this interface.',
    '[IEEE 802.3 Std.], 30.3.3.2,
aMACControlFunctionsSupported.',
    '/modules/EtherLike-MIB/2003-09-19#dot3ControlFunctionsSupported.811', 
    'leaf', 
    '/dot3/dot3ControlEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3ControlInUnknownOpcodes', '825',
    '/dot3/dot3ControlEntry/dot3ControlInUnknownOpcodes',
    'A count of MAC Control frames received on this
interface that contain an opcode that is not
supported by this device.

For interfaces operating at 10 Gb/s, this
counter can roll over in less than 5 minutes if
it is incrementing at its maximum rate.  Since
that amount of time could be less than a
management station\'s poll cycle time, in order
to avoid a loss of information, a management
station is advised to poll the
dot3HCControlInUnknownOpcodes object for 10 Gb/s
or faster interfaces.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.3.5,
aUnsupportedOpcodesReceived',
    '/modules/EtherLike-MIB/2003-09-19#dot3ControlInUnknownOpcodes.825', 
    'leaf', 
    '/dot3/dot3ControlEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCControlInUnknownOpcodes', '853',
    '/dot3/dot3ControlEntry/dot3HCControlInUnknownOpcodes',
    'A count of MAC Control frames received on this
interface that contain an opcode that is not
supported by this device.

This counter is a 64 bit version of
dot3ControlInUnknownOpcodes.  It should be used
on interfaces operating at 10 Gb/s or faster.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.3.5,
aUnsupportedOpcodesReceived',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCControlInUnknownOpcodes.853', 
    'leaf', 
    '/dot3/dot3ControlEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3PauseEntry', '879',
    '/dot3/dot3PauseEntry',
    'An entry in the table, containing information
about the MAC Control PAUSE function on a single
ethernet-like interface.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3PauseEntry.879', 
    'list', 
    '/dot3',
    '0',
    '1',
    '',
    '',
    'dot3StatsIndex dot3PauseAdminMode dot3PauseOperMode dot3InPauseFrames dot3OutPauseFrames dot3HCInPauseFrames dot3HCOutPauseFrames',
    '',
    'dot3StatsIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsIndex', '888',
    '/dot3/dot3PauseEntry/dot3StatsIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsIndex.888', 
    'leaf', 
    '/dot3/dot3PauseEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3PauseAdminMode', '897',
    '/dot3/dot3PauseEntry/dot3PauseAdminMode',
    'This object is used to configure the default
administrative PAUSE mode for this interface.

This object represents the
administratively-configured PAUSE mode for this
interface.  If auto-negotiation is not enabled
or is not implemented for the active MAU
attached to this interface, the value of this
object determines the operational PAUSE mode
of the interface whenever it is operating in
full-duplex mode.  In this case, a set to this
object will force the interface into the
specified mode.

If auto-negotiation is implemented and enabled
for the MAU attached to this interface, the
PAUSE mode for this interface is determined by
auto-negotiation, and the value of this object
denotes the mode to which the interface will
automatically revert if/when auto-negotiation is
later disabled.  Note that when auto-negotiation
is running, administrative control of the PAUSE
mode may be accomplished using the
ifMauAutoNegCapAdvertisedBits object in the
MAU-MIB.

Note that the value of this object is ignored
when the interface is not operating in
full-duplex mode.

An attempt to set this object to
\'enabledXmit(2)\' or \'enabledRcv(3)\' will fail
on interfaces that do not support operation
at greater than 100 Mb/s.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3PauseAdminMode.897', 
    'leaf', 
    '/dot3/dot3PauseEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3PauseOperMode', '943',
    '/dot3/dot3PauseEntry/dot3PauseOperMode',
    'This object reflects the PAUSE mode currently

in use on this interface, as determined by
either (1) the result of the auto-negotiation
function or (2) if auto-negotiation is not
enabled or is not implemented for the active MAU
attached to this interface, by the value of
dot3PauseAdminMode.  Interfaces operating at
100 Mb/s or less will never return
\'enabledXmit(2)\' or \'enabledRcv(3)\'.  Interfaces
operating in half-duplex mode will always return
\'disabled(1)\'.  Interfaces on which
auto-negotiation is enabled but not yet
completed should return the value
\'disabled(1)\'.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3PauseOperMode.943', 
    'leaf', 
    '/dot3/dot3PauseEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3InPauseFrames', '970',
    '/dot3/dot3PauseEntry/dot3InPauseFrames',
    'A count of MAC Control frames received on this
interface with an opcode indicating the PAUSE
operation.

This counter does not increment when the
interface is operating in half-duplex mode.

For interfaces operating at 10 Gb/s, this
counter can roll over in less than 5 minutes if
it is incrementing at its maximum rate.  Since
that amount of time could be less than a
management station\'s poll cycle time, in order
to avoid a loss of information, a management
station is advised to poll the
dot3HCInPauseFrames object for 10 Gb/s or
faster interfaces.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.4.3,
aPAUSEMACCtrlFramesReceived.',
    '/modules/EtherLike-MIB/2003-09-19#dot3InPauseFrames.970', 
    'leaf', 
    '/dot3/dot3PauseEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3OutPauseFrames', '1001',
    '/dot3/dot3PauseEntry/dot3OutPauseFrames',
    'A count of MAC Control frames transmitted on
this interface with an opcode indicating the
PAUSE operation.

This counter does not increment when the
interface is operating in half-duplex mode.

For interfaces operating at 10 Gb/s, this
counter can roll over in less than 5 minutes if
it is incrementing at its maximum rate.  Since
that amount of time could be less than a
management station\'s poll cycle time, in order
to avoid a loss of information, a management
station is advised to poll the
dot3HCOutPauseFrames object for 10 Gb/s or
faster interfaces.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.4.2,
aPAUSEMACCtrlFramesTransmitted.',
    '/modules/EtherLike-MIB/2003-09-19#dot3OutPauseFrames.1001', 
    'leaf', 
    '/dot3/dot3PauseEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCInPauseFrames', '1032',
    '/dot3/dot3PauseEntry/dot3HCInPauseFrames',
    'A count of MAC Control frames received on this
interface with an opcode indicating the PAUSE
operation.

This counter does not increment when the
interface is operating in half-duplex mode.

This counter is a 64 bit version of
dot3InPauseFrames.  It should be used on
interfaces operating at 10 Gb/s or faster.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.4.3,
aPAUSEMACCtrlFramesReceived.',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCInPauseFrames.1032', 
    'leaf', 
    '/dot3/dot3PauseEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCOutPauseFrames', '1057',
    '/dot3/dot3PauseEntry/dot3HCOutPauseFrames',
    'A count of MAC Control frames transmitted on
this interface with an opcode indicating the
PAUSE operation.

This counter does not increment when the
interface is operating in half-duplex mode.

This counter is a 64 bit version of
dot3OutPauseFrames.  It should be used on
interfaces operating at 10 Gb/s or faster.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.4.2,
aPAUSEMACCtrlFramesTransmitted.',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCOutPauseFrames.1057', 
    'leaf', 
    '/dot3/dot3PauseEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCStatsEntry', '1086',
    '/dot3/dot3HCStatsEntry',
    'An entry containing 64-bit statistics for a
single ethernet-like interface.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCStatsEntry.1086', 
    'list', 
    '/dot3',
    '0',
    '1',
    '',
    '',
    'dot3StatsIndex dot3HCStatsAlignmentErrors dot3HCStatsFCSErrors dot3HCStatsInternalMacTransmitErrors dot3HCStatsFrameTooLongs dot3HCStatsInternalMacReceiveErrors dot3HCStatsSymbolErrors',
    '',
    'dot3StatsIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3StatsIndex', '1094',
    '/dot3/dot3HCStatsEntry/dot3StatsIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/EtherLike-MIB/2003-09-19#dot3StatsIndex.1094', 
    'leaf', 
    '/dot3/dot3HCStatsEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCStatsAlignmentErrors', '1103',
    '/dot3/dot3HCStatsEntry/dot3HCStatsAlignmentErrors',
    'A count of frames received on a particular
interface that are not an integral number of
octets in length and do not pass the FCS check.

The count represented by an instance of this
object is incremented when the alignmentError
status is returned by the MAC service to the
LLC (or other MAC user). Received frames for
which multiple error conditions pertain are,
according to the conventions of IEEE 802.3
Layer Management, counted exclusively according
to the error status presented to the LLC.

This counter does not increment for group
encoding schemes greater than 4 bits per group.

This counter is a 64 bit version of
dot3StatsAlignmentErrors.  It should be used
on interfaces operating at 10 Gb/s or faster.

Discontinuities in the value of this counter can
occur at re-initialization of the management

system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.7,
aAlignmentErrors',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCStatsAlignmentErrors.1103', 
    'leaf', 
    '/dot3/dot3HCStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCStatsFCSErrors', '1138',
    '/dot3/dot3HCStatsEntry/dot3HCStatsFCSErrors',
    'A count of frames received on a particular
interface that are an integral number of octets
in length but do not pass the FCS check.  This
count does not include frames received with
frame-too-long or frame-too-short error.

The count represented by an instance of this
object is incremented when the frameCheckError
status is returned by the MAC service to the
LLC (or other MAC user). Received frames for
which multiple error conditions pertain are,
according to the conventions of IEEE 802.3
Layer Management, counted exclusively according
to the error status presented to the LLC.

Note:  Coding errors detected by the physical
layer for speeds above 10 Mb/s will cause the
frame to fail the FCS check.

This counter is a 64 bit version of
dot3StatsFCSErrors.  It should be used on
interfaces operating at 10 Gb/s or faster.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.6,
aFrameCheckSequenceErrors.',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCStatsFCSErrors.1138', 
    'leaf', 
    '/dot3/dot3HCStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCStatsInternalMacTransmitErrors', '1175',
    '/dot3/dot3HCStatsEntry/dot3HCStatsInternalMacTransmitErrors',
    'A count of frames for which transmission on a
particular interface fails due to an internal
MAC sublayer transmit error. A frame is only

counted by an instance of this object if it is
not counted by the corresponding instance of
either the dot3StatsLateCollisions object, the
dot3StatsExcessiveCollisions object, or the
dot3StatsCarrierSenseErrors object.

The precise meaning of the count represented by
an instance of this object is implementation-
specific.  In particular, an instance of this
object may represent a count of transmission
errors on a particular interface that are not
otherwise counted.

This counter is a 64 bit version of
dot3StatsInternalMacTransmitErrors.  It should
be used on interfaces operating at 10 Gb/s or
faster.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.12,
aFramesLostDueToIntMACXmitError.',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCStatsInternalMacTransmitErrors.1175', 
    'leaf', 
    '/dot3/dot3HCStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCStatsFrameTooLongs', '1211',
    '/dot3/dot3HCStatsEntry/dot3HCStatsFrameTooLongs',
    'A count of frames received on a particular
interface that exceed the maximum permitted
frame size.

The count represented by an instance of this
object is incremented when the frameTooLong
status is returned by the MAC service to the
LLC (or other MAC user). Received frames for
which multiple error conditions pertain are,
according to the conventions of IEEE 802.3
Layer Management, counted exclusively according
to the error status presented to the LLC.

This counter is a 64 bit version of
dot3StatsFrameTooLongs.  It should be used on
interfaces operating at 10 Gb/s or faster.

Discontinuities in the value of this counter can

occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.25,
aFrameTooLongErrors.',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCStatsFrameTooLongs.1211', 
    'leaf', 
    '/dot3/dot3HCStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCStatsInternalMacReceiveErrors', '1243',
    '/dot3/dot3HCStatsEntry/dot3HCStatsInternalMacReceiveErrors',
    'A count of frames for which reception on a
particular interface fails due to an internal
MAC sublayer receive error. A frame is only
counted by an instance of this object if it is
not counted by the corresponding instance of
either the dot3StatsFrameTooLongs object, the
dot3StatsAlignmentErrors object, or the
dot3StatsFCSErrors object.

The precise meaning of the count represented by
an instance of this object is implementation-
specific.  In particular, an instance of this
object may represent a count of receive errors
on a particular interface that are not
otherwise counted.

This counter is a 64 bit version of
dot3StatsInternalMacReceiveErrors.  It should be
used on interfaces operating at 10 Gb/s or
faster.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.1.1.15,
aFramesLostDueToIntMACRcvError.',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCStatsInternalMacReceiveErrors.1243', 
    'leaf', 
    '/dot3/dot3HCStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'EtherLike-MIB', 'EtherLike-MIB', '2003-09-19', 'dot3HCStatsSymbolErrors', '1278',
    '/dot3/dot3HCStatsEntry/dot3HCStatsSymbolErrors',
    'For an interface operating at 100 Mb/s, the
number of times there was an invalid data symbol
when a valid carrier was present.

For an interface operating in half-duplex mode
at 1000 Mb/s, the number of times the receiving
media is non-idle (a carrier event) for a period
of time equal to or greater than slotTime, and
during which there was at least one occurrence
of an event that causes the PHY to indicate
\'Data reception error\' or \'carrier extend error\'
on the GMII.

For an interface operating in full-duplex mode
at 1000 Mb/s, the number of times the receiving
media is non-idle (a carrier event) for a period
of time equal to or greater than minFrameSize,
and during which there was at least one
occurrence of an event that causes the PHY to
indicate \'Data reception error\' on the GMII.

For an interface operating at 10 Gb/s, the
number of times the receiving media is non-idle
(a carrier event) for a period of time equal to
or greater than minFrameSize, and during which
there was at least one occurrence of an event
that causes the PHY to indicate \'Receive Error\'
on the XGMII.

The count represented by an instance of this
object is incremented at most once per carrier
event, even if multiple symbol errors occur
during the carrier event.  This count does
not increment if a collision is present.

This counter is a 64 bit version of
dot3StatsSymbolErrors.  It should be used on
interfaces operating at 10 Gb/s or faster.

Discontinuities in the value of this counter can
occur at re-initialization of the management
system, and at other times as indicated by the
value of ifCounterDiscontinuityTime.',
    '[IEEE 802.3 Std.], 30.3.2.1.5,
aSymbolErrorDuringCarrier.',
    '/modules/EtherLike-MIB/2003-09-19#dot3HCStatsSymbolErrors.1278', 
    'leaf', 
    '/dot3/dot3HCStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-VIEW-BASED-ACM-MIB.yang
# module: SNMP-VIEW-BASED-ACM-MIB
# version: 2002-10-16
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'snmp-view',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-VIEW-BASED-ACM-MIB',
    'SNMPv3 Working Group',
    'The management information definitions for the
View-based Access Control Model for SNMP.

Copyright (C) The Internet Society (20...',
    'The management information definitions for the
View-based Access Control Model for SNMP.

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 3415;
see the RFC itself for full legal notices.',
    '',
    'WG-email:   snmpv3@lists.tislabs.com
Subscribe:  majordomo@lists.tislabs.com
	    In message body:  subscribe snmpv3

Co-Chair:   Russ Mundy
	    Network Associates Laboratories
postal:     15204 Omega Drive, Suite 300
	    Rockville, MD 20850-4601
	    USA
email:      mundy@tislabs.com
phone:      +1 301-947-7107

Co-Chair:   David Harrington
	    Enterasys Networks
Postal:     35 Industrial Way
	    P. O. Box 5004
	    Rochester, New Hampshire 03866-5005
	    USA
EMail:      dbh@enterasys.com
Phone:      +1 603-337-2614

Co-editor:  Bert Wijnen
	    Lucent Technologies
postal:     Schagen 33
	    3461 GL Linschoten
	    Netherlands
email:      bwijnen@lucent.com
phone:      +31-348-480-685

Co-editor:  Randy Presuhn
	    BMC Software, Inc.

postal:     2141 North First Street
	    San Jose, CA 95131
	    USA
email:      randy_presuhn@bmc.com
phone:      +1 408-546-1006

Co-editor:  Keith McCloghrie
	    Cisco Systems, Inc.
postal:     170 West Tasman Drive
	    San Jose, CA  95134-1706
	    USA
email:      kzm@cisco.com
phone:      +1-408-526-5260',
    'Clarifications, published as RFC3415',
    '/xsd/SNMP-VIEW-BASED-ACM-MIB_2002-10-16.xsd',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16', 
    '/src/SNMP-VIEW-BASED-ACM-MIB_2002-10-16.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-VIEW-BASED-ACM-MIB.yang',
    'SNMP-VIEW-BASED-ACM-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmMIBObjects', '96',
    '/vacmMIBObjects',
    '',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmMIBObjects.96', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'vacmContextEntry vacmSecurityToGroupEntry vacmAccessEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmContextEntry', '101',
    '/vacmMIBObjects/vacmContextEntry',
    'Information about a particular context.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmContextEntry.101', 
    'list', 
    '/vacmMIBObjects',
    '0',
    '1',
    '',
    '',
    'vacmContextName',
    '',
    'vacmContextName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmContextName', '109',
    '/vacmMIBObjects/vacmContextEntry/vacmContextName',
    'A human readable name identifying a particular
context at a particular SNMP entity.

The empty contextName (zero length) represents the
default context.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmContextName.109', 
    'leaf', 
    '/vacmMIBObjects/vacmContextEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmSecurityToGroupEntry', '127',
    '/vacmMIBObjects/vacmSecurityToGroupEntry',
    'An entry in this table maps the combination of a
securityModel and securityName into a groupName.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmSecurityToGroupEntry.127', 
    'list', 
    '/vacmMIBObjects',
    '0',
    '1',
    '',
    '',
    'vacmSecurityModel vacmSecurityName vacmGroupName vacmSecurityToGroupStorageType vacmSecurityToGroupStatus',
    '',
    'vacmSecurityModel vacmSecurityName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmSecurityModel', '136',
    '/vacmMIBObjects/vacmSecurityToGroupEntry/vacmSecurityModel',
    'The Security Model, by which the vacmSecurityName
referenced by this entry is provided.

Note, this object may not take the \'any\' (0) value.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmSecurityModel.136', 
    'leaf', 
    '/vacmMIBObjects/vacmSecurityToGroupEntry',
    '0',
    '1',
    'SnmpSecurityModel',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmSecurityName', '149',
    '/vacmMIBObjects/vacmSecurityToGroupEntry/vacmSecurityName',
    'The securityName for the principal, represented in a
Security Model independent format, which is mapped by
this entry to a groupName.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmSecurityName.149', 
    'leaf', 
    '/vacmMIBObjects/vacmSecurityToGroupEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmGroupName', '161',
    '/vacmMIBObjects/vacmSecurityToGroupEntry/vacmGroupName',
    'The name of the group to which this entry (e.g., the
combination of securityModel and securityName)
belongs.

This groupName is used as index into the
vacmAccessTable to select an access control policy.
However, a value in this table does not imply that an
instance with the value exists in table vacmAccesTable.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmGroupName.161', 
    'leaf', 
    '/vacmMIBObjects/vacmSecurityToGroupEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmSecurityToGroupStorageType', '178',
    '/vacmMIBObjects/vacmSecurityToGroupEntry/vacmSecurityToGroupStorageType',
    'The storage type for this conceptual row.
Conceptual rows having the value \'permanent\' need not
allow write-access to any columnar objects in the row.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmSecurityToGroupStorageType.178', 
    'leaf', 
    '/vacmMIBObjects/vacmSecurityToGroupEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmSecurityToGroupStatus', '189',
    '/vacmMIBObjects/vacmSecurityToGroupEntry/vacmSecurityToGroupStatus',
    'The status of this conceptual row.

Until instances of all corresponding columns are
appropriately configured, the value of the

corresponding instance of the vacmSecurityToGroupStatus
column is \'notReady\'.

In particular, a newly created row cannot be made
active until a value has been set for vacmGroupName.

The  RowStatus TC [RFC2579] requires that this
DESCRIPTION clause states under which circumstances
other objects in this row can be modified:

The value of this object has no effect on whether
other objects in this conceptual row can be modified.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmSecurityToGroupStatus.189', 
    'leaf', 
    '/vacmMIBObjects/vacmSecurityToGroupEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessEntry', '217',
    '/vacmMIBObjects/vacmAccessEntry',
    'An access right configured in the Local Configuration
Datastore (LCD) authorizing access to an SNMP context.

Entries in this table can use an instance value for
object vacmGroupName even if no entry in table
vacmAccessSecurityToGroupTable has a corresponding
value for object vacmGroupName.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessEntry.217', 
    'list', 
    '/vacmMIBObjects',
    '0',
    '1',
    '',
    '',
    'vacmGroupName vacmAccessContextPrefix vacmAccessSecurityModel vacmAccessSecurityLevel vacmAccessContextMatch vacmAccessReadViewName vacmAccessWriteViewName vacmAccessNotifyViewName vacmAccessStorageType vacmAccessStatus',
    '',
    'vacmGroupName vacmAccessContextPrefix 
vacmAccessSecurityModel vacmAccessSecurityLevel',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmGroupName', '231',
    '/vacmMIBObjects/vacmAccessEntry/vacmGroupName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmGroupName.231', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessContextPrefix', '240',
    '/vacmMIBObjects/vacmAccessEntry/vacmAccessContextPrefix',
    'In order to gain the access rights allowed by this
conceptual row, a contextName must match exactly
(if the value of vacmAccessContextMatch is \'exact\')
or partially (if the value of vacmAccessContextMatch
is \'prefix\') to the value of the instance of this
object.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessContextPrefix.240', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessSecurityModel', '255',
    '/vacmMIBObjects/vacmAccessEntry/vacmAccessSecurityModel',
    'In order to gain the access rights allowed by this
conceptual row, this securityModel must be in use.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessSecurityModel.255', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'SnmpSecurityModel',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessSecurityLevel', '264',
    '/vacmMIBObjects/vacmAccessEntry/vacmAccessSecurityLevel',
    'The minimum level of security required in order to
gain the access rights allowed by this conceptual
row.  A securityLevel of noAuthNoPriv is less than
authNoPriv which in turn is less than authPriv.

If multiple entries are equally indexed except for
this vacmAccessSecurityLevel index, then the entry
which has the highest value for
vacmAccessSecurityLevel is selected.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessSecurityLevel.264', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'SnmpSecurityLevel',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessContextMatch', '280',
    '/vacmMIBObjects/vacmAccessEntry/vacmAccessContextMatch',
    'If the value of this object is exact(1), then all
rows where the contextName exactly matches
vacmAccessContextPrefix are selected.

If the value of this object is prefix(2), then all
rows where the contextName whose starting octets
exactly match vacmAccessContextPrefix are selected.
This allows for a simple form of wildcarding.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessContextMatch.280', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessReadViewName', '299',
    '/vacmMIBObjects/vacmAccessEntry/vacmAccessReadViewName',
    'The value of an instance of this object identifies
the MIB view of the SNMP context to which this
conceptual row authorizes read access.

The identified MIB view is that one for which the
vacmViewTreeFamilyViewName has the same value as the
instance of this object; if the value is the empty
string or if there is no active MIB view having this
value of vacmViewTreeFamilyViewName, then no access
is granted.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessReadViewName.299', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessWriteViewName', '319',
    '/vacmMIBObjects/vacmAccessEntry/vacmAccessWriteViewName',
    'The value of an instance of this object identifies
the MIB view of the SNMP context to which this
conceptual row authorizes write access.

The identified MIB view is that one for which the
vacmViewTreeFamilyViewName has the same value as the
instance of this object; if the value is the empty
string or if there is no active MIB view having this
value of vacmViewTreeFamilyViewName, then no access
is granted.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessWriteViewName.319', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessNotifyViewName', '339',
    '/vacmMIBObjects/vacmAccessEntry/vacmAccessNotifyViewName',
    'The value of an instance of this object identifies
the MIB view of the SNMP context to which this
conceptual row authorizes access for notifications.

The identified MIB view is that one for which the
vacmViewTreeFamilyViewName has the same value as the
instance of this object; if the value is the empty
string or if there is no active MIB view having this
value of vacmViewTreeFamilyViewName, then no access
is granted.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessNotifyViewName.339', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessStorageType', '359',
    '/vacmMIBObjects/vacmAccessEntry/vacmAccessStorageType',
    'The storage type for this conceptual row.

Conceptual rows having the value \'permanent\' need not
allow write-access to any columnar objects in the row.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessStorageType.359', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmAccessStatus', '371',
    '/vacmMIBObjects/vacmAccessEntry/vacmAccessStatus',
    'The status of this conceptual row.

The  RowStatus TC [RFC2579] requires that this
DESCRIPTION clause states under which circumstances
other objects in this row can be modified:

The value of this object has no effect on whether
other objects in this conceptual row can be modified.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmAccessStatus.371', 
    'leaf', 
    '/vacmMIBObjects/vacmAccessEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmMIBViews', '390',
    '/vacmMIBViews',
    '',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmMIBViews.390', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'vacmViewSpinLock vacmViewTreeFamilyEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmViewSpinLock', '392',
    '/vacmMIBViews/vacmViewSpinLock',
    'An advisory lock used to allow cooperating SNMP
Command Generator applications to coordinate their
use of the Set operation in creating or modifying
views.

When creating a new view or altering an existing
view, it is important to understand the potential
interactions with other uses of the view.  The
vacmViewSpinLock should be retrieved.  The name of
the view to be created should be determined to be
unique by the SNMP Command Generator application by
consulting the vacmViewTreeFamilyTable.  Finally,
the named view may be created (Set), including the
advisory lock.
If another SNMP Command Generator application has
altered the views in the meantime, then the spin
lock\'s value will have changed, and so this creation
will fail because it will specify the wrong value for
the spin lock.

Since this is an advisory lock, the use of this lock
is not enforced.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmViewSpinLock.392', 
    'leaf', 
    '/vacmMIBViews',
    '0',
    '1',
    'TestAndIncr',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmViewTreeFamilyEntry', '424',
    '/vacmMIBViews/vacmViewTreeFamilyEntry',
    'Information on a particular family of view subtrees
included in or excluded from a particular SNMP
context\'s MIB view.

Implementations must not restrict the number of
families of view subtrees for a given MIB view,
except as dictated by resource constraints on the
overall number of entries in the
vacmViewTreeFamilyTable.

If no conceptual rows exist in this table for a given
MIB view (viewName), that view may be thought of as
consisting of the empty set of view subtrees.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmViewTreeFamilyEntry.424', 
    'list', 
    '/vacmMIBViews',
    '0',
    '1',
    '',
    '',
    'vacmViewTreeFamilyViewName vacmViewTreeFamilySubtree vacmViewTreeFamilyMask vacmViewTreeFamilyType vacmViewTreeFamilyStorageType vacmViewTreeFamilyStatus',
    '',
    'vacmViewTreeFamilyViewName 
vacmViewTreeFamilySubtree',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmViewTreeFamilyViewName', '445',
    '/vacmMIBViews/vacmViewTreeFamilyEntry/vacmViewTreeFamilyViewName',
    'The human readable name for a family of view subtrees.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmViewTreeFamilyViewName.445', 
    'leaf', 
    '/vacmMIBViews/vacmViewTreeFamilyEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmViewTreeFamilySubtree', '455',
    '/vacmMIBViews/vacmViewTreeFamilyEntry/vacmViewTreeFamilySubtree',
    'The MIB subtree which when combined with the
corresponding instance of vacmViewTreeFamilyMask
defines a family of view subtrees.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmViewTreeFamilySubtree.455', 
    'leaf', 
    '/vacmMIBViews/vacmViewTreeFamilyEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmViewTreeFamilyMask', '465',
    '/vacmMIBViews/vacmViewTreeFamilyEntry/vacmViewTreeFamilyMask',
    'The bit mask which, in combination with the
corresponding instance of vacmViewTreeFamilySubtree,
defines a family of view subtrees.

Each bit of this bit mask corresponds to a
sub-identifier of vacmViewTreeFamilySubtree, with the
most significant bit of the i-th octet of this octet
string value (extended if necessary, see below)
corresponding to the (8*i - 7)-th sub-identifier, and
the least significant bit of the i-th octet of this
octet string corresponding to the (8*i)-th
sub-identifier, where i is in the range 1 through 16.

Each bit of this bit mask specifies whether or not
the corresponding sub-identifiers must match when
determining if an OBJECT IDENTIFIER is in this
family of view subtrees; a \'1\' indicates that an
exact match must occur; a \'0\' indicates \'wild card\',
i.e., any sub-identifier value matches.

Thus, the OBJECT IDENTIFIER X of an object instance
is contained in a family of view subtrees if, for
each sub-identifier of the value of
vacmViewTreeFamilySubtree, either:

  the i-th bit of vacmViewTreeFamilyMask is 0, or

  the i-th sub-identifier of X is equal to the i-th
  sub-identifier of the value of
  vacmViewTreeFamilySubtree.

If the value of this bit mask is M bits long and

there are more than M sub-identifiers in the
corresponding instance of vacmViewTreeFamilySubtree,
then the bit mask is extended with 1\'s to be the
required length.

Note that when the value of this object is the
zero-length string, this extension rule results in
a mask of all-1\'s being used (i.e., no \'wild card\'),
and the family of view subtrees is the one view
subtree uniquely identified by the corresponding
instance of vacmViewTreeFamilySubtree.

Note that masks of length greater than zero length
do not need to be supported.  In this case this
object is made read-only.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmViewTreeFamilyMask.465', 
    'leaf', 
    '/vacmMIBViews/vacmViewTreeFamilyEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmViewTreeFamilyType', '523',
    '/vacmMIBViews/vacmViewTreeFamilyEntry/vacmViewTreeFamilyType',
    'Indicates whether the corresponding instances of
vacmViewTreeFamilySubtree and vacmViewTreeFamilyMask
define a family of view subtrees which is included in
or excluded from the MIB view.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmViewTreeFamilyType.523', 
    'leaf', 
    '/vacmMIBViews/vacmViewTreeFamilyEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmViewTreeFamilyStorageType', '538',
    '/vacmMIBViews/vacmViewTreeFamilyEntry/vacmViewTreeFamilyStorageType',
    'The storage type for this conceptual row.

Conceptual rows having the value \'permanent\' need not
allow write-access to any columnar objects in the row.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmViewTreeFamilyStorageType.538', 
    'leaf', 
    '/vacmMIBViews/vacmViewTreeFamilyEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-VIEW-BASED-ACM-MIB', 'SNMP-VIEW-BASED-ACM-MIB', '2002-10-16', 'vacmViewTreeFamilyStatus', '550',
    '/vacmMIBViews/vacmViewTreeFamilyEntry/vacmViewTreeFamilyStatus',
    'The status of this conceptual row.

The  RowStatus TC [RFC2579] requires that this
DESCRIPTION clause states under which circumstances
other objects in this row can be modified:

The value of this object has no effect on whether
other objects in this conceptual row can be modified.',
    '',
    '/modules/SNMP-VIEW-BASED-ACM-MIB/2002-10-16#vacmViewTreeFamilyStatus.550', 
    'leaf', 
    '/vacmMIBViews/vacmViewTreeFamilyEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/ietf/IANAifType-MIB.yang
# module: IANAifType-MIB
# version: 2005-10-10
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'IANAifType-MIB');

INSERT INTO ncmodule VALUES (
    '', 'IANAifType-MIB', 'IANAifType-MIB', '2005-10-10', 'ianaiftype-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:IANAifType-MIB',
    'IANA',
    'This MIB module defines the IANAifType Textual
Convention, and thus the enumerated values of
the ifType object defined in MIB-II...',
    'This MIB module defines the IANAifType Textual
Convention, and thus the enumerated values of
the ifType object defined in MIB-II\'s ifTable.',
    '',
    '        Internet Assigned Numbers Authority

Postal: ICANN
	4676 Admiralty Way, Suite 330
	Marina del Rey, CA 90292

Tel:    +1 310 823 9358
E-Mail: iana@iana.org',
    'Registration of new IANA ifType 230.',
    '/xsd/IANAifType-MIB_2005-10-10.xsd',
    '/modules/IANAifType-MIB/2005-10-10', 
    '/src/IANAifType-MIB_2005-10-10.yang',
    '/home/andy/swdev/trunk/netconf/modules/ietf/IANAifType-MIB.yang',
    'IANAifType-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IANAifType-MIB', 'IANAifType-MIB', '2005-10-10', 'IANAifType', '236',
    'This data type is used as the syntax of the ifType
object in the (updated) definition of MIB-II\'s
ifTable.

The definition of this textual convention with the
addition of newly assigned values is published
periodically by the IANA, in either the Assigned
Numbers RFC, or some derivative of it specific to
Internet Network Management number assignments.  (The
latest arrangements can be obtained by contacting the
IANA.)

Requests for new values should be made to IANA via
email (iana@iana.org).

The relationship between the assignment of ifType
values and of OIDs to particular media-specific MIBs
is solely the purview of IANA and is subject to change
without notice.  Quite often, a media-specific MIB\'s
OID-subtree assignment within MIB-II\'s \'transmission\'
subtree will be the same as its ifType value.
However, in some circumstances this will not be the
case, and implementors must not pre-assume any
specific relationship between ifType values and
transmission subtree OIDs.',
    '',
    '/modules/IANAifType-MIB/2005-10-10#IANAifType.236', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IANAifType-MIB', 'IANAifType-MIB', '2005-10-10', 'IANAtunnelType', '497',
    'The encapsulation method used by a tunnel. The value
direct indicates that a packet is encapsulated
directly within a normal IP header, with no
intermediate header, and unicast to the remote tunnel
endpoint (e.g., an RFC 2003 IP-in-IP tunnel, or an RFC
1933 IPv6-in-IPv4 tunnel). The value minimal indicates
that a Minimal Forwarding Header (RFC 2004) is
inserted between the outer header and the payload
packet. The value UDP indicates that the payload
packet is encapsulated within a normal UDP packet
(e.g., RFC 1234).

The values sixToFour, sixOverFour, and isatap
indicates that an IPv6 packet is encapsulated directly
within an IPv4 header, with no intermediate header,
and unicast to the destination determined by the 6to4,
6over4, or ISATAP protocol.

The remaining protocol-specific values indicate that a
header of the protocol of that name is inserted
between the outer header and the payload header.

The assignment policy for IANAtunnelType values is
identical to the policy for assigning IANAifType
values.',
    '',
    '/modules/IANAifType-MIB/2005-10-10#IANAtunnelType.497', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/DIFFSERV-CONFIG-MIB.yang
# module: DIFFSERV-CONFIG-MIB
# version: 2004-01-22
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'DIFFSERV-CONFIG-MIB');

INSERT INTO ncmodule VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffserv-config',
    'urn:ietf:params:xml:ns:yang:smiv2:DIFFSERV-CONFIG-MIB',
    'SNMPCONF WG',
    'This MIB module contains differentiated services
specific managed objects to perform higher-level
configuration management.  Thi...',
    'This MIB module contains differentiated services
specific managed objects to perform higher-level
configuration management.  This MIB allows policies
to use \'templates\' to instantiate Differentiated
Services functional datapath configurations to
be assigned (associated with an interface and
direction) when a policy is activated.

Copyright (C) The Internet Society (2004).  This version
of this MIB module is part of RFC 3747;  see the RFC
itself for full legal notices.',
    '',
    'SNMPCONF Working Group
http://www.ietf.org/html.charters/snmpconf-charter.html
WG mailing list: snmpconf@snmp.com

Editors:
Harrie Hazewinkel
I.Net
via Darwin 85
20019 - Settimo Milanese (MI)
Italy
EMail: harrie@inet.it

David Partain
Ericsson AB
P.O. Box 1248
SE-581 12 Linkoping
Sweden
E-mail: David.Partain@ericsson.com',
    'Initial version published as RFC 3747',
    '/xsd/DIFFSERV-CONFIG-MIB_2004-01-22.xsd',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22', 
    '/src/DIFFSERV-CONFIG-MIB_2004-01-22.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/DIFFSERV-CONFIG-MIB.yang',
    'DIFFSERV-CONFIG-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffServConfigMIBObjects', '65',
    '/diffServConfigMIBObjects',
    '',
    '',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22#diffServConfigMIBObjects.65', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'diffServConfigEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffServConfigEntry', '70',
    '/diffServConfigMIBObjects/diffServConfigEntry',
    'An entry defining a per-hop-behavior.  Each entry in
this table combines the various parameters (entries)
into a specific per-hop-behavior.  Entries in this
table might be defined by a vendor (pre-configured)
or defined by a management application.',
    '',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22#diffServConfigEntry.70', 
    'list', 
    '/diffServConfigMIBObjects',
    '0',
    '1',
    '',
    '',
    'diffServConfigId diffServConfigDescr diffServConfigOwner diffServConfigLastChange diffServConfigStart diffServConfigStorage diffServConfigStatus',
    '',
    'diffServConfigId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffServConfigId', '82',
    '/diffServConfigMIBObjects/diffServConfigEntry/diffServConfigId',
    'A unique id for the per-hop-behavior policy for at
least the SNMP agent.  For ease of administration the
value may be unique within an administrative domain,
but this is not required.

The range of up to 116 octets is chosen to stay within
the SMI limit of 128 sub-identifiers in an object
identifier.',
    '',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22#diffServConfigId.82', 
    'leaf', 
    '/diffServConfigMIBObjects/diffServConfigEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffServConfigDescr', '99',
    '/diffServConfigMIBObjects/diffServConfigEntry/diffServConfigDescr',
    'A human-readable description to identify this defined
per-hop-behavior.  Note that this is an SnmpAdminString,
which permits UTF-8 strings.  An administratively assigned
identifier for a template that would be unique within
an administrative domain.  It is up to the management
applications to agree how these are assigned within the
administrative domain.  Once a description, such as
\'EF\' is assigned, that has a certain set of parameters
that achieve \'EF\' from box to box. Management
application code or script code can then scan
the table to find the proper template and then
assign it.',
    '',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22#diffServConfigDescr.99', 
    'leaf', 
    '/diffServConfigMIBObjects/diffServConfigEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffServConfigOwner', '118',
    '/diffServConfigMIBObjects/diffServConfigEntry/diffServConfigOwner',
    'The owner who created this entry.',
    '',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22#diffServConfigOwner.118', 
    'leaf', 
    '/diffServConfigMIBObjects/diffServConfigEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffServConfigLastChange', '126',
    '/diffServConfigMIBObjects/diffServConfigEntry/diffServConfigLastChange',
    'The date and time when this entry was last changed.',
    '',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22#diffServConfigLastChange.126', 
    'leaf', 
    '/diffServConfigMIBObjects/diffServConfigEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffServConfigStart', '134',
    '/diffServConfigMIBObjects/diffServConfigEntry/diffServConfigStart',
    'The pointer to a functional datapath configuration template as
set up in the DIFFSERV-MIB.  This RowPointer should
point to an instance of one of:
  diffServClfrEntry
  diffServMeterEntry
  diffServActionEntry
  diffServAlgDropEntry
  diffServQEntry




A value of zeroDotZero in this attribute indicates no
further Diffserv treatment is performed on traffic of
this functional datapath.  This also means that the
template described by this row is not defined.

If the row pointed to does not exist, the treatment
is as if this attribute contains a value of zeroDotZero.',
    'Differentiated Services MIB module',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22#diffServConfigStart.134', 
    'leaf', 
    '/diffServConfigMIBObjects/diffServConfigEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffServConfigStorage', '163',
    '/diffServConfigMIBObjects/diffServConfigEntry/diffServConfigStorage',
    'The type of storage used for this row.

Since an entry in this table serves as a starting
point for a configuration, it is recommended that
all entries comprising the configuration started by
diffServConfigStart follow the storage type of this
entry.  Otherwise, after agent reboots a configuration
may differ.  It may very well be that the agent is
not capable of detecting such changes and therefore,
the management application should verify the correct
configuration after a reboot.  Rows with a StorageType
of \'permanent\' do not need to allow write access to
any of the columnar objects in that row.',
    '',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22#diffServConfigStorage.163', 
    'leaf', 
    '/diffServConfigMIBObjects/diffServConfigEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-CONFIG-MIB', 'DIFFSERV-CONFIG-MIB', '2004-01-22', 'diffServConfigStatus', '184',
    '/diffServConfigMIBObjects/diffServConfigEntry/diffServConfigStatus',
    'RowStatus object used for creation and deletion of
rows in this table.  All writable objects in this row
may be modified at any time.',
    '',
    '/modules/DIFFSERV-CONFIG-MIB/2004-01-22#diffServConfigStatus.184', 
    'leaf', 
    '/diffServConfigMIBObjects/diffServConfigEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/AGENTX-MIB.yang
# module: AGENTX-MIB
# version: 2000-01-10
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'AGENTX-MIB');

INSERT INTO ncmodule VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentx-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:AGENTX-MIB',
    'AgentX Working Group',
    'This is the MIB module for the SNMP Agent Extensibility
Protocol (AgentX).  This MIB module will be implemented by
the master ag...',
    'This is the MIB module for the SNMP Agent Extensibility
Protocol (AgentX).  This MIB module will be implemented by
the master agent.',
    '',
    'WG-email:   agentx@dorothy.bmc.com
Subscribe:  agentx-request@dorothy.bmc.com
WG-email Archive:  ftp://ftp.peer.com/pub/agentx/archives
FTP repository:  ftp://ftp.peer.com/pub/agentx
http://www.ietf.org/html.charters/agentx-charter.html

Chair:      Bob Natale
	    ACE*COMM Corporation
Email:      bnatale@acecomm.com

WG editor:  Mark Ellison
	    Ellison Software Consulting, Inc.
Email:      ellison@world.std.com

Co-author:  Lauren Heintz
	    Cisco Systems,
EMail:      lheintz@cisco.com

Co-author:  Smitha Gudur
	    Independent Consultant
Email:      sgudur@hotmail.com',
    'Initial version published as RFC 2742.',
    '/xsd/AGENTX-MIB_2000-01-10.xsd',
    '/modules/AGENTX-MIB/2000-01-10', 
    '/src/AGENTX-MIB_2000-01-10.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/AGENTX-MIB.yang',
    'AGENTX-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'AgentxTAddress', '63',
    'Denotes a transport service address.  This is identical to
the TAddress textual convention (SNMPv2-SMI) except that
zero-length values are permitted.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#AgentxTAddress.63', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxGeneral', '73',
    '/agentxGeneral',
    '',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxGeneral.73', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'agentxDefaultTimeout agentxMasterAgentXVer',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxDefaultTimeout', '75',
    '/agentxGeneral/agentxDefaultTimeout',
    'The default length of time, in seconds, that the master
agent should allow to elapse after dispatching a message
to a session before it regards the subagent as not
responding.  This is a system-wide value that may
override the timeout value associated with a particular
session (agentxSessionTimeout) or a particular registered
MIB region (agentxRegTimeout).  If the associated value of
agentxSessionTimeout and agentxRegTimeout are zero, or
impractical in accordance with implementation-specific
procedure of the master agent, the value represented by
this object will be the effective timeout value for the

master agent to await a response to a dispatch from a
given subagent.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxDefaultTimeout.75', 
    'leaf', 
    '/agentxGeneral',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxMasterAgentXVer', '100',
    '/agentxGeneral/agentxMasterAgentXVer',
    'The AgentX protocol version supported by this master agent.
The current protocol version is 1.  Note that the master agent
must also allow interaction with earlier version subagents.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxMasterAgentXVer.100', 
    'leaf', 
    '/agentxGeneral',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxConnection', '114',
    '/agentxConnection',
    '',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxConnection.114', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'agentxConnTableLastChange agentxConnectionEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxConnTableLastChange', '116',
    '/agentxConnection/agentxConnTableLastChange',
    'The value of sysUpTime when the last row creation or deletion
occurred in the agentxConnectionTable.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxConnTableLastChange.116', 
    'leaf', 
    '/agentxConnection',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxConnectionEntry', '128',
    '/agentxConnection/agentxConnectionEntry',
    'An agentxConnectionEntry contains information describing a
single AgentX transport connection.  A connection may be

used to support zero or more AgentX sessions.  An entry is
created when a new transport connection is established,
and is destroyed when the transport connection is terminated.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxConnectionEntry.128', 
    'list', 
    '/agentxConnection',
    '0',
    '1',
    '',
    '',
    'agentxConnIndex agentxConnOpenTime agentxConnTransportDomain agentxConnTransportAddress',
    '',
    'agentxConnIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxConnIndex', '141',
    '/agentxConnection/agentxConnectionEntry/agentxConnIndex',
    'agentxConnIndex contains the value that uniquely identifies
an open transport connection used by this master agent
to provide AgentX service.  Values of this index should
not be re-used.  The value assigned to a given transport
connection is constant for the lifetime of that connection.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxConnIndex.141', 
    'leaf', 
    '/agentxConnection/agentxConnectionEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxConnOpenTime', '155',
    '/agentxConnection/agentxConnectionEntry/agentxConnOpenTime',
    'The value of sysUpTime when this connection was established
and, therefore, its value when this entry was added to the table.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxConnOpenTime.155', 
    'leaf', 
    '/agentxConnection/agentxConnectionEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxConnTransportDomain', '164',
    '/agentxConnection/agentxConnectionEntry/agentxConnTransportDomain',
    'The transport protocol in use for this connection to the
subagent.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxConnTransportDomain.164', 
    'leaf', 
    '/agentxConnection/agentxConnectionEntry',
    '0',
    '1',
    'TDomain',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxConnTransportAddress', '173',
    '/agentxConnection/agentxConnectionEntry/agentxConnTransportAddress',
    'The transport address of the remote (subagent) end of this
connection to the master agent.  This object may be zero-length
for unix-domain sockets (and possibly other types of transport
addresses) since the subagent need not bind a filename to its
local socket.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxConnTransportAddress.173', 
    'leaf', 
    '/agentxConnection/agentxConnectionEntry',
    '0',
    '1',
    'AgentxTAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSession', '188',
    '/agentxSession',
    '',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSession.188', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'agentxSessionTableLastChange agentxSessionEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionTableLastChange', '190',
    '/agentxSession/agentxSessionTableLastChange',
    'The value of sysUpTime when the last row creation or deletion
occurred in the agentxSessionTable.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionTableLastChange.190', 
    'leaf', 
    '/agentxSession',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionEntry', '202',
    '/agentxSession/agentxSessionEntry',
    'Information about a single open session between the AgentX
master agent and a subagent is contained in this entry.  An
entry is created when a new session is successfully established
and is destroyed either when the subagent transport connection
has terminated or when the subagent session is closed.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionEntry.202', 
    'list', 
    '/agentxSession',
    '0',
    '1',
    '',
    '',
    'agentxConnIndex agentxSessionIndex agentxSessionObjectID agentxSessionDescr agentxSessionAdminStatus agentxSessionOpenTime agentxSessionAgentXVer agentxSessionTimeout',
    '',
    'agentxConnIndex agentxSessionIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxConnIndex', '213',
    '/agentxSession/agentxSessionEntry/agentxConnIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxConnIndex.213', 
    'leaf', 
    '/agentxSession/agentxSessionEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionIndex', '222',
    '/agentxSession/agentxSessionEntry/agentxSessionIndex',
    'A unique index for the subagent session.  It is the same as
h.sessionID defined in the agentx header.  Note that if
a subagent\'s session with the master agent is closed for
any reason its index should not be re-used.
A value of zero(0) is specifically allowed in order
to be compatible with the definition of h.sessionId.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionIndex.222', 
    'leaf', 
    '/agentxSession/agentxSessionEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionObjectID', '237',
    '/agentxSession/agentxSessionEntry/agentxSessionObjectID',
    'This is taken from the o.id field of the agentx-Open-PDU.
This attribute will report a value of \'0.0\' for subagents
not supporting the notion of an AgentX session object
identifier.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionObjectID.237', 
    'leaf', 
    '/agentxSession/agentxSessionEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionDescr', '248',
    '/agentxSession/agentxSessionEntry/agentxSessionDescr',
    'A textual description of the session.  This is analogous to
sysDescr defined in the SNMPv2-MIB in RFC 1907 [19] and is
taken from the o.descr field of the agentx-Open-PDU.
This attribute will report a zero-length string value for
subagents not supporting the notion of a session description.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionDescr.248', 
    'leaf', 
    '/agentxSession/agentxSessionEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionAdminStatus', '260',
    '/agentxSession/agentxSessionEntry/agentxSessionAdminStatus',
    'The administrative (desired) status of the session.  Setting
the value to \'down(2)\' closes the subagent session (with c.reason
set to \'reasonByManager\').',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionAdminStatus.260', 
    'leaf', 
    '/agentxSession/agentxSessionEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionOpenTime', '273',
    '/agentxSession/agentxSessionEntry/agentxSessionOpenTime',
    'The value of sysUpTime when this session was opened and,
therefore, its value when this entry was added to the table.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionOpenTime.273', 
    'leaf', 
    '/agentxSession/agentxSessionEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionAgentXVer', '282',
    '/agentxSession/agentxSessionEntry/agentxSessionAgentXVer',
    'The version of the AgentX protocol supported by the
session.  This must be less than or equal to the value of
agentxMasterAgentXVer.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionAgentXVer.282', 
    'leaf', 
    '/agentxSession/agentxSessionEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionTimeout', '294',
    '/agentxSession/agentxSessionEntry/agentxSessionTimeout',
    'The length of time, in seconds, that a master agent should
allow to elapse after dispatching a message to this session
before it regards the subagent as not responding.  This value
is taken from the o.timeout field of the agentx-Open-PDU.
This is a session-specific value that may be overridden by
values associated with the specific registered MIB regions
(see agentxRegTimeout). A value of zero(0) indicates that
the master agent\'s default timeout value should be used

(see agentxDefaultTimeout).',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionTimeout.294', 
    'leaf', 
    '/agentxSession/agentxSessionEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegistration', '317',
    '/agentxRegistration',
    '',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegistration.317', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'agentxRegistrationTableLastChange agentxRegistrationEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegistrationTableLastChange', '319',
    '/agentxRegistration/agentxRegistrationTableLastChange',
    'The value of sysUpTime when the last row creation or deletion
occurred in the agentxRegistrationTable.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegistrationTableLastChange.319', 
    'leaf', 
    '/agentxRegistration',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegistrationEntry', '331',
    '/agentxRegistration/agentxRegistrationEntry',
    'Contains information for a single registered region.  An
entry is created when a session  successfully registers a
region and is destroyed for any of three reasons: this region
is unregistered by the session, the session is closed,
or the subagent connection is closed.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegistrationEntry.331', 
    'list', 
    '/agentxRegistration',
    '0',
    '1',
    '',
    '',
    'agentxConnIndex agentxSessionIndex agentxRegIndex agentxRegContext agentxRegStart agentxRegRangeSubId agentxRegUpperBound agentxRegPriority agentxRegTimeout agentxRegInstance',
    '',
    'agentxConnIndex agentxSessionIndex agentxRegIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxConnIndex', '342',
    '/agentxRegistration/agentxRegistrationEntry/agentxConnIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxConnIndex.342', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxSessionIndex', '350',
    '/agentxRegistration/agentxRegistrationEntry/agentxSessionIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxSessionIndex.350', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegIndex', '359',
    '/agentxRegistration/agentxRegistrationEntry/agentxRegIndex',
    'agentxRegIndex uniquely identifies a registration entry.
This value is constant for the lifetime of an entry.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegIndex.359', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegContext', '370',
    '/agentxRegistration/agentxRegistrationEntry/agentxRegContext',
    'The context in which the session supports the objects in this
region.  A zero-length context indicates the default context.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegContext.370', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegStart', '379',
    '/agentxRegistration/agentxRegistrationEntry/agentxRegStart',
    'The starting OBJECT IDENTIFIER of this registration entry.  The
session identified by agentxSessionIndex implements objects
starting at this value (inclusive).  Note that this value could
identify an object type, an object instance, or a partial object
instance.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegStart.379', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegRangeSubId', '391',
    '/agentxRegistration/agentxRegistrationEntry/agentxRegRangeSubId',
    'agentxRegRangeSubId is used to specify the range.  This is
taken from r.region_subid in the registration PDU.  If the value
of this object is zero, no range is specified.  If it is non-zero,
it identifies the `nth\' sub-identifier in r.region for which
this entry\'s agentxRegUpperBound value is substituted in the
OID for purposes of defining the region\'s upper bound.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegRangeSubId.391', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegUpperBound', '404',
    '/agentxRegistration/agentxRegistrationEntry/agentxRegUpperBound',
    'agentxRegUpperBound represents the upper-bound sub-identifier in
a registration.  This is taken from the r.upper_bound in the
registration PDU.  If agentxRegRangeSubid (r.region_subid) is
zero, this value is also zero and is not used to define an upper
bound for this registration.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegUpperBound.404', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegPriority', '416',
    '/agentxRegistration/agentxRegistrationEntry/agentxRegPriority',
    'The registration priority.  Lower values have higher priority.
This value is taken from r.priority in the register PDU.
Sessions should use the value of 127 for r.priority if a
default value is desired.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegPriority.416', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegTimeout', '427',
    '/agentxRegistration/agentxRegistrationEntry/agentxRegTimeout',
    'The timeout value, in seconds, for responses to
requests associated with this registered MIB region.
A value of zero(0) indicates the default value (indicated
by by agentxSessionTimeout or agentxDefaultTimeout) is to
be used.  This value is taken from the r.timeout field of
the agentx-Register-PDU.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegTimeout.427', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'AGENTX-MIB', 'AGENTX-MIB', '2000-01-10', 'agentxRegInstance', '443',
    '/agentxRegistration/agentxRegistrationEntry/agentxRegInstance',
    'The value of agentxRegInstance is `true\' for
registrations for which the INSTANCE_REGISTRATION
was set, and is `false\' for all other registrations.',
    '',
    '/modules/AGENTX-MIB/2000-01-10#agentxRegInstance.443', 
    'leaf', 
    '/agentxRegistration/agentxRegistrationEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/INTEGRATED-SERVICES-MIB.yang
# module: INTEGRATED-SERVICES-MIB
# version: 1995-11-03
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'INTEGRATED-SERVICES-MIB');

INSERT INTO ncmodule VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'integrated-services',
    'urn:ietf:params:xml:ns:yang:smiv2:INTEGRATED-SERVICES-MIB',
    'IETF Integrated Services Working Group',
    'The MIB module to describe the Integrated Services



Protocol',
    'The MIB module to describe the Integrated Services



Protocol',
    '',
    '       Fred Baker
Postal: Cisco Systems
	519 Lado Drive
	Santa Barbara, California 93111
Tel:    +1 805 681 0115
E-Mail: fred@cisco.com

	John Krawczyk
Postal: ArrowPoint Communications
	235 Littleton Road
	Westford, Massachusetts 01886
Tel:    +1 508 692 5875
E-Mail: jjk@tiac.net',
    'This version published as RFC 2213.',
    '/xsd/INTEGRATED-SERVICES-MIB_1995-11-03.xsd',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03', 
    '/src/INTEGRATED-SERVICES-MIB_1995-11-03.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/INTEGRATED-SERVICES-MIB.yang',
    'INTEGRATED-SERVICES-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'SessionNumber', '57',
    'The Session  Number  convention  is  used  for
numbers  identifying  sessions or saved PATH or
RESV information. It is a number in  the  range
returned  by  a TestAndIncr variable, having no
protocol meaning whatsoever but serving instead
as simple identifier.

The alternative was a very complex instance  or
instance object that became unwieldy.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#SessionNumber.57', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'Protocol', '73',
    'The value of the IP Protocol field  of  an  IP
Datagram  Header.  This identifies the protocol
layer above IP.  For example, the  value  6  is
used  for TCP and the value 17 is used for UDP.
The values of this field are defined in the As-
signed Numbers RFC.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#Protocol.73', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'SessionType', '87',
    'The value of the C-Type field of a Session ob-
ject,  as  defined  in  the RSVP specification.
This value  determines  the  lengths  of  octet
strings  and use of certain objects such as the
\'port\' variables. If the C-Type  calls  for  an
IP6  address, one would expect all source, des-



tination, and next/previous hop addresses to be
16  bytes long, and for the ports to be UDP/TCP
port numbers, for example.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#SessionType.87', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'Port', '106',
    'The value of the UDP or TCP Source or Destina-
tion  Port field, a virtual destination port or
generalized port identifier used with the IPSEC
Authentication Header or Encapsulating Security
Payload, or other session discriminator.  If it
is  not  used, the value should be of length 0.
This pair, when coupled with the  IP  Addresses
of the source and destination system and the IP
protocol  field,  uniquely  identifies  a  data
stream.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#Port.106', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'MessageSize', '123',
    'The size of a message in bytes. This  is  used
to  specify  the  minimum and maximum size of a
message along an integrated services route.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#MessageSize.123', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'BitRate', '134',
    'The rate, in bits/second, that data  may  move
in  the context.  Applicable contexts minimally
include the speed of an  interface  or  virtual
circuit, the data rate of a (potentially aggre-
gated) data flow, or the data rate to be  allo-
cated for use by a flow.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#BitRate.134', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'BurstSize', '148',
    'The number of octets of IP Data, including  IP
Headers, that a stream may send without concern
for policing.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#BurstSize.148', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'QosService', '159',
    'The class of service in use by a flow.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#QosService.159', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvObjects', '169',
    '/intSrvObjects',
    '',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvObjects.169', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'intSrvIfAttribEntry intSrvFlowEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvIfAttribEntry', '174',
    '/intSrvObjects/intSrvIfAttribEntry',
    'The reservable attributes of  a  given  inter-
face.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvIfAttribEntry.174', 
    'list', 
    '/intSrvObjects',
    '0',
    '1',
    '',
    '',
    'ifIndex intSrvIfAttribAllocatedBits intSrvIfAttribMaxAllocatedBits intSrvIfAttribAllocatedBuffer intSrvIfAttribFlows intSrvIfAttribPropagationDelay intSrvIfAttribStatus',
    '',
    'ifIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'ifIndex', '182',
    '/intSrvObjects/intSrvIfAttribEntry/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#ifIndex.182', 
    'leaf', 
    '/intSrvObjects/intSrvIfAttribEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvIfAttribAllocatedBits', '191',
    '/intSrvObjects/intSrvIfAttribEntry/intSrvIfAttribAllocatedBits',
    'The number of bits/second currently  allocated
to reserved sessions on the interface.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvIfAttribAllocatedBits.191', 
    'leaf', 
    '/intSrvObjects/intSrvIfAttribEntry',
    '0',
    '1',
    'BitRate',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvIfAttribMaxAllocatedBits', '201',
    '/intSrvObjects/intSrvIfAttribEntry/intSrvIfAttribMaxAllocatedBits',
    'The maximum number of bits/second that may  be
allocated  to  reserved  sessions on the inter-
face.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvIfAttribMaxAllocatedBits.201', 
    'leaf', 
    '/intSrvObjects/intSrvIfAttribEntry',
    '0',
    '1',
    'BitRate',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvIfAttribAllocatedBuffer', '212',
    '/intSrvObjects/intSrvIfAttribEntry/intSrvIfAttribAllocatedBuffer',
    'The amount of buffer space  required  to  hold
the simultaneous burst of all reserved flows on
the interface.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvIfAttribAllocatedBuffer.212', 
    'leaf', 
    '/intSrvObjects/intSrvIfAttribEntry',
    '0',
    '1',
    'BurstSize',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvIfAttribFlows', '223',
    '/intSrvObjects/intSrvIfAttribEntry/intSrvIfAttribFlows',
    'The number of reserved flows currently  active
on  this  interface.  A flow can be created ei-
ther from a reservation protocol (such as  RSVP
or ST-II) or via configuration information.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvIfAttribFlows.223', 
    'leaf', 
    '/intSrvObjects/intSrvIfAttribEntry',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvIfAttribPropagationDelay', '234',
    '/intSrvObjects/intSrvIfAttribEntry/intSrvIfAttribPropagationDelay',
    'The amount of propagation delay that this  in-
terface  introduces  in addition to that intro-
diced by bit propagation delays.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvIfAttribPropagationDelay.234', 
    'leaf', 
    '/intSrvObjects/intSrvIfAttribEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvIfAttribStatus', '246',
    '/intSrvObjects/intSrvIfAttribEntry/intSrvIfAttribStatus',
    '\'active\' on interfaces that are configured for
RSVP.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvIfAttribStatus.246', 
    'leaf', 
    '/intSrvObjects/intSrvIfAttribEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowEntry', '259',
    '/intSrvObjects/intSrvFlowEntry',
    'Information describing the use of a given  in-
terface   by   a   given   flow.   The  counter
intSrvFlowPoliced starts counting  at  the  in-
stallation of the flow.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowEntry.259', 
    'list', 
    '/intSrvObjects',
    '0',
    '1',
    '',
    '',
    'intSrvFlowNumber intSrvFlowType intSrvFlowOwner intSrvFlowDestAddr intSrvFlowSenderAddr intSrvFlowDestAddrLength intSrvFlowSenderAddrLength intSrvFlowProtocol intSrvFlowDestPort intSrvFlowPort intSrvFlowFlowId intSrvFlowInterface intSrvFlowIfAddr intSrvFlowRate intSrvFlowBurst intSrvFlowWeight intSrvFlowQueue intSrvFlowMinTU intSrvFlowMaxTU intSrvFlowBestEffort intSrvFlowPoliced intSrvFlowDiscard intSrvFlowService intSrvFlowOrder intSrvFlowStatus',
    '',
    'intSrvFlowNumber',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowNumber', '270',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowNumber',
    'The number of this flow.  This is for SNMP In-
dexing purposes only and has no relation to any
protocol value.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowNumber.270', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'SessionNumber',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowType', '280',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowType',
    'The type of session (IP4, IP6, IP6  with  flow
information, etc).',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowType.280', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'SessionType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowOwner', '289',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowOwner',
    'The process that installed this  flow  in  the
queue policy database.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowOwner.289', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowDestAddr', '302',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowDestAddr',
    'The destination address used by all senders in
this  session.   This object may not be changed
when the value of the RowStatus object is  \'ac-
tive\'.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowDestAddr.302', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowSenderAddr', '315',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowSenderAddr',
    'The source address of the sender  selected  by
this  reservation.  The value of all zeroes in-
dicates \'all senders\'.  This object may not  be
changed  when the value of the RowStatus object
is \'active\'.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowSenderAddr.315', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowDestAddrLength', '329',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowDestAddrLength',
    'The length of the destination address in bits.
This  is  the CIDR Prefix Length, which for IP4
hosts and multicast addresses is 32 bits.  This
object may not be changed when the value of the
RowStatus object is \'active\'.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowDestAddrLength.329', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowSenderAddrLength', '343',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowSenderAddrLength',
    'The length of the sender\'s  address  in  bits.
This  is  the CIDR Prefix Length, which for IP4
hosts and multicast addresses is 32 bits.  This
object may not be changed when the value of the
RowStatus object is \'active\'.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowSenderAddrLength.343', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowProtocol', '357',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowProtocol',
    'The IP Protocol used by a session.   This  ob-
ject  may  not be changed when the value of the
RowStatus object is \'active\'.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowProtocol.357', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'Protocol',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowDestPort', '367',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowDestPort',
    'The UDP or TCP port number used as a  destina-
tion  port for all senders in this session.  If
the  IP   protocol   in   use,   specified   by
intSrvResvFwdProtocol,  is 50 (ESP) or 51 (AH),
this  represents  a  virtual  destination  port
number.   A value of zero indicates that the IP
protocol in use does not have ports.  This  ob-
ject  may  not be changed when the value of the



RowStatus object is \'active\'.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowDestPort.367', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'Port',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowPort', '386',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowPort',
    'The UDP or TCP port number used  as  a  source
port  for  this sender in this session.  If the
IP    protocol    in    use,    specified    by
intSrvResvFwdProtocol  is  50 (ESP) or 51 (AH),
this represents a generalized  port  identifier
(GPI).   A  value of zero indicates that the IP
protocol in use does not have ports.  This  ob-
ject  may  not be changed when the value of the
RowStatus object is \'active\'.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowPort.386', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'Port',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowFlowId', '402',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowFlowId',
    'The flow ID that  this  sender  is  using,  if
this  is  an IPv6 session.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowFlowId.402', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowInterface', '413',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowInterface',
    'The ifIndex value of the  interface  on  which
this reservation exists.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowInterface.413', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowIfAddr', '422',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowIfAddr',
    'The IP Address on the ifEntry  on  which  this
reservation  exists.  This is present primarily



to support those interfaces which layer  multi-
ple IP Addresses on the interface.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowIfAddr.422', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowRate', '438',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowRate',
    'The Reserved Rate of the sender\'s data stream.
If this is a Controlled Load service flow, this
rate is derived from the Tspec  rate  parameter
(r).   If  this  is  a Guaranteed service flow,
this rate is derived from  the  Rspec  clearing
rate parameter (R).',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowRate.438', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'BitRate',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowBurst', '452',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowBurst',
    'The size of the largest  burst  expected  from
the sender at a time.

If this is less than  the  sender\'s  advertised
burst  size, the receiver is asking the network
to provide flow pacing  beyond  what  would  be
provided  under normal circumstances. Such pac-
ing is at the network\'s option.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowBurst.452', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'BurstSize',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowWeight', '468',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowWeight',
    'The weight used  to  prioritize  the  traffic.
Note  that the interpretation of this object is
implementation-specific,   as   implementations
vary in their use of weighting procedures.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowWeight.468', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowQueue', '479',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowQueue',
    'The number of the queue used by this  traffic.
Note  that the interpretation of this object is
implementation-specific,   as   implementations
vary in their use of queue identifiers.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowQueue.479', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowMinTU', '490',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowMinTU',
    'The minimum message size for  this  flow.  The
policing  algorithm will treat smaller messages
as though they are this size.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowMinTU.490', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'MessageSize',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowMaxTU', '500',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowMaxTU',
    'The maximum datagram size for this  flow  that
will conform to the traffic specification. This
value cannot exceed the MTU of the interface.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowMaxTU.500', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'MessageSize',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowBestEffort', '510',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowBestEffort',
    'The number of packets that  were  remanded  to
best effort service.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowBestEffort.510', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowPoliced', '519',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowPoliced',
    'The number of packets policed since the incep-
tion of the flow\'s service.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowPoliced.519', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowDiscard', '528',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowDiscard',
    'If \'true\', the flow  is  to  incur  loss  when
traffic is policed.  If \'false\', policed traff-
ic is treated as best effort traffic.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowDiscard.528', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowService', '539',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowService',
    'The QoS service being applied to this flow.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowService.539', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'QosService',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowOrder', '547',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowOrder',
    'In the event of ambiguity, the order in  which
the  classifier  should  make  its comparisons.
The row with intSrvFlowOrder=0 is tried  first,
and  comparisons  proceed  in  the order of in-
creasing value.  Non-serial implementations  of
the classifier should emulate this behavior.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowOrder.547', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowStatus', '562',
    '/intSrvObjects/intSrvFlowEntry/intSrvFlowStatus',
    '\'active\' for all active  flows.   This  object



may be used to install static classifier infor-
mation, delete classifier information,  or  au-
thorize such.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowStatus.562', 
    'leaf', 
    '/intSrvObjects/intSrvFlowEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvGenObjects', '579',
    '/intSrvGenObjects',
    '',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvGenObjects.579', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'intSrvFlowNewIndex',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'INTEGRATED-SERVICES-MIB', 'INTEGRATED-SERVICES-MIB', '1995-11-03', 'intSrvFlowNewIndex', '581',
    '/intSrvGenObjects/intSrvFlowNewIndex',
    'This  object  is  used  to  assign  values  to
intSrvFlowNumber  as described in \'Textual Con-
ventions  for  SNMPv2\'.   The  network  manager
reads  the  object,  and  then writes the value
back in the SET that creates a new instance  of
intSrvFlowEntry.   If  the  SET  fails with the
code \'inconsistentValue\', then the process must
be  repeated; If the SET succeeds, then the ob-
ject is incremented, and the  new  instance  is
created according to the manager\'s directions.',
    '',
    '/modules/INTEGRATED-SERVICES-MIB/1995-11-03#intSrvFlowNewIndex.581', 
    'leaf', 
    '/intSrvGenObjects',
    '0',
    '1',
    'TestAndIncr',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/NOTIFICATION-LOG-MIB.yang
# module: NOTIFICATION-LOG-MIB
# version: 2000-11-27
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'NOTIFICATION-LOG-MIB');

INSERT INTO ncmodule VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'notification-log',
    'urn:ietf:params:xml:ns:yang:smiv2:NOTIFICATION-LOG-MIB',
    'IETF Distributed Management Working Group',
    'The MIB module for logging SNMP Notifications, that is, Traps


and Informs.',
    'The MIB module for logging SNMP Notifications, that is, Traps


and Informs.',
    '',
    'Ramanathan Kavasseri
Cisco Systems, Inc.
170 West Tasman Drive,
San Jose CA 95134-1706.
Phone: +1 408 527 2446
Email: ramk@cisco.com',
    'This is the initial version of this MIB.
Published as RFC 3014',
    '/xsd/NOTIFICATION-LOG-MIB_2000-11-27.xsd',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27', 
    '/src/NOTIFICATION-LOG-MIB_2000-11-27.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/NOTIFICATION-LOG-MIB.yang',
    'NOTIFICATION-LOG-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfig', '49',
    '/nlmConfig',
    '',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfig.49', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'nlmConfigGlobalEntryLimit nlmConfigGlobalAgeOut nlmConfigLogEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfigGlobalEntryLimit', '51',
    '/nlmConfig/nlmConfigGlobalEntryLimit',
    'The maximum number of notification entries that may be held
in nlmLogTable for all nlmLogNames added together.  A particular
setting does not guarantee that much data can be held.

If an application changes the limit while there are
Notifications in the log, the oldest Notifications MUST be
discarded to bring the log down to the new limit - thus the
value of nlmConfigGlobalEntryLimit MUST take precedence over
the values of nlmConfigGlobalAgeOut and nlmConfigLogEntryLimit,
even if the Notification being discarded has been present for
fewer minutes than the value of nlmConfigGlobalAgeOut, or if
the named log has fewer entries than that specified in
nlmConfigLogEntryLimit.

A value of 0 means no limit.

Please be aware that contention between multiple managers
trying to set this object to different values MAY affect the
reliability and completeness of data seen by each manager.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfigGlobalEntryLimit.51', 
    'leaf', 
    '/nlmConfig',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfigGlobalAgeOut', '78',
    '/nlmConfig/nlmConfigGlobalAgeOut',
    'The number of minutes a Notification SHOULD be kept in a log
before it is automatically removed.

If an application changes the value of nlmConfigGlobalAgeOut,
Notifications older than the new time MAY be discarded to meet the
new time.

A value of 0 means no age out.

Please be aware that contention between multiple managers
trying to set this object to different values MAY affect the
reliability and completeness of data seen by each manager.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfigGlobalAgeOut.78', 
    'leaf', 
    '/nlmConfig',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfigLogEntry', '102',
    '/nlmConfig/nlmConfigLogEntry',
    'A logging control entry.  Depending on the entry\'s storage type
entries may be supplied by the system or created and deleted by
applications using nlmConfigLogEntryStatus.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfigLogEntry.102', 
    'list', 
    '/nlmConfig',
    '0',
    '1',
    '',
    '',
    'nlmLogName nlmConfigLogFilterName nlmConfigLogEntryLimit nlmConfigLogAdminStatus nlmConfigLogOperStatus nlmConfigLogStorageType nlmConfigLogEntryStatus nlmStatsLogNotificationsLogged nlmStatsLogNotificationsBumped',
    '',
    'nlmLogName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogName', '112',
    '/nlmConfig/nlmConfigLogEntry/nlmLogName',
    'The name of the log.

An implementation may allow multiple named logs, up to some
implementation-specific limit (which may be none).  A
zero-length log name is reserved for creation and deletion by
the managed system, and MUST be used as the default log name by
systems that do not support named logs.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogName.112', 
    'leaf', 
    '/nlmConfig/nlmConfigLogEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfigLogFilterName', '128',
    '/nlmConfig/nlmConfigLogEntry/nlmConfigLogFilterName',
    'A value of snmpNotifyFilterProfileName as used as an index
into the snmpNotifyFilterTable in the SNMP Notification MIB,
specifying the locally or remotely originated Notifications
to be filtered out and not logged in this log.

A zero-length value or a name that does not identify an
existing entry in snmpNotifyFilterTable indicate no
Notifications are to be logged in this log.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfigLogFilterName.128', 
    'leaf', 
    '/nlmConfig/nlmConfigLogEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfigLogEntryLimit', '146',
    '/nlmConfig/nlmConfigLogEntry/nlmConfigLogEntryLimit',
    'The maximum number of notification entries that can be held in
nlmLogTable for this named log.  A particular setting does not
guarantee that that much data can be held.

If an application changes the limit while there are
Notifications in the log, the oldest Notifications are discarded
to bring the log down to the new limit.



A value of 0 indicates no limit.

Please be aware that contention between multiple managers
trying to set this object to different values MAY affect the
reliability and completeness of data seen by each manager.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfigLogEntryLimit.146', 
    'leaf', 
    '/nlmConfig/nlmConfigLogEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfigLogAdminStatus', '169',
    '/nlmConfig/nlmConfigLogEntry/nlmConfigLogAdminStatus',
    'Control to enable or disable the log without otherwise
disturbing the log\'s entry.

Please be aware that contention between multiple managers
trying to set this object to different values MAY affect the
reliability and completeness of data seen by each manager.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfigLogAdminStatus.169', 
    'leaf', 
    '/nlmConfig/nlmConfigLogEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfigLogOperStatus', '186',
    '/nlmConfig/nlmConfigLogEntry/nlmConfigLogOperStatus',
    'The operational status of this log:

disabled  administratively disabled

operational    administratively enabled and working

noFilter  administratively enabled but either
	  nlmConfigLogFilterName is zero length
	  or does not name an existing entry in
	  snmpNotifyFilterTable',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfigLogOperStatus.186', 
    'leaf', 
    '/nlmConfig/nlmConfigLogEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfigLogStorageType', '207',
    '/nlmConfig/nlmConfigLogEntry/nlmConfigLogStorageType',
    'The storage type of this conceptual row.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfigLogStorageType.207', 
    'leaf', 
    '/nlmConfig/nlmConfigLogEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmConfigLogEntryStatus', '215',
    '/nlmConfig/nlmConfigLogEntry/nlmConfigLogEntryStatus',
    'Control for creating and deleting entries.  Entries may be
modified while active.

For non-null-named logs, the managed system records the security
credentials from the request that sets nlmConfigLogStatus
to \'active\' and uses that identity to apply access control to
the objects in the Notification to decide if that Notification
may be logged.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmConfigLogEntryStatus.215', 
    'leaf', 
    '/nlmConfig/nlmConfigLogEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmStatsLogNotificationsLogged', '574',
    '/nlmConfig/nlmConfigLogEntry/nlmStatsLogNotificationsLogged',
    'The number of Notifications put in this named log.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmStatsLogNotificationsLogged.574', 
    'leaf', 
    '/nlmConfig/nlmConfigLogEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmStatsLogNotificationsBumped', '583',
    '/nlmConfig/nlmConfigLogEntry/nlmStatsLogNotificationsBumped',
    'The number of log entries discarded from this named log to make
room for a new entry due to lack of resources or the value of
nlmConfigGlobalEntryLimit or nlmConfigLogEntryLimit.  This does not
include entries discarded due to the value of
nlmConfigGlobalAgeOut.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmStatsLogNotificationsBumped.583', 
    'leaf', 
    '/nlmConfig/nlmConfigLogEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmStats', '233',
    '/nlmStats',
    '',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmStats.233', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'nlmStatsGlobalNotificationsLogged nlmStatsGlobalNotificationsBumped',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmStatsGlobalNotificationsLogged', '235',
    '/nlmStats/nlmStatsGlobalNotificationsLogged',
    'The number of Notifications put into the nlmLogTable.  This
counts a Notification once for each log entry, so a Notification
 put into multiple logs is counted multiple times.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmStatsGlobalNotificationsLogged.235', 
    'leaf', 
    '/nlmStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmStatsGlobalNotificationsBumped', '246',
    '/nlmStats/nlmStatsGlobalNotificationsBumped',
    'The number of log entries discarded to make room for a new entry
due to lack of resources or the value of nlmConfigGlobalEntryLimit
or nlmConfigLogEntryLimit.  This does not include entries discarded
due to the value of nlmConfigGlobalAgeOut.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmStatsGlobalNotificationsBumped.246', 
    'leaf', 
    '/nlmStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLog', '261',
    '/nlmLog',
    '',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLog.261', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'nlmLogEntry nlmLogVariableEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogEntry', '266',
    '/nlmLog/nlmLogEntry',
    'A Notification log entry.

Entries appear in this table when Notifications occur and pass
filtering by nlmConfigLogFilterName and access control.  They are
removed to make way for new entries due to lack of resources or
the values of nlmConfigGlobalEntryLimit, nlmConfigGlobalAgeOut, or
nlmConfigLogEntryLimit.

If adding an entry would exceed nlmConfigGlobalEntryLimit or system
resources in general, the oldest entry in any log SHOULD be removed
to make room for the new one.

If adding an entry would exceed nlmConfigLogEntryLimit the oldest
entry in that log SHOULD be removed to make room for the new one.

Before the managed system puts a locally-generated Notification
into a non-null-named log it assures that the creator of the log
has access to the information in the Notification.  If not it
does not log that Notification in that log.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogEntry.266', 
    'list', 
    '/nlmLog',
    '0',
    '1',
    '',
    '',
    'nlmLogName nlmLogIndex nlmLogTime nlmLogDateAndTime nlmLogEngineID nlmLogEngineTAddress nlmLogEngineTDomain nlmLogContextEngineID nlmLogContextName nlmLogNotificationID',
    '',
    'nlmLogName nlmLogIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogName', '291',
    '/nlmLog/nlmLogEntry/nlmLogName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogName.291', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogIndex', '300',
    '/nlmLog/nlmLogEntry/nlmLogIndex',
    'A monotonically increasing integer for the sole purpose of
indexing entries within the named log.  When it reaches the
maximum value, an extremely unlikely event, the agent wraps the
value back to 1.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogIndex.300', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogTime', '313',
    '/nlmLog/nlmLogEntry/nlmLogTime',
    'The value of sysUpTime when the entry was placed in the log. If
the entry occurred before the most recent management system
initialization this object value MUST be set to zero.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogTime.313', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogDateAndTime', '323',
    '/nlmLog/nlmLogEntry/nlmLogDateAndTime',
    'The local date and time when the entry was logged, instantiated
only by systems that have date and time capability.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogDateAndTime.323', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogEngineID', '332',
    '/nlmLog/nlmLogEntry/nlmLogEngineID',
    'The identification of the SNMP engine at which the Notification


originated.

If the log can contain Notifications from only one engine
or the Trap is in SNMPv1 format, this object is a zero-length
string.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogEngineID.332', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'SnmpEngineID',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogEngineTAddress', '347',
    '/nlmLog/nlmLogEntry/nlmLogEngineTAddress',
    'The transport service address of the SNMP engine from which the
Notification was received, formatted according to the corresponding
value of nlmLogEngineTDomain. This is used to identify the source
of an SNMPv1 trap, since an nlmLogEngineId cannot be extracted
from the SNMPv1 trap pdu.

This object MUST always be instantiated, even if the log
can contain Notifications from only one engine.

Please be aware that the nlmLogEngineTAddress may not uniquely
identify the SNMP engine from which the Notification was received.
For example, if an SNMP engine uses DHCP or NAT to obtain
ip addresses, the address it uses may be shared with other
network devices, and hence will not uniquely identify the
SNMP engine.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogEngineTAddress.347', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'TAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogEngineTDomain', '369',
    '/nlmLog/nlmLogEntry/nlmLogEngineTDomain',
    'Indicates the kind of transport service by which a Notification
was received from an SNMP engine. nlmLogEngineTAddress contains
the transport service address of the SNMP engine from which
this Notification was received.

Possible values for this object are presently found in the
Transport Mappings for SNMPv2 document (RFC 1906 [8]).',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogEngineTDomain.369', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'TDomain',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogContextEngineID', '383',
    '/nlmLog/nlmLogEntry/nlmLogContextEngineID',
    'If the Notification was received in a protocol which has a
contextEngineID element like SNMPv3, this object has that value.
Otherwise its value is a zero-length string.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogContextEngineID.383', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'SnmpEngineID',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogContextName', '393',
    '/nlmLog/nlmLogEntry/nlmLogContextName',
    'The name of the SNMP MIB context from which the Notification came.
For SNMPv1 Traps this is the community string from the Trap.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogContextName.393', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogNotificationID', '402',
    '/nlmLog/nlmLogEntry/nlmLogNotificationID',
    'The NOTIFICATION-TYPE object identifier of the Notification that
occurred.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogNotificationID.402', 
    'leaf', 
    '/nlmLog/nlmLogEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableEntry', '415',
    '/nlmLog/nlmLogVariableEntry',
    'A Notification log entry variable.

Entries appear in this table when there are variables in
the varbind list of a Notification in nlmLogTable.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableEntry.415', 
    'list', 
    '/nlmLog',
    '0',
    '1',
    '',
    '',
    'nlmLogName nlmLogIndex nlmLogVariableIndex nlmLogVariableID nlmLogVariableValueType nlmLogVariableCounter32Val nlmLogVariableUnsigned32Val nlmLogVariableTimeTicksVal nlmLogVariableInteger32Val nlmLogVariableOctetStringVal nlmLogVariableIpAddressVal nlmLogVariableOidVal nlmLogVariableCounter64Val nlmLogVariableOpaqueVal',
    '',
    'nlmLogName nlmLogIndex nlmLogVariableIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogName', '425',
    '/nlmLog/nlmLogVariableEntry/nlmLogName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogName.425', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogIndex', '433',
    '/nlmLog/nlmLogVariableEntry/nlmLogIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogIndex.433', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableIndex', '442',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableIndex',
    'A monotonically increasing integer, starting at 1 for a given
nlmLogIndex, for indexing variables within the logged
Notification.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableIndex.442', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableID', '454',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableID',
    'The variable\'s object identifier.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableID.454', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableValueType', '462',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableValueType',
    'The type of the value.  One and only one of the value
objects that follow must be instantiated, based on this type.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableValueType.462', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableCounter32Val', '481',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableCounter32Val',
    'The value when nlmLogVariableType is \'counter32\'.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableCounter32Val.481', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableUnsigned32Val', '489',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableUnsigned32Val',
    'The value when nlmLogVariableType is \'unsigned32\'.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableUnsigned32Val.489', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableTimeTicksVal', '497',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableTimeTicksVal',
    'The value when nlmLogVariableType is \'timeTicks\'.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableTimeTicksVal.497', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableInteger32Val', '505',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableInteger32Val',
    'The value when nlmLogVariableType is \'integer32\'.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableInteger32Val.505', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableOctetStringVal', '513',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableOctetStringVal',
    'The value when nlmLogVariableType is \'octetString\'.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableOctetStringVal.513', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableIpAddressVal', '521',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableIpAddressVal',
    'The value when nlmLogVariableType is \'ipAddress\'.
Although this seems to be unfriendly for IPv6, we
have to recognize that there are a number of older
MIBs that do contain an IPv4 format address, known
as IpAddress.

IPv6 addresses are represented using TAddress or
InetAddress, and so the underlying datatype is


OCTET STRING, and their value would be stored in
the nlmLogVariableOctetStringVal column.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableIpAddressVal.521', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableOidVal', '540',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableOidVal',
    'The value when nlmLogVariableType is \'objectId\'.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableOidVal.540', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableCounter64Val', '548',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableCounter64Val',
    'The value when nlmLogVariableType is \'counter64\'.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableCounter64Val.548', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NOTIFICATION-LOG-MIB', 'NOTIFICATION-LOG-MIB', '2000-11-27', 'nlmLogVariableOpaqueVal', '556',
    '/nlmLog/nlmLogVariableEntry/nlmLogVariableOpaqueVal',
    'The value when nlmLogVariableType is \'opaque\'.',
    '',
    '/modules/NOTIFICATION-LOG-MIB/2000-11-27#nlmLogVariableOpaqueVal.556', 
    'leaf', 
    '/nlmLog/nlmLogVariableEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/DIFFSERV-DSCP-TC.yang
# module: DIFFSERV-DSCP-TC
# version: 2002-05-09
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'DIFFSERV-DSCP-TC');

INSERT INTO ncmodule VALUES (
    '', 'DIFFSERV-DSCP-TC', 'DIFFSERV-DSCP-TC', '2002-05-09', 'diffserv-dscp',
    'urn:ietf:params:xml:ns:yang:smiv2:DIFFSERV-DSCP-TC',
    'IETF Differentiated Services WG',
    'The Textual Conventions defined in this module should be used
whenever a Differentiated Services Code Point is used in a MIB.',
    'The Textual Conventions defined in this module should be used
whenever a Differentiated Services Code Point is used in a MIB.',
    '',
    '       Fred Baker
Cisco Systems
1121 Via Del Rey
Santa Barbara, CA 93117, USA
E-mail: fred@cisco.com

Kwok Ho Chan
Nortel Networks
600 Technology Park Drive
Billerica, MA 01821, USA
E-mail: khchan@nortelnetworks.com

Andrew Smith
Harbour Networks
Jiuling Building
21 North Xisanhuan Ave.
Beijing, 100089, PRC
E-mail: ah_smith@acm.org

  Differentiated Services Working Group:
  diffserv@ietf.org',
    'Initial version, published as RFC 3289.',
    '/xsd/DIFFSERV-DSCP-TC_2002-05-09.xsd',
    '/modules/DIFFSERV-DSCP-TC/2002-05-09', 
    '/src/DIFFSERV-DSCP-TC_2002-05-09.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/DIFFSERV-DSCP-TC.yang',
    'DIFFSERV-DSCP-TC.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'DIFFSERV-DSCP-TC', 'DIFFSERV-DSCP-TC', '2002-05-09', 'Dscp', '59',
    'A Differentiated Services Code-Point that may be used for
marking a traffic stream.',
    'RFC 2474, RFC 2780',
    '/modules/DIFFSERV-DSCP-TC/2002-05-09#Dscp.59', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'DIFFSERV-DSCP-TC', 'DIFFSERV-DSCP-TC', '2002-05-09', 'DscpOrAny', '71',
    'The IP header Differentiated Services Code-Point that may be



used for discriminating among traffic streams. The value -1 is
used to indicate a wild card i.e. any value.',
    'RFC 2474, RFC 2780',
    '/modules/DIFFSERV-DSCP-TC/2002-05-09#DscpOrAny.71', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMPv2-MIB.yang
# module: SNMPv2-MIB
# version: 2002-10-16
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMPv2-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpv2-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-MIB',
    'IETF SNMPv3 Working Group',
    'The MIB module for SNMP entities.

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 341...',
    'The MIB module for SNMP entities.

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 3418;
see the RFC itself for full legal notices.',
    '',
    'WG-EMail:   snmpv3@lists.tislabs.com
Subscribe:  snmpv3-request@lists.tislabs.com

Co-Chair:   Russ Mundy
	    Network Associates Laboratories
postal:     15204 Omega Drive, Suite 300
	    Rockville, MD 20850-4601
	    USA
EMail:      mundy@tislabs.com
phone:      +1 301 947-7107

Co-Chair:   David Harrington
	    Enterasys Networks
postal:     35 Industrial Way
	    P. O. Box 5005
	    Rochester, NH 03866-5005
	    USA
EMail:      dbh@enterasys.com
phone:      +1 603 337-2614

Editor:     Randy Presuhn
	    BMC Software, Inc.
postal:     2141 North First Street
	    San Jose, CA 95131
	    USA
EMail:      randy_presuhn@bmc.com
phone:      +1 408 546-1006',
    'This revision of this MIB module was published as
RFC 3418.',
    '/xsd/SNMPv2-MIB_2002-10-16.xsd',
    '/modules/SNMPv2-MIB/2002-10-16', 
    '/src/SNMPv2-MIB_2002-10-16.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMPv2-MIB.yang',
    'SNMPv2-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'system', '79',
    '/system',
    '',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#system.79', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'sysDescr sysObjectID sysUpTime sysContact sysName sysLocation sysServices sysORLastChange sysOREntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysDescr', '81',
    '/system/sysDescr',
    'A textual description of the entity.  This value should
include the full name and version identification of
the system\'s hardware type, software operating-system,
and networking software.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysDescr.81', 
    'leaf', 
    '/system',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysObjectID', '94',
    '/system/sysObjectID',
    'The vendor\'s authoritative identification of the
network management subsystem contained in the entity.
This value is allocated within the SMI enterprises
subtree (1.3.6.1.4.1) and provides an easy and
unambiguous means for determining `what kind of box\' is
being managed.  For example, if vendor `Flintstones,
Inc.\' was assigned the subtree 1.3.6.1.4.1.424242,
it could assign the identifier 1.3.6.1.4.1.424242.1.1
to its `Fred Router\'.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysObjectID.94', 
    'leaf', 
    '/system',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysUpTime', '110',
    '/system/sysUpTime',
    'The time (in hundredths of a second) since the
network management portion of the system was last
re-initialized.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysUpTime.110', 
    'leaf', 
    '/system',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysContact', '120',
    '/system/sysContact',
    'The textual identification of the contact person for
this managed node, together with information on how
to contact this person.  If no contact information is
known, the value is the zero-length string.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysContact.120', 
    'leaf', 
    '/system',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysName', '133',
    '/system/sysName',
    'An administratively-assigned name for this managed
node.  By convention, this is the node\'s fully-qualified
domain name.  If the name is unknown, the value is
the zero-length string.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysName.133', 
    'leaf', 
    '/system',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysLocation', '146',
    '/system/sysLocation',
    'The physical location of this node (e.g., \'telephone
closet, 3rd floor\').  If the location is unknown, the
value is the zero-length string.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysLocation.146', 
    'leaf', 
    '/system',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysServices', '158',
    '/system/sysServices',
    'A value which indicates the set of services that this
entity may potentially offer.  The value is a sum.

This sum initially takes the value zero. Then, for
each layer, L, in the range 1 through 7, that this node
performs transactions for, 2 raised to (L - 1) is added
to the sum.  For example, a node which performs only
routing functions would have a value of 4 (2^(3-1)).
In contrast, a node which is a host offering application
services would have a value of 72 (2^(4-1) + 2^(7-1)).
Note that in the context of the Internet suite of
protocols, values should be calculated accordingly:

     layer      functionality
       1        physical (e.g., repeaters)
       2        datalink/subnetwork (e.g., bridges)
       3        internet (e.g., supports the IP)
       4        end-to-end  (e.g., supports the TCP)
       7        applications (e.g., supports the SMTP)

For systems including OSI protocols, layers 5 and 6
may also be counted.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysServices.158', 
    'leaf', 
    '/system',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysORLastChange', '189',
    '/system/sysORLastChange',
    'The value of sysUpTime at the time of the most recent
change in state or value of any instance of sysORID.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysORLastChange.189', 
    'leaf', 
    '/system',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysOREntry', '201',
    '/system/sysOREntry',
    'An entry (conceptual row) in the sysORTable.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysOREntry.201', 
    'list', 
    '/system',
    '0',
    '1',
    '',
    '',
    'sysORIndex sysORID sysORDescr sysORUpTime',
    '',
    'sysORIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysORIndex', '209',
    '/system/sysOREntry/sysORIndex',
    'The auxiliary variable used for identifying instances
of the columnar objects in the sysORTable.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysORIndex.209', 
    'leaf', 
    '/system/sysOREntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysORID', '220',
    '/system/sysOREntry/sysORID',
    'An authoritative identification of a capabilities
statement with respect to various MIB modules supported
by the local SNMP application acting as a command
responder.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysORID.220', 
    'leaf', 
    '/system/sysOREntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysORDescr', '231',
    '/system/sysOREntry/sysORDescr',
    'A textual description of the capabilities identified
by the corresponding instance of sysORID.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysORDescr.231', 
    'leaf', 
    '/system/sysOREntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'sysORUpTime', '240',
    '/system/sysOREntry/sysORUpTime',
    'The value of sysUpTime at the time this conceptual
row was last instantiated.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#sysORUpTime.240', 
    'leaf', 
    '/system/sysOREntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmp', '252',
    '/snmp',
    '',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmp.252', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'snmpInPkts snmpOutPkts snmpInBadVersions snmpInBadCommunityNames snmpInBadCommunityUses snmpInASNParseErrs snmpInTooBigs snmpInNoSuchNames snmpInBadValues snmpInReadOnlys snmpInGenErrs snmpInTotalReqVars snmpInTotalSetVars snmpInGetRequests snmpInGetNexts snmpInSetRequests snmpInGetResponses snmpInTraps snmpOutTooBigs snmpOutNoSuchNames snmpOutBadValues snmpOutGenErrs snmpOutGetRequests snmpOutGetNexts snmpOutSetRequests snmpOutGetResponses snmpOutTraps snmpEnableAuthenTraps snmpSilentDrops snmpProxyDrops',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInPkts', '254',
    '/snmp/snmpInPkts',
    'The total number of messages delivered to the SNMP
entity from the transport service.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInPkts.254', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutPkts', '263',
    '/snmp/snmpOutPkts',
    'The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutPkts.263', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInBadVersions', '274',
    '/snmp/snmpInBadVersions',
    'The total number of SNMP messages which were delivered
to the SNMP entity and were for an unsupported SNMP
version.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInBadVersions.274', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInBadCommunityNames', '284',
    '/snmp/snmpInBadCommunityNames',
    'The total number of community-based SNMP messages (for
example,  SNMPv1) delivered to the SNMP entity which
used an SNMP community name not known to said entity.
Also, implementations which authenticate community-based
SNMP messages using check(s) in addition to matching
the community name (for example, by also checking
whether the message originated from a transport address
allowed to use a specified community name) MAY include
in this value the number of messages which failed the
additional check(s).  It is strongly RECOMMENDED that

the documentation for any security model which is used
to authenticate community-based SNMP messages specify
the precise conditions that contribute to this value.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInBadCommunityNames.284', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInBadCommunityUses', '305',
    '/snmp/snmpInBadCommunityUses',
    'The total number of community-based SNMP messages (for
example, SNMPv1) delivered to the SNMP entity which
represented an SNMP operation that was not allowed for
the SNMP community named in the message.  The precise
conditions under which this counter is incremented
(if at all) depend on how the SNMP entity implements
its access control mechanism and how its applications
interact with that access control mechanism.  It is
strongly RECOMMENDED that the documentation for any
access control mechanism which is used to control access
to and visibility of MIB instrumentation specify the
precise conditions that contribute to this value.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInBadCommunityUses.305', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInASNParseErrs', '324',
    '/snmp/snmpInASNParseErrs',
    'The total number of ASN.1 or BER errors encountered by
the SNMP entity when decoding received SNMP messages.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInASNParseErrs.324', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInTooBigs', '333',
    '/snmp/snmpInTooBigs',
    'The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig\'.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInTooBigs.333', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInNoSuchNames', '345',
    '/snmp/snmpInNoSuchNames',
    'The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName\'.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInNoSuchNames.345', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInBadValues', '357',
    '/snmp/snmpInBadValues',
    'The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue\'.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInBadValues.357', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInReadOnlys', '369',
    '/snmp/snmpInReadOnlys',
    'The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly\'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly\' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInReadOnlys.369', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInGenErrs', '385',
    '/snmp/snmpInGenErrs',
    'The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr\'.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInGenErrs.385', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInTotalReqVars', '396',
    '/snmp/snmpInTotalReqVars',
    'The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInTotalReqVars.396', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInTotalSetVars', '408',
    '/snmp/snmpInTotalSetVars',
    'The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInTotalSetVars.408', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInGetRequests', '419',
    '/snmp/snmpInGetRequests',
    'The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInGetRequests.419', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInGetNexts', '430',
    '/snmp/snmpInGetNexts',
    'The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInGetNexts.430', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInSetRequests', '440',
    '/snmp/snmpInSetRequests',
    'The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInSetRequests.440', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInGetResponses', '451',
    '/snmp/snmpInGetResponses',
    'The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInGetResponses.451', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpInTraps', '462',
    '/snmp/snmpInTraps',
    'The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpInTraps.462', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutTooBigs', '472',
    '/snmp/snmpOutTooBigs',
    'The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.\'',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutTooBigs.472', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutNoSuchNames', '483',
    '/snmp/snmpOutNoSuchNames',
    'The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName\'.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutNoSuchNames.483', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutBadValues', '494',
    '/snmp/snmpOutBadValues',
    'The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `badValue\'.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutBadValues.494', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutGenErrs', '505',
    '/snmp/snmpOutGenErrs',
    'The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `genErr\'.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutGenErrs.505', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutGetRequests', '516',
    '/snmp/snmpOutGetRequests',
    'The total number of SNMP Get-Request PDUs which
have been generated by the SNMP protocol entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutGetRequests.516', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutGetNexts', '526',
    '/snmp/snmpOutGetNexts',
    'The total number of SNMP Get-Next PDUs which have
been generated by the SNMP protocol entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutGetNexts.526', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutSetRequests', '536',
    '/snmp/snmpOutSetRequests',
    'The total number of SNMP Set-Request PDUs which
have been generated by the SNMP protocol entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutSetRequests.536', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutGetResponses', '546',
    '/snmp/snmpOutGetResponses',
    'The total number of SNMP Get-Response PDUs which
have been generated by the SNMP protocol entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutGetResponses.546', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpOutTraps', '556',
    '/snmp/snmpOutTraps',
    'The total number of SNMP Trap PDUs which have
been generated by the SNMP protocol entity.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpOutTraps.556', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpEnableAuthenTraps', '566',
    '/snmp/snmpEnableAuthenTraps',
    'Indicates whether the SNMP entity is permitted to
generate authenticationFailure traps.  The value of this
object overrides any configuration information; as such,
it provides a means whereby all authenticationFailure
traps may be disabled.

Note that it is strongly recommended that this object
be stored in non-volatile memory so that it remains
constant across re-initializations of the network
management system.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpEnableAuthenTraps.566', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpSilentDrops', '586',
    '/snmp/snmpSilentDrops',
    'The total number of Confirmed Class PDUs (such as
GetRequest-PDUs, GetNextRequest-PDUs,
GetBulkRequest-PDUs, SetRequest-PDUs, and
InformRequest-PDUs) delivered to the SNMP entity which
were silently dropped because the size of a reply
containing an alternate Response Class PDU (such as a
Response-PDU) with an empty variable-bindings field
was greater than either a local constraint or the
maximum message size associated with the originator of
the request.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpSilentDrops.586', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpProxyDrops', '603',
    '/snmp/snmpProxyDrops',
    'The total number of Confirmed Class PDUs
(such as GetRequest-PDUs, GetNextRequest-PDUs,
GetBulkRequest-PDUs, SetRequest-PDUs, and
InformRequest-PDUs) delivered to the SNMP entity which
were silently dropped because the transmission of
the (possibly translated) message to a proxy target
failed in a manner (other than a time-out) such that
no Response Class PDU (such as a Response-PDU) could
be returned.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpProxyDrops.603', 
    'leaf', 
    '/snmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpTrap', '621',
    '/snmpTrap',
    '',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpTrap.621', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'snmpTrapOID snmpTrapEnterprise',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpTrapOID', '623',
    '/snmpTrap/snmpTrapOID',
    'The authoritative identification of the notification
currently being sent.  This variable occurs as
the second varbind in every SNMPv2-Trap-PDU and
InformRequest-PDU.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpTrapOID.623', 
    'leaf', 
    '/snmpTrap',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpTrapEnterprise', '634',
    '/snmpTrap/snmpTrapEnterprise',
    'The authoritative identification of the enterprise
associated with the trap currently being sent.  When an
SNMP proxy agent is mapping an RFC1157 Trap-PDU
into a SNMPv2-Trap-PDU, this variable occurs as the
last varbind.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpTrapEnterprise.634', 
    'leaf', 
    '/snmpTrap',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpSet', '648',
    '/snmpSet',
    '',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpSet.648', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'snmpSetSerialNo',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'snmpSetSerialNo', '650',
    '/snmpSet/snmpSetSerialNo',
    'An advisory lock used to allow several cooperating
command generator applications to coordinate their
use of the SNMP set operation.

This object is used for coarse-grain coordination.
To achieve fine-grain coordination, one or more similar
objects might be defined within each MIB group, as
appropriate.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#snmpSetSerialNo.650', 
    'leaf', 
    '/snmpSet',
    '0',
    '1',
    'TestAndIncr',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'coldStart', '667',
    '/coldStart',
    'A coldStart trap signifies that the SNMP entity,
supporting a notification originator application, is
reinitializing itself and that its configuration may
have been altered.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#coldStart.667', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    '',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'warmStart', '677',
    '/warmStart',
    'A warmStart trap signifies that the SNMP entity,
supporting a notification originator application,
is reinitializing itself such that its configuration
is unaltered.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#warmStart.677', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    '',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMPv2-MIB', 'SNMPv2-MIB', '2002-10-16', 'authenticationFailure', '687',
    '/authenticationFailure',
    'An authenticationFailure trap signifies that the SNMP
entity has received a protocol message that is not
properly authenticated.  While all implementations
of SNMP entities MAY be capable of generating this
trap, the snmpEnableAuthenTraps object indicates
whether this trap will be generated.',
    '',
    '/modules/SNMPv2-MIB/2002-10-16#authenticationFailure.687', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    '',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/notifications.yang
# module: notifications
# version: 2008-02-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'notifications');

INSERT INTO ncmodule VALUES (
    '', 'notifications', 'notifications', '2008-02-14', 'ncEvent',
    'urn:ietf:params:xml:ns:netconf:notification:1.0',
    'IETF NETCONF WG',
    'Conversion of the \'ncEvent\' XSD in the 
NETCONF Notifications draft.',
    'Conversion of the \'ncEvent\' XSD in the 
NETCONF Notifications draft.',
    'draft-ietf-netconf-notifications-11.txt',
    'netconf@ops.ietf.org',
    'Initial version, based on -11 draft.',
    '/xsd/notifications_2008-02-14.xsd',
    '/modules/notifications/2008-02-14', 
    '/src/notifications_2008-02-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/notifications.yang',
    'notifications.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'notifications', 'notifications', '2008-02-14', 'streamNameType', '25',
    'The name of an event stream.',
    '',
    '/modules/notifications/2008-02-14#streamNameType.25', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'notifications', 'notifications', '2008-02-14', 'create-subscription', '31',
    '/create-subscription',
    'The command to create a notification subscription. It
takes as argument the name of the notification stream
and filter. Both of those options limit the content of
the subscription. In addition, there are two time-related
parameters, startTime and stopTime, which can be used to 
select the time interval of interest to the notification
replay feature.',
    '',
    '/modules/notifications/2008-02-14#create-subscription.31', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'notifications', 'notifications', '2008-02-14', 'input', '41',
    '/create-subscription/input',
    '',
    '',
    '/modules/notifications/2008-02-14#input.41', 
    'input or output', 
    '/create-subscription',
    '0',
    '0',
    '',
    '',
    'stream filter startTime stopTime',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'notifications', 'notifications', '2008-02-14', 'stream', '42',
    '/create-subscription/input/stream',
    'An optional parameter that indicates which stream of events
is of interest. If not present, then events in the default
NETCONF stream will be sent.',
    '',
    '/modules/notifications/2008-02-14#stream.42', 
    'leaf', 
    '/create-subscription/input',
    '0',
    '0',
    'streamNameType',
    '',
    '',
    'NETCONF',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'notifications', 'notifications', '2008-02-14', 'filter', '51',
    '/create-subscription/input/filter',
    'An optional parameter that indicates which subset of all
possible events is of interest. The format of this
parameter is the same as that of the filter parameter
in the NETCONF protocol operations. If not present,
all events not precluded by other parameters will 
be sent.',
    '',
    '/modules/notifications/2008-02-14#filter.51', 
    'leaf', 
    '/create-subscription/input',
    '0',
    '0',
    'anyxml',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'notifications', 'notifications', '2008-02-14', 'startTime', '61',
    '/create-subscription/input/startTime',
    'A parameter used to trigger the replay feature and
indicates that the replay should start at the time
specified. If start time is not present, this is not a
replay subscription.',
    '',
    '/modules/notifications/2008-02-14#startTime.61', 
    'leaf', 
    '/create-subscription/input',
    '0',
    '0',
    'dateTime',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'notifications', 'notifications', '2008-02-14', 'stopTime', '70',
    '/create-subscription/input/stopTime',
    'An optional parameter used with the optional replay
feature to indicate the newest notifications of
interest. If stop time is not present, the notifications
will continue until the subscription is terminated.
Must be used with startTime.',
    '',
    '/modules/notifications/2008-02-14#stopTime.70', 
    'leaf', 
    '/create-subscription/input',
    '0',
    '0',
    'dateTime',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/IANA-ADDRESS-FAMILY-NUMBERS-MIB.yang
# module: IANA-ADDRESS-FAMILY-NUMBERS-MIB
# version: 2002-03-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'IANA-ADDRESS-FAMILY-NUMBERS-MIB');

INSERT INTO ncmodule VALUES (
    '', 'IANA-ADDRESS-FAMILY-NUMBERS-MIB', 'IANA-ADDRESS-FAMILY-NUMBERS-MIB', '2002-03-14', 'iana-address',
    'urn:ietf:params:xml:ns:yang:smiv2:IANA-ADDRESS-FAMILY-NUMBERS-MIB',
    'IANA',
    'The MIB module defines the AddressFamilyNumbers
textual convention.',
    'The MIB module defines the AddressFamilyNumbers
textual convention.',
    '',
    'Postal:    Internet Assigned Numbers Authority
Internet Corporation for Assigned Names
 and Numbers
4676 Admiralty Way, Suite 330
Marina del Rey, CA 90292-6601
USA

Tel:    +1  310-823-9358
E-Mail: iana@iana.org',
    'AddressFamilyNumbers assignment 22 to 
fibreChannelWWPN. AddressFamilyNumbers 
assignment 23 to fibreChannelWWNN.
AddressFamilyNumers assignment 24 to gwid.',
    '/xsd/IANA-ADDRESS-FAMILY-NUMBERS-MIB_2002-03-14.xsd',
    '/modules/IANA-ADDRESS-FAMILY-NUMBERS-MIB/2002-03-14', 
    '/src/IANA-ADDRESS-FAMILY-NUMBERS-MIB_2002-03-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/IANA-ADDRESS-FAMILY-NUMBERS-MIB.yang',
    'IANA-ADDRESS-FAMILY-NUMBERS-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IANA-ADDRESS-FAMILY-NUMBERS-MIB', 'IANA-ADDRESS-FAMILY-NUMBERS-MIB', '2002-03-14', 'AddressFamilyNumbers', '69',
    'The definition of this textual convention with the
addition of newly assigned values is published
periodically by the IANA, in either the Assigned
Numbers RFC, or some derivative of it specific to
Internet Network Management number assignments.
(The latest arrangements can be obtained by
contacting the IANA.)

The enumerations are described as:

other(0),    -- none of the following
ipV4(1),     -- IP Version 4
ipV6(2),     -- IP Version 6
nsap(3),     -- NSAP
hdlc(4),     -- (8-bit multidrop)
bbn1822(5),
all802(6),   -- (includes all 802 media
	     --   plus Ethernet \'canonical format\')
e163(7),
e164(8),     -- (SMDS, Frame Relay, ATM)
f69(9),      -- (Telex)
x121(10),    -- (X.25, Frame Relay)
ipx(11),     -- IPX (Internet Protocol Exchange)
appleTalk(12),  -- Apple Talk
decnetIV(13),   -- DEC Net Phase IV
banyanVines(14),  -- Banyan Vines
e164withNsap(15),
	     -- (E.164 with NSAP format subaddress)
dns(16),     -- (Domain Name System)
distinguishedName(17), -- (Distinguished Name, per X.500)
asNumber(18), -- (16-bit quantity, per the AS number space)
xtpOverIpv4(19),  -- XTP over IP version 4
xtpOverIpv6(20),  -- XTP over IP version 6
xtpNativeModeXTP(21),  -- XTP native mode XTP
fibreChannelWWPN(22),  -- Fibre Channel World-Wide Port Name 
fibreChannelWWNN(23),  -- Fibre Channel World-Wide Node Name
gwid(24),    -- Gateway Identifier 
reserved(65535)

Requests for new values should be made to IANA via
email (iana@iana.org).',
    '',
    '/modules/IANA-ADDRESS-FAMILY-NUMBERS-MIB/2002-03-14#AddressFamilyNumbers.69', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/ENTITY-STATE-MIB.yang
# module: ENTITY-STATE-MIB
# version: 2005-11-22
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'ENTITY-STATE-MIB');

INSERT INTO ncmodule VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entity-state-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:ENTITY-STATE-MIB',
    'IETF Entity MIB Working Group',
    'This MIB defines a state extension to the Entity MIB.

Copyright (C) The Internet Society 2005.  This version
of this MIB module...',
    'This MIB defines a state extension to the Entity MIB.

Copyright (C) The Internet Society 2005.  This version
of this MIB module is part of RFC 4268; see the RFC
itself for full legal notices.',
    '',
    ' General Discussion: entmib@ietf.org
To Subscribe:
http://www.ietf.org/mailman/listinfo/entmib

http://www.ietf.org/html.charters/entmib-charter.html

Sharon Chisholm
Nortel Networks
PO Box 3511 Station C
Ottawa, Ont.  K1Y 4H7
Canada
schishol@nortel.com

David T. Perkins
548 Qualbrook Ct
San Jose, CA 95110
USA
Phone: 408 394-8702
dperkins@snmpinfo.com',
    'Initial version, published as RFC 4268.',
    '/xsd/ENTITY-STATE-MIB_2005-11-22.xsd',
    '/modules/ENTITY-STATE-MIB/2005-11-22', 
    '/src/ENTITY-STATE-MIB_2005-11-22.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/ENTITY-STATE-MIB.yang',
    'ENTITY-STATE-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateObjects', '61',
    '/entStateObjects',
    '',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateObjects.61', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'entStateEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateEntry', '66',
    '/entStateObjects/entStateEntry',
    'State information about this physical entity.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateEntry.66', 
    'list', 
    '/entStateObjects',
    '0',
    '1',
    '',
    '',
    'entPhysicalIndex entStateLastChanged entStateAdmin entStateOper entStateUsage entStateAlarm entStateStandby',
    '',
    'entPhysicalIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entPhysicalIndex', '73',
    '/entStateObjects/entStateEntry/entPhysicalIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entPhysicalIndex.73', 
    'leaf', 
    '/entStateObjects/entStateEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateLastChanged', '82',
    '/entStateObjects/entStateEntry/entStateLastChanged',
    'The value of this object is the date and
time when the value of any of entStateAdmin,
entStateOper, entStateUsage, entStateAlarm,
or entStateStandby changed for this entity.

If there has been no change since
the last re-initialization of the local system,
this object contains the date and time of
local system initialization.  If there has been
no change since the entity was added to the
local system, this object contains the date and
time of the insertion.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateLastChanged.82', 
    'leaf', 
    '/entStateObjects/entStateEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateAdmin', '101',
    '/entStateObjects/entStateEntry/entStateAdmin',
    'The administrative state for this entity.



This object refers to an entities administrative
permission to service both other entities within
its containment hierarchy as well other users of
its services defined by means outside the scope
of this MIB.

Setting this object to \'notSupported\' will result
in an \'inconsistentValue\' error.  For entities that
do not support administrative state, all set
operations will result in an \'inconsistentValue\'
error.

Some physical entities exhibit only a subset of the
remaining administrative state values.  Some entities
cannot be locked, and hence this object exhibits only
the \'unlocked\' state.  Other entities cannot be shutdown
gracefully, and hence this object does not exhibit the
\'shuttingDown\' state.  A value of \'inconsistentValue\'
will be returned if attempts are made to set this
object to values not supported by its administrative
model.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateAdmin.101', 
    'leaf', 
    '/entStateObjects/entStateEntry',
    '0',
    '1',
    'EntityAdminState',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateOper', '133',
    '/entStateObjects/entStateEntry/entStateOper',
    'The operational state for this entity.

Note that unlike the state model used within the
Interfaces MIB [RFC2863], this object does not follow
the administrative state.  An administrative state of
down does not predict an operational state
of disabled.

A value of \'testing\' means that entity currently being
tested and cannot therefore report whether it is
operational or not.

A value of \'disabled\' means that an entity is totally
inoperable and unable to provide service both to entities
within its containment hierarchy, or to other receivers
of its service as defined in ways outside the scope of
this MIB.

A value of \'enabled\' means that an entity is fully or
partially operable and able to provide service both to


entities within its containment hierarchy, or to other
receivers of its service as defined in ways outside the
scope of this MIB.

Note that some implementations may not be able to
accurately report entStateOper while the
entStateAdmin object has a value other than \'unlocked\'.
In these cases, this object MUST have a value
of \'unknown\'.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateOper.133', 
    'leaf', 
    '/entStateObjects/entStateEntry',
    '0',
    '1',
    'EntityOperState',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateUsage', '171',
    '/entStateObjects/entStateEntry/entStateUsage',
    'The usage state for this entity.

This object refers to an entity\'s ability to service more
physical entities in a containment hierarchy.  A value
of \'idle\' means this entity is able to contain other
entities but that no other entity is currently
contained within this entity.

A value of \'active\' means that at least one entity is
contained within this entity, but that it could handle
more.  A value of \'busy\' means that the entity is unable
to handle any additional entities being contained in it.

Some entities will exhibit only a subset of the
usage state values.  Entities that are unable to ever
service any entities within a containment hierarchy will
always have a usage state of \'busy\'.  Some entities will
only ever be able to support one entity within its
containment hierarchy and will therefore only exhibit
values of \'idle\' and \'busy\'.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateUsage.171', 
    'leaf', 
    '/entStateObjects/entStateEntry',
    '0',
    '1',
    'EntityUsageState',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateAlarm', '198',
    '/entStateObjects/entStateEntry/entStateAlarm',
    'The alarm status for this entity.  It does not include
the alarms raised on child components within its
containment hierarchy.

A value of \'unknown\' means that this entity is



unable to report alarm state.  Note that this differs
from \'indeterminate\', which means that alarm state
is supported and there are alarms against this entity,
but the severity of some of the alarms is not known.

If no bits are set, then this entity supports reporting
of alarms, but there are currently no active alarms
against this entity.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateAlarm.198', 
    'leaf', 
    '/entStateObjects/entStateEntry',
    '0',
    '1',
    'EntityAlarmStatus',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateStandby', '221',
    '/entStateObjects/entStateEntry/entStateStandby',
    'The standby status for this entity.

Some entities will exhibit only a subset of the
remaining standby state values.  If this entity
cannot operate in a standby role, the value of this
object will always be \'providingService\'.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateStandby.221', 
    'leaf', 
    '/entStateObjects/entStateEntry',
    '0',
    '1',
    'EntityStandbyStatus',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateOperEnabled', '237',
    '/entStateOperEnabled',
    'An entStateOperEnabled notification signifies that the
SNMP entity, acting in an agent role, has detected that
the entStateOper object for one of its entities has
transitioned into the \'enabled\' state.

The entity this notification refers can be identified by
extracting the entPhysicalIndex from one of the
variable bindings.  The entStateAdmin and entStateAlarm
varbinds may be examined to find out additional
information on the administrative state at the time of
the operation state change as well as to find out whether
there were any known alarms against the entity at that
time that may explain why the physical entity has become
operationally disabled.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateOperEnabled.237', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'entStateOperEnabled-entStateAdmin entStateOperEnabled-entStateAlarm',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateOperEnabled-entStateAdmin', '255',
    '/entStateOperEnabled/entStateOperEnabled-entStateAdmin',
    '',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateOperEnabled-entStateAdmin.255', 
    'container', 
    '/entStateOperEnabled',
    '0',
    '0',
    '',
    '',
    'entPhysicalIndex entStateAdmin',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entPhysicalIndex', '256',
    '/entStateOperEnabled/entStateOperEnabled-entStateAdmin/entPhysicalIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entPhysicalIndex.256', 
    'leaf', 
    '/entStateOperEnabled/entStateOperEnabled-entStateAdmin',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateAdmin', '264',
    '/entStateOperEnabled/entStateOperEnabled-entStateAdmin/entStateAdmin',
    'The administrative state for this entity.



This object refers to an entities administrative
permission to service both other entities within
its containment hierarchy as well other users of
its services defined by means outside the scope
of this MIB.

Setting this object to \'notSupported\' will result
in an \'inconsistentValue\' error.  For entities that
do not support administrative state, all set
operations will result in an \'inconsistentValue\'
error.

Some physical entities exhibit only a subset of the
remaining administrative state values.  Some entities
cannot be locked, and hence this object exhibits only
the \'unlocked\' state.  Other entities cannot be shutdown
gracefully, and hence this object does not exhibit the
\'shuttingDown\' state.  A value of \'inconsistentValue\'
will be returned if attempts are made to set this
object to values not supported by its administrative
model.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateAdmin.264', 
    'leaf', 
    '/entStateOperEnabled/entStateOperEnabled-entStateAdmin',
    '0',
    '0',
    'EntityAdminState',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateOperEnabled-entStateAlarm', '297',
    '/entStateOperEnabled/entStateOperEnabled-entStateAlarm',
    '',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateOperEnabled-entStateAlarm.297', 
    'container', 
    '/entStateOperEnabled',
    '0',
    '0',
    '',
    '',
    'entPhysicalIndex entStateAlarm',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entPhysicalIndex', '298',
    '/entStateOperEnabled/entStateOperEnabled-entStateAlarm/entPhysicalIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entPhysicalIndex.298', 
    'leaf', 
    '/entStateOperEnabled/entStateOperEnabled-entStateAlarm',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateAlarm', '306',
    '/entStateOperEnabled/entStateOperEnabled-entStateAlarm/entStateAlarm',
    'The alarm status for this entity.  It does not include
the alarms raised on child components within its
containment hierarchy.

A value of \'unknown\' means that this entity is



unable to report alarm state.  Note that this differs
from \'indeterminate\', which means that alarm state
is supported and there are alarms against this entity,
but the severity of some of the alarms is not known.

If no bits are set, then this entity supports reporting
of alarms, but there are currently no active alarms
against this entity.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateAlarm.306', 
    'leaf', 
    '/entStateOperEnabled/entStateOperEnabled-entStateAlarm',
    '0',
    '0',
    'EntityAlarmStatus',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateOperDisabled', '332',
    '/entStateOperDisabled',
    'An entStateOperDisabled notification signifies that the
SNMP entity, acting in an agent role, has detected that
the entStateOper object for one of its entities has
transitioned into the \'disabled\' state.

The entity this notification refers can be identified by
extracting the entPhysicalIndex from one of the
variable bindings.  The entStateAdmin and entStateAlarm
varbinds may be examined to find out additional
information on the administrative state at the time of
the operation state change as well as to find out whether
there were any known alarms against the entity at that
time that may affect the physical entity\'s
ability to stay operationally enabled.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateOperDisabled.332', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'entStateOperDisabled-entStateAdmin entStateOperDisabled-entStateAlarm',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateOperDisabled-entStateAdmin', '350',
    '/entStateOperDisabled/entStateOperDisabled-entStateAdmin',
    '',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateOperDisabled-entStateAdmin.350', 
    'container', 
    '/entStateOperDisabled',
    '0',
    '0',
    '',
    '',
    'entPhysicalIndex entStateAdmin',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entPhysicalIndex', '351',
    '/entStateOperDisabled/entStateOperDisabled-entStateAdmin/entPhysicalIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entPhysicalIndex.351', 
    'leaf', 
    '/entStateOperDisabled/entStateOperDisabled-entStateAdmin',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateAdmin', '359',
    '/entStateOperDisabled/entStateOperDisabled-entStateAdmin/entStateAdmin',
    'The administrative state for this entity.



This object refers to an entities administrative
permission to service both other entities within
its containment hierarchy as well other users of
its services defined by means outside the scope
of this MIB.

Setting this object to \'notSupported\' will result
in an \'inconsistentValue\' error.  For entities that
do not support administrative state, all set
operations will result in an \'inconsistentValue\'
error.

Some physical entities exhibit only a subset of the
remaining administrative state values.  Some entities
cannot be locked, and hence this object exhibits only
the \'unlocked\' state.  Other entities cannot be shutdown
gracefully, and hence this object does not exhibit the
\'shuttingDown\' state.  A value of \'inconsistentValue\'
will be returned if attempts are made to set this
object to values not supported by its administrative
model.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateAdmin.359', 
    'leaf', 
    '/entStateOperDisabled/entStateOperDisabled-entStateAdmin',
    '0',
    '0',
    'EntityAdminState',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateOperDisabled-entStateAlarm', '392',
    '/entStateOperDisabled/entStateOperDisabled-entStateAlarm',
    '',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateOperDisabled-entStateAlarm.392', 
    'container', 
    '/entStateOperDisabled',
    '0',
    '0',
    '',
    '',
    'entPhysicalIndex entStateAlarm',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entPhysicalIndex', '393',
    '/entStateOperDisabled/entStateOperDisabled-entStateAlarm/entPhysicalIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entPhysicalIndex.393', 
    'leaf', 
    '/entStateOperDisabled/entStateOperDisabled-entStateAlarm',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ENTITY-STATE-MIB', 'ENTITY-STATE-MIB', '2005-11-22', 'entStateAlarm', '401',
    '/entStateOperDisabled/entStateOperDisabled-entStateAlarm/entStateAlarm',
    'The alarm status for this entity.  It does not include
the alarms raised on child components within its
containment hierarchy.

A value of \'unknown\' means that this entity is



unable to report alarm state.  Note that this differs
from \'indeterminate\', which means that alarm state
is supported and there are alarms against this entity,
but the severity of some of the alarms is not known.

If no bits are set, then this entity supports reporting
of alarms, but there are currently no active alarms
against this entity.',
    '',
    '/modules/ENTITY-STATE-MIB/2005-11-22#entStateAlarm.401', 
    'leaf', 
    '/entStateOperDisabled/entStateOperDisabled-entStateAlarm',
    '0',
    '0',
    'EntityAlarmStatus',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/ietf/SNMP-FRAMEWORK-MIB.yang
# module: SNMP-FRAMEWORK-MIB
# version: 2002-10-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-FRAMEWORK-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'snmp-framework',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-FRAMEWORK-MIB',
    'SNMPv3 Working Group',
    'The SNMP Management Architecture MIB

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC ...',
    'The SNMP Management Architecture MIB

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 3411;
see the RFC itself for full legal notices.',
    '',
    'WG-EMail:   snmpv3@lists.tislabs.com
Subscribe:  snmpv3-request@lists.tislabs.com

Co-Chair:   Russ Mundy
	    Network Associates Laboratories
postal:     15204 Omega Drive, Suite 300
	    Rockville, MD 20850-4601
	    USA
EMail:      mundy@tislabs.com
phone:      +1 301-947-7107

Co-Chair &
Co-editor:  David Harrington
	    Enterasys Networks
postal:     35 Industrial Way
	    P. O. Box 5005
	    Rochester, New Hampshire 03866-5005
	    USA
EMail:      dbh@enterasys.com
phone:      +1 603-337-2614

Co-editor:  Randy Presuhn
	    BMC Software, Inc.
postal:     2141 North First Street
	    San Jose, California 95131
	    USA
EMail:      randy_presuhn@bmc.com
phone:      +1 408-546-1006

Co-editor:  Bert Wijnen
	    Lucent Technologies
postal:     Schagen 33
	    3461 GL Linschoten
	    Netherlands

EMail:      bwijnen@lucent.com
phone:      +31 348-680-485
  ',
    'Changes in this revision:
- Updated various administrative information.
- Corrected some typos.
- Corrected typo in description of SnmpEngineID
  that led to range overlap for 127.
- Changed \'255a\' to \'255t\' in definition of
  SnmpAdminString to align with current SMI.
- Reworded \'reserved\' for value zero in
  DESCRIPTION of SnmpSecurityModel.
- The algorithm for allocating security models
  should give 256 per enterprise block, rather
  than 255.
- The example engine ID of \'abcd\' is not
  legal. Replaced with \'800002b804616263\'H based
  on example enterprise 696, string \'abc\'.
- Added clarification that engineID should
  persist across re-initializations.
This revision published as RFC 3411.',
    '/xsd/SNMP-FRAMEWORK-MIB_2002-10-14.xsd',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14', 
    '/src/SNMP-FRAMEWORK-MIB_2002-10-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/ietf/SNMP-FRAMEWORK-MIB.yang',
    'SNMP-FRAMEWORK-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'SnmpEngineID', '105',
    'An SNMP engine\'s administratively-unique identifier.
Objects of this type are for identification, not for
addressing, even though it is possible that an
address may have been used in the generation of
a specific value.

The value for this object may not be all zeros or
all \'ff\'H or the empty (zero length) string.

The initial value for this object may be configured
via an operator console entry or via an algorithmic
function.  In the latter case, the following
example algorithm is recommended.

In cases where there are multiple engines on the
same system, the use of this algorithm is NOT
appropriate, as it would result in all of those
engines ending up with the same ID value.

1) The very first bit is used to indicate how the
   rest of the data is composed.

   0 - as defined by enterprise using former methods
       that existed before SNMPv3. See item 2 below.

   1 - as defined by this architecture, see item 3
       below.

   Note that this allows existing uses of the
   engineID (also known as AgentID [RFC1910]) to
   co-exist with any new uses.

2) The snmpEngineID has a length of 12 octets.

   The first four octets are set to the binary
   equivalent of the agent\'s SNMP management
   private enterprise number as assigned by the
   Internet Assigned Numbers Authority (IANA).
   For example, if Acme Networks has been assigned
   { enterprises 696 }, the first four octets would
   be assigned \'000002b8\'H.

   The remaining eight octets are determined via
   one or more enterprise-specific methods. Such
   methods must be designed so as to maximize the
   possibility that the value of this object will
   be unique in the agent\'s administrative domain.
   For example, it may be the IP address of the SNMP
   entity, or the MAC address of one of the
   interfaces, with each address suitably padded
   with random octets.  If multiple methods are
   defined, then it is recommended that the first
   octet indicate the method being used and the
   remaining octets be a function of the method.

3) The length of the octet string varies.

   The first four octets are set to the binary
   equivalent of the agent\'s SNMP management
   private enterprise number as assigned by the
   Internet Assigned Numbers Authority (IANA).
   For example, if Acme Networks has been assigned
   { enterprises 696 }, the first four octets would
   be assigned \'000002b8\'H.

   The very first bit is set to 1. For example, the
   above value for Acme Networks now changes to be
   \'800002b8\'H.

   The fifth octet indicates how the rest (6th and
   following octets) are formatted. The values for
   the fifth octet are:

     0     - reserved, unused.

     1     - IPv4 address (4 octets)
	     lowest non-special IP address

     2     - IPv6 address (16 octets)
	     lowest non-special IP address

     3     - MAC address (6 octets)
	     lowest IEEE MAC address, canonical
	     order

     4     - Text, administratively assigned
	     Maximum remaining length 27

     5     - Octets, administratively assigned
	     Maximum remaining length 27

     6-127 - reserved, unused

   128-255 - as defined by the enterprise
	     Maximum remaining length 27',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpEngineID.105', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'SnmpSecurityModel', '207',
    'An identifier that uniquely identifies a
Security Model of the Security Subsystem within
this SNMP Management Architecture.

The values for securityModel are allocated as
follows:

- The zero value does not identify any particular
  security model.

- Values between 1 and 255, inclusive, are reserved
  for standards-track Security Models and are
  managed by the Internet Assigned Numbers Authority
  (IANA).
- Values greater than 255 are allocated to
  enterprise-specific Security Models.  An
  enterprise-specific securityModel value is defined
  to be:

  enterpriseID * 256 + security model within
  enterprise

  For example, the fourth Security Model defined by
  the enterprise whose enterpriseID is 1 would be
  259.

This scheme for allocation of securityModel
values allows for a maximum of 255 standards-
based Security Models, and for a maximum of
256 Security Models per enterprise.

It is believed that the assignment of new
securityModel values will be rare in practice
because the larger the number of simultaneously
utilized Security Models, the larger the
chance that interoperability will suffer.
Consequently, it is believed that such a range
will be sufficient.  In the unlikely event that
the standards committee finds this number to be
insufficient over time, an enterprise number
can be allocated to obtain an additional 256
possible values.

Note that the most significant bit must be zero;
hence, there are 23 bits allocated for various
organizations to design and define non-standard

securityModels.  This limits the ability to
define new proprietary implementations of Security
Models to the first 8,388,608 enterprises.

It is worthwhile to note that, in its encoded
form, the securityModel value will normally
require only a single byte since, in practice,
the leftmost bits will be zero for most messages
and sign extension is suppressed by the encoding
rules.

As of this writing, there are several values
of securityModel defined for use with SNMP or
reserved for use with supporting MIB objects.
They are as follows:

    0  reserved for \'any\'
    1  reserved for SNMPv1
    2  reserved for SNMPv2c
    3  User-Based Security Model (USM)',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpSecurityModel.207', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'SnmpMessageProcessingModel', '281',
    'An identifier that uniquely identifies a Message
Processing Model of the Message Processing
Subsystem within this SNMP Management Architecture.

The values for messageProcessingModel are
allocated as follows:

- Values between 0 and 255, inclusive, are
  reserved for standards-track Message Processing
  Models and are managed by the Internet Assigned
  Numbers Authority (IANA).

- Values greater than 255 are allocated to
  enterprise-specific Message Processing Models.
  An enterprise messageProcessingModel value is
  defined to be:

  enterpriseID * 256 +
       messageProcessingModel within enterprise

  For example, the fourth Message Processing Model
  defined by the enterprise whose enterpriseID

  is 1 would be 259.

This scheme for allocating messageProcessingModel
values allows for a maximum of 255 standards-
based Message Processing Models, and for a
maximum of 256 Message Processing Models per
enterprise.

It is believed that the assignment of new
messageProcessingModel values will be rare
in practice because the larger the number of
simultaneously utilized Message Processing Models,
the larger the chance that interoperability
will suffer. It is believed that such a range
will be sufficient.  In the unlikely event that
the standards committee finds this number to be
insufficient over time, an enterprise number
can be allocated to obtain an additional 256
possible values.

Note that the most significant bit must be zero;
hence, there are 23 bits allocated for various
organizations to design and define non-standard
messageProcessingModels.  This limits the ability
to define new proprietary implementations of
Message Processing Models to the first 8,388,608
enterprises.

It is worthwhile to note that, in its encoded
form, the messageProcessingModel value will
normally require only a single byte since, in
practice, the leftmost bits will be zero for
most messages and sign extension is suppressed
by the encoding rules.

As of this writing, there are several values of
messageProcessingModel defined for use with SNMP.
They are as follows:

    0  reserved for SNMPv1
    1  reserved for SNMPv2c
    2  reserved for SNMPv2u and SNMPv2*
    3  reserved for SNMPv3',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpMessageProcessingModel.281', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'SnmpSecurityLevel', '354',
    'A Level of Security at which SNMP messages can be
sent or with which operations are being processed;
in particular, one of:

  noAuthNoPriv - without authentication and
		 without privacy,
  authNoPriv   - with authentication but
		 without privacy,
  authPriv     - with authentication and
		 with privacy.

These three values are ordered such that
noAuthNoPriv is less than authNoPriv and
authNoPriv is less than authPriv.',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpSecurityLevel.354', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'SnmpAdminString', '377',
    'An octet string containing administrative
information, preferably in human-readable form.

To facilitate internationalization, this
information is represented using the ISO/IEC
IS 10646-1 character set, encoded as an octet
string using the UTF-8 transformation format
described in [RFC2279].

Since additional code points are added by
amendments to the 10646 standard from time
to time, implementations must be prepared to
encounter any code point from 0x00000000 to
0x7fffffff.  Byte sequences that do not
correspond to the valid UTF-8 encoding of a
code point or are outside this range are
prohibited.

The use of control codes should be avoided.

When it is necessary to represent a newline,
the control code sequence CR LF should be used.

The use of leading or trailing white space should
be avoided.

For code points not directly supported by user
interface hardware or software, an alternative
means of entry and display, such as hexadecimal,
may be provided.

For information encoded in 7-bit US-ASCII,
the UTF-8 encoding is identical to the
US-ASCII encoding.

UTF-8 may require multiple bytes to represent a
single character / code point; thus the length
of this object in octets may be different from
the number of characters encoded.  Similarly,
size constraints refer to the number of encoded
octets, not the number of characters represented
by an encoding.

Note that when this TC is used for an object that
is used or envisioned to be used as an index, then
a SIZE restriction MUST be specified so that the
number of sub-identifiers for any object instance
does not exceed the limit of 128, as defined by
[RFC3416].

Note that the size of an SnmpAdminString object is
measured in octets, not characters.',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#SnmpAdminString.377', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'snmpEngine', '438',
    '/snmpEngine',
    '',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#snmpEngine.438', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'snmpEngineID snmpEngineBoots snmpEngineTime snmpEngineMaxMessageSize',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'snmpEngineID', '440',
    '/snmpEngine/snmpEngineID',
    'An SNMP engine\'s administratively-unique identifier.

This information SHOULD be stored in non-volatile
storage so that it remains constant across
re-initializations of the SNMP engine.',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#snmpEngineID.440', 
    'leaf', 
    '/snmpEngine',
    '0',
    '1',
    'SnmpEngineID',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'snmpEngineBoots', '452',
    '/snmpEngine/snmpEngineBoots',
    'The number of times that the SNMP engine has
(re-)initialized itself since snmpEngineID
was last configured.',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#snmpEngineBoots.452', 
    'leaf', 
    '/snmpEngine',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'snmpEngineTime', '464',
    '/snmpEngine/snmpEngineTime',
    'The number of seconds since the value of
the snmpEngineBoots object last changed.
When incrementing this object\'s value would
cause it to exceed its maximum,
snmpEngineBoots is incremented as if a
re-initialization had occurred, and this
object\'s value consequently reverts to zero.',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#snmpEngineTime.464', 
    'leaf', 
    '/snmpEngine',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-FRAMEWORK-MIB', 'SNMP-FRAMEWORK-MIB', '2002-10-14', 'snmpEngineMaxMessageSize', '481',
    '/snmpEngine/snmpEngineMaxMessageSize',
    'The maximum length in octets of an SNMP message
which this SNMP engine can send or receive and
process, determined as the minimum of the maximum
message size values supported among all of the
transports available to and supported by the engine.',
    '',
    '/modules/SNMP-FRAMEWORK-MIB/2002-10-14#snmpEngineMaxMessageSize.481', 
    'leaf', 
    '/snmpEngine',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/IP-MIB.yang
# module: IP-MIB
# version: 2006-02-02
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'IP-MIB');

INSERT INTO ncmodule VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ip-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:IP-MIB',
    'IETF IPv6 MIB Revision Team',
    'The MIB module for managing IP and ICMP implementations, but
excluding their management of IP routes.

Copyright (C) The Interne...',
    'The MIB module for managing IP and ICMP implementations, but
excluding their management of IP routes.

Copyright (C) The Internet Society (2006).  This version of
this MIB module is part of RFC 4293; see the RFC itself for
full legal notices.',
    '',
    'Editor:



Shawn A. Routhier
Interworking Labs
108 Whispering Pines Dr. Suite 235
Scotts Valley, CA 95066
USA
EMail: <sar@iwl.com>',
    'The IP version neutral revision with added IPv6 objects for
ND, default routers, and router advertisements.  As well as
being the successor to RFC 2011, this MIB is also the
successor to RFCs 2465 and 2466.  Published as RFC 4293.',
    '/xsd/IP-MIB_2006-02-02.xsd',
    '/modules/IP-MIB/2006-02-02', 
    '/src/IP-MIB_2006-02-02.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/IP-MIB.yang',
    'IP-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'IpAddressOriginTC', '70',
    'The origin of the address.

manual(2) indicates that the address was manually configured
to a specified address, e.g., by user configuration.

dhcp(4) indicates an address that was assigned to this
system by a DHCP server.

linklayer(5) indicates an address created by IPv6 stateless



auto-configuration.

random(6) indicates an address chosen by the system at
random, e.g., an IPv4 address within 169.254/16, or an RFC
3041 privacy address.',
    '',
    '/modules/IP-MIB/2006-02-02#IpAddressOriginTC.70', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'IpAddressStatusTC', '98',
    'The status of an address.  Most of the states correspond to
states from the IPv6 Stateless Address Autoconfiguration
protocol.

The preferred(1) state indicates that this is a valid
address that can appear as the destination or source address
of a packet.

The deprecated(2) state indicates that this is a valid but
deprecated address that should no longer be used as a source
address in new communications, but packets addressed to such
an address are processed as expected.

The invalid(3) state indicates that this isn\'t a valid
address and it shouldn\'t appear as the destination or source
address of a packet.

The inaccessible(4) state indicates that the address is not
accessible because the interface to which this address is
assigned is not operational.

The unknown(5) state indicates that the status cannot be
determined for some reason.

The tentative(6) state indicates that the uniqueness of the
address on the link is being verified.  Addresses in this
state should not be used for general communication and
should only be used to determine the uniqueness of the
address.

The duplicate(7) state indicates the address has been
determined to be non-unique on the link and so must not be



used.

The optimistic(8) state indicates the address is available
for use, subject to restrictions, while its uniqueness on
a link is being verified.

In the absence of other information, an IPv4 address is
always preferred(1).',
    'RFC 2462',
    '/modules/IP-MIB/2006-02-02#IpAddressStatusTC.98', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'IpAddressPrefixOriginTC', '157',
    'The origin of this prefix.

manual(2) indicates a prefix that was manually configured.

wellknown(3) indicates a well-known prefix, e.g., 169.254/16
for IPv4 auto-configuration or fe80::/10 for IPv6 link-local
addresses.  Well known prefixes may be assigned by IANA,
the address registries, or by specification in a standards
track RFC.

dhcp(4) indicates a prefix that was assigned by a DHCP
server.

routeradv(5) indicates a prefix learned from a router
advertisement.

Note: while IpAddressOriginTC and IpAddressPrefixOriginTC
are similar, they are not identical.  The first defines how
an address was created, while the second defines how a
prefix was found.',
    '',
    '/modules/IP-MIB/2006-02-02#IpAddressPrefixOriginTC.157', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'Ipv6AddressIfIdentifierTC', '188',
    'This data type is used to model IPv6 address
interface identifiers.  This is a binary string
of up to 8 octets in network byte-order.',
    '',
    '/modules/IP-MIB/2006-02-02#Ipv6AddressIfIdentifierTC.188', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ip', '200',
    '/ip',
    '',
    '',
    '/modules/IP-MIB/2006-02-02#ip.200', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'ipForwarding ipDefaultTTL ipInReceives ipInHdrErrors ipInAddrErrors ipForwDatagrams ipInUnknownProtos ipInDiscards ipInDelivers ipOutRequests ipOutDiscards ipOutNoRoutes ipReasmTimeout ipReasmReqds ipReasmOKs ipReasmFails ipFragOKs ipFragFails ipFragCreates ipAddrEntry ipNetToMediaEntry ipRoutingDiscards ipv6IpForwarding ipv6IpDefaultHopLimit ipv4InterfaceTableLastChange ipv4InterfaceEntry ipv6InterfaceTableLastChange ipv6InterfaceEntry ipAddressPrefixEntry ipAddressSpinLock ipAddressEntry ipNetToPhysicalEntry ipv6ScopeZoneIndexEntry ipDefaultRouterEntry ipv6RouterAdvertSpinLock ipv6RouterAdvertEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipForwarding', '202',
    '/ip/ipForwarding',
    'The indication of whether this entity is acting as an IPv4
router in respect to the forwarding of datagrams received
by, but not addressed to, this entity.  IPv4 routers forward
datagrams.  IPv4 hosts do not (except those source-routed
via the host).

When this object is written, the entity should save the
change to non-volatile storage and restore the object from
non-volatile storage upon re-initialization of the system.
Note: a stronger requirement is not used because this object
was previously defined.',
    '',
    '/modules/IP-MIB/2006-02-02#ipForwarding.202', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipDefaultTTL', '223',
    '/ip/ipDefaultTTL',
    'The default value inserted into the Time-To-Live field of
the IPv4 header of datagrams originated at this entity,
whenever a TTL value is not supplied by the transport layer



protocol.

When this object is written, the entity should save the
change to non-volatile storage and restore the object from
non-volatile storage upon re-initialization of the system.
Note: a stronger requirement is not used because this object
was previously defined.',
    '',
    '/modules/IP-MIB/2006-02-02#ipDefaultTTL.223', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipInReceives', '245',
    '/ip/ipInReceives',
    'The total number of input datagrams received from
interfaces, including those received in error.

This object has been deprecated, as a new IP version-neutral



table has been added.  It is loosely replaced by
ipSystemStatsInRecieves.',
    '',
    '/modules/IP-MIB/2006-02-02#ipInReceives.245', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipInHdrErrors', '262',
    '/ip/ipInHdrErrors',
    'The number of input datagrams discarded due to errors in
their IPv4 headers, including bad checksums, version number
mismatch, other format errors, time-to-live exceeded, errors
discovered in processing their IPv4 options, etc.

This object has been deprecated as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsInHdrErrors.',
    '',
    '/modules/IP-MIB/2006-02-02#ipInHdrErrors.262', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipInAddrErrors', '278',
    '/ip/ipInAddrErrors',
    'The number of input datagrams discarded because the IPv4
address in their IPv4 header\'s destination field was not a
valid address to be received at this entity.  This count
includes invalid addresses (e.g., 0.0.0.0) and addresses of
unsupported Classes (e.g., Class E).  For entities which are
not IPv4 routers, and therefore do not forward datagrams,
this counter includes datagrams discarded because the
destination address was not a local address.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsInAddrErrors.',
    '',
    '/modules/IP-MIB/2006-02-02#ipInAddrErrors.278', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipForwDatagrams', '298',
    '/ip/ipForwDatagrams',
    'The number of input datagrams for which this entity was not
their final IPv4 destination, as a result of which an
attempt was made to find a route to forward them to that
final destination.  In entities which do not act as IPv4
routers, this counter will include only those packets which



were Source-Routed via this entity, and the Source-Route
option processing was successful.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsInForwDatagrams.',
    '',
    '/modules/IP-MIB/2006-02-02#ipForwDatagrams.298', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipInUnknownProtos', '320',
    '/ip/ipInUnknownProtos',
    'The number of locally-addressed datagrams received
successfully but discarded because of an unknown or
unsupported protocol.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsInUnknownProtos.',
    '',
    '/modules/IP-MIB/2006-02-02#ipInUnknownProtos.320', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipInDiscards', '335',
    '/ip/ipInDiscards',
    'The number of input IPv4 datagrams for which no problems
were encountered to prevent their continued processing, but
which were discarded (e.g., for lack of buffer space).  Note
that this counter does not include any datagrams discarded
while awaiting re-assembly.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsInDiscards.',
    '',
    '/modules/IP-MIB/2006-02-02#ipInDiscards.335', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipInDelivers', '352',
    '/ip/ipInDelivers',
    'The total number of input datagrams successfully delivered
to IPv4 user-protocols (including ICMP).

This object has been deprecated as a new IP version neutral
table has been added.  It is loosely replaced by



ipSystemStatsIndelivers.',
    '',
    '/modules/IP-MIB/2006-02-02#ipInDelivers.352', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipOutRequests', '369',
    '/ip/ipOutRequests',
    'The total number of IPv4 datagrams which local IPv4 user
protocols (including ICMP) supplied to IPv4 in requests for
transmission.  Note that this counter does not include any
datagrams counted in ipForwDatagrams.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsOutRequests.',
    '',
    '/modules/IP-MIB/2006-02-02#ipOutRequests.369', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipOutDiscards', '385',
    '/ip/ipOutDiscards',
    'The number of output IPv4 datagrams for which no problem was
encountered to prevent their transmission to their
destination, but which were discarded (e.g., for lack of
buffer space).  Note that this counter would include
datagrams counted in ipForwDatagrams if any such packets met
this (discretionary) discard criterion.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsOutDiscards.',
    '',
    '/modules/IP-MIB/2006-02-02#ipOutDiscards.385', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipOutNoRoutes', '403',
    '/ip/ipOutNoRoutes',
    'The number of IPv4 datagrams discarded because no route
could be found to transmit them to their destination.  Note
that this counter includes any packets counted in
ipForwDatagrams which meet this `no-route\' criterion.  Note
that this includes any datagrams which a host cannot route
because all of its default routers are down.

This object has been deprecated, as a new IP version-neutral



table has been added.  It is loosely replaced by
ipSystemStatsOutNoRoutes.',
    '',
    '/modules/IP-MIB/2006-02-02#ipOutNoRoutes.403', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipReasmTimeout', '424',
    '/ip/ipReasmTimeout',
    'The maximum number of seconds that received fragments are
held while they are awaiting reassembly at this entity.',
    '',
    '/modules/IP-MIB/2006-02-02#ipReasmTimeout.424', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipReasmReqds', '434',
    '/ip/ipReasmReqds',
    'The number of IPv4 fragments received which needed to be
reassembled at this entity.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsReasmReqds.',
    '',
    '/modules/IP-MIB/2006-02-02#ipReasmReqds.434', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipReasmOKs', '448',
    '/ip/ipReasmOKs',
    'The number of IPv4 datagrams successfully re-assembled.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsReasmOKs.',
    '',
    '/modules/IP-MIB/2006-02-02#ipReasmOKs.448', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipReasmFails', '461',
    '/ip/ipReasmFails',
    'The number of failures detected by the IPv4 re-assembly
algorithm (for whatever reason: timed out, errors, etc).
Note that this is not necessarily a count of discarded IPv4
fragments since some algorithms (notably the algorithm in
RFC 815) can lose track of the number of fragments by
combining them as they are received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsReasmFails.',
    '',
    '/modules/IP-MIB/2006-02-02#ipReasmFails.461', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipFragOKs', '479',
    '/ip/ipFragOKs',
    'The number of IPv4 datagrams that have been successfully
fragmented at this entity.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsOutFragOKs.',
    '',
    '/modules/IP-MIB/2006-02-02#ipFragOKs.479', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipFragFails', '493',
    '/ip/ipFragFails',
    'The number of IPv4 datagrams that have been discarded
because they needed to be fragmented at this entity but
could not be, e.g., because their Don\'t Fragment flag was
set.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
ipSystemStatsOutFragFails.',
    '',
    '/modules/IP-MIB/2006-02-02#ipFragFails.493', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipFragCreates', '509',
    '/ip/ipFragCreates',
    'The number of IPv4 datagram fragments that have been
generated as a result of fragmentation at this entity.

This object has been deprecated as a new IP version neutral
table has been added.  It is loosely replaced by
ipSystemStatsOutFragCreates.',
    '',
    '/modules/IP-MIB/2006-02-02#ipFragCreates.509', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddrEntry', '526',
    '/ip/ipAddrEntry',
    'The addressing information for one of this entity\'s IPv4
addresses.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddrEntry.526', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipAdEntAddr ipAdEntIfIndex ipAdEntNetMask ipAdEntBcastAddr ipAdEntReasmMaxSize',
    '',
    'ipAdEntAddr',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAdEntAddr', '536',
    '/ip/ipAddrEntry/ipAdEntAddr',
    'The IPv4 address to which this entry\'s addressing
information pertains.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAdEntAddr.536', 
    'leaf', 
    '/ip/ipAddrEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAdEntIfIndex', '546',
    '/ip/ipAddrEntry/ipAdEntIfIndex',
    'The index value which uniquely identifies the interface to
which this entry is applicable.  The interface identified by
a particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAdEntIfIndex.546', 
    'leaf', 
    '/ip/ipAddrEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAdEntNetMask', '560',
    '/ip/ipAddrEntry/ipAdEntNetMask',
    'The subnet mask associated with the IPv4 address of this
entry.  The value of the mask is an IPv4 address with all
the network bits set to 1 and all the hosts bits set to 0.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAdEntNetMask.560', 
    'leaf', 
    '/ip/ipAddrEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAdEntBcastAddr', '571',
    '/ip/ipAddrEntry/ipAdEntBcastAddr',
    'The value of the least-significant bit in the IPv4 broadcast
address used for sending datagrams on the (logical)
interface associated with the IPv4 address of this entry.
For example, when the Internet standard all-ones broadcast
address is used, the value will be 1.  This value applies to
both the subnet and network broadcast addresses used by the
entity on this (logical) interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAdEntBcastAddr.571', 
    'leaf', 
    '/ip/ipAddrEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAdEntReasmMaxSize', '588',
    '/ip/ipAddrEntry/ipAdEntReasmMaxSize',
    'The size of the largest IPv4 datagram which this entity can
re-assemble from incoming IPv4 fragmented datagrams received
on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAdEntReasmMaxSize.588', 
    'leaf', 
    '/ip/ipAddrEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToMediaEntry', '605',
    '/ip/ipNetToMediaEntry',
    'Each entry contains one IpAddress to `physical\' address
equivalence.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToMediaEntry.605', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipNetToMediaIfIndex ipNetToMediaPhysAddress ipNetToMediaNetAddress ipNetToMediaType',
    '',
    'ipNetToMediaIfIndex ipNetToMediaNetAddress',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToMediaIfIndex', '615',
    '/ip/ipNetToMediaEntry/ipNetToMediaIfIndex',
    'The interface on which this entry\'s equivalence is
effective.  The interface identified by a particular value
of this index is the same interface as identified by the



same value of the IF-MIB\'s ifIndex.

This object predates the rule limiting index objects to a
max access value of \'not-accessible\' and so continues to use
a value of \'read-create\'.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToMediaIfIndex.615', 
    'leaf', 
    '/ip/ipNetToMediaEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToMediaPhysAddress', '636',
    '/ip/ipNetToMediaEntry/ipNetToMediaPhysAddress',
    'The media-dependent `physical\' address.  This object should
return 0 when this entry is in the \'incomplete\' state.

As the entries in this table are typically not persistent
when this object is written the entity should not save the
change to non-volatile storage.  Note: a stronger
requirement is not used because this object was previously
defined.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToMediaPhysAddress.636', 
    'leaf', 
    '/ip/ipNetToMediaEntry',
    '0',
    '1',
    'phys-address',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToMediaNetAddress', '654',
    '/ip/ipNetToMediaEntry/ipNetToMediaNetAddress',
    'The IpAddress corresponding to the media-dependent
`physical\' address.

This object predates the rule limiting index objects to a
max access value of \'not-accessible\' and so continues to use
a value of \'read-create\'.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToMediaNetAddress.654', 
    'leaf', 
    '/ip/ipNetToMediaEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToMediaType', '668',
    '/ip/ipNetToMediaEntry/ipNetToMediaType',
    'The type of mapping.

Setting this object to the value invalid(2) has the effect



of invalidating the corresponding entry in the
ipNetToMediaTable.  That is, it effectively dis-associates
the interface identified with said entry from the mapping
identified with said entry.  It is an implementation-
specific matter as to whether the agent removes an
invalidated entry from the table.  Accordingly, management
stations must be prepared to receive tabular information
from agents that corresponds to entries not currently in
use.  Proper interpretation of such entries requires
examination of the relevant ipNetToMediaType object.

As the entries in this table are typically not persistent
when this object is written the entity should not save the
change to non-volatile storage.  Note: a stronger
requirement is not used because this object was previously
defined.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToMediaType.668', 
    'leaf', 
    '/ip/ipNetToMediaEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipRoutingDiscards', '704',
    '/ip/ipRoutingDiscards',
    'The number of routing entries which were chosen to be
discarded even though they are valid.  One possible reason
for discarding such an entry could be to free-up buffer
space for other routing entries.



This object was defined in pre-IPv6 versions of the IP MIB.
It was implicitly IPv4 only, but the original specifications
did not indicate this protocol restriction.  In order to
clarify the specifications, this object has been deprecated
and a similar, but more thoroughly clarified, object has
been added to the IP-FORWARD-MIB.',
    '',
    '/modules/IP-MIB/2006-02-02#ipRoutingDiscards.704', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6IpForwarding', '725',
    '/ip/ipv6IpForwarding',
    'The indication of whether this entity is acting as an IPv6
router on any interface in respect to the forwarding of
datagrams received by, but not addressed to, this entity.
IPv6 routers forward datagrams.  IPv6 hosts do not (except
those source-routed via the host).

When this object is written, the entity SHOULD save the
change to non-volatile storage and restore the object from
non-volatile storage upon re-initialization of the system.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6IpForwarding.725', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6IpDefaultHopLimit', '744',
    '/ip/ipv6IpDefaultHopLimit',
    'The default value inserted into the Hop Limit field of the
IPv6 header of datagrams originated at this entity whenever
a Hop Limit value is not supplied by the transport layer
protocol.

When this object is written, the entity SHOULD save the
change to non-volatile storage and restore the object from
non-volatile storage upon re-initialization of the system.',
    'RFC 2461 Section 6.3.2',
    '/modules/IP-MIB/2006-02-02#ipv6IpDefaultHopLimit.744', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv4InterfaceTableLastChange', '763',
    '/ip/ipv4InterfaceTableLastChange',
    'The value of sysUpTime on the most recent occasion at which
a row in the ipv4InterfaceTable was added or deleted, or
when an ipv4InterfaceReasmMaxSize or an
ipv4InterfaceEnableStatus object was modified.

If new objects are added to the ipv4InterfaceTable that
require the ipv4InterfaceTableLastChange to be updated when
they are modified, they must specify that requirement in
their description clause.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv4InterfaceTableLastChange.763', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv4InterfaceEntry', '782',
    '/ip/ipv4InterfaceEntry',
    'An entry containing IPv4-specific information for a specific
interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv4InterfaceEntry.782', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipv4InterfaceIfIndex ipv4InterfaceReasmMaxSize ipv4InterfaceEnableStatus ipv4InterfaceRetransmitTime',
    '',
    'ipv4InterfaceIfIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv4InterfaceIfIndex', '791',
    '/ip/ipv4InterfaceEntry/ipv4InterfaceIfIndex',
    'The index value that uniquely identifies the interface to
which this entry is applicable.  The interface identified by
a particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv4InterfaceIfIndex.791', 
    'leaf', 
    '/ip/ipv4InterfaceEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv4InterfaceReasmMaxSize', '802',
    '/ip/ipv4InterfaceEntry/ipv4InterfaceReasmMaxSize',
    'The size of the largest IPv4 datagram that this entity can
re-assemble from incoming IPv4 fragmented datagrams received
on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv4InterfaceReasmMaxSize.802', 
    'leaf', 
    '/ip/ipv4InterfaceEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv4InterfaceEnableStatus', '814',
    '/ip/ipv4InterfaceEntry/ipv4InterfaceEnableStatus',
    'The indication of whether IPv4 is enabled (up) or disabled
(down) on this interface.  This object does not affect the
state of the interface itself, only its connection to an
IPv4 stack.  The IF-MIB should be used to control the state
of the interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv4InterfaceEnableStatus.814', 
    'leaf', 
    '/ip/ipv4InterfaceEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv4InterfaceRetransmitTime', '829',
    '/ip/ipv4InterfaceEntry/ipv4InterfaceRetransmitTime',
    'The time between retransmissions of ARP requests to a
neighbor when resolving the address or when probing the
reachability of a neighbor.',
    'RFC 1122',
    '/modules/IP-MIB/2006-02-02#ipv4InterfaceRetransmitTime.829', 
    'leaf', 
    '/ip/ipv4InterfaceEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6InterfaceTableLastChange', '844',
    '/ip/ipv6InterfaceTableLastChange',
    'The value of sysUpTime on the most recent occasion at which
a row in the ipv6InterfaceTable was added or deleted or when
an ipv6InterfaceReasmMaxSize, ipv6InterfaceIdentifier,
ipv6InterfaceEnableStatus, ipv6InterfaceReachableTime,
ipv6InterfaceRetransmitTime, or ipv6InterfaceForwarding
object was modified.

If new objects are added to the ipv6InterfaceTable that
require the ipv6InterfaceTableLastChange to be updated when
they are modified, they must specify that requirement in
their description clause.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6InterfaceTableLastChange.844', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6InterfaceEntry', '865',
    '/ip/ipv6InterfaceEntry',
    'An entry containing IPv6-specific information for a given
interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6InterfaceEntry.865', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipv6InterfaceIfIndex ipv6InterfaceReasmMaxSize ipv6InterfaceIdentifier ipv6InterfaceEnableStatus ipv6InterfaceReachableTime ipv6InterfaceRetransmitTime ipv6InterfaceForwarding',
    '',
    'ipv6InterfaceIfIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6InterfaceIfIndex', '874',
    '/ip/ipv6InterfaceEntry/ipv6InterfaceIfIndex',
    'The index value that uniquely identifies the interface to
which this entry is applicable.  The interface identified by
a particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6InterfaceIfIndex.874', 
    'leaf', 
    '/ip/ipv6InterfaceEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6InterfaceReasmMaxSize', '885',
    '/ip/ipv6InterfaceEntry/ipv6InterfaceReasmMaxSize',
    'The size of the largest IPv6 datagram that this entity can
re-assemble from incoming IPv6 fragmented datagrams received
on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6InterfaceReasmMaxSize.885', 
    'leaf', 
    '/ip/ipv6InterfaceEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6InterfaceIdentifier', '898',
    '/ip/ipv6InterfaceEntry/ipv6InterfaceIdentifier',
    'The Interface Identifier for this interface.  The Interface
Identifier is combined with an address prefix to form an
interface address.

By default, the Interface Identifier is auto-configured
according to the rules of the link type to which this
interface is attached.




A zero length identifier may be used where appropriate.  One
possible example is a loopback interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6InterfaceIdentifier.898', 
    'leaf', 
    '/ip/ipv6InterfaceEntry',
    '0',
    '1',
    'Ipv6AddressIfIdentifierTC',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6InterfaceEnableStatus', '918',
    '/ip/ipv6InterfaceEntry/ipv6InterfaceEnableStatus',
    'The indication of whether IPv6 is enabled (up) or disabled
(down) on this interface.  This object does not affect the
state of the interface itself, only its connection to an
IPv6 stack.  The IF-MIB should be used to control the state
of the interface.

When this object is written, the entity SHOULD save the
change to non-volatile storage and restore the object from
non-volatile storage upon re-initialization of the system.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6InterfaceEnableStatus.918', 
    'leaf', 
    '/ip/ipv6InterfaceEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6InterfaceReachableTime', '937',
    '/ip/ipv6InterfaceEntry/ipv6InterfaceReachableTime',
    'The time a neighbor is considered reachable after receiving
a reachability confirmation.',
    'RFC 2461, Section 6.3.2',
    '/modules/IP-MIB/2006-02-02#ipv6InterfaceReachableTime.937', 
    'leaf', 
    '/ip/ipv6InterfaceEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6InterfaceRetransmitTime', '949',
    '/ip/ipv6InterfaceEntry/ipv6InterfaceRetransmitTime',
    'The time between retransmissions of Neighbor Solicitation
messages to a neighbor when resolving the address or when
probing the reachability of a neighbor.',
    'RFC 2461, Section 6.3.2',
    '/modules/IP-MIB/2006-02-02#ipv6InterfaceRetransmitTime.949', 
    'leaf', 
    '/ip/ipv6InterfaceEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6InterfaceForwarding', '962',
    '/ip/ipv6InterfaceEntry/ipv6InterfaceForwarding',
    'The indication of whether this entity is acting as an IPv6
router on this interface with respect to the forwarding of
datagrams received by, but not addressed to, this entity.
IPv6 routers forward datagrams.  IPv6 hosts do not (except
those source-routed via the host).

This object is constrained by ipv6IpForwarding and is
ignored if ipv6IpForwarding is set to notForwarding.  Those
systems that do not provide per-interface control of the
forwarding function should set this object to forwarding for
all interfaces and allow the ipv6IpForwarding object to
control the forwarding capability.

When this object is written, the entity SHOULD save the
change to non-volatile storage and restore the object from
non-volatile storage upon re-initialization of the system.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6InterfaceForwarding.962', 
    'leaf', 
    '/ip/ipv6InterfaceEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixEntry', '993',
    '/ip/ipAddressPrefixEntry',
    'An entry in the ipAddressPrefixTable.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixEntry.993', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipAddressPrefixIfIndex ipAddressPrefixType ipAddressPrefixPrefix ipAddressPrefixLength ipAddressPrefixOrigin ipAddressPrefixOnLinkFlag ipAddressPrefixAutonomousFlag ipAddressPrefixAdvPreferredLifetime ipAddressPrefixAdvValidLifetime',
    '',
    'ipAddressPrefixIfIndex ipAddressPrefixType 
ipAddressPrefixPrefix ipAddressPrefixLength',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixIfIndex', '1002',
    '/ip/ipAddressPrefixEntry/ipAddressPrefixIfIndex',
    'The index value that uniquely identifies the interface on
which this prefix is configured.  The interface identified
by a particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixIfIndex.1002', 
    'leaf', 
    '/ip/ipAddressPrefixEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixType', '1013',
    '/ip/ipAddressPrefixEntry/ipAddressPrefixType',
    'The address type of ipAddressPrefix.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixType.1013', 
    'leaf', 
    '/ip/ipAddressPrefixEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixPrefix', '1021',
    '/ip/ipAddressPrefixEntry/ipAddressPrefixPrefix',
    'The address prefix.  The address type of this object is
specified in ipAddressPrefixType.  The length of this object
is the standard length for objects of that type (4 or 16
bytes).  Any bits after ipAddressPrefixLength must be zero.

Implementors need to be aware that, if the size of
ipAddressPrefixPrefix exceeds 114 octets, then OIDS of
instances of columns in this row will have more than 128
sub-identifiers and cannot be accessed using SNMPv1,
SNMPv2c, or SNMPv3.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixPrefix.1021', 
    'leaf', 
    '/ip/ipAddressPrefixEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixLength', '1038',
    '/ip/ipAddressPrefixEntry/ipAddressPrefixLength',
    'The prefix length associated with this prefix.

The value 0 has no special meaning for this object.  It
simply refers to address \'::/0\'.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixLength.1038', 
    'leaf', 
    '/ip/ipAddressPrefixEntry',
    '0',
    '1',
    'InetAddressPrefixLength',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixOrigin', '1049',
    '/ip/ipAddressPrefixEntry/ipAddressPrefixOrigin',
    'The origin of this prefix.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixOrigin.1049', 
    'leaf', 
    '/ip/ipAddressPrefixEntry',
    '0',
    '1',
    'IpAddressPrefixOriginTC',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixOnLinkFlag', '1057',
    '/ip/ipAddressPrefixEntry/ipAddressPrefixOnLinkFlag',
    'This object has the value \'true(1)\', if this prefix can be
used for on-link determination; otherwise, the value is
\'false(2)\'.

The default for IPv4 prefixes is \'true(1)\'.',
    'For IPv6 RFC 2461, especially sections 2 and 4.6.2 and
RFC 2462',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixOnLinkFlag.1057', 
    'leaf', 
    '/ip/ipAddressPrefixEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixAutonomousFlag', '1072',
    '/ip/ipAddressPrefixEntry/ipAddressPrefixAutonomousFlag',
    'Autonomous address configuration flag.  When true(1),
indicates that this prefix can be used for autonomous
address configuration (i.e., can be used to form a local
interface address).  If false(2), it is not used to auto-
configure a local interface address.

The default for IPv4 prefixes is \'false(2)\'.',
    'For IPv6 RFC 2461, especially sections 2 and 4.6.2 and
RFC 2462',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixAutonomousFlag.1072', 
    'leaf', 
    '/ip/ipAddressPrefixEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixAdvPreferredLifetime', '1089',
    '/ip/ipAddressPrefixEntry/ipAddressPrefixAdvPreferredLifetime',
    'The remaining length of time, in seconds, that this prefix
will continue to be preferred, i.e., time until deprecation.

A value of 4,294,967,295 represents infinity.

The address generated from a deprecated prefix should no
longer be used as a source address in new communications,
but packets received on such an interface are processed as
expected.

The default for IPv4 prefixes is 4,294,967,295 (infinity).',
    'For IPv6 RFC 2461, especially sections 2 and 4.6.2 and
RFC 2462',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixAdvPreferredLifetime.1089', 
    'leaf', 
    '/ip/ipAddressPrefixEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefixAdvValidLifetime', '1111',
    '/ip/ipAddressPrefixEntry/ipAddressPrefixAdvValidLifetime',
    'The remaining length of time, in seconds, that this prefix
will continue to be valid, i.e., time until invalidation.  A
value of 4,294,967,295 represents infinity.

The address generated from an invalidated prefix should not
appear as the destination or source address of a packet.




The default for IPv4 prefixes is 4,294,967,295 (infinity).',
    'For IPv6 RFC 2461, especially sections 2 and 4.6.2 and
RFC 2462',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefixAdvValidLifetime.1111', 
    'leaf', 
    '/ip/ipAddressPrefixEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressSpinLock', '1134',
    '/ip/ipAddressSpinLock',
    'An advisory lock used to allow cooperating SNMP managers to
coordinate their use of the set operation in creating or
modifying rows within this table.

In order to use this lock to coordinate the use of set
operations, managers should first retrieve
ipAddressTableSpinLock.  They should then determine the
appropriate row to create or modify.  Finally, they should
issue the appropriate set command, including the retrieved
value of ipAddressSpinLock.  If another manager has altered
the table in the meantime, then the value of
ipAddressSpinLock will have changed, and the creation will
fail as it will be specifying an incorrect value for
ipAddressSpinLock.  It is suggested, but not required, that
the ipAddressSpinLock be the first var bind for each set of
objects representing a \'row\' in a PDU.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressSpinLock.1134', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'TestAndIncr',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressEntry', '1160',
    '/ip/ipAddressEntry',
    'An address mapping for a particular interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressEntry.1160', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipAddressAddrType ipAddressAddr ipAddressIfIndex ipAddressType ipAddressPrefix ipAddressOrigin ipAddressStatus ipAddressCreated ipAddressLastChanged ipAddressRowStatus ipAddressStorageType',
    '',
    'ipAddressAddrType ipAddressAddr',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressAddrType', '1168',
    '/ip/ipAddressEntry/ipAddressAddrType',
    'The address type of ipAddressAddr.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressAddrType.1168', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressAddr', '1176',
    '/ip/ipAddressEntry/ipAddressAddr',
    'The IP address to which this entry\'s addressing information



pertains.  The address type of this object is specified in
ipAddressAddrType.

Implementors need to be aware that if the size of
ipAddressAddr exceeds 116 octets, then OIDS of instances of
columns in this row will have more than 128 sub-identifiers
and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressAddr.1176', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressIfIndex', '1194',
    '/ip/ipAddressEntry/ipAddressIfIndex',
    'The index value that uniquely identifies the interface to
which this entry is applicable.  The interface identified by
a particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressIfIndex.1194', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressType', '1205',
    '/ip/ipAddressEntry/ipAddressType',
    'The type of address.  broadcast(3) is not a valid value for
IPv6 addresses (RFC 3513).',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressType.1205', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressPrefix', '1219',
    '/ip/ipAddressEntry/ipAddressPrefix',
    'A pointer to the row in the prefix table to which this
address belongs.  May be { 0 0 } if there is no such row.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressPrefix.1219', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressOrigin', '1229',
    '/ip/ipAddressEntry/ipAddressOrigin',
    'The origin of the address.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressOrigin.1229', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'IpAddressOriginTC',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressStatus', '1237',
    '/ip/ipAddressEntry/ipAddressStatus',
    'The status of the address, describing if the address can be
used for communication.

In the absence of other information, an IPv4 address is
always preferred(1).',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressStatus.1237', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'IpAddressStatusTC',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressCreated', '1250',
    '/ip/ipAddressEntry/ipAddressCreated',
    'The value of sysUpTime at the time this entry was created.
If this entry was created prior to the last re-
initialization of the local network management subsystem,
then this object contains a zero value.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressCreated.1250', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressLastChanged', '1261',
    '/ip/ipAddressEntry/ipAddressLastChanged',
    'The value of sysUpTime at the time this entry was last
updated.  If this entry was updated prior to the last re-
initialization of the local network management subsystem,
then this object contains a zero value.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressLastChanged.1261', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressRowStatus', '1272',
    '/ip/ipAddressEntry/ipAddressRowStatus',
    'The status of this conceptual row.

The RowStatus TC requires that this DESCRIPTION clause
states under which circumstances other objects in this row



can be modified.  The value of this object has no effect on
whether other objects in this conceptual row can be
modified.

A conceptual row can not be made active until the
ipAddressIfIndex has been set to a valid index.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressRowStatus.1272', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipAddressStorageType', '1292',
    '/ip/ipAddressEntry/ipAddressStorageType',
    'The storage type for this conceptual row.  If this object
has a value of \'permanent\', then no other objects are
required to be able to be modified.',
    '',
    '/modules/IP-MIB/2006-02-02#ipAddressStorageType.1292', 
    'leaf', 
    '/ip/ipAddressEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToPhysicalEntry', '1307',
    '/ip/ipNetToPhysicalEntry',
    'Each entry contains one IP address to `physical\' address
equivalence.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToPhysicalEntry.1307', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipNetToPhysicalIfIndex ipNetToPhysicalNetAddressType ipNetToPhysicalNetAddress ipNetToPhysicalPhysAddress ipNetToPhysicalLastUpdated ipNetToPhysicalType ipNetToPhysicalState ipNetToPhysicalRowStatus',
    '',
    'ipNetToPhysicalIfIndex 
ipNetToPhysicalNetAddressType 
ipNetToPhysicalNetAddress',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToPhysicalIfIndex', '1318',
    '/ip/ipNetToPhysicalEntry/ipNetToPhysicalIfIndex',
    'The index value that uniquely identifies the interface to
which this entry is applicable.  The interface identified by
a particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToPhysicalIfIndex.1318', 
    'leaf', 
    '/ip/ipNetToPhysicalEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToPhysicalNetAddressType', '1329',
    '/ip/ipNetToPhysicalEntry/ipNetToPhysicalNetAddressType',
    'The type of ipNetToPhysicalNetAddress.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToPhysicalNetAddressType.1329', 
    'leaf', 
    '/ip/ipNetToPhysicalEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToPhysicalNetAddress', '1337',
    '/ip/ipNetToPhysicalEntry/ipNetToPhysicalNetAddress',
    'The IP Address corresponding to the media-dependent
`physical\' address.  The address type of this object is
specified in ipNetToPhysicalAddressType.

Implementors need to be aware that if the size of



ipNetToPhysicalNetAddress exceeds 115 octets, then OIDS of
instances of columns in this row will have more than 128
sub-identifiers and cannot be accessed using SNMPv1,
SNMPv2c, or SNMPv3.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToPhysicalNetAddress.1337', 
    'leaf', 
    '/ip/ipNetToPhysicalEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToPhysicalPhysAddress', '1356',
    '/ip/ipNetToPhysicalEntry/ipNetToPhysicalPhysAddress',
    'The media-dependent `physical\' address.

As the entries in this table are typically not persistent
when this object is written the entity SHOULD NOT save the
change to non-volatile storage.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToPhysicalPhysAddress.1356', 
    'leaf', 
    '/ip/ipNetToPhysicalEntry',
    '0',
    '1',
    'phys-address',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToPhysicalLastUpdated', '1370',
    '/ip/ipNetToPhysicalEntry/ipNetToPhysicalLastUpdated',
    'The value of sysUpTime at the time this entry was last
updated.  If this entry was updated prior to the last re-
initialization of the local network management subsystem,
then this object contains a zero value.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToPhysicalLastUpdated.1370', 
    'leaf', 
    '/ip/ipNetToPhysicalEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToPhysicalType', '1381',
    '/ip/ipNetToPhysicalEntry/ipNetToPhysicalType',
    'The type of mapping.

Setting this object to the value invalid(2) has the effect
of invalidating the corresponding entry in the
ipNetToPhysicalTable.  That is, it effectively dis-
associates the interface identified with said entry from the
mapping identified with said entry.  It is an
implementation-specific matter as to whether the agent



removes an invalidated entry from the table.  Accordingly,
management stations must be prepared to receive tabular
information from agents that corresponds to entries not
currently in use.  Proper interpretation of such entries
requires examination of the relevant ipNetToPhysicalType
object.

The \'dynamic(3)\' type indicates that the IP address to
physical addresses mapping has been dynamically resolved
using e.g., IPv4 ARP or the IPv6 Neighbor Discovery
protocol.

The \'static(4)\' type indicates that the mapping has been
statically configured.  Both of these refer to entries that
provide mappings for other entities addresses.

The \'local(5)\' type indicates that the mapping is provided
for an entity\'s own interface address.

As the entries in this table are typically not persistent
when this object is written the entity SHOULD NOT save the
change to non-volatile storage.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToPhysicalType.1381', 
    'leaf', 
    '/ip/ipNetToPhysicalEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToPhysicalState', '1428',
    '/ip/ipNetToPhysicalEntry/ipNetToPhysicalState',
    'The Neighbor Unreachability Detection state for the
interface when the address mapping in this entry is used.
If Neighbor Unreachability Detection is not in use (e.g. for
IPv4), this object is always unknown(6).',
    'RFC 2461',
    '/modules/IP-MIB/2006-02-02#ipNetToPhysicalState.1428', 
    'leaf', 
    '/ip/ipNetToPhysicalEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipNetToPhysicalRowStatus', '1449',
    '/ip/ipNetToPhysicalEntry/ipNetToPhysicalRowStatus',
    'The status of this conceptual row.

The RowStatus TC requires that this DESCRIPTION clause
states under which circumstances other objects in this row
can be modified.  The value of this object has no effect on
whether other objects in this conceptual row can be
modified.

A conceptual row can not be made active until the
ipNetToPhysicalPhysAddress object has been set.

Note that if the ipNetToPhysicalType is set to \'invalid\',
the managed node may delete the entry independent of the
state of this object.',
    '',
    '/modules/IP-MIB/2006-02-02#ipNetToPhysicalRowStatus.1449', 
    'leaf', 
    '/ip/ipNetToPhysicalEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexEntry', '1474',
    '/ip/ipv6ScopeZoneIndexEntry',
    'Each entry contains the list of scope identifiers on a given
interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexEntry.1474', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipv6ScopeZoneIndexIfIndex ipv6ScopeZoneIndexLinkLocal ipv6ScopeZoneIndex3 ipv6ScopeZoneIndexAdminLocal ipv6ScopeZoneIndexSiteLocal ipv6ScopeZoneIndex6 ipv6ScopeZoneIndex7 ipv6ScopeZoneIndexOrganizationLocal ipv6ScopeZoneIndex9 ipv6ScopeZoneIndexA ipv6ScopeZoneIndexB ipv6ScopeZoneIndexC ipv6ScopeZoneIndexD',
    '',
    'ipv6ScopeZoneIndexIfIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexIfIndex', '1483',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndexIfIndex',
    'The index value that uniquely identifies the interface to
which these scopes belong.  The interface identified by a
particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexIfIndex.1483', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexLinkLocal', '1494',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndexLinkLocal',
    'The zone index for the link-local scope on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexLinkLocal.1494', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndex3', '1502',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndex3',
    'The zone index for scope 3 on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndex3.1502', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexAdminLocal', '1510',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndexAdminLocal',
    'The zone index for the admin-local scope on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexAdminLocal.1510', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexSiteLocal', '1518',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndexSiteLocal',
    'The zone index for the site-local scope on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexSiteLocal.1518', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndex6', '1526',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndex6',
    'The zone index for scope 6 on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndex6.1526', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndex7', '1534',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndex7',
    'The zone index for scope 7 on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndex7.1534', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexOrganizationLocal', '1542',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndexOrganizationLocal',
    'The zone index for the organization-local scope on this
interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexOrganizationLocal.1542', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndex9', '1551',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndex9',
    'The zone index for scope 9 on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndex9.1551', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexA', '1559',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndexA',
    'The zone index for scope A on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexA.1559', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexB', '1567',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndexB',
    'The zone index for scope B on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexB.1567', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexC', '1575',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndexC',
    'The zone index for scope C on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexC.1575', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6ScopeZoneIndexD', '1583',
    '/ip/ipv6ScopeZoneIndexEntry/ipv6ScopeZoneIndexD',
    'The zone index for scope D on this interface.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6ScopeZoneIndexD.1583', 
    'leaf', 
    '/ip/ipv6ScopeZoneIndexEntry',
    '0',
    '1',
    'InetZoneIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipDefaultRouterEntry', '1595',
    '/ip/ipDefaultRouterEntry',
    'Each entry contains information about a default router known
to this entity.',
    '',
    '/modules/IP-MIB/2006-02-02#ipDefaultRouterEntry.1595', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipDefaultRouterAddressType ipDefaultRouterAddress ipDefaultRouterIfIndex ipDefaultRouterLifetime ipDefaultRouterPreference',
    '',
    'ipDefaultRouterAddressType ipDefaultRouterAddress 
ipDefaultRouterIfIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipDefaultRouterAddressType', '1605',
    '/ip/ipDefaultRouterEntry/ipDefaultRouterAddressType',
    'The address type for this row.',
    '',
    '/modules/IP-MIB/2006-02-02#ipDefaultRouterAddressType.1605', 
    'leaf', 
    '/ip/ipDefaultRouterEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipDefaultRouterAddress', '1613',
    '/ip/ipDefaultRouterEntry/ipDefaultRouterAddress',
    'The IP address of the default router represented by this
row.  The address type of this object is specified in
ipDefaultRouterAddressType.

Implementers need to be aware that if the size of
ipDefaultRouterAddress exceeds 115 octets, then OIDS of
instances of columns in this row will have more than 128
sub-identifiers and cannot be accessed using SNMPv1,
SNMPv2c, or SNMPv3.',
    '',
    '/modules/IP-MIB/2006-02-02#ipDefaultRouterAddress.1613', 
    'leaf', 
    '/ip/ipDefaultRouterEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipDefaultRouterIfIndex', '1629',
    '/ip/ipDefaultRouterEntry/ipDefaultRouterIfIndex',
    'The index value that uniquely identifies the interface by
which the router can be reached.  The interface identified
by a particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipDefaultRouterIfIndex.1629', 
    'leaf', 
    '/ip/ipDefaultRouterEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipDefaultRouterLifetime', '1640',
    '/ip/ipDefaultRouterEntry/ipDefaultRouterLifetime',
    'The remaining length of time, in seconds, that this router
will continue to be useful as a default router.  A value of
zero indicates that it is no longer useful as a default
router.  It is left to the implementer of the MIB as to
whether a router with a lifetime of zero is removed from the
list.

For IPv6, this value should be extracted from the router
advertisement messages.',
    'For IPv6 RFC 2462 sections 4.2 and 6.3.4',
    '/modules/IP-MIB/2006-02-02#ipDefaultRouterLifetime.1640', 
    'leaf', 
    '/ip/ipDefaultRouterEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipDefaultRouterPreference', '1661',
    '/ip/ipDefaultRouterEntry/ipDefaultRouterPreference',
    'An indication of preference given to this router as a
default router as described in he Default Router
Preferences document.  Treating the value as a
2 bit signed integer allows for simple arithmetic
comparisons.

For IPv4 routers or IPv6 routers that are not using the
updated router advertisement format, this object is set to
medium (0).',
    'RFC 4291, section 2.1',
    '/modules/IP-MIB/2006-02-02#ipDefaultRouterPreference.1661', 
    'leaf', 
    '/ip/ipDefaultRouterEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertSpinLock', '1685',
    '/ip/ipv6RouterAdvertSpinLock',
    'An advisory lock used to allow cooperating SNMP managers to
coordinate their use of the set operation in creating or
modifying rows within this table.

In order to use this lock to coordinate the use of set
operations, managers should first retrieve
ipv6RouterAdvertSpinLock.  They should then determine the
appropriate row to create or modify.  Finally, they should
issue the appropriate set command including the retrieved
value of ipv6RouterAdvertSpinLock.  If another manager has
altered the table in the meantime, then the value of
ipv6RouterAdvertSpinLock will have changed and the creation
will fail as it will be specifying an incorrect value for
ipv6RouterAdvertSpinLock.  It is suggested, but not
required, that the ipv6RouterAdvertSpinLock be the first var
bind for each set of objects representing a \'row\' in a PDU.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertSpinLock.1685', 
    'leaf', 
    '/ip',
    '0',
    '1',
    'TestAndIncr',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertEntry', '1711',
    '/ip/ipv6RouterAdvertEntry',
    'An entry containing information used to construct router
advertisements.

Information in this table is persistent, and when this
object is written, the entity SHOULD save the change to
non-volatile storage.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertEntry.1711', 
    'list', 
    '/ip',
    '0',
    '1',
    '',
    '',
    'ipv6RouterAdvertIfIndex ipv6RouterAdvertSendAdverts ipv6RouterAdvertMaxInterval ipv6RouterAdvertMinInterval ipv6RouterAdvertManagedFlag ipv6RouterAdvertOtherConfigFlag ipv6RouterAdvertLinkMTU ipv6RouterAdvertReachableTime ipv6RouterAdvertRetransmitTime ipv6RouterAdvertCurHopLimit ipv6RouterAdvertDefaultLifetime ipv6RouterAdvertRowStatus',
    '',
    'ipv6RouterAdvertIfIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertIfIndex', '1724',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertIfIndex',
    'The index value that uniquely identifies the interface on
which router advertisements constructed with this
information will be transmitted.  The interface identified
by a particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertIfIndex.1724', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertSendAdverts', '1736',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertSendAdverts',
    'A flag indicating whether the router sends periodic
router advertisements and responds to router solicitations
on this interface.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertSendAdverts.1736', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertMaxInterval', '1749',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertMaxInterval',
    'The maximum time allowed between sending unsolicited router



advertisements from this interface.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertMaxInterval.1749', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertMinInterval', '1767',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertMinInterval',
    'The minimum time allowed between sending unsolicited router
advertisements from this interface.

The default is 0.33 * ipv6RouterAdvertMaxInterval, however,
in the case of a low value for ipv6RouterAdvertMaxInterval,
the minimum value for this object is restricted to 3.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertMinInterval.1767', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertManagedFlag', '1785',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertManagedFlag',
    'The true/false value to be placed into the \'managed address
configuration\' flag field in router advertisements sent from
this interface.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertManagedFlag.1785', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertOtherConfigFlag', '1798',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertOtherConfigFlag',
    'The true/false value to be placed into the \'other stateful
configuration\' flag field in router advertisements sent from
this interface.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertOtherConfigFlag.1798', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertLinkMTU', '1811',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertLinkMTU',
    'The value to be placed in MTU options sent by the router on
this interface.

A value of zero indicates that no MTU options are sent.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertLinkMTU.1811', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertReachableTime', '1825',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertReachableTime',
    'The value to be placed in the reachable time field in router
advertisement messages sent from this interface.

A value of zero in the router advertisement indicates that
the advertisement isn\'t specifying a value for reachable
time.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertReachableTime.1825', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertRetransmitTime', '1844',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertRetransmitTime',
    'The value to be placed in the retransmit timer field in
router advertisements sent from this interface.

A value of zero in the router advertisement indicates that
the advertisement isn\'t specifying a value for retrans
time.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertRetransmitTime.1844', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertCurHopLimit', '1861',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertCurHopLimit',
    'The default value to be placed in the current hop limit
field in router advertisements sent from this interface.



The value should be set to the current diameter of the
Internet.

A value of zero in the router advertisement indicates that
the advertisement isn\'t specifying a value for curHopLimit.

The default should be set to the value specified in the IANA
web pages (www.iana.org) at the time of implementation.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertCurHopLimit.1861', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertDefaultLifetime', '1885',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertDefaultLifetime',
    'The value to be placed in the router lifetime field of
router advertisements sent from this interface.  This value
MUST be either 0 or between ipv6RouterAdvertMaxInterval and
9000 seconds.

A value of zero indicates that the router is not to be used
as a default router.

The default is 3 * ipv6RouterAdvertMaxInterval.',
    'RFC 2461 Section 6.2.1',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertDefaultLifetime.1885', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipv6RouterAdvertRowStatus', '1906',
    '/ip/ipv6RouterAdvertEntry/ipv6RouterAdvertRowStatus',
    'The status of this conceptual row.

As all objects in this conceptual row have default values, a
row can be created and made active by setting this object
appropriately.

The RowStatus TC requires that this DESCRIPTION clause
states under which circumstances other objects in this row
can be modified.  The value of this object has no effect on
whether other objects in this conceptual row can be
modified.',
    '',
    '/modules/IP-MIB/2006-02-02#ipv6RouterAdvertRowStatus.1906', 
    'leaf', 
    '/ip/ipv6RouterAdvertEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipTrafficStats', '1927',
    '/ipTrafficStats',
    '',
    '',
    '/modules/IP-MIB/2006-02-02#ipTrafficStats.1927', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'ipSystemStatsEntry ipIfStatsTableLastChange ipIfStatsEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsEntry', '1932',
    '/ipTrafficStats/ipSystemStatsEntry',
    'A statistics entry containing system-wide objects for a
particular IP version.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsEntry.1932', 
    'list', 
    '/ipTrafficStats',
    '0',
    '1',
    '',
    '',
    'ipSystemStatsIPVersion ipSystemStatsInReceives ipSystemStatsHCInReceives ipSystemStatsInOctets ipSystemStatsHCInOctets ipSystemStatsInHdrErrors ipSystemStatsInNoRoutes ipSystemStatsInAddrErrors ipSystemStatsInUnknownProtos ipSystemStatsInTruncatedPkts ipSystemStatsInForwDatagrams ipSystemStatsHCInForwDatagrams ipSystemStatsReasmReqds ipSystemStatsReasmOKs ipSystemStatsReasmFails ipSystemStatsInDiscards ipSystemStatsInDelivers ipSystemStatsHCInDelivers ipSystemStatsOutRequests ipSystemStatsHCOutRequests ipSystemStatsOutNoRoutes ipSystemStatsOutForwDatagrams ipSystemStatsHCOutForwDatagrams ipSystemStatsOutDiscards ipSystemStatsOutFragReqds ipSystemStatsOutFragOKs ipSystemStatsOutFragFails ipSystemStatsOutFragCreates ipSystemStatsOutTransmits ipSystemStatsHCOutTransmits ipSystemStatsOutOctets ipSystemStatsHCOutOctets ipSystemStatsInMcastPkts ipSystemStatsHCInMcastPkts ipSystemStatsInMcastOctets ipSystemStatsHCInMcastOctets ipSystemStatsOutMcastPkts ipSystemStatsHCOutMcastPkts ipSystemStatsOutMcastOctets ipSystemStatsHCOutMcastOctets ipSystemStatsInBcastPkts ipSystemStatsHCInBcastPkts ipSystemStatsOutBcastPkts ipSystemStatsHCOutBcastPkts ipSystemStatsDiscontinuityTime ipSystemStatsRefreshRate',
    '',
    'ipSystemStatsIPVersion',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsIPVersion', '1941',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsIPVersion',
    'The IP version of this row.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsIPVersion.1941', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'InetVersion',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInReceives', '1949',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInReceives',
    'The total number of input IP datagrams received, including
those received in error.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInReceives.1949', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCInReceives', '1963',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCInReceives',
    'The total number of input IP datagrams received, including
those received in error.  This object counts the same
datagrams as ipSystemStatsInReceives, but allows for larger
values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCInReceives.1963', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInOctets', '1979',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInOctets',
    'The total number of octets received in input IP datagrams,
including those received in error.  Octets from datagrams
counted in ipSystemStatsInReceives MUST be counted here.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInOctets.1979', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCInOctets', '1994',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCInOctets',
    'The total number of octets received in input IP datagrams,
including those received in error.  This object counts the
same octets as ipSystemStatsInOctets, but allows for larger



values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCInOctets.1994', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInHdrErrors', '2013',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInHdrErrors',
    'The number of input IP datagrams discarded due to errors in
their IP headers, including version number mismatch, other
format errors, hop count exceeded, errors discovered in
processing their IP options, etc.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInHdrErrors.2013', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInNoRoutes', '2029',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInNoRoutes',
    'The number of input IP datagrams discarded because no route
could be found to transmit them to their destination.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInNoRoutes.2029', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInAddrErrors', '2043',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInAddrErrors',
    'The number of input IP datagrams discarded because the IP
address in their IP header\'s destination field was not a
valid address to be received at this entity.  This count
includes invalid addresses (e.g., ::0).  For entities
that are not IP routers and therefore do not forward



datagrams, this counter includes datagrams discarded
because the destination address was not a local address.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInAddrErrors.2043', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInUnknownProtos', '2065',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInUnknownProtos',
    'The number of locally-addressed IP datagrams received
successfully but discarded because of an unknown or
unsupported protocol.

When tracking interface statistics, the counter of the
interface to which these datagrams were addressed is
incremented.  This interface might not be the same as the
input interface for some of the datagrams.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInUnknownProtos.2065', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInTruncatedPkts', '2085',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInTruncatedPkts',
    'The number of input IP datagrams discarded because the
datagram frame didn\'t carry enough data.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInTruncatedPkts.2085', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInForwDatagrams', '2099',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInForwDatagrams',
    'The number of input datagrams for which this entity was not
their final IP destination and for which this entity
attempted to find a route to forward them to that final
destination.  In entities that do not act as IP routers,
this counter will include only those datagrams that were
Source-Routed via this entity, and the Source-Route
processing was successful.

When tracking interface statistics, the counter of the
incoming interface is incremented for each datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInForwDatagrams.2099', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCInForwDatagrams', '2121',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCInForwDatagrams',
    'The number of input datagrams for which this entity was not
their final IP destination and for which this entity
attempted to find a route to forward them to that final
destination.  This object counts the same packets as
ipSystemStatsInForwDatagrams, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCInForwDatagrams.2121', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsReasmReqds', '2138',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsReasmReqds',
    'The number of IP fragments received that needed to be
reassembled at this interface.

When tracking interface statistics, the counter of the
interface to which these fragments were addressed is
incremented.  This interface might not be the same as the
input interface for some of the fragments.

Discontinuities in the value of this counter can occur at



re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsReasmReqds.2138', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsReasmOKs', '2160',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsReasmOKs',
    'The number of IP datagrams successfully reassembled.

When tracking interface statistics, the counter of the
interface to which these datagrams were addressed is
incremented.  This interface might not be the same as the
input interface for some of the datagrams.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsReasmOKs.2160', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsReasmFails', '2178',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsReasmFails',
    'The number of failures detected by the IP re-assembly
algorithm (for whatever reason: timed out, errors, etc.).
Note that this is not necessarily a count of discarded IP
fragments since some algorithms (notably the algorithm in
RFC 815) can lose track of the number of fragments by
combining them as they are received.

When tracking interface statistics, the counter of the
interface to which these fragments were addressed is
incremented.  This interface might not be the same as the
input interface for some of the fragments.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsReasmFails.2178', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInDiscards', '2201',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInDiscards',
    'The number of input IP datagrams for which no problems were
encountered to prevent their continued processing, but
were discarded (e.g., for lack of buffer space).  Note that
this counter does not include any datagrams discarded while
awaiting re-assembly.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInDiscards.2201', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInDelivers', '2218',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInDelivers',
    'The total number of datagrams successfully delivered to IP
user-protocols (including ICMP).

When tracking interface statistics, the counter of the
interface to which these datagrams were addressed is
incremented.  This interface might not be the same as the
input interface for some of the datagrams.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInDelivers.2218', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCInDelivers', '2237',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCInDelivers',
    'The total number of datagrams successfully delivered to IP
user-protocols (including ICMP).  This object counts the
same packets as ipSystemStatsInDelivers, but allows for
larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCInDelivers.2237', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutRequests', '2253',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutRequests',
    'The total number of IP datagrams that local IP user-
protocols (including ICMP) supplied to IP in requests for
transmission.  Note that this counter does not include any
datagrams counted in ipSystemStatsOutForwDatagrams.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutRequests.2253', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCOutRequests', '2269',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCOutRequests',
    'The total number of IP datagrams that local IP user-
protocols (including ICMP) supplied to IP in requests for
transmission.  This object counts the same packets as
ipSystemStatsOutRequests, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCOutRequests.2269', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutNoRoutes', '2285',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutNoRoutes',
    'The number of locally generated IP datagrams discarded
because no route could be found to transmit them to their
destination.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutNoRoutes.2285', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutForwDatagrams', '2300',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutForwDatagrams',
    'The number of datagrams for which this entity was not their
final IP destination and for which it was successful in
finding a path to their final destination.  In entities
that do not act as IP routers, this counter will include
only those datagrams that were Source-Routed via this
entity, and the Source-Route processing was successful.

When tracking interface statistics, the counter of the
outgoing interface is incremented for a successfully
forwarded datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutForwDatagrams.2300', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCOutForwDatagrams', '2322',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCOutForwDatagrams',
    'The number of datagrams for which this entity was not their
final IP destination and for which it was successful in
finding a path to their final destination.  This object
counts the same packets as ipSystemStatsOutForwDatagrams,
but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCOutForwDatagrams.2322', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutDiscards', '2339',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutDiscards',
    'The number of output IP datagrams for which no problem was
encountered to prevent their transmission to their
destination, but were discarded (e.g., for lack of
buffer space).  Note that this counter would include



datagrams counted in ipSystemStatsOutForwDatagrams if any
such datagrams met this (discretionary) discard criterion.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutDiscards.2339', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutFragReqds', '2360',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutFragReqds',
    'The number of IP datagrams that would require fragmentation
in order to be transmitted.

When tracking interface statistics, the counter of the
outgoing interface is incremented for a successfully
fragmented datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutFragReqds.2360', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutFragOKs', '2378',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutFragOKs',
    'The number of IP datagrams that have been successfully
fragmented.

When tracking interface statistics, the counter of the
outgoing interface is incremented for a successfully
fragmented datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutFragOKs.2378', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutFragFails', '2396',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutFragFails',
    'The number of IP datagrams that have been discarded because
they needed to be fragmented but could not be.  This
includes IPv4 packets that have the DF bit set and IPv6
packets that are being forwarded and exceed the outgoing
link MTU.

When tracking interface statistics, the counter of the
outgoing interface is incremented for an unsuccessfully
fragmented datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutFragFails.2396', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutFragCreates', '2417',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutFragCreates',
    'The number of output datagram fragments that have been
generated as a result of IP fragmentation.

When tracking interface statistics, the counter of the
outgoing interface is incremented for a successfully
fragmented datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutFragCreates.2417', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutTransmits', '2435',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutTransmits',
    'The total number of IP datagrams that this entity supplied
to the lower layers for transmission.  This includes
datagrams generated locally and those forwarded by this
entity.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other



times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutTransmits.2435', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCOutTransmits', '2454',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCOutTransmits',
    'The total number of IP datagrams that this entity supplied
to the lower layers for transmission.  This object counts
the same datagrams as ipSystemStatsOutTransmits, but allows
for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCOutTransmits.2454', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutOctets', '2470',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutOctets',
    'The total number of octets in IP datagrams delivered to the
lower layers for transmission.  Octets from datagrams
counted in ipSystemStatsOutTransmits MUST be counted here.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutOctets.2470', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCOutOctets', '2485',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCOutOctets',
    'The total number of octets in IP datagrams delivered to the
lower layers for transmission.  This objects counts the same
octets as ipSystemStatsOutOctets, but allows for larger
values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of



ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCOutOctets.2485', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInMcastPkts', '2504',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInMcastPkts',
    'The number of IP multicast datagrams received.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInMcastPkts.2504', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCInMcastPkts', '2517',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCInMcastPkts',
    'The number of IP multicast datagrams received.  This object
counts the same datagrams as ipSystemStatsInMcastPkts but
allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCInMcastPkts.2517', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInMcastOctets', '2532',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInMcastOctets',
    'The total number of octets received in IP multicast
datagrams.  Octets from datagrams counted in
ipSystemStatsInMcastPkts MUST be counted here.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInMcastOctets.2532', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCInMcastOctets', '2547',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCInMcastOctets',
    'The total number of octets received in IP multicast
datagrams.  This object counts the same octets as
ipSystemStatsInMcastOctets, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCInMcastOctets.2547', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutMcastPkts', '2562',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutMcastPkts',
    'The number of IP multicast datagrams transmitted.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutMcastPkts.2562', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCOutMcastPkts', '2575',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCOutMcastPkts',
    'The number of IP multicast datagrams transmitted.  This
object counts the same datagrams as
ipSystemStatsOutMcastPkts, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCOutMcastPkts.2575', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutMcastOctets', '2590',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutMcastOctets',
    'The total number of octets transmitted in IP multicast
datagrams.  Octets from datagrams counted in



ipSystemStatsOutMcastPkts MUST be counted here.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutMcastOctets.2590', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCOutMcastOctets', '2608',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCOutMcastOctets',
    'The total number of octets transmitted in IP multicast
datagrams.  This object counts the same octets as
ipSystemStatsOutMcastOctets, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCOutMcastOctets.2608', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsInBcastPkts', '2623',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsInBcastPkts',
    'The number of IP broadcast datagrams received.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsInBcastPkts.2623', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCInBcastPkts', '2636',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCInBcastPkts',
    'The number of IP broadcast datagrams received.  This object
counts the same datagrams as ipSystemStatsInBcastPkts but
allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of



ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCInBcastPkts.2636', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsOutBcastPkts', '2654',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsOutBcastPkts',
    'The number of IP broadcast datagrams transmitted.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsOutBcastPkts.2654', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsHCOutBcastPkts', '2667',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsHCOutBcastPkts',
    'The number of IP broadcast datagrams transmitted.  This
object counts the same datagrams as
ipSystemStatsOutBcastPkts, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipSystemStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsHCOutBcastPkts.2667', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsDiscontinuityTime', '2682',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsDiscontinuityTime',
    'The value of sysUpTime on the most recent occasion at which
any one or more of this entry\'s counters suffered a
discontinuity.

If no such discontinuities have occurred since the last re-
initialization of the local management subsystem, then this
object contains a zero value.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsDiscontinuityTime.2682', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipSystemStatsRefreshRate', '2696',
    '/ipTrafficStats/ipSystemStatsEntry/ipSystemStatsRefreshRate',
    'The minimum reasonable polling interval for this entry.
This object provides an indication of the minimum amount of
time required to update the counters in this entry.',
    '',
    '/modules/IP-MIB/2006-02-02#ipSystemStatsRefreshRate.2696', 
    'leaf', 
    '/ipTrafficStats/ipSystemStatsEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsTableLastChange', '2708',
    '/ipTrafficStats/ipIfStatsTableLastChange',
    'The value of sysUpTime on the most recent occasion at which
a row in the ipIfStatsTable was added or deleted.

If new objects are added to the ipIfStatsTable that require
the ipIfStatsTableLastChange to be updated when they are
modified, they must specify that requirement in their
description clause.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsTableLastChange.2708', 
    'leaf', 
    '/ipTrafficStats',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsEntry', '2725',
    '/ipTrafficStats/ipIfStatsEntry',
    'An interface statistics entry containing objects for a
particular interface and version of IP.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsEntry.2725', 
    'list', 
    '/ipTrafficStats',
    '0',
    '1',
    '',
    '',
    'ipIfStatsIPVersion ipIfStatsIfIndex ipIfStatsInReceives ipIfStatsHCInReceives ipIfStatsInOctets ipIfStatsHCInOctets ipIfStatsInHdrErrors ipIfStatsInNoRoutes ipIfStatsInAddrErrors ipIfStatsInUnknownProtos ipIfStatsInTruncatedPkts ipIfStatsInForwDatagrams ipIfStatsHCInForwDatagrams ipIfStatsReasmReqds ipIfStatsReasmOKs ipIfStatsReasmFails ipIfStatsInDiscards ipIfStatsInDelivers ipIfStatsHCInDelivers ipIfStatsOutRequests ipIfStatsHCOutRequests ipIfStatsOutForwDatagrams ipIfStatsHCOutForwDatagrams ipIfStatsOutDiscards ipIfStatsOutFragReqds ipIfStatsOutFragOKs ipIfStatsOutFragFails ipIfStatsOutFragCreates ipIfStatsOutTransmits ipIfStatsHCOutTransmits ipIfStatsOutOctets ipIfStatsHCOutOctets ipIfStatsInMcastPkts ipIfStatsHCInMcastPkts ipIfStatsInMcastOctets ipIfStatsHCInMcastOctets ipIfStatsOutMcastPkts ipIfStatsHCOutMcastPkts ipIfStatsOutMcastOctets ipIfStatsHCOutMcastOctets ipIfStatsInBcastPkts ipIfStatsHCInBcastPkts ipIfStatsOutBcastPkts ipIfStatsHCOutBcastPkts ipIfStatsDiscontinuityTime ipIfStatsRefreshRate',
    '',
    'ipIfStatsIPVersion ipIfStatsIfIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsIPVersion', '2734',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsIPVersion',
    'The IP version of this row.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsIPVersion.2734', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'InetVersion',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsIfIndex', '2742',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsIfIndex',
    'The index value that uniquely identifies the interface to
which this entry is applicable.  The interface identified by
a particular value of this index is the same interface as
identified by the same value of the IF-MIB\'s ifIndex.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsIfIndex.2742', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInReceives', '2753',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInReceives',
    'The total number of input IP datagrams received, including
those received in error.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInReceives.2753', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCInReceives', '2767',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCInReceives',
    'The total number of input IP datagrams received, including
those received in error.  This object counts the same
datagrams as ipIfStatsInReceives, but allows for larger
values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCInReceives.2767', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInOctets', '2783',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInOctets',
    'The total number of octets received in input IP datagrams,
including those received in error.  Octets from datagrams
counted in ipIfStatsInReceives MUST be counted here.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInOctets.2783', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCInOctets', '2798',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCInOctets',
    'The total number of octets received in input IP datagrams,
including those received in error.  This object counts the
same octets as ipIfStatsInOctets, but allows for larger
values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCInOctets.2798', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInHdrErrors', '2814',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInHdrErrors',
    'The number of input IP datagrams discarded due to errors in
their IP headers, including version number mismatch, other
format errors, hop count exceeded, errors discovered in
processing their IP options, etc.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInHdrErrors.2814', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInNoRoutes', '2830',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInNoRoutes',
    'The number of input IP datagrams discarded because no route
could be found to transmit them to their destination.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInNoRoutes.2830', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInAddrErrors', '2844',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInAddrErrors',
    'The number of input IP datagrams discarded because the IP
address in their IP header\'s destination field was not a
valid address to be received at this entity.  This count
includes invalid addresses (e.g., ::0).  For entities that
are not IP routers and therefore do not forward datagrams,
this counter includes datagrams discarded because the
destination address was not a local address.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInAddrErrors.2844', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInUnknownProtos', '2863',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInUnknownProtos',
    'The number of locally-addressed IP datagrams received
successfully but discarded because of an unknown or
unsupported protocol.

When tracking interface statistics, the counter of the
interface to which these datagrams were addressed is
incremented.  This interface might not be the same as the
input interface for some of the datagrams.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of



ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInUnknownProtos.2863', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInTruncatedPkts', '2886',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInTruncatedPkts',
    'The number of input IP datagrams discarded because the
datagram frame didn\'t carry enough data.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInTruncatedPkts.2886', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInForwDatagrams', '2900',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInForwDatagrams',
    'The number of input datagrams for which this entity was not
their final IP destination and for which this entity
attempted to find a route to forward them to that final
destination.  In entities that do not act as IP routers,
this counter will include only those datagrams that were
Source-Routed via this entity, and the Source-Route
processing was successful.

When tracking interface statistics, the counter of the
incoming interface is incremented for each datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInForwDatagrams.2900', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCInForwDatagrams', '2922',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCInForwDatagrams',
    'The number of input datagrams for which this entity was not
their final IP destination and for which this entity
attempted to find a route to forward them to that final
destination.  This object counts the same packets as



ipIfStatsInForwDatagrams, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCInForwDatagrams.2922', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsReasmReqds', '2942',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsReasmReqds',
    'The number of IP fragments received that needed to be
reassembled at this interface.

When tracking interface statistics, the counter of the
interface to which these fragments were addressed is
incremented.  This interface might not be the same as the
input interface for some of the fragments.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsReasmReqds.2942', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsReasmOKs', '2961',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsReasmOKs',
    'The number of IP datagrams successfully reassembled.

When tracking interface statistics, the counter of the
interface to which these datagrams were addressed is
incremented.  This interface might not be the same as the
input interface for some of the datagrams.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsReasmOKs.2961', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsReasmFails', '2979',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsReasmFails',
    'The number of failures detected by the IP re-assembly
algorithm (for whatever reason: timed out, errors, etc.).
Note that this is not necessarily a count of discarded IP
fragments since some algorithms (notably the algorithm in
RFC 815) can lose track of the number of fragments by
combining them as they are received.

When tracking interface statistics, the counter of the
interface to which these fragments were addressed is
incremented.  This interface might not be the same as the
input interface for some of the fragments.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsReasmFails.2979', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInDiscards', '3002',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInDiscards',
    'The number of input IP datagrams for which no problems were
encountered to prevent their continued processing, but
were discarded (e.g., for lack of buffer space).  Note that
this counter does not include any datagrams discarded while
awaiting re-assembly.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInDiscards.3002', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInDelivers', '3019',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInDelivers',
    'The total number of datagrams successfully delivered to IP
user-protocols (including ICMP).

When tracking interface statistics, the counter of the
interface to which these datagrams were addressed is
incremented.  This interface might not be the same as the



input interface for some of the datagrams.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInDelivers.3019', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCInDelivers', '3041',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCInDelivers',
    'The total number of datagrams successfully delivered to IP
user-protocols (including ICMP).  This object counts the
same packets as ipIfStatsInDelivers, but allows for larger
values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCInDelivers.3041', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutRequests', '3057',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutRequests',
    'The total number of IP datagrams that local IP user-
protocols (including ICMP) supplied to IP in requests for
transmission.  Note that this counter does not include any
datagrams counted in ipIfStatsOutForwDatagrams.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutRequests.3057', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCOutRequests', '3073',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCOutRequests',
    'The total number of IP datagrams that local IP user-
protocols (including ICMP) supplied to IP in requests for
transmission.  This object counts the same packets as



ipIfStatsOutRequests, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCOutRequests.3073', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutForwDatagrams', '3092',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutForwDatagrams',
    'The number of datagrams for which this entity was not their
final IP destination and for which it was successful in
finding a path to their final destination.  In entities
that do not act as IP routers, this counter will include
only those datagrams that were Source-Routed via this
entity, and the Source-Route processing was successful.

When tracking interface statistics, the counter of the
outgoing interface is incremented for a successfully
forwarded datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutForwDatagrams.3092', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCOutForwDatagrams', '3114',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCOutForwDatagrams',
    'The number of datagrams for which this entity was not their
final IP destination and for which it was successful in
finding a path to their final destination.  This object
counts the same packets as ipIfStatsOutForwDatagrams, but
allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of



ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCOutForwDatagrams.3114', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutDiscards', '3134',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutDiscards',
    'The number of output IP datagrams for which no problem was
encountered to prevent their transmission to their
destination, but were discarded (e.g., for lack of
buffer space).  Note that this counter would include
datagrams counted in ipIfStatsOutForwDatagrams if any such
datagrams met this (discretionary) discard criterion.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutDiscards.3134', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutFragReqds', '3152',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutFragReqds',
    'The number of IP datagrams that would require fragmentation
in order to be transmitted.

When tracking interface statistics, the counter of the
outgoing interface is incremented for a successfully
fragmented datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutFragReqds.3152', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutFragOKs', '3170',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutFragOKs',
    'The number of IP datagrams that have been successfully
fragmented.

When tracking interface statistics, the counter of the



outgoing interface is incremented for a successfully
fragmented datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutFragOKs.3170', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutFragFails', '3191',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutFragFails',
    'The number of IP datagrams that have been discarded because
they needed to be fragmented but could not be.  This
includes IPv4 packets that have the DF bit set and IPv6
packets that are being forwarded and exceed the outgoing
link MTU.

When tracking interface statistics, the counter of the
outgoing interface is incremented for an unsuccessfully
fragmented datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutFragFails.3191', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutFragCreates', '3212',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutFragCreates',
    'The number of output datagram fragments that have been
generated as a result of IP fragmentation.

When tracking interface statistics, the counter of the
outgoing interface is incremented for a successfully
fragmented datagram.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutFragCreates.3212', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutTransmits', '3230',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutTransmits',
    'The total number of IP datagrams that this entity supplied
to the lower layers for transmission.  This includes
datagrams generated locally and those forwarded by this
entity.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutTransmits.3230', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCOutTransmits', '3246',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCOutTransmits',
    'The total number of IP datagrams that this entity supplied
to the lower layers for transmission.  This object counts
the same datagrams as ipIfStatsOutTransmits, but allows for
larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCOutTransmits.3246', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutOctets', '3262',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutOctets',
    'The total number of octets in IP datagrams delivered to the
lower layers for transmission.  Octets from datagrams
counted in ipIfStatsOutTransmits MUST be counted here.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutOctets.3262', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCOutOctets', '3277',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCOutOctets',
    'The total number of octets in IP datagrams delivered to the
lower layers for transmission.  This objects counts the same
octets as ipIfStatsOutOctets, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCOutOctets.3277', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInMcastPkts', '3292',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInMcastPkts',
    'The number of IP multicast datagrams received.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInMcastPkts.3292', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCInMcastPkts', '3305',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCInMcastPkts',
    'The number of IP multicast datagrams received.  This object
counts the same datagrams as ipIfStatsInMcastPkts, but
allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCInMcastPkts.3305', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInMcastOctets', '3320',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInMcastOctets',
    'The total number of octets received in IP multicast



datagrams.  Octets from datagrams counted in
ipIfStatsInMcastPkts MUST be counted here.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInMcastOctets.3320', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCInMcastOctets', '3338',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCInMcastOctets',
    'The total number of octets received in IP multicast
datagrams.  This object counts the same octets as
ipIfStatsInMcastOctets, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCInMcastOctets.3338', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutMcastPkts', '3353',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutMcastPkts',
    'The number of IP multicast datagrams transmitted.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutMcastPkts.3353', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCOutMcastPkts', '3366',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCOutMcastPkts',
    'The number of IP multicast datagrams transmitted.  This
object counts the same datagrams as ipIfStatsOutMcastPkts,
but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other



times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCOutMcastPkts.3366', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutMcastOctets', '3384',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutMcastOctets',
    'The total number of octets transmitted in IP multicast
datagrams.  Octets from datagrams counted in
ipIfStatsOutMcastPkts MUST be counted here.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutMcastOctets.3384', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCOutMcastOctets', '3399',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCOutMcastOctets',
    'The total number of octets transmitted in IP multicast
datagrams.  This object counts the same octets as
ipIfStatsOutMcastOctets, but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCOutMcastOctets.3399', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsInBcastPkts', '3414',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsInBcastPkts',
    'The number of IP broadcast datagrams received.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsInBcastPkts.3414', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCInBcastPkts', '3427',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCInBcastPkts',
    'The number of IP broadcast datagrams received.  This object
counts the same datagrams as ipIfStatsInBcastPkts, but
allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCInBcastPkts.3427', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsOutBcastPkts', '3442',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsOutBcastPkts',
    'The number of IP broadcast datagrams transmitted.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsOutBcastPkts.3442', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsHCOutBcastPkts', '3455',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsHCOutBcastPkts',
    'The number of IP broadcast datagrams transmitted.  This
object counts the same datagrams as ipIfStatsOutBcastPkts,
but allows for larger values.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ipIfStatsDiscontinuityTime.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsHCOutBcastPkts.3455', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsDiscontinuityTime', '3470',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsDiscontinuityTime',
    'The value of sysUpTime on the most recent occasion at which



any one or more of this entry\'s counters suffered a
discontinuity.

If no such discontinuities have occurred since the last re-
initialization of the local management subsystem, then this
object contains a zero value.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsDiscontinuityTime.3470', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'ipIfStatsRefreshRate', '3487',
    '/ipTrafficStats/ipIfStatsEntry/ipIfStatsRefreshRate',
    'The minimum reasonable polling interval for this entry.
This object provides an indication of the minimum amount of
time required to update the counters in this entry.',
    '',
    '/modules/IP-MIB/2006-02-02#ipIfStatsRefreshRate.3487', 
    'leaf', 
    '/ipTrafficStats/ipIfStatsEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmp', '3501',
    '/icmp',
    '',
    '',
    '/modules/IP-MIB/2006-02-02#icmp.3501', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'icmpInMsgs icmpInErrors icmpInDestUnreachs icmpInTimeExcds icmpInParmProbs icmpInSrcQuenchs icmpInRedirects icmpInEchos icmpInEchoReps icmpInTimestamps icmpInTimestampReps icmpInAddrMasks icmpInAddrMaskReps icmpOutMsgs icmpOutErrors icmpOutDestUnreachs icmpOutTimeExcds icmpOutParmProbs icmpOutSrcQuenchs icmpOutRedirects icmpOutEchos icmpOutEchoReps icmpOutTimestamps icmpOutTimestampReps icmpOutAddrMasks icmpOutAddrMaskReps icmpStatsEntry icmpMsgStatsEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInMsgs', '3503',
    '/icmp/icmpInMsgs',
    'The total number of ICMP messages which the entity received.
Note that this counter includes all those counted by
icmpInErrors.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
icmpStatsInMsgs.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInMsgs.3503', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInErrors', '3518',
    '/icmp/icmpInErrors',
    'The number of ICMP messages which the entity received but
determined as having ICMP-specific errors (bad ICMP
checksums, bad length, etc.).

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
icmpStatsInErrors.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInErrors.3518', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInDestUnreachs', '3533',
    '/icmp/icmpInDestUnreachs',
    'The number of ICMP Destination Unreachable messages
received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInDestUnreachs.3533', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInTimeExcds', '3547',
    '/icmp/icmpInTimeExcds',
    'The number of ICMP Time Exceeded messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInTimeExcds.3547', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInParmProbs', '3560',
    '/icmp/icmpInParmProbs',
    'The number of ICMP Parameter Problem messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInParmProbs.3560', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInSrcQuenchs', '3573',
    '/icmp/icmpInSrcQuenchs',
    'The number of ICMP Source Quench messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInSrcQuenchs.3573', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInRedirects', '3586',
    '/icmp/icmpInRedirects',
    'The number of ICMP Redirect messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInRedirects.3586', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInEchos', '3599',
    '/icmp/icmpInEchos',
    'The number of ICMP Echo (request) messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInEchos.3599', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInEchoReps', '3612',
    '/icmp/icmpInEchoReps',
    'The number of ICMP Echo Reply messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInEchoReps.3612', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInTimestamps', '3625',
    '/icmp/icmpInTimestamps',
    'The number of ICMP Timestamp (request) messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInTimestamps.3625', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInTimestampReps', '3638',
    '/icmp/icmpInTimestampReps',
    'The number of ICMP Timestamp Reply messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInTimestampReps.3638', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInAddrMasks', '3651',
    '/icmp/icmpInAddrMasks',
    'The number of ICMP Address Mask Request messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInAddrMasks.3651', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpInAddrMaskReps', '3664',
    '/icmp/icmpInAddrMaskReps',
    'The number of ICMP Address Mask Reply messages received.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpInAddrMaskReps.3664', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutMsgs', '3677',
    '/icmp/icmpOutMsgs',
    'The total number of ICMP messages which this entity
attempted to send.  Note that this counter includes all
those counted by icmpOutErrors.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
icmpStatsOutMsgs.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutMsgs.3677', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutErrors', '3692',
    '/icmp/icmpOutErrors',
    'The number of ICMP messages which this entity did not send
due to problems discovered within ICMP, such as a lack of
buffers.  This value should not include errors discovered
outside the ICMP layer, such as the inability of IP to route
the resultant datagram.  In some implementations, there may
be no types of error which contribute to this counter\'s
value.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by
icmpStatsOutErrors.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutErrors.3692', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutDestUnreachs', '3711',
    '/icmp/icmpOutDestUnreachs',
    'The number of ICMP Destination Unreachable messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutDestUnreachs.3711', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutTimeExcds', '3724',
    '/icmp/icmpOutTimeExcds',
    'The number of ICMP Time Exceeded messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutTimeExcds.3724', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutParmProbs', '3737',
    '/icmp/icmpOutParmProbs',
    'The number of ICMP Parameter Problem messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutParmProbs.3737', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutSrcQuenchs', '3750',
    '/icmp/icmpOutSrcQuenchs',
    'The number of ICMP Source Quench messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutSrcQuenchs.3750', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutRedirects', '3763',
    '/icmp/icmpOutRedirects',
    'The number of ICMP Redirect messages sent.  For a host, this
object will always be zero, since hosts do not send
redirects.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutRedirects.3763', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutEchos', '3778',
    '/icmp/icmpOutEchos',
    'The number of ICMP Echo (request) messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutEchos.3778', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutEchoReps', '3791',
    '/icmp/icmpOutEchoReps',
    'The number of ICMP Echo Reply messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutEchoReps.3791', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutTimestamps', '3804',
    '/icmp/icmpOutTimestamps',
    'The number of ICMP Timestamp (request) messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutTimestamps.3804', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutTimestampReps', '3817',
    '/icmp/icmpOutTimestampReps',
    'The number of ICMP Timestamp Reply messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutTimestampReps.3817', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutAddrMasks', '3830',
    '/icmp/icmpOutAddrMasks',
    'The number of ICMP Address Mask Request messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutAddrMasks.3830', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpOutAddrMaskReps', '3843',
    '/icmp/icmpOutAddrMaskReps',
    'The number of ICMP Address Mask Reply messages sent.

This object has been deprecated, as a new IP version-neutral
table has been added.  It is loosely replaced by a column in
the icmpMsgStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpOutAddrMaskReps.3843', 
    'leaf', 
    '/icmp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpStatsEntry', '3859',
    '/icmp/icmpStatsEntry',
    'A conceptual row in the icmpStatsTable.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpStatsEntry.3859', 
    'list', 
    '/icmp',
    '0',
    '1',
    '',
    '',
    'icmpStatsIPVersion icmpStatsInMsgs icmpStatsInErrors icmpStatsOutMsgs icmpStatsOutErrors',
    '',
    'icmpStatsIPVersion',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpStatsIPVersion', '3867',
    '/icmp/icmpStatsEntry/icmpStatsIPVersion',
    'The IP version of the statistics.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpStatsIPVersion.3867', 
    'leaf', 
    '/icmp/icmpStatsEntry',
    '0',
    '1',
    'InetVersion',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpStatsInMsgs', '3875',
    '/icmp/icmpStatsEntry/icmpStatsInMsgs',
    'The total number of ICMP messages that the entity received.
Note that this counter includes all those counted by
icmpStatsInErrors.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpStatsInMsgs.3875', 
    'leaf', 
    '/icmp/icmpStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpStatsInErrors', '3885',
    '/icmp/icmpStatsEntry/icmpStatsInErrors',
    'The number of ICMP messages that the entity received but
determined as having ICMP-specific errors (bad ICMP
checksums, bad length, etc.).',
    '',
    '/modules/IP-MIB/2006-02-02#icmpStatsInErrors.3885', 
    'leaf', 
    '/icmp/icmpStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpStatsOutMsgs', '3895',
    '/icmp/icmpStatsEntry/icmpStatsOutMsgs',
    'The total number of ICMP messages that the entity attempted
to send.  Note that this counter includes all those counted
by icmpStatsOutErrors.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpStatsOutMsgs.3895', 
    'leaf', 
    '/icmp/icmpStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpStatsOutErrors', '3905',
    '/icmp/icmpStatsEntry/icmpStatsOutErrors',
    'The number of ICMP messages that this entity did not send
due to problems discovered within ICMP, such as a lack of
buffers.  This value should not include errors discovered
outside the ICMP layer, such as the inability of IP to route
the resultant datagram.  In some implementations, there may
be no types of error that contribute to this counter\'s
value.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpStatsOutErrors.3905', 
    'leaf', 
    '/icmp/icmpStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpMsgStatsEntry', '3923',
    '/icmp/icmpMsgStatsEntry',
    'A conceptual row in the icmpMsgStatsTable.

The system should track each ICMP type value, even if that
ICMP type is not supported by the system.  However, a
given row need not be instantiated unless a message of that
type has been processed, i.e., the row for
icmpMsgStatsType=X MAY be instantiated before but MUST be
instantiated after the first message with Type=X is
received or transmitted.  After receiving or transmitting
any succeeding messages with Type=X, the relevant counter
must be incremented.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpMsgStatsEntry.3923', 
    'list', 
    '/icmp',
    '0',
    '1',
    '',
    '',
    'icmpMsgStatsIPVersion icmpMsgStatsType icmpMsgStatsInPkts icmpMsgStatsOutPkts',
    '',
    'icmpMsgStatsIPVersion icmpMsgStatsType',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpMsgStatsIPVersion', '3941',
    '/icmp/icmpMsgStatsEntry/icmpMsgStatsIPVersion',
    'The IP version of the statistics.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpMsgStatsIPVersion.3941', 
    'leaf', 
    '/icmp/icmpMsgStatsEntry',
    '0',
    '1',
    'InetVersion',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpMsgStatsType', '3949',
    '/icmp/icmpMsgStatsEntry/icmpMsgStatsType',
    'The ICMP type field of the message type being counted by
this row.

Note that ICMP message types are scoped by the address type
in use.',
    'http://www.iana.org/assignments/icmp-parameters and
http://www.iana.org/assignments/icmpv6-parameters',
    '/modules/IP-MIB/2006-02-02#icmpMsgStatsType.3949', 
    'leaf', 
    '/icmp/icmpMsgStatsEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpMsgStatsInPkts', '3966',
    '/icmp/icmpMsgStatsEntry/icmpMsgStatsInPkts',
    'The number of input packets for this AF and type.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpMsgStatsInPkts.3966', 
    'leaf', 
    '/icmp/icmpMsgStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-MIB', 'IP-MIB', '2006-02-02', 'icmpMsgStatsOutPkts', '3974',
    '/icmp/icmpMsgStatsEntry/icmpMsgStatsOutPkts',
    'The number of output packets for this AF and type.',
    '',
    '/modules/IP-MIB/2006-02-02#icmpMsgStatsOutPkts.3974', 
    'leaf', 
    '/icmp/icmpMsgStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/IP-FORWARD-MIB.yang
# module: IP-FORWARD-MIB
# version: 2006-02-01
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'IP-FORWARD-MIB');

INSERT INTO ncmodule VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ip-forward',
    'urn:ietf:params:xml:ns:yang:smiv2:IP-FORWARD-MIB',
    'IETF IPv6 Working Group
http://www.ietf.org/html.charters/ipv6-charter.html',
    'The MIB module for the management of CIDR multipath IP
Routes.

Copyright (C) The Internet Society (2006).  This version
of this...',
    'The MIB module for the management of CIDR multipath IP
Routes.

Copyright (C) The Internet Society (2006).  This version
of this MIB module is a part of RFC 4292; see the RFC
itself for full legal notices.',
    '',
    'Editor:
Brian Haberman
Johns Hopkins University - Applied Physics Laboratory
Mailstop 17-S442
11100 Johns Hopkins Road
Laurel MD,  20723-6099  USA

Phone: +1-443-778-1319
Email: brian@innovationslab.net

Send comments to <ipv6@ietf.org>',
    'IPv4/v6 version-independent revision.  Minimal changes
were made to the original RFC 2096 MIB to allow easy
upgrade of existing IPv4 implementations to the
version-independent MIB.  These changes include:

Adding inetCidrRouteDiscards as a replacement for the
deprecated ipRoutingDiscards and ipv6DiscardedRoutes
objects.

Adding a new conformance statement to support the
implementation of the IP Forwarding MIB in a
read-only mode.




The inetCidrRouteTable replaces the IPv4-specific
ipCidrRouteTable, its related objects, and related
conformance statements.

Published as RFC 4292.',
    '/xsd/IP-FORWARD-MIB_2006-02-01.xsd',
    '/modules/IP-FORWARD-MIB/2006-02-01', 
    '/src/IP-FORWARD-MIB_2006-02-01.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/IP-FORWARD-MIB.yang',
    'IP-FORWARD-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForward', '88',
    '/ipForward',
    '',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForward.88', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'ipForwardNumber ipForwardEntry ipCidrRouteNumber ipCidrRouteEntry inetCidrRouteNumber inetCidrRouteEntry inetCidrRouteDiscards',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardNumber', '90',
    '/ipForward/ipForwardNumber',
    'The number of current ipForwardTable entries that are
not invalid.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardNumber.90', 
    'leaf', 
    '/ipForward',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardEntry', '103',
    '/ipForward/ipForwardEntry',
    'A particular route to a particular destination, under a
particular policy.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardEntry.103', 
    'list', 
    '/ipForward',
    '0',
    '1',
    '',
    '',
    'ipForwardDest ipForwardMask ipForwardPolicy ipForwardNextHop ipForwardIfIndex ipForwardType ipForwardProto ipForwardAge ipForwardInfo ipForwardNextHopAS ipForwardMetric1 ipForwardMetric2 ipForwardMetric3 ipForwardMetric4 ipForwardMetric5',
    '',
    'ipForwardDest ipForwardProto ipForwardPolicy 
ipForwardNextHop',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardDest', '114',
    '/ipForward/ipForwardEntry/ipForwardDest',
    'The destination IP address of this route.  An entry
with a value of 0.0.0.0 is considered a default route.

This object may not take a Multicast (Class D) address
value.

Any assignment (implicit or otherwise) of an instance
of this object to a value x must be rejected if the
bitwise logical-AND of x with the value of the
corresponding instance of the ipForwardMask object is
not equal to x.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardDest.114', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardMask', '133',
    '/ipForward/ipForwardEntry/ipForwardMask',
    'Indicate the mask to be logical-ANDed with the
destination address before being compared to the value
in the ipForwardDest field.  For those systems that do
not support arbitrary subnet masks, an agent constructs
the value of the ipForwardMask by reference to the IP
Address Class.

Any assignment (implicit or otherwise) of an instance
of this object to a value x must be rejected if the
bitwise logical-AND of x with the value of the
corresponding instance of the ipForwardDest object is
not equal to ipForwardDest.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardMask.133', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardPolicy', '154',
    '/ipForward/ipForwardEntry/ipForwardPolicy',
    'The general set of conditions that would cause
the selection of one multipath route (set of
next hops for a given destination) is referred
to as \'policy\'.

Unless the mechanism indicated by ipForwardProto
specifies otherwise, the policy specifier is
the IP TOS Field.  The encoding of IP TOS is as
specified by the following convention.  Zero
indicates the default path if no more specific
policy applies.

+-----+-----+-----+-----+-----+-----+-----+-----+
|                 |                       |     |
|   PRECEDENCE    |    TYPE OF SERVICE    |  0  |
|                 |                       |     |
+-----+-----+-----+-----+-----+-----+-----+-----+



	     IP TOS                IP TOS
   Field     Policy      Field     Policy
   Contents    Code      Contents    Code
   0 0 0 0  ==>   0      0 0 0 1  ==>   2
   0 0 1 0  ==>   4      0 0 1 1  ==>   6
   0 1 0 0  ==>   8      0 1 0 1  ==>  10
   0 1 1 0  ==>  12      0 1 1 1  ==>  14
   1 0 0 0  ==>  16      1 0 0 1  ==>  18
   1 0 1 0  ==>  20      1 0 1 1  ==>  22
   1 1 0 0  ==>  24      1 1 0 1  ==>  26
   1 1 1 0  ==>  28      1 1 1 1  ==>  30

Protocols defining \'policy\' otherwise must either
define a set of values that are valid for
this object or must implement an integer-instanced
policy table for which this object\'s
value acts as an index.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardPolicy.154', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardNextHop', '201',
    '/ipForward/ipForwardEntry/ipForwardNextHop',
    'On remote routes, the address of the next system en
route; otherwise, 0.0.0.0.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardNextHop.201', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardIfIndex', '211',
    '/ipForward/ipForwardEntry/ipForwardIfIndex',
    'The ifIndex value that identifies the local interface
through which the next hop of this route should be
reached.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardIfIndex.211', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardType', '223',
    '/ipForward/ipForwardEntry/ipForwardType',
    'The type of route.  Note that local(3) refers to a
route for which the next hop is the final destination;
remote(4) refers to a route for which the next hop is
not the final destination.

Setting this object to the value invalid(2) has the
effect of invalidating the corresponding entry in the
ipForwardTable object.  That is, it effectively
disassociates the destination identified with said
entry from the route identified with said entry.  It is
an implementation-specific matter as to whether the
agent removes an invalidated entry from the table.
Accordingly, management stations must be prepared to
receive tabular information from agents that
corresponds to entries not currently in use.  Proper
interpretation of such entries requires examination of
the relevant ipForwardType object.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardType.223', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardProto', '254',
    '/ipForward/ipForwardEntry/ipForwardProto',
    'The routing mechanism via which this route was learned.
Inclusion of values for gateway routing protocols is
not intended to imply that hosts should support those
protocols.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardProto.254', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardAge', '282',
    '/ipForward/ipForwardEntry/ipForwardAge',
    'The number of seconds since this route was last updated
or otherwise determined to be correct.  Note that no
semantics of `too old\' can be implied except through
knowledge of the routing protocol by which the route
was learned.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardAge.282', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardInfo', '296',
    '/ipForward/ipForwardEntry/ipForwardInfo',
    'A reference to MIB definitions specific to the
particular routing protocol that is responsible for
this route, as determined by the value specified in the
route\'s ipForwardProto value.  If this information is
not present, its value should be set to the OBJECT
IDENTIFIER { 0 0 }, which is a syntactically valid
object identifier, and any implementation conforming to
ASN.1 and the Basic Encoding Rules must be able to
generate and recognize this value.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardInfo.296', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardNextHopAS', '313',
    '/ipForward/ipForwardEntry/ipForwardNextHopAS',
    'The Autonomous System Number of the Next Hop.  When
this is unknown or not relevant to the protocol
indicated by ipForwardProto, zero.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardNextHopAS.313', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardMetric1', '325',
    '/ipForward/ipForwardEntry/ipForwardMetric1',
    'The primary routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipForwardProto value.
If this metric is not used, its value should be set to
-1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardMetric1.325', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardMetric2', '339',
    '/ipForward/ipForwardEntry/ipForwardMetric2',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipForwardProto value.
If this metric is not used, its value should be set to
-1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardMetric2.339', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardMetric3', '353',
    '/ipForward/ipForwardEntry/ipForwardMetric3',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipForwardProto value.
If this metric is not used, its value should be set to
-1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardMetric3.353', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardMetric4', '367',
    '/ipForward/ipForwardEntry/ipForwardMetric4',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipForwardProto value.
If this metric is not used, its value should be set to
-1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardMetric4.367', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipForwardMetric5', '381',
    '/ipForward/ipForwardEntry/ipForwardMetric5',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipForwardProto value.
If this metric is not used, its value should be set to
-1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipForwardMetric5.381', 
    'leaf', 
    '/ipForward/ipForwardEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteNumber', '396',
    '/ipForward/ipCidrRouteNumber',
    'The number of current ipCidrRouteTable entries that are
not invalid.  This object is deprecated in favor of
inetCidrRouteNumber and the inetCidrRouteTable.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteNumber.396', 
    'leaf', 
    '/ipForward',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteEntry', '410',
    '/ipForward/ipCidrRouteEntry',
    'A particular route to a particular destination, under a



particular policy.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteEntry.410', 
    'list', 
    '/ipForward',
    '0',
    '1',
    '',
    '',
    'ipCidrRouteDest ipCidrRouteMask ipCidrRouteTos ipCidrRouteNextHop ipCidrRouteIfIndex ipCidrRouteType ipCidrRouteProto ipCidrRouteAge ipCidrRouteInfo ipCidrRouteNextHopAS ipCidrRouteMetric1 ipCidrRouteMetric2 ipCidrRouteMetric3 ipCidrRouteMetric4 ipCidrRouteMetric5 ipCidrRouteStatus',
    '',
    'ipCidrRouteDest ipCidrRouteMask ipCidrRouteTos 
ipCidrRouteNextHop',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteDest', '424',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteDest',
    'The destination IP address of this route.

This object may not take a Multicast (Class D) address
value.

Any assignment (implicit or otherwise) of an instance
of this object to a value x must be rejected if the
bitwise logical-AND of x with the value of the
corresponding instance of the ipCidrRouteMask object is
not equal to x.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteDest.424', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteMask', '442',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteMask',
    'Indicate the mask to be logical-ANDed with the
destination address before being compared to the value
in the ipCidrRouteDest field.  For those systems that
do not support arbitrary subnet masks, an agent
constructs the value of the ipCidrRouteMask by
reference to the IP Address Class.

Any assignment (implicit or otherwise) of an instance
of this object to a value x must be rejected if the
bitwise logical-AND of x with the value of the
corresponding instance of the ipCidrRouteDest object is
not equal to ipCidrRouteDest.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteMask.442', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteTos', '462',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteTos',
    'The policy specifier is the IP TOS Field.  The encoding
of IP TOS is as specified by the following convention.
Zero indicates the default path if no more specific
policy applies.

+-----+-----+-----+-----+-----+-----+-----+-----+
|                 |                       |     |
|   PRECEDENCE    |    TYPE OF SERVICE    |  0  |
|                 |                       |     |
+-----+-----+-----+-----+-----+-----+-----+-----+

	     IP TOS                IP TOS
   Field     Policy      Field     Policy
   Contents    Code      Contents    Code
   0 0 0 0  ==>   0      0 0 0 1  ==>   2
   0 0 1 0  ==>   4      0 0 1 1  ==>   6
   0 1 0 0  ==>   8      0 1 0 1  ==>  10
   0 1 1 0  ==>  12      0 1 1 1  ==>  14
   1 0 0 0  ==>  16      1 0 0 1  ==>  18
   1 0 1 0  ==>  20      1 0 1 1  ==>  22



   1 1 0 0  ==>  24      1 1 0 1  ==>  26
   1 1 1 0  ==>  28      1 1 1 1  ==>  30',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteTos.462', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteNextHop', '497',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteNextHop',
    'On remote routes, the address of the next system en
route; Otherwise, 0.0.0.0.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteNextHop.497', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteIfIndex', '507',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteIfIndex',
    'The ifIndex value that identifies the local interface
through which the next hop of this route should be
reached.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteIfIndex.507', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteType', '519',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteType',
    'The type of route.  Note that local(3) refers to a
route for which the next hop is the final destination;
remote(4) refers to a route for which the next hop is
not the final destination.

Routes that do not result in traffic forwarding or
rejection should not be displayed, even if the
implementation keeps them stored internally.

reject (2) refers to a route that, if matched,
discards the message as unreachable.  This is used in
some protocols as a means of correctly aggregating
routes.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteType.519', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteProto', '545',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteProto',
    'The routing mechanism via which this route was learned.
Inclusion of values for gateway routing protocols is
not intended to imply that hosts should support those
protocols.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteProto.545', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteAge', '574',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteAge',
    'The number of seconds since this route was last updated
or otherwise determined to be correct.  Note that no
semantics of `too old\' can be implied, except through
knowledge of the routing protocol by which the route
was learned.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteAge.574', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteInfo', '588',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteInfo',
    'A reference to MIB definitions specific to the
particular routing protocol that is responsible for
this route, as determined by the value specified in the
route\'s ipCidrRouteProto value.  If this information is
not present, its value should be set to the OBJECT
IDENTIFIER { 0 0 }, which is a syntactically valid
object identifier, and any implementation conforming to
ASN.1 and the Basic Encoding Rules must be able to
generate and recognize this value.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteInfo.588', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteNextHopAS', '605',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteNextHopAS',
    'The Autonomous System Number of the Next Hop.  The
semantics of this object are determined by the routing-
protocol specified in the route\'s ipCidrRouteProto
value.  When this object is unknown or not relevant, its
value should be set to zero.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteNextHopAS.605', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteMetric1', '619',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteMetric1',
    'The primary routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipCidrRouteProto
value.  If this metric is not used, its value should be
set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteMetric1.619', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteMetric2', '633',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteMetric2',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipCidrRouteProto
value.  If this metric is not used, its value should be



set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteMetric2.633', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteMetric3', '650',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteMetric3',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipCidrRouteProto
value.  If this metric is not used, its value should be
set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteMetric3.650', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteMetric4', '664',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteMetric4',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipCidrRouteProto
value.  If this metric is not used, its value should be
set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteMetric4.664', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteMetric5', '678',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteMetric5',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s ipCidrRouteProto
value.  If this metric is not used, its value should be
set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteMetric5.678', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'ipCidrRouteStatus', '692',
    '/ipForward/ipCidrRouteEntry/ipCidrRouteStatus',
    'The row status variable, used according to row
installation and removal conventions.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#ipCidrRouteStatus.692', 
    'leaf', 
    '/ipForward/ipCidrRouteEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteNumber', '704',
    '/ipForward/inetCidrRouteNumber',
    'The number of current inetCidrRouteTable entries that
are not invalid.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteNumber.704', 
    'leaf', 
    '/ipForward',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteEntry', '716',
    '/ipForward/inetCidrRouteEntry',
    'A particular route to a particular destination, under a
particular policy (as reflected in the
inetCidrRoutePolicy object).

Dynamically created rows will survive an agent reboot.

Implementers need to be aware that if the total number
of elements (octets or sub-identifiers) in
inetCidrRouteDest, inetCidrRoutePolicy, and
inetCidrRouteNextHop exceeds 111, then OIDs of column
instances in this table will have more than 128 sub-
identifiers and cannot be accessed using SNMPv1,
SNMPv2c, or SNMPv3.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteEntry.716', 
    'list', 
    '/ipForward',
    '0',
    '1',
    '',
    '',
    'inetCidrRouteDestType inetCidrRouteDest inetCidrRoutePfxLen inetCidrRoutePolicy inetCidrRouteNextHopType inetCidrRouteNextHop inetCidrRouteIfIndex inetCidrRouteType inetCidrRouteProto inetCidrRouteAge inetCidrRouteNextHopAS inetCidrRouteMetric1 inetCidrRouteMetric2 inetCidrRouteMetric3 inetCidrRouteMetric4 inetCidrRouteMetric5 inetCidrRouteStatus',
    '',
    'inetCidrRouteDestType inetCidrRouteDest 
inetCidrRoutePfxLen inetCidrRoutePolicy 
inetCidrRouteNextHopType inetCidrRouteNextHop',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteDestType', '738',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteDestType',
    'The type of the inetCidrRouteDest address, as defined
in the InetAddress MIB.

Only those address types that may appear in an actual
routing table are allowed as values of this object.',
    'RFC 4001',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteDestType.738', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteDest', '752',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteDest',
    'The destination IP address of this route.

The type of this address is determined by the value of
the inetCidrRouteDestType object.

The values for the index objects inetCidrRouteDest and
inetCidrRoutePfxLen must be consistent.  When the value
of inetCidrRouteDest (excluding the zone index, if one
is present) is x, then the bitwise logical-AND
of x with the value of the mask formed from the
corresponding index object inetCidrRoutePfxLen MUST be
equal to x.  If not, then the index pair is not
consistent and an inconsistentName error must be
returned on SET or CREATE requests.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteDest.752', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRoutePfxLen', '773',
    '/ipForward/inetCidrRouteEntry/inetCidrRoutePfxLen',
    'Indicates the number of leading one bits that form the
mask to be logical-ANDed with the destination address
before being compared to the value in the



inetCidrRouteDest field.

The values for the index objects inetCidrRouteDest and
inetCidrRoutePfxLen must be consistent.  When the value
of inetCidrRouteDest (excluding the zone index, if one
is present) is x, then the bitwise logical-AND
of x with the value of the mask formed from the
corresponding index object inetCidrRoutePfxLen MUST be
equal to x.  If not, then the index pair is not
consistent and an inconsistentName error must be
returned on SET or CREATE requests.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRoutePfxLen.773', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'InetAddressPrefixLength',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRoutePolicy', '797',
    '/ipForward/inetCidrRouteEntry/inetCidrRoutePolicy',
    'This object is an opaque object without any defined
semantics.  Its purpose is to serve as an additional
index that may delineate between multiple entries to
the same destination.  The value { 0 0 } shall be used
as the default value for this object.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRoutePolicy.797', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteNextHopType', '809',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteNextHopType',
    'The type of the inetCidrRouteNextHop address, as
defined in the InetAddress MIB.

Value should be set to unknown(0) for non-remote
routes.

Only those address types that may appear in an actual
routing table are allowed as values of this object.',
    'RFC 4001',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteNextHopType.809', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteNextHop', '826',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteNextHop',
    'On remote routes, the address of the next system en



route.  For non-remote routes, a zero length string.

The type of this address is determined by the value of
the inetCidrRouteNextHopType object.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteNextHop.826', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteIfIndex', '841',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteIfIndex',
    'The ifIndex value that identifies the local interface
through which the next hop of this route should be
reached.  A value of 0 is valid and represents the
scenario where no interface is specified.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteIfIndex.841', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'InterfaceIndexOrZero',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteType', '852',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteType',
    'The type of route.  Note that local(3) refers to a
route for which the next hop is the final destination;
remote(4) refers to a route for which the next hop is
not the final destination.

Routes that do not result in traffic forwarding or
rejection should not be displayed, even if the
implementation keeps them stored internally.

reject(2) refers to a route that, if matched, discards
the message as unreachable and returns a notification
(e.g., ICMP error) to the message sender.  This is used
in some protocols as a means of correctly aggregating
routes.

blackhole(5) refers to a route that, if matched,
discards the message silently.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteType.852', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteProto', '882',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteProto',
    'The routing mechanism via which this route was learned.
Inclusion of values for gateway routing protocols is
not intended to imply that hosts should support those
protocols.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteProto.882', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'IANAipRouteProtocol',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteAge', '893',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteAge',
    'The number of seconds since this route was last updated
or otherwise determined to be correct.  Note that no
semantics of \'too old\' can be implied, except through
knowledge of the routing protocol by which the route
was learned.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteAge.893', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteNextHopAS', '905',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteNextHopAS',
    'The Autonomous System Number of the Next Hop.  The
semantics of this object are determined by the routing-
protocol specified in the route\'s inetCidrRouteProto
value.  When this object is unknown or not relevant, its
value should be set to zero.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteNextHopAS.905', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'InetAutonomousSystemNumber',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteMetric1', '918',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteMetric1',
    'The primary routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s inetCidrRouteProto
value.  If this metric is not used, its value should be
set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteMetric1.918', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteMetric2', '931',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteMetric2',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s inetCidrRouteProto
value.  If this metric is not used, its value should be
set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteMetric2.931', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteMetric3', '944',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteMetric3',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s inetCidrRouteProto
value.  If this metric is not used, its value should be
set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteMetric3.944', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteMetric4', '957',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteMetric4',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-
protocol specified in the route\'s inetCidrRouteProto
value.  If this metric is not used, its value should be
set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteMetric4.957', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteMetric5', '970',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteMetric5',
    'An alternate routing metric for this route.  The
semantics of this metric are determined by the routing-



protocol specified in the route\'s inetCidrRouteProto
value.  If this metric is not used, its value should be
set to -1.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteMetric5.970', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteStatus', '986',
    '/ipForward/inetCidrRouteEntry/inetCidrRouteStatus',
    'The row status variable, used according to row
installation and removal conventions.

A row entry cannot be modified when the status is
marked as active(1).',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteStatus.986', 
    'leaf', 
    '/ipForward/inetCidrRouteEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IP-FORWARD-MIB', 'IP-FORWARD-MIB', '2006-02-01', 'inetCidrRouteDiscards', '999',
    '/ipForward/inetCidrRouteDiscards',
    'The number of valid route entries discarded from the
inetCidrRouteTable.  Discarded route entries do not
appear in the inetCidrRouteTable.  One possible reason
for discarding an entry would be to free-up buffer space
for other route table entries.',
    '',
    '/modules/IP-FORWARD-MIB/2006-02-01#inetCidrRouteDiscards.999', 
    'leaf', 
    '/ipForward',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/nc-notifications.yang
# module: nc-notifications
# version: 2008-02-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'nc-notifications');

INSERT INTO ncmodule VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'manageEvent',
    'urn:ietf:params:xml:ns:netmod:notification',
    'IETF NETCONF WG',
    'Conversion of the \'manageEvent\' XSD in the NETCONF
Notifications draft.',
    'Conversion of the \'manageEvent\' XSD in the NETCONF
Notifications draft.',
    'draft-ietf-netconf-notifications-11.txt',
    'netconf@ops.ietf.org',
    'Initial version, based on -11 draft.',
    '/xsd/nc-notifications_2008-02-14.xsd',
    '/modules/nc-notifications/2008-02-14', 
    '/src/nc-notifications_2008-02-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/nc-notifications.yang',
    'nc-notifications.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'netconf', '26',
    '/netconf',
    'Top-level element in the notification namespace',
    '',
    '/modules/nc-notifications/2008-02-14#netconf.26', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'streams',
    '',
    '',
    '1', '1', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'streams', '29',
    '/netconf/streams',
    'The list of event streams supported by the system. When
a query is issued, the returned set of streams is 
determined based on user privileges.',
    '',
    '/modules/nc-notifications/2008-02-14#streams.29', 
    'container', 
    '/netconf',
    '0',
    '1',
    '',
    '',
    'stream',
    '',
    '',
    '0', '1', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'stream', '36',
    '/netconf/streams/stream',
    'Stream name, description and other information.',
    '',
    '/modules/nc-notifications/2008-02-14#stream.36', 
    'list', 
    '/netconf/streams',
    '0',
    '1',
    '',
    '',
    'name description replaySupport replayLogCreationTime',
    '',
    'name',
    '0', '1', '3',
    '1', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'name', '42',
    '/netconf/streams/stream/name',
    'The name of the event stream. If this is the default
NETCONF stream, this must have the value \'NETCONF\'.',
    '',
    '/modules/nc-notifications/2008-02-14#name.42', 
    'leaf', 
    '/netconf/streams/stream',
    '0',
    '1',
    'streamNameType',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'description', '49',
    '/netconf/streams/stream/description',
    'A description of the event stream, including such
information as the type of events that are sent over
this stream.',
    '',
    '/modules/nc-notifications/2008-02-14#description.49', 
    'leaf', 
    '/netconf/streams/stream',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '0', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'replaySupport', '58',
    '/netconf/streams/stream/replaySupport',
    'A description of the event stream, including such
information as the type of events that are sent over
this stream.',
    '',
    '/modules/nc-notifications/2008-02-14#replaySupport.58', 
    'leaf', 
    '/netconf/streams/stream',
    '0',
    '1',
    'boolean',
    '',
    '',
    '',
    '',
    '0', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'replayLogCreationTime', '67',
    '/netconf/streams/stream/replayLogCreationTime',
    'The timestamp of the creation of the log used to support
the replay function on this stream. Note that this might
be earlier then the earliest available notification in
the log. This object is updated if the log resets for 
some reason.  This object MUST be present if replay is
supported.',
    '',
    '/modules/nc-notifications/2008-02-14#replayLogCreationTime.67', 
    'leaf', 
    '/netconf/streams/stream',
    '0',
    '1',
    'dateTime',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'replayComplete', '81',
    '/replayComplete',
    'This notification is sent to signal the end of a replay
portion of a subscription.',
    '',
    '/modules/nc-notifications/2008-02-14#replayComplete.81', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    '',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'nc-notifications', 'nc-notifications', '2008-02-14', 'notificationComplete', '87',
    '/notificationComplete',
    'This notification is sent to signal the end of a notification
subscription. It is sent in the case that stopTime was
specified during the creation of the subscription..',
    '',
    '/modules/nc-notifications/2008-02-14#notificationComplete.87', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    '',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/TCP-MIB.yang
# module: TCP-MIB
# version: 2005-02-18
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'TCP-MIB');

INSERT INTO ncmodule VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcp-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:TCP-MIB',
    'IETF IPv6 MIB Revision Team
http://www.ietf.org/html.charters/ipv6-charter.html',
    'The MIB module for managing TCP implementations.

Copyright (C) The Internet Society (2005). This version
of this MIB module is ...',
    'The MIB module for managing TCP implementations.

Copyright (C) The Internet Society (2005). This version
of this MIB module is a part of RFC 4022; see the RFC
itself for full legal notices.',
    '',
    'Rajiv Raghunarayan (editor)

Cisco Systems Inc.
170 West Tasman Drive
San Jose, CA 95134

Phone: +1 408 853 9612
Email: <raraghun@cisco.com>

Send comments to <ipv6@ietf.org>',
    'IP version neutral revision, published as RFC 4022.',
    '/xsd/TCP-MIB_2005-02-18.xsd',
    '/modules/TCP-MIB/2005-02-18', 
    '/src/TCP-MIB_2005-02-18.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/TCP-MIB.yang',
    'TCP-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcp', '62',
    '/tcp',
    '',
    '',
    '/modules/TCP-MIB/2005-02-18#tcp.62', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'tcpRtoAlgorithm tcpRtoMin tcpRtoMax tcpMaxConn tcpActiveOpens tcpPassiveOpens tcpAttemptFails tcpEstabResets tcpCurrEstab tcpInSegs tcpOutSegs tcpRetransSegs tcpConnEntry tcpInErrs tcpOutRsts tcpHCInSegs tcpHCOutSegs tcpConnectionEntry tcpListenerEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpRtoAlgorithm', '64',
    '/tcp/tcpRtoAlgorithm',
    'The algorithm used to determine the timeout value used for
retransmitting unacknowledged octets.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpRtoAlgorithm.64', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpRtoMin', '79',
    '/tcp/tcpRtoMin',
    'The minimum value permitted by a TCP implementation for
the retransmission timeout, measured in milliseconds.
More refined semantics for objects of this type depend
on the algorithm used to determine the retransmission
timeout; in particular, the IETF standard algorithm
rfc2988(5) provides a minimum value.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpRtoMin.79', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpRtoMax', '95',
    '/tcp/tcpRtoMax',
    'The maximum value permitted by a TCP implementation for
the retransmission timeout, measured in milliseconds.
More refined semantics for objects of this type depend
on the algorithm used to determine the retransmission
timeout; in particular, the IETF standard algorithm
rfc2988(5) provides an upper bound (as part of an
adaptive backoff algorithm).',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpRtoMax.95', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpMaxConn', '112',
    '/tcp/tcpMaxConn',
    'The limit on the total number of TCP connections the entity
can support.  In entities where the maximum number of
connections is dynamic, this object should contain the
value -1.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpMaxConn.112', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpActiveOpens', '125',
    '/tcp/tcpActiveOpens',
    'The number of times that TCP connections have made a direct
transition to the SYN-SENT state from the CLOSED state.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpActiveOpens.125', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpPassiveOpens', '137',
    '/tcp/tcpPassiveOpens',
    'The number of times TCP connections have made a direct
transition to the SYN-RCVD state from the LISTEN state.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpPassiveOpens.137', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpAttemptFails', '149',
    '/tcp/tcpAttemptFails',
    'The number of times that TCP connections have made a direct
transition to the CLOSED state from either the SYN-SENT
state or the SYN-RCVD state, plus the number of times that
TCP connections have made a direct transition to the
LISTEN state from the SYN-RCVD state.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpAttemptFails.149', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpEstabResets', '164',
    '/tcp/tcpEstabResets',
    'The number of times that TCP connections have made a direct
transition to the CLOSED state from either the ESTABLISHED
state or the CLOSE-WAIT state.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpEstabResets.164', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpCurrEstab', '177',
    '/tcp/tcpCurrEstab',
    'The number of TCP connections for which the current state
is either ESTABLISHED or CLOSE-WAIT.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpCurrEstab.177', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpInSegs', '186',
    '/tcp/tcpInSegs',
    'The total number of segments received, including those
received in error.  This count includes segments received
on currently established connections.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpInSegs.186', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpOutSegs', '199',
    '/tcp/tcpOutSegs',
    'The total number of segments sent, including those on
current connections but excluding those containing only
retransmitted octets.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpOutSegs.199', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpRetransSegs', '212',
    '/tcp/tcpRetransSegs',
    'The total number of segments retransmitted; that is, the
number of TCP segments transmitted containing one or more
previously transmitted octets.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpRetransSegs.212', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnEntry', '228',
    '/tcp/tcpConnEntry',
    'A conceptual row of the tcpConnTable containing information
about a particular current IPv4 TCP connection.  Each row
of this table is transient in that it ceases to exist when
(or soon after) the connection makes the transition to the
CLOSED state.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnEntry.228', 
    'list', 
    '/tcp',
    '0',
    '1',
    '',
    '',
    'tcpConnState tcpConnLocalAddress tcpConnLocalPort tcpConnRemAddress tcpConnRemPort',
    '',
    'tcpConnLocalAddress tcpConnLocalPort 
tcpConnRemAddress tcpConnRemPort',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnState', '242',
    '/tcp/tcpConnEntry/tcpConnState',
    'The state of this TCP connection.

The only value that may be set by a management station is
deleteTCB(12).  Accordingly, it is appropriate for an agent
to return a `badValue\' response if a management station
attempts to set this object to any other value.

If a management station sets this object to the value
deleteTCB(12), then the TCB (as defined in [RFC793]) of
the corresponding connection on the managed node is
deleted, resulting in immediate termination of the
connection.

As an implementation-specific option, a RST segment may be
sent from the managed node to the other TCP endpoint (note,
however, that RST segments are not sent reliably).',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnState.242', 
    'leaf', 
    '/tcp/tcpConnEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnLocalAddress', '279',
    '/tcp/tcpConnEntry/tcpConnLocalAddress',
    'The local IP address for this TCP connection.  In the case
of a connection in the listen state willing to
accept connections for any IP interface associated with the
node, the value 0.0.0.0 is used.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnLocalAddress.279', 
    'leaf', 
    '/tcp/tcpConnEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnLocalPort', '291',
    '/tcp/tcpConnEntry/tcpConnLocalPort',
    'The local port number for this TCP connection.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnLocalPort.291', 
    'leaf', 
    '/tcp/tcpConnEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnRemAddress', '302',
    '/tcp/tcpConnEntry/tcpConnRemAddress',
    'The remote IP address for this TCP connection.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnRemAddress.302', 
    'leaf', 
    '/tcp/tcpConnEntry',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnRemPort', '311',
    '/tcp/tcpConnEntry/tcpConnRemPort',
    'The remote port number for this TCP connection.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnRemPort.311', 
    'leaf', 
    '/tcp/tcpConnEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpInErrs', '323',
    '/tcp/tcpInErrs',
    'The total number of segments received in error (e.g., bad
TCP checksums).

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpInErrs.323', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpOutRsts', '335',
    '/tcp/tcpOutRsts',
    'The number of TCP segments sent containing the RST flag.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpOutRsts.335', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpHCInSegs', '346',
    '/tcp/tcpHCInSegs',
    'The total number of segments received, including those
received in error.  This count includes segments received

on currently established connections.  This object is
the 64-bit equivalent of tcpInSegs.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpHCInSegs.346', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpHCOutSegs', '361',
    '/tcp/tcpHCOutSegs',
    'The total number of segments sent, including those on
current connections but excluding those containing only
retransmitted octets.  This object is the 64-bit
equivalent of tcpOutSegs.

Discontinuities in the value of this counter are
indicated via discontinuities in the value of sysUpTime.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpHCOutSegs.361', 
    'leaf', 
    '/tcp',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnectionEntry', '378',
    '/tcp/tcpConnectionEntry',
    'A conceptual row of the tcpConnectionTable containing
information about a particular current TCP connection.
Each row of this table is transient in that it ceases to
exist when (or soon after) the connection makes the
transition to the CLOSED state.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnectionEntry.378', 
    'list', 
    '/tcp',
    '0',
    '1',
    '',
    '',
    'tcpConnectionLocalAddressType tcpConnectionLocalAddress tcpConnectionLocalPort tcpConnectionRemAddressType tcpConnectionRemAddress tcpConnectionRemPort tcpConnectionState tcpConnectionProcess',
    '',
    'tcpConnectionLocalAddressType
tcpConnectionLocalAddress tcpConnectionLocalPort
tcpConnectionRemAddressType
tcpConnectionRemAddress tcpConnectionRemPort',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnectionLocalAddressType', '393',
    '/tcp/tcpConnectionEntry/tcpConnectionLocalAddressType',
    'The address type of tcpConnectionLocalAddress.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnectionLocalAddressType.393', 
    'leaf', 
    '/tcp/tcpConnectionEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnectionLocalAddress', '401',
    '/tcp/tcpConnectionEntry/tcpConnectionLocalAddress',
    'The local IP address for this TCP connection.  The type
of this address is determined by the value of
tcpConnectionLocalAddressType.

As this object is used in the index for the
tcpConnectionTable, implementors should be
careful not to create entries that would result in OIDs
with more than 128 subidentifiers; otherwise the information
cannot be accessed by using SNMPv1, SNMPv2c, or SNMPv3.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnectionLocalAddress.401', 
    'leaf', 
    '/tcp/tcpConnectionEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnectionLocalPort', '417',
    '/tcp/tcpConnectionEntry/tcpConnectionLocalPort',
    'The local port number for this TCP connection.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnectionLocalPort.417', 
    'leaf', 
    '/tcp/tcpConnectionEntry',
    '0',
    '1',
    'InetPortNumber',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnectionRemAddressType', '425',
    '/tcp/tcpConnectionEntry/tcpConnectionRemAddressType',
    'The address type of tcpConnectionRemAddress.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnectionRemAddressType.425', 
    'leaf', 
    '/tcp/tcpConnectionEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnectionRemAddress', '433',
    '/tcp/tcpConnectionEntry/tcpConnectionRemAddress',
    'The remote IP address for this TCP connection.  The type
of this address is determined by the value of
tcpConnectionRemAddressType.

As this object is used in the index for the
tcpConnectionTable, implementors should be
careful not to create entries that would result in OIDs
with more than 128 subidentifiers; otherwise the information
cannot be accessed by using SNMPv1, SNMPv2c, or SNMPv3.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnectionRemAddress.433', 
    'leaf', 
    '/tcp/tcpConnectionEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnectionRemPort', '449',
    '/tcp/tcpConnectionEntry/tcpConnectionRemPort',
    'The remote port number for this TCP connection.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnectionRemPort.449', 
    'leaf', 
    '/tcp/tcpConnectionEntry',
    '0',
    '1',
    'InetPortNumber',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnectionState', '457',
    '/tcp/tcpConnectionEntry/tcpConnectionState',
    'The state of this TCP connection.

The value listen(2) is included only for parallelism to the
old tcpConnTable and should not be used.  A connection in
LISTEN state should be present in the tcpListenerTable.

The only value that may be set by a management station is
deleteTCB(12).  Accordingly, it is appropriate for an agent
to return a `badValue\' response if a management station
attempts to set this object to any other value.

If a management station sets this object to the value
deleteTCB(12), then the TCB (as defined in [RFC793]) of
the corresponding connection on the managed node is
deleted, resulting in immediate termination of the
connection.

As an implementation-specific option, a RST segment may be
sent from the managed node to the other TCP endpoint (note,
however, that RST segments are not sent reliably).',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnectionState.457', 
    'leaf', 
    '/tcp/tcpConnectionEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpConnectionProcess', '497',
    '/tcp/tcpConnectionEntry/tcpConnectionProcess',
    'The system\'s process ID for the process associated with
this connection, or zero if there is no such process.  This
value is expected to be the same as HOST-RESOURCES-MIB::
hrSWRunIndex or SYSAPPL-MIB::sysApplElmtRunIndex for some
row in the appropriate tables.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpConnectionProcess.497', 
    'leaf', 
    '/tcp/tcpConnectionEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpListenerEntry', '513',
    '/tcp/tcpListenerEntry',
    'A conceptual row of the tcpListenerTable containing
information about a particular TCP listener.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpListenerEntry.513', 
    'list', 
    '/tcp',
    '0',
    '1',
    '',
    '',
    'tcpListenerLocalAddressType tcpListenerLocalAddress tcpListenerLocalPort tcpListenerProcess',
    '',
    'tcpListenerLocalAddressType 
tcpListenerLocalAddress tcpListenerLocalPort',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpListenerLocalAddressType', '523',
    '/tcp/tcpListenerEntry/tcpListenerLocalAddressType',
    'The address type of tcpListenerLocalAddress.  The value
should be unknown (0) if connection initiations to all
local IP addresses are accepted.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpListenerLocalAddressType.523', 
    'leaf', 
    '/tcp/tcpListenerEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpListenerLocalAddress', '533',
    '/tcp/tcpListenerEntry/tcpListenerLocalAddress',
    'The local IP address for this TCP connection.

The value of this object can be represented in three
possible ways, depending on the characteristics of the
listening application:

1. For an application willing to accept both IPv4 and
   IPv6 datagrams, the value of this object must be
   \'\'h (a zero-length octet-string), with the value
   of the corresponding tcpListenerLocalAddressType
   object being unknown (0).

2. For an application willing to accept only IPv4 or
   IPv6 datagrams, the value of this object must be
   \'0.0.0.0\' or \'::\' respectively, with
   tcpListenerLocalAddressType representing the
   appropriate address type.

3. For an application which is listening for data
   destined only to a specific IP address, the value
   of this object is the specific local address, with
   tcpListenerLocalAddressType representing the
   appropriate address type.

As this object is used in the index for the
tcpListenerTable, implementors should be
careful not to create entries that would result in OIDs
with more than 128 subidentifiers; otherwise the information
cannot be accessed, using SNMPv1, SNMPv2c, or SNMPv3.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpListenerLocalAddress.533', 
    'leaf', 
    '/tcp/tcpListenerEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpListenerLocalPort', '569',
    '/tcp/tcpListenerEntry/tcpListenerLocalPort',
    'The local port number for this TCP connection.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpListenerLocalPort.569', 
    'leaf', 
    '/tcp/tcpListenerEntry',
    '0',
    '1',
    'InetPortNumber',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'TCP-MIB', 'TCP-MIB', '2005-02-18', 'tcpListenerProcess', '577',
    '/tcp/tcpListenerEntry/tcpListenerProcess',
    'The system\'s process ID for the process associated with
this listener, or zero if there is no such process.  This
value is expected to be the same as HOST-RESOURCES-MIB::
hrSWRunIndex or SYSAPPL-MIB::sysApplElmtRunIndex for some
row in the appropriate tables.',
    '',
    '/modules/TCP-MIB/2005-02-18#tcpListenerProcess.577', 
    'leaf', 
    '/tcp/tcpListenerEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMPv2-TM.yang
# module: SNMPv2-TM
# version: 2002-10-16
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMPv2-TM');

INSERT INTO ncmodule VALUES (
    '', 'SNMPv2-TM', 'SNMPv2-TM', '2002-10-16', 'snmpv2-tm',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMPv2-TM',
    'IETF SNMPv3 Working Group',
    'The MIB module for SNMP transport mappings.

Copyright (C) The Internet Society (2002). This
version of this MIB module is part ...',
    'The MIB module for SNMP transport mappings.

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 3417;
see the RFC itself for full legal notices.',
    '',
    'WG-EMail:   snmpv3@lists.tislabs.com
Subscribe:  snmpv3-request@lists.tislabs.com

Co-Chair:   Russ Mundy
	    Network Associates Laboratories
postal:     15204 Omega Drive, Suite 300
	    Rockville, MD 20850-4601
	    USA
EMail:      mundy@tislabs.com
phone:      +1 301 947-7107

Co-Chair:   David Harrington
	    Enterasys Networks
postal:     35 Industrial Way
	    P. O. Box 5005
	    Rochester, NH 03866-5005
	    USA
EMail:      dbh@enterasys.com
phone:      +1 603 337-2614

Editor:     Randy Presuhn
	    BMC Software, Inc.
postal:     2141 North First Street
	    San Jose, CA 95131
	    USA
EMail:      randy_presuhn@bmc.com
phone:      +1 408 546-1006',
    'Clarifications, published as RFC 3417.',
    '/xsd/SNMPv2-TM_2002-10-16.xsd',
    '/modules/SNMPv2-TM/2002-10-16', 
    '/src/SNMPv2-TM_2002-10-16.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMPv2-TM.yang',
    'SNMPv2-TM.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TM', 'SNMPv2-TM', '2002-10-16', 'SnmpUDPAddress', '76',
    'Represents a UDP over IPv4 address:

octets   contents        encoding
 1-4     IP-address      network-byte order
 5-6     UDP-port        network-byte order',
    '',
    '/modules/SNMPv2-TM/2002-10-16#SnmpUDPAddress.76', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TM', 'SNMPv2-TM', '2002-10-16', 'SnmpOSIAddress', '90',
    'Represents an OSI transport-address:

octets   contents           encoding
   1     length of NSAP     \'n\' as an unsigned-integer
			       (either 0 or from 3 to 20)
2..(n+1) NSAP                concrete binary representation
(n+2)..m TSEL                string of (up to 64) octets
  ',
    '',
    '/modules/SNMPv2-TM/2002-10-16#SnmpOSIAddress.90', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TM', 'SNMPv2-TM', '2002-10-16', 'SnmpNBPAddress', '106',
    'Represents an NBP name:

octets        contents          encoding
   1          length of object  \'n\' as an unsigned integer
 2..(n+1)     object            string of (up to 32) octets
  n+2         length of type    \'p\' as an unsigned integer
(n+3)..(n+2+p)   type              string of (up to 32) octets
 n+3+p        length of zone    \'q\' as an unsigned integer
(n+4+p)..(n+3+p+q) zone              string of (up to 32) octets

   For comparison purposes, strings are
   case-insensitive. All strings may contain any octet
   other than 255 (hex ff).',
    '',
    '/modules/SNMPv2-TM/2002-10-16#SnmpNBPAddress.106', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMPv2-TM', 'SNMPv2-TM', '2002-10-16', 'SnmpIPXAddress', '126',
    'Represents an IPX address:

octets   contents            encoding
 1-4     network-number      network-byte order
 5-10    physical-address    network-byte order
11-12    socket-number       network-byte order',
    '',
    '/modules/SNMPv2-TM/2002-10-16#SnmpIPXAddress.126', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-PROXY-MIB.yang
# module: SNMP-PROXY-MIB
# version: 2002-10-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-PROXY-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmp-proxy',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-PROXY-MIB',
    'IETF SNMPv3 Working Group',
    'This MIB module defines MIB objects which provide
mechanisms to remotely configure the parameters
used by a proxy forwarding app...',
    'This MIB module defines MIB objects which provide
mechanisms to remotely configure the parameters
used by a proxy forwarding application.

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 3413;
see the RFC itself for full legal notices.',
    '',
    'WG-email:   snmpv3@lists.tislabs.com
Subscribe:  majordomo@lists.tislabs.com
	    In message body:  subscribe snmpv3

Co-Chair:   Russ Mundy
	    Network Associates Laboratories
Postal:     15204 Omega Drive, Suite 300
	    Rockville, MD 20850-4601
	    USA
EMail:      mundy@tislabs.com
Phone:      +1 301-947-7107

Co-Chair:   David Harrington
	    Enterasys Networks
Postal:     35 Industrial Way
	    P. O. Box 5004
	    Rochester, New Hampshire 03866-5005
	    USA
EMail:      dbh@enterasys.com
Phone:      +1 603-337-2614

Co-editor:  David B. Levi
	    Nortel Networks
Postal:     3505 Kesterwood Drive
	    Knoxville, Tennessee 37918
EMail:      dlevi@nortelnetworks.com
Phone:      +1 865 686 0432

Co-editor:  Paul Meyer
	    Secure Computing Corporation
Postal:     2675 Long Lake Road
	    Roseville, Minnesota 55113
EMail:      paul_meyer@securecomputing.com
Phone:      +1 651 628 1592

Co-editor:  Bob Stewart
	    Retired',
    'Clarifications, published as
RFC 3413.',
    '/xsd/SNMP-PROXY-MIB_2002-10-14.xsd',
    '/modules/SNMP-PROXY-MIB/2002-10-14', 
    '/src/SNMP-PROXY-MIB_2002-10-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-PROXY-MIB.yang',
    'SNMP-PROXY-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyObjects', '91',
    '/snmpProxyObjects',
    '',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyObjects.91', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'snmpProxyEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyEntry', '96',
    '/snmpProxyObjects/snmpProxyEntry',
    'A set of translation parameters used by a proxy forwarder
application for forwarding SNMP messages.

Entries in the snmpProxyTable are created and deleted
using the snmpProxyRowStatus object.',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyEntry.96', 
    'list', 
    '/snmpProxyObjects',
    '0',
    '1',
    '',
    '',
    'snmpProxyName snmpProxyType snmpProxyContextEngineID snmpProxyContextName snmpProxyTargetParamsIn snmpProxySingleTargetOut snmpProxyMultipleTargetOut snmpProxyStorageType snmpProxyRowStatus',
    '',
    'snmpProxyName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyName', '108',
    '/snmpProxyObjects/snmpProxyEntry/snmpProxyName',
    'The locally arbitrary, but unique identifier associated
with this snmpProxyEntry.',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyName.108', 
    'leaf', 
    '/snmpProxyObjects/snmpProxyEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyType', '119',
    '/snmpProxyObjects/snmpProxyEntry/snmpProxyType',
    'The type of message that may be forwarded using
the translation parameters defined by this entry.',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyType.119', 
    'leaf', 
    '/snmpProxyObjects/snmpProxyEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyContextEngineID', '133',
    '/snmpProxyObjects/snmpProxyEntry/snmpProxyContextEngineID',
    'The contextEngineID contained in messages that
may be forwarded using the translation parameters
defined by this entry.',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyContextEngineID.133', 
    'leaf', 
    '/snmpProxyObjects/snmpProxyEntry',
    '0',
    '1',
    'SnmpEngineID',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyContextName', '143',
    '/snmpProxyObjects/snmpProxyEntry/snmpProxyContextName',
    'The contextName contained in messages that may be
forwarded using the translation parameters defined
by this entry.

This object is optional, and if not supported, the
contextName contained in a message is ignored when
selecting an entry in the snmpProxyTable.',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyContextName.143', 
    'leaf', 
    '/snmpProxyObjects/snmpProxyEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyTargetParamsIn', '157',
    '/snmpProxyObjects/snmpProxyEntry/snmpProxyTargetParamsIn',
    'This object selects an entry in the snmpTargetParamsTable.
The selected entry is used to determine which row of the
snmpProxyTable to use for forwarding received messages.',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyTargetParamsIn.157', 
    'leaf', 
    '/snmpProxyObjects/snmpProxyEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxySingleTargetOut', '167',
    '/snmpProxyObjects/snmpProxyEntry/snmpProxySingleTargetOut',
    'This object selects a management target defined in the
snmpTargetAddrTable (in the SNMP-TARGET-MIB).  The
selected target is defined by an entry in the
snmpTargetAddrTable whose index value (snmpTargetAddrName)
is equal to this object.

This object is only used when selection of a single
target is required (i.e. when forwarding an incoming
read or write request).',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxySingleTargetOut.167', 
    'leaf', 
    '/snmpProxyObjects/snmpProxyEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyMultipleTargetOut', '183',
    '/snmpProxyObjects/snmpProxyEntry/snmpProxyMultipleTargetOut',
    'This object selects a set of management targets defined
in the snmpTargetAddrTable (in the SNMP-TARGET-MIB).

This object is only used when selection of multiple
targets is required (i.e. when forwarding an incoming
notification).',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyMultipleTargetOut.183', 
    'leaf', 
    '/snmpProxyObjects/snmpProxyEntry',
    '0',
    '1',
    'SnmpTagValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyStorageType', '196',
    '/snmpProxyObjects/snmpProxyEntry/snmpProxyStorageType',
    'The storage type of this conceptual row.
Conceptual rows having the value \'permanent\' need not
allow write-access to any columnar objects in the row.',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyStorageType.196', 
    'leaf', 
    '/snmpProxyObjects/snmpProxyEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-PROXY-MIB', 'SNMP-PROXY-MIB', '2002-10-14', 'snmpProxyRowStatus', '207',
    '/snmpProxyObjects/snmpProxyEntry/snmpProxyRowStatus',
    'The status of this conceptual row.

To create a row in this table, a manager must

set this object to either createAndGo(4) or
createAndWait(5).

The following objects may not be modified while the
value of this object is active(1):
    - snmpProxyType
    - snmpProxyContextEngineID
    - snmpProxyContextName
    - snmpProxyTargetParamsIn
    - snmpProxySingleTargetOut
    - snmpProxyMultipleTargetOut',
    '',
    '/modules/SNMP-PROXY-MIB/2002-10-14#snmpProxyRowStatus.207', 
    'leaf', 
    '/snmpProxyObjects/snmpProxyEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/DISMAN-SCHEDULE-MIB.yang
# module: DISMAN-SCHEDULE-MIB
# version: 2002-01-07
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'DISMAN-SCHEDULE-MIB');

INSERT INTO ncmodule VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'disman-schedule',
    'urn:ietf:params:xml:ns:yang:smiv2:DISMAN-SCHEDULE-MIB',
    'IETF Distributed Management Working Group',
    'This MIB module defines a MIB which provides mechanisms to
schedule SNMP set operations periodically or at specific
points in ti...',
    'This MIB module defines a MIB which provides mechanisms to
schedule SNMP set operations periodically or at specific
points in time.',
    '',
    'WG EMail:  disman@dorothy.bmc.com
Subscribe: disman-request@dorothy.bmc.com

Chair:     Randy Presuhn
	   BMC Software, Inc.
Postal:    Office 1-3141
	   2141 North First Street
	   San Jose,  California 95131
	   USA
EMail:     rpresuhn@bmc.com
Phone:     +1 408 546-1006

Editor:    David B. Levi
	   Nortel Networks
Postal:    4401 Great America Parkway
	   Santa Clara, CA 95052-8185
	   USA
EMail:     dlevi@nortelnetworks.com
Phone:     +1 865 686 0432

Editor:    Juergen Schoenwaelder
	   TU Braunschweig
Postal:    Bueltenweg 74/75
	   38106 Braunschweig
	   Germany
EMail:     schoenw@ibr.cs.tu-bs.de
Phone:     +49 531 391-3283',
    'Revised version, published as RFC 3231.

This revision introduces a new object type called
schedTriggers.  Created new conformance and compliance
statements that take care of the new schedTriggers object.

Several clarifications have been added to remove ambiguities
that were discovered and reported by implementors.',
    '/xsd/DISMAN-SCHEDULE-MIB_2002-01-07.xsd',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07', 
    '/src/DISMAN-SCHEDULE-MIB_2002-01-07.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/DISMAN-SCHEDULE-MIB.yang',
    'DISMAN-SCHEDULE-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'SnmpPduErrorStatus', '80',
    'This TC enumerates the SNMPv1 and SNMPv2 PDU error status
codes as defined in RFC 1157 and RFC 1905.  It also adds a
pseudo error status code `noResponse\' which indicates a
timeout condition.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#SnmpPduErrorStatus.80', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedObjects', '110',
    '/schedObjects',
    '',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedObjects.110', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'schedLocalTime schedEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedLocalTime', '112',
    '/schedObjects/schedLocalTime',
    'The local time used by the scheduler.  Schedules which
refer to calendar time will use the local time indicated
by this object.  An implementation MUST return all 11 bytes
of the DateAndTime textual-convention so that a manager
may retrieve the offset from GMT time.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedLocalTime.112', 
    'leaf', 
    '/schedObjects',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedEntry', '129',
    '/schedObjects/schedEntry',
    'An entry describing a particular scheduled action.

Unless noted otherwise, writable objects of this row
can be modified independent of the current value of
schedRowStatus, schedAdminStatus and schedOperStatus.
In particular, it is legal to modify schedInterval
and the objects in the schedCalendarGroup when
schedRowStatus is active and schedAdminStatus and
schedOperStatus are both enabled.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedEntry.129', 
    'list', 
    '/schedObjects',
    '0',
    '1',
    '',
    '',
    'schedOwner schedName schedDescr schedInterval schedWeekDay schedMonth schedDay schedHour schedMinute schedContextName schedVariable schedValue schedType schedAdminStatus schedOperStatus schedFailures schedLastFailure schedLastFailed schedStorageType schedRowStatus schedTriggers',
    '',
    'schedOwner schedName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedOwner', '145',
    '/schedObjects/schedEntry/schedOwner',
    'The owner of this scheduling entry.  The exact semantics of
this string are subject to the security policy defined by

the security administrator.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedOwner.145', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedName', '158',
    '/schedObjects/schedEntry/schedName',
    'The locally-unique, administratively assigned name for this
scheduling entry.  This object allows a schedOwner to have
multiple entries in the schedTable.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedName.158', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedDescr', '170',
    '/schedObjects/schedEntry/schedDescr',
    'The human readable description of the purpose of this
scheduling entry.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedDescr.170', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedInterval', '180',
    '/schedObjects/schedEntry/schedInterval',
    'The number of seconds between two action invocations of
a periodic scheduler.  Implementations must guarantee
that action invocations will not occur before at least
schedInterval seconds have passed.

The scheduler must ignore all periodic schedules that
have a schedInterval value of 0.  A periodic schedule
with a scheduling interval of 0 seconds will therefore
never invoke an action.

Implementations may be forced to delay invocations in the
face of local constraints.  A scheduled management function
should therefore not rely on the accuracy provided by the
scheduler implementation.

Note that implementations which maintain a list of pending
activations must re-calculate them when this object is
changed.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedInterval.180', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedWeekDay', '207',
    '/schedObjects/schedEntry/schedWeekDay',
    'The set of weekdays on which the scheduled action should
take place.  Setting multiple bits will include several
weekdays in the set of possible weekdays for this schedule.
Setting all bits will cause the scheduler to ignore the
weekday.

Note that implementations which maintain a list of pending
activations must re-calculate them when this object is
changed.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedWeekDay.207', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedMonth', '232',
    '/schedObjects/schedEntry/schedMonth',
    'The set of months during which the scheduled action should
take place.  Setting multiple bits will include several
months in the set of possible months for this schedule.

Setting all bits will cause the scheduler to ignore the
month.

Note that implementations which maintain a list of pending
activations must re-calculate them when this object is
changed.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedMonth.232', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedDay', '263',
    '/schedObjects/schedEntry/schedDay',
    'The set of days in a month on which a scheduled action
should take place.  There are two sets of bits one can
use to define the day within a month:

Enumerations starting with the letter \'d\' indicate a
day in a month relative to the first day of a month.
The first day of the month can therefore be specified
by setting the bit d1(0) and d31(30) means the last
day of a month with 31 days.

Enumerations starting with the letter \'r\' indicate a
day in a month in reverse order, relative to the last
day of a month.  The last day in the month can therefore
be specified by setting the bit r1(31) and r31(61) means
the first day of a month with 31 days.

Setting multiple bits will include several days in the set
of possible days for this schedule.  Setting all bits will
cause the scheduler to ignore the day within a month.

Setting all bits starting with the letter \'d\' or the
letter \'r\' will also cause the scheduler to ignore the
day within a month.

Note that implementations which maintain a list of pending
activations must re-calculate them when this object is
changed.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedDay.263', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedHour', '361',
    '/schedObjects/schedEntry/schedHour',
    'The set of hours within a day during which the scheduled
action should take place.

Note that implementations which maintain a list of pending
activations must re-calculate them when this object is
changed.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedHour.361', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedMinute', '400',
    '/schedObjects/schedEntry/schedMinute',
    'The set of minutes within an hour when the scheduled action
should take place.

Note that implementations which maintain a list of pending
activations must re-calculate them when this object is
changed.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedMinute.400', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedContextName', '475',
    '/schedObjects/schedEntry/schedContextName',
    'The context which contains the local MIB variable pointed
to by schedVariable.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedContextName.475', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedVariable', '487',
    '/schedObjects/schedEntry/schedVariable',
    'An object identifier pointing to a local MIB variable
which resolves to an ASN.1 primitive type of INTEGER.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedVariable.487', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'VariablePointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedValue', '497',
    '/schedObjects/schedEntry/schedValue',
    'The value which is written to the MIB object pointed to by
schedVariable when the scheduler invokes an action.  The
implementation shall enforce the use of access control
rules when performing the set operation on schedVariable.
This is accomplished by calling the isAccessAllowed abstract
service interface as defined in RFC 2571.

Note that an implementation may choose to issue an SNMP Set
message to the SNMP engine and leave the access control
decision to the normal message processing procedure.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedValue.497', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedType', '515',
    '/schedObjects/schedEntry/schedType',
    'The type of this schedule.  The value periodic(1) indicates
that this entry specifies a periodic schedule.  A periodic
schedule is defined by the value of schedInterval.  The
values of schedWeekDay, schedMonth, schedDay, schedHour
and schedMinute are ignored.

The value calendar(2) indicates that this entry describes a
calendar schedule.  A calendar schedule is defined by the
values of schedWeekDay, schedMonth, schedDay, schedHour and
schedMinute.  The value of schedInterval is ignored.  A
calendar schedule will trigger on all local times that
satisfy the bits set in schedWeekDay, schedMonth, schedDay,
schedHour and schedMinute.

The value oneshot(3) indicates that this entry describes a
one-shot schedule.  A one-shot schedule is similar to a
calendar schedule with the additional feature that it
disables itself by changing in the `finished\'
schedOperStatus once the schedule triggers an action.

Note that implementations which maintain a list of pending
activations must re-calculate them when this object is
changed.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedType.515', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedAdminStatus', '550',
    '/schedObjects/schedEntry/schedAdminStatus',
    'The desired state of the schedule.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedAdminStatus.550', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedOperStatus', '562',
    '/schedObjects/schedEntry/schedOperStatus',
    'The current operational state of this schedule.  The state
enabled(1) indicates this entry is active and that the
scheduler will invoke actions at appropriate times.  The
disabled(2) state indicates that this entry is currently
inactive and ignored by the scheduler.  The finished(3)
state indicates that the schedule has ended.  Schedules
in the finished(3) state are ignored by the scheduler.
A one-shot schedule enters the finished(3) state when it
deactivates itself.

Note that the operational state must not be enabled(1)
when the schedRowStatus is not active.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedOperStatus.562', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedFailures', '585',
    '/schedObjects/schedEntry/schedFailures',
    'This variable counts the number of failures while invoking
the scheduled action.  This counter at most increments once
for a triggered action.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedFailures.585', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedLastFailure', '595',
    '/schedObjects/schedEntry/schedLastFailure',
    'The most recent error that occurred during the invocation of
a scheduled action.  The value noError(0) is returned
if no errors have occurred yet.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedLastFailure.595', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'SnmpPduErrorStatus',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedLastFailed', '606',
    '/schedObjects/schedEntry/schedLastFailed',
    'The date and time when the most recent failure occurred.

The value \'0000000000000000\'H is returned if no failure
occurred since the last re-initialization of the scheduler.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedLastFailed.606', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedStorageType', '618',
    '/schedObjects/schedEntry/schedStorageType',
    'This object defines whether this scheduled action is kept
in volatile storage and lost upon reboot or if this row is
backed up by non-volatile or permanent storage.

Conceptual rows having the value `permanent\' must allow
write access to the columnar objects schedDescr,
schedInterval, schedContextName, schedVariable, schedValue,
and schedAdminStatus.  If an implementation supports the
schedCalendarGroup, write access must be also allowed to
the columnar objects schedWeekDay, schedMonth, schedDay,
schedHour, schedMinute.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedStorageType.618', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedRowStatus', '637',
    '/schedObjects/schedEntry/schedRowStatus',
    'The status of this scheduled action.  A control that allows
entries to be added and removed from this table.

Note that the operational state must change to enabled
when the administrative state is enabled and the row
status changes to active(1).

Attempts to destroy(6) a row or to set a row
notInService(2) while the operational state is enabled
result in inconsistentValue errors.

The value of this object has no effect on whether other
objects in this conceptual row can be modified.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedRowStatus.637', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedTriggers', '657',
    '/schedObjects/schedEntry/schedTriggers',
    'This variable counts the number of attempts (either
successful or failed) to invoke the scheduled action.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedTriggers.657', 
    'leaf', 
    '/schedObjects/schedEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedActionFailure', '669',
    '/schedActionFailure',
    'This notification is generated whenever the invocation of a
scheduled action fails.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedActionFailure.669', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'schedActionFailure-schedLastFailure schedActionFailure-schedLastFailed',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedActionFailure-schedLastFailure', '675',
    '/schedActionFailure/schedActionFailure-schedLastFailure',
    '',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedActionFailure-schedLastFailure.675', 
    'container', 
    '/schedActionFailure',
    '0',
    '0',
    '',
    '',
    'schedOwner schedName schedLastFailure',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedOwner', '676',
    '/schedActionFailure/schedActionFailure-schedLastFailure/schedOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedOwner.676', 
    'leaf', 
    '/schedActionFailure/schedActionFailure-schedLastFailure',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedName', '684',
    '/schedActionFailure/schedActionFailure-schedLastFailure/schedName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedName.684', 
    'leaf', 
    '/schedActionFailure/schedActionFailure-schedLastFailure',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedLastFailure', '692',
    '/schedActionFailure/schedActionFailure-schedLastFailure/schedLastFailure',
    'The most recent error that occurred during the invocation of
a scheduled action.  The value noError(0) is returned
if no errors have occurred yet.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedLastFailure.692', 
    'leaf', 
    '/schedActionFailure/schedActionFailure-schedLastFailure',
    '0',
    '0',
    'SnmpPduErrorStatus',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedActionFailure-schedLastFailed', '704',
    '/schedActionFailure/schedActionFailure-schedLastFailed',
    '',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedActionFailure-schedLastFailed.704', 
    'container', 
    '/schedActionFailure',
    '0',
    '0',
    '',
    '',
    'schedOwner schedName schedLastFailed',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedOwner', '705',
    '/schedActionFailure/schedActionFailure-schedLastFailed/schedOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedOwner.705', 
    'leaf', 
    '/schedActionFailure/schedActionFailure-schedLastFailed',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedName', '713',
    '/schedActionFailure/schedActionFailure-schedLastFailed/schedName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedName.713', 
    'leaf', 
    '/schedActionFailure/schedActionFailure-schedLastFailed',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-SCHEDULE-MIB', 'DISMAN-SCHEDULE-MIB', '2002-01-07', 'schedLastFailed', '721',
    '/schedActionFailure/schedActionFailure-schedLastFailed/schedLastFailed',
    'The date and time when the most recent failure occurred.

The value \'0000000000000000\'H is returned if no failure
occurred since the last re-initialization of the scheduler.',
    '',
    '/modules/DISMAN-SCHEDULE-MIB/2002-01-07#schedLastFailed.721', 
    'leaf', 
    '/schedActionFailure/schedActionFailure-schedLastFailed',
    '0',
    '0',
    'DateAndTime',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/ipfix-psamp.yang
# module: ipfix-psamp
# version: 2008-02-20
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'ipfix-psamp');

INSERT INTO ncmodule VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ipfix',
    'urn:ietf:params:xml:ns:ipfix-psamp-config',
    'IPFIX WG',
    'IPFIX/PSAMP Configuration Data Model',
    'IPFIX/PSAMP Configuration Data Model',
    'draft-muenz-ipfix-configuration-04.txt',
    'muenz@informatik.uni-tuebingen.de',
    'Version of draft-muenz-ipfix-configuration-04
Changes in -04:
- first version in yang
- Collecting Process can be configured for file import
- Collecting Process can be configured to export received
records without modifications (e.g., to file or other collectors)
- SCTP export parameter timedReliability
- parameter for eligible local IP addresses for SCTP endpoint
- all tags names uncapitalized, types names etc. capitalized
- CacheParameters renamed as Cache
- description attribute removed
Changes in -03:
- Linecard and Interface classes now have direction element
- sec => s (SI unit)
- optional description attribute for annotations
- simplifications in ExportingProcess class
- new parameters: observationPointId, meteringProcessId,
selectorId, exportingProcessId (note that devices do not
have to support the configuration of these parameters)
- new FileExport class for exporting into a file
- Reporting class renamed Option Class
Changes in -02:
- new structure without next pointers
- packet reporting and flow metering replaced by record cache
- added reporting with options',
    '/xsd/ipfix-psamp_2008-02-20.xsd',
    '/modules/ipfix-psamp/2008-02-20', 
    '/src/ipfix-psamp_2008-02-20.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/ipfix-psamp.yang',
    'ipfix-psamp.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'Direction', '71',
    'Direction of packets going through an interface or
linecard.',
    '',
    '/modules/ipfix-psamp/2008-02-20#Direction.71', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'InformationElement', '44',
    'Parameters of an Information Element.',
    '',
    '/modules/ipfix-psamp/2008-02-20#InformationElement.44', 
    'ieEnterpriseNumber NameOrId ieLength',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'Interface', '82',
    'Interface as input to Observation Point.',
    '',
    '/modules/ipfix-psamp/2008-02-20#Interface.82', 
    'IndexOrName direction',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'Linecard', '102',
    'Linecard as input to Observation Point.',
    '',
    '/modules/ipfix-psamp/2008-02-20#Linecard.102', 
    'IndexOrName direction',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'MeteringProcess', '122',
    'Selection Processes and Record Cache of a Metering
Process.',
    '',
    '/modules/ipfix-psamp/2008-02-20#MeteringProcess.122', 
    'meteringProcessId selectionProcess cache',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ipfix', '148',
    '/ipfix',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ipfix.148', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'collectingProcess observationPoint selectionProcess cache exportingProcess',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'collectingProcess', '150',
    '/ipfix/collectingProcess',
    'Parameters of a Collecting Process.',
    '',
    '/modules/ipfix-psamp/2008-02-20#collectingProcess.150', 
    'list', 
    '/ipfix',
    '0',
    '1',
    '',
    '',
    'name receiver meteringProcess exportingProcess',
    '',
    'name',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '154',
    '/ipfix/collectingProcess/name',
    'Arbitrary but unique name of the Collecting Process.',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.154', 
    'leaf', 
    '/ipfix/collectingProcess',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'receiver', '159',
    '/ipfix/collectingProcess/receiver',
    'Receiver parameters.',
    '',
    '/modules/ipfix-psamp/2008-02-20#receiver.159', 
    'list', 
    '/ipfix/collectingProcess',
    '0',
    '1',
    '',
    '',
    'name TransportProtocol',
    '',
    'name',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '163',
    '/ipfix/collectingProcess/receiver/name',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.163', 
    'leaf', 
    '/ipfix/collectingProcess/receiver',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'TransportProtocol', '165',
    '/ipfix/collectingProcess/receiver/TransportProtocol',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#TransportProtocol.165', 
    'choice', 
    '/ipfix/collectingProcess/receiver',
    '0',
    '1',
    '',
    '',
    'sctpReceiver udpReceiver tcpReceiver fileImport',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sctpReceiver', '167',
    '/ipfix/collectingProcess/receiver/TransportProtocol/sctpReceiver',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sctpReceiver.167', 
    'case', 
    '/ipfix/collectingProcess/receiver/TransportProtocol',
    '0',
    '1',
    '',
    '',
    'sctpReceiver',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sctpReceiver', '167',
    '/ipfix/collectingProcess/receiver/TransportProtocol/sctpReceiver/sctpReceiver',
    'SCTP receiver parameters.',
    'RFC 4960.',
    '/modules/ipfix-psamp/2008-02-20#sctpReceiver.167', 
    'container', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/sctpReceiver',
    '0',
    '1',
    '',
    '',
    'ipAddress transportPort',
    '',
    '',
    '1', '1', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ipAddress', '170',
    '/ipfix/collectingProcess/receiver/TransportProtocol/sctpReceiver/sctpReceiver/ipAddress',
    'List of eligible local IP addresses to be used by
the SCTP endpoint. If omitted, all locally assigned IP
addresses are used by the SCTP endpoint.',
    '',
    '/modules/ipfix-psamp/2008-02-20#ipAddress.170', 
    'leaf-list', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/sctpReceiver/sctpReceiver',
    '0',
    '1',
    'ip-address',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'transportPort', '176',
    '/ipfix/collectingProcess/receiver/TransportProtocol/sctpReceiver/sctpReceiver/transportPort',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#transportPort.176', 
    'leaf', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/sctpReceiver/sctpReceiver',
    '0',
    '1',
    'port-number',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'udpReceiver', '181',
    '/ipfix/collectingProcess/receiver/TransportProtocol/udpReceiver',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#udpReceiver.181', 
    'case', 
    '/ipfix/collectingProcess/receiver/TransportProtocol',
    '0',
    '1',
    '',
    '',
    'udpReceiver',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'udpReceiver', '181',
    '/ipfix/collectingProcess/receiver/TransportProtocol/udpReceiver/udpReceiver',
    'UDP receiver parameters.',
    '',
    '/modules/ipfix-psamp/2008-02-20#udpReceiver.181', 
    'container', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/udpReceiver',
    '0',
    '1',
    '',
    '',
    'ipAddress transportPort defaultTemplateLifetime',
    '',
    '',
    '1', '1', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ipAddress', '183',
    '/ipfix/collectingProcess/receiver/TransportProtocol/udpReceiver/udpReceiver/ipAddress',
    'If omitted, all locally assigned IP addresses are
used by the UDP endpoint.',
    '',
    '/modules/ipfix-psamp/2008-02-20#ipAddress.183', 
    'leaf', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/udpReceiver/udpReceiver',
    '0',
    '1',
    'ip-address',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'transportPort', '188',
    '/ipfix/collectingProcess/receiver/TransportProtocol/udpReceiver/udpReceiver/transportPort',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#transportPort.188', 
    'leaf', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/udpReceiver/udpReceiver',
    '0',
    '1',
    'port-number',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'defaultTemplateLifetime', '192',
    '/ipfix/collectingProcess/receiver/TransportProtocol/udpReceiver/udpReceiver/defaultTemplateLifetime',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#defaultTemplateLifetime.192', 
    'leaf', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/udpReceiver/udpReceiver',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'tcpReceiver', '194',
    '/ipfix/collectingProcess/receiver/TransportProtocol/tcpReceiver',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#tcpReceiver.194', 
    'case', 
    '/ipfix/collectingProcess/receiver/TransportProtocol',
    '0',
    '1',
    '',
    '',
    'tcpReceiver',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'tcpReceiver', '194',
    '/ipfix/collectingProcess/receiver/TransportProtocol/tcpReceiver/tcpReceiver',
    'TCP receiver parameters.',
    '',
    '/modules/ipfix-psamp/2008-02-20#tcpReceiver.194', 
    'container', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/tcpReceiver',
    '0',
    '1',
    '',
    '',
    'ipAddress transportPort',
    '',
    '',
    '1', '1', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ipAddress', '196',
    '/ipfix/collectingProcess/receiver/TransportProtocol/tcpReceiver/tcpReceiver/ipAddress',
    'If omitted, all locally assigned IP addresses are
used by the TCP endpoint.',
    '',
    '/modules/ipfix-psamp/2008-02-20#ipAddress.196', 
    'leaf', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/tcpReceiver/tcpReceiver',
    '0',
    '1',
    'ip-address',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'transportPort', '201',
    '/ipfix/collectingProcess/receiver/TransportProtocol/tcpReceiver/tcpReceiver/transportPort',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#transportPort.201', 
    'leaf', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/tcpReceiver/tcpReceiver',
    '0',
    '1',
    'port-number',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'fileImport', '206',
    '/ipfix/collectingProcess/receiver/TransportProtocol/fileImport',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#fileImport.206', 
    'case', 
    '/ipfix/collectingProcess/receiver/TransportProtocol',
    '0',
    '1',
    '',
    '',
    'fileImport',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'fileImport', '206',
    '/ipfix/collectingProcess/receiver/TransportProtocol/fileImport/fileImport',
    'File import parameters.',
    '',
    '/modules/ipfix-psamp/2008-02-20#fileImport.206', 
    'container', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/fileImport',
    '0',
    '1',
    '',
    '',
    'uri',
    '',
    '',
    '1', '1', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'uri', '208',
    '/ipfix/collectingProcess/receiver/TransportProtocol/fileImport/fileImport/uri',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#uri.208', 
    'leaf', 
    '/ipfix/collectingProcess/receiver/TransportProtocol/fileImport/fileImport',
    '0',
    '1',
    'uri',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'meteringProcess', '216',
    '/ipfix/collectingProcess/meteringProcess',
    'Metering Processes process received records in parallel.
Monitoring device acts as IPFIX mediator/concentrator.',
    '',
    '/modules/ipfix-psamp/2008-02-20#meteringProcess.216', 
    'list', 
    '/ipfix/collectingProcess',
    '0',
    '1',
    '',
    '',
    'name meteringProcessId selectionProcess cache',
    '',
    'name',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '222',
    '/ipfix/collectingProcess/meteringProcess/name',
    'Arbitrary but unique name of the Monitoring
Process.',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.222', 
    'leaf', 
    '/ipfix/collectingProcess/meteringProcess',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'meteringProcessId', '126',
    '/ipfix/collectingProcess/meteringProcess/meteringProcessId',
    'If omitted, the Metering Process ID is assigned by the
monitoring device.',
    '',
    '/modules/ipfix-psamp/2008-02-20#meteringProcessId.126', 
    'leaf', 
    '/ipfix/collectingProcess/meteringProcess',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'selectionProcess', '132',
    '/ipfix/collectingProcess/meteringProcess/selectionProcess',
    'Selection Processes are applied in the order of
their appearance. If no Selection Process is specified, all
packets are selected.',
    '',
    '/modules/ipfix-psamp/2008-02-20#selectionProcess.132', 
    'leaf-list', 
    '/ipfix/collectingProcess/meteringProcess',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'cache', '140',
    '/ipfix/collectingProcess/meteringProcess/cache',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#cache.140', 
    'leaf', 
    '/ipfix/collectingProcess/meteringProcess',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'exportingProcess', '231',
    '/ipfix/collectingProcess/exportingProcess',
    'Export of received records without any modifications.
Records are exported by all Exporting Processes in the list.',
    '',
    '/modules/ipfix-psamp/2008-02-20#exportingProcess.231', 
    'leaf-list', 
    '/ipfix/collectingProcess',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '1', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'observationPoint', '238',
    '/ipfix/observationPoint',
    'Parameters of an Observation Point.',
    '',
    '/modules/ipfix-psamp/2008-02-20#observationPoint.238', 
    'list', 
    '/ipfix',
    '0',
    '1',
    '',
    '',
    'name observationPointId observationDomainId OPType meteringProcess',
    '',
    'name',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '242',
    '/ipfix/observationPoint/name',
    'Arbitrary but unique name of the Observation Point.',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.242', 
    'leaf', 
    '/ipfix/observationPoint',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'observationPointId', '247',
    '/ipfix/observationPoint/observationPointId',
    'If omitted, the Observation Point ID is assigned by the
monitoring device.',
    '',
    '/modules/ipfix-psamp/2008-02-20#observationPointId.247', 
    'leaf', 
    '/ipfix/observationPoint',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'observationDomainId', '253',
    '/ipfix/observationPoint/observationDomainId',
    'If omitted, the Observation Domain ID is assigned by the
monitoring device.',
    '',
    '/modules/ipfix-psamp/2008-02-20#observationDomainId.253', 
    'leaf', 
    '/ipfix/observationPoint',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'OPType', '259',
    '/ipfix/observationPoint/OPType',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#OPType.259', 
    'choice', 
    '/ipfix/observationPoint',
    '0',
    '1',
    '',
    '',
    'interface linecard',
    '',
    '',
    '1', '1', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'interface', '261',
    '/ipfix/observationPoint/OPType/interface',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#interface.261', 
    'case', 
    '/ipfix/observationPoint/OPType',
    '0',
    '1',
    '',
    '',
    'interface',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'interface', '261',
    '/ipfix/observationPoint/OPType/interface/interface',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#interface.261', 
    'container', 
    '/ipfix/observationPoint/OPType/interface',
    '0',
    '1',
    '',
    '',
    'IndexOrName direction',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'IndexOrName', '85',
    '/ipfix/observationPoint/OPType/interface/interface/IndexOrName',
    'Index or name of the interface as stored in the
ifTable of IF-MIB.',
    'RFC 1229.',
    '/modules/ipfix-psamp/2008-02-20#IndexOrName.85', 
    'choice', 
    '/ipfix/observationPoint/OPType/interface/interface',
    '0',
    '1',
    '',
    '',
    'ifIndex ifName',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ifIndex', '90',
    '/ipfix/observationPoint/OPType/interface/interface/IndexOrName/ifIndex',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ifIndex.90', 
    'case', 
    '/ipfix/observationPoint/OPType/interface/interface/IndexOrName',
    '0',
    '1',
    '',
    '',
    'ifIndex',
    '',
    '',
    '0', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ifIndex', '90',
    '/ipfix/observationPoint/OPType/interface/interface/IndexOrName/ifIndex/ifIndex',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ifIndex.90', 
    'leaf', 
    '/ipfix/observationPoint/OPType/interface/interface/IndexOrName/ifIndex',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '8',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ifName', '91',
    '/ipfix/observationPoint/OPType/interface/interface/IndexOrName/ifName',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ifName.91', 
    'case', 
    '/ipfix/observationPoint/OPType/interface/interface/IndexOrName',
    '0',
    '1',
    '',
    '',
    'ifName',
    '',
    '',
    '0', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ifName', '91',
    '/ipfix/observationPoint/OPType/interface/interface/IndexOrName/ifName/ifName',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ifName.91', 
    'leaf', 
    '/ipfix/observationPoint/OPType/interface/interface/IndexOrName/ifName',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '8',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'direction', '94',
    '/ipfix/observationPoint/OPType/interface/interface/direction',
    'Direction of packets. If not applicable (e.g., in the
case of a sniffing interface in promiscuous mode), this parameter
is omitted',
    '',
    '/modules/ipfix-psamp/2008-02-20#direction.94', 
    'leaf', 
    '/ipfix/observationPoint/OPType/interface/interface',
    '0',
    '1',
    'Direction',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'linecard', '262',
    '/ipfix/observationPoint/OPType/linecard',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#linecard.262', 
    'case', 
    '/ipfix/observationPoint/OPType',
    '0',
    '1',
    '',
    '',
    'linecard',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'linecard', '262',
    '/ipfix/observationPoint/OPType/linecard/linecard',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#linecard.262', 
    'container', 
    '/ipfix/observationPoint/OPType/linecard',
    '0',
    '1',
    '',
    '',
    'IndexOrName direction',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'IndexOrName', '105',
    '/ipfix/observationPoint/OPType/linecard/linecard/IndexOrName',
    'Index or name of the linecard as stored in the
entPhysicalTable of ENTITY-MIB.',
    'RFC 4133.',
    '/modules/ipfix-psamp/2008-02-20#IndexOrName.105', 
    'choice', 
    '/ipfix/observationPoint/OPType/linecard/linecard',
    '0',
    '1',
    '',
    '',
    'entPhysicalIndex entPhysicalName',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'entPhysicalIndex', '110',
    '/ipfix/observationPoint/OPType/linecard/linecard/IndexOrName/entPhysicalIndex',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#entPhysicalIndex.110', 
    'case', 
    '/ipfix/observationPoint/OPType/linecard/linecard/IndexOrName',
    '0',
    '1',
    '',
    '',
    'entPhysicalIndex',
    '',
    '',
    '0', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'entPhysicalIndex', '110',
    '/ipfix/observationPoint/OPType/linecard/linecard/IndexOrName/entPhysicalIndex/entPhysicalIndex',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#entPhysicalIndex.110', 
    'leaf', 
    '/ipfix/observationPoint/OPType/linecard/linecard/IndexOrName/entPhysicalIndex',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '8',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'entPhysicalName', '111',
    '/ipfix/observationPoint/OPType/linecard/linecard/IndexOrName/entPhysicalName',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#entPhysicalName.111', 
    'case', 
    '/ipfix/observationPoint/OPType/linecard/linecard/IndexOrName',
    '0',
    '1',
    '',
    '',
    'entPhysicalName',
    '',
    '',
    '0', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'entPhysicalName', '111',
    '/ipfix/observationPoint/OPType/linecard/linecard/IndexOrName/entPhysicalName/entPhysicalName',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#entPhysicalName.111', 
    'leaf', 
    '/ipfix/observationPoint/OPType/linecard/linecard/IndexOrName/entPhysicalName',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '8',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'direction', '114',
    '/ipfix/observationPoint/OPType/linecard/linecard/direction',
    'Direction of packets. If not applicable (e.g., in the
case of a sniffing interface in promiscuous mode), this parameter
is omitted',
    '',
    '/modules/ipfix-psamp/2008-02-20#direction.114', 
    'leaf', 
    '/ipfix/observationPoint/OPType/linecard/linecard',
    '0',
    '1',
    'Direction',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'meteringProcess', '265',
    '/ipfix/observationPoint/meteringProcess',
    'Metering Processes process packets in parallel.',
    '',
    '/modules/ipfix-psamp/2008-02-20#meteringProcess.265', 
    'list', 
    '/ipfix/observationPoint',
    '0',
    '1',
    '',
    '',
    'name meteringProcessId selectionProcess cache',
    '',
    'name',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '269',
    '/ipfix/observationPoint/meteringProcess/name',
    'Arbitrary but unique name of the Monitoring
Process.',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.269', 
    'leaf', 
    '/ipfix/observationPoint/meteringProcess',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'meteringProcessId', '126',
    '/ipfix/observationPoint/meteringProcess/meteringProcessId',
    'If omitted, the Metering Process ID is assigned by the
monitoring device.',
    '',
    '/modules/ipfix-psamp/2008-02-20#meteringProcessId.126', 
    'leaf', 
    '/ipfix/observationPoint/meteringProcess',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'selectionProcess', '132',
    '/ipfix/observationPoint/meteringProcess/selectionProcess',
    'Selection Processes are applied in the order of
their appearance. If no Selection Process is specified, all
packets are selected.',
    '',
    '/modules/ipfix-psamp/2008-02-20#selectionProcess.132', 
    'leaf-list', 
    '/ipfix/observationPoint/meteringProcess',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'cache', '140',
    '/ipfix/observationPoint/meteringProcess/cache',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#cache.140', 
    'leaf', 
    '/ipfix/observationPoint/meteringProcess',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'selectionProcess', '279',
    '/ipfix/selectionProcess',
    'Parameters of a Selection Process (i.e., Primitive
Selector).',
    '',
    '/modules/ipfix-psamp/2008-02-20#selectionProcess.279', 
    'list', 
    '/ipfix',
    '0',
    '1',
    '',
    '',
    'name selectorId Method',
    '',
    'name',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '284',
    '/ipfix/selectionProcess/name',
    'Arbitrary but unique name of the Selection Process.',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.284', 
    'leaf', 
    '/ipfix/selectionProcess',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'selectorId', '289',
    '/ipfix/selectionProcess/selectorId',
    'If omitted, the Selector ID is assigned by the
monitoring device.',
    '',
    '/modules/ipfix-psamp/2008-02-20#selectorId.289', 
    'leaf', 
    '/ipfix/selectionProcess',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'Method', '295',
    '/ipfix/selectionProcess/Method',
    'See PSAMP-MIB for details about the selection methods
and their parameters.',
    'draft-ietf-psamp-mib-06.',
    '/modules/ipfix-psamp/2008-02-20#Method.295', 
    'choice', 
    '/ipfix/selectionProcess',
    '0',
    '1',
    '',
    '',
    'sampCountBased sampTimeBased sampRandOutOfN sampUniProb sampNonUniProb sampFlowState filterMatch filterHash filterRState',
    '',
    '',
    '1', '1', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampCountBased', '300',
    '/ipfix/selectionProcess/Method/sampCountBased',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampCountBased.300', 
    'case', 
    '/ipfix/selectionProcess/Method',
    '0',
    '1',
    '',
    '',
    'sampCountBased',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampCountBased', '300',
    '/ipfix/selectionProcess/Method/sampCountBased/sampCountBased',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampCountBased.300', 
    'container', 
    '/ipfix/selectionProcess/Method/sampCountBased',
    '0',
    '1',
    '',
    '',
    'interval spacing',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'interval', '301',
    '/ipfix/selectionProcess/Method/sampCountBased/sampCountBased/interval',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#interval.301', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampCountBased/sampCountBased',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'spacing', '302',
    '/ipfix/selectionProcess/Method/sampCountBased/sampCountBased/spacing',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#spacing.302', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampCountBased/sampCountBased',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampTimeBased', '304',
    '/ipfix/selectionProcess/Method/sampTimeBased',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampTimeBased.304', 
    'case', 
    '/ipfix/selectionProcess/Method',
    '0',
    '1',
    '',
    '',
    'sampTimeBased',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampTimeBased', '304',
    '/ipfix/selectionProcess/Method/sampTimeBased/sampTimeBased',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampTimeBased.304', 
    'container', 
    '/ipfix/selectionProcess/Method/sampTimeBased',
    '0',
    '1',
    '',
    '',
    'interval spacing',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'interval', '305',
    '/ipfix/selectionProcess/Method/sampTimeBased/sampTimeBased/interval',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#interval.305', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampTimeBased/sampTimeBased',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'spacing', '306',
    '/ipfix/selectionProcess/Method/sampTimeBased/sampTimeBased/spacing',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#spacing.306', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampTimeBased/sampTimeBased',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampRandOutOfN', '308',
    '/ipfix/selectionProcess/Method/sampRandOutOfN',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampRandOutOfN.308', 
    'case', 
    '/ipfix/selectionProcess/Method',
    '0',
    '1',
    '',
    '',
    'sampRandOutOfN',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampRandOutOfN', '308',
    '/ipfix/selectionProcess/Method/sampRandOutOfN/sampRandOutOfN',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampRandOutOfN.308', 
    'container', 
    '/ipfix/selectionProcess/Method/sampRandOutOfN',
    '0',
    '1',
    '',
    '',
    'population sample',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'population', '309',
    '/ipfix/selectionProcess/Method/sampRandOutOfN/sampRandOutOfN/population',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#population.309', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampRandOutOfN/sampRandOutOfN',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sample', '310',
    '/ipfix/selectionProcess/Method/sampRandOutOfN/sampRandOutOfN/sample',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sample.310', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampRandOutOfN/sampRandOutOfN',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampUniProb', '312',
    '/ipfix/selectionProcess/Method/sampUniProb',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampUniProb.312', 
    'case', 
    '/ipfix/selectionProcess/Method',
    '0',
    '1',
    '',
    '',
    'sampUniProb',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampUniProb', '312',
    '/ipfix/selectionProcess/Method/sampUniProb/sampUniProb',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampUniProb.312', 
    'container', 
    '/ipfix/selectionProcess/Method/sampUniProb',
    '0',
    '1',
    '',
    '',
    'probability',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'probability', '313',
    '/ipfix/selectionProcess/Method/sampUniProb/sampUniProb/probability',
    'The given value must be divided by 4294967295.',
    '',
    '/modules/ipfix-psamp/2008-02-20#probability.313', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampUniProb/sampUniProb',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampNonUniProb', '319',
    '/ipfix/selectionProcess/Method/sampNonUniProb',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampNonUniProb.319', 
    'case', 
    '/ipfix/selectionProcess/Method',
    '0',
    '1',
    '',
    '',
    'sampNonUniProb',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampNonUniProb', '319',
    '/ipfix/selectionProcess/Method/sampNonUniProb/sampNonUniProb',
    'In PSAMP-MIB, these are OIDs.',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampNonUniProb.319', 
    'container', 
    '/ipfix/selectionProcess/Method/sampNonUniProb',
    '0',
    '1',
    '',
    '',
    'function funcParam',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'function', '321',
    '/ipfix/selectionProcess/Method/sampNonUniProb/sampNonUniProb/function',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#function.321', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampNonUniProb/sampNonUniProb',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'funcParam', '322',
    '/ipfix/selectionProcess/Method/sampNonUniProb/sampNonUniProb/funcParam',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#funcParam.322', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampNonUniProb/sampNonUniProb',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampFlowState', '324',
    '/ipfix/selectionProcess/Method/sampFlowState',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampFlowState.324', 
    'case', 
    '/ipfix/selectionProcess/Method',
    '0',
    '1',
    '',
    '',
    'sampFlowState',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sampFlowState', '324',
    '/ipfix/selectionProcess/Method/sampFlowState/sampFlowState',
    'In PSAMP-MIB, these are OIDs.',
    '',
    '/modules/ipfix-psamp/2008-02-20#sampFlowState.324', 
    'container', 
    '/ipfix/selectionProcess/Method/sampFlowState',
    '0',
    '1',
    '',
    '',
    'function funcParam',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'function', '326',
    '/ipfix/selectionProcess/Method/sampFlowState/sampFlowState/function',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#function.326', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampFlowState/sampFlowState',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'funcParam', '327',
    '/ipfix/selectionProcess/Method/sampFlowState/sampFlowState/funcParam',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#funcParam.327', 
    'leaf', 
    '/ipfix/selectionProcess/Method/sampFlowState/sampFlowState',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'filterMatch', '329',
    '/ipfix/selectionProcess/Method/filterMatch',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#filterMatch.329', 
    'case', 
    '/ipfix/selectionProcess/Method',
    '0',
    '1',
    '',
    '',
    'filterMatch',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'filterMatch', '329',
    '/ipfix/selectionProcess/Method/filterMatch/filterMatch',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#filterMatch.329', 
    'container', 
    '/ipfix/selectionProcess/Method/filterMatch',
    '0',
    '1',
    '',
    '',
    'fieldId startValue stopValue mask',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'fieldId', '330',
    '/ipfix/selectionProcess/Method/filterMatch/filterMatch/fieldId',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#fieldId.330', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterMatch/filterMatch',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'startValue', '331',
    '/ipfix/selectionProcess/Method/filterMatch/filterMatch/startValue',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#startValue.331', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterMatch/filterMatch',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'stopValue', '332',
    '/ipfix/selectionProcess/Method/filterMatch/filterMatch/stopValue',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#stopValue.332', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterMatch/filterMatch',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'mask', '333',
    '/ipfix/selectionProcess/Method/filterMatch/filterMatch/mask',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#mask.333', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterMatch/filterMatch',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'filterHash', '335',
    '/ipfix/selectionProcess/Method/filterHash',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#filterHash.335', 
    'case', 
    '/ipfix/selectionProcess/Method',
    '0',
    '1',
    '',
    '',
    'filterHash',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'filterHash', '335',
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    'In PSAMP-MIB, function and funcParam are OIDs.',
    '',
    '/modules/ipfix-psamp/2008-02-20#filterHash.335', 
    'container', 
    '/ipfix/selectionProcess/Method/filterHash',
    '0',
    '1',
    '',
    '',
    'addrType headerBits payloadBytes payloadBits function funcParam inputBits outputBits outputMask selection',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'addrType', '337',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/addrType',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#addrType.337', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'ip-version',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'headerBits', '338',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/headerBits',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#headerBits.338', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'payloadBytes', '339',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/payloadBytes',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#payloadBytes.339', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'payloadBits', '340',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/payloadBits',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#payloadBits.340', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'function', '341',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/function',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#function.341', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'funcParam', '342',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/funcParam',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#funcParam.342', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'inputBits', '343',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/inputBits',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#inputBits.343', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'outputBits', '344',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/outputBits',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#outputBits.344', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'outputMask', '345',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/outputMask',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#outputMask.345', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'selection', '346',
    '/ipfix/selectionProcess/Method/filterHash/filterHash/selection',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#selection.346', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterHash/filterHash',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'filterRState', '348',
    '/ipfix/selectionProcess/Method/filterRState',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#filterRState.348', 
    'case', 
    '/ipfix/selectionProcess/Method',
    '0',
    '1',
    '',
    '',
    'filterRState',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'filterRState', '348',
    '/ipfix/selectionProcess/Method/filterRState/filterRState',
    'In PSAMP-MIB, vendorFunc is OID.',
    '',
    '/modules/ipfix-psamp/2008-02-20#filterRState.348', 
    'container', 
    '/ipfix/selectionProcess/Method/filterRState',
    '0',
    '1',
    '',
    '',
    'function negate ifIndex startAS stopAS vendorFunc',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'function', '350',
    '/ipfix/selectionProcess/Method/filterRState/filterRState/function',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#function.350', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterRState/filterRState',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'negate', '351',
    '/ipfix/selectionProcess/Method/filterRState/filterRState/negate',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#negate.351', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterRState/filterRState',
    '0',
    '1',
    'boolean',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ifIndex', '352',
    '/ipfix/selectionProcess/Method/filterRState/filterRState/ifIndex',
    'Index of the interface as stored in the ifTable
of IF-MIB.',
    'RFC 2863.',
    '/modules/ipfix-psamp/2008-02-20#ifIndex.352', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterRState/filterRState',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'startAS', '358',
    '/ipfix/selectionProcess/Method/filterRState/filterRState/startAS',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#startAS.358', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterRState/filterRState',
    '0',
    '1',
    'asn',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'stopAS', '359',
    '/ipfix/selectionProcess/Method/filterRState/filterRState/stopAS',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#stopAS.359', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterRState/filterRState',
    '0',
    '1',
    'asn',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'vendorFunc', '360',
    '/ipfix/selectionProcess/Method/filterRState/filterRState/vendorFunc',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#vendorFunc.360', 
    'leaf', 
    '/ipfix/selectionProcess/Method/filterRState/filterRState',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'cache', '365',
    '/ipfix/cache',
    'Parameters of a cache.',
    '',
    '/modules/ipfix-psamp/2008-02-20#cache.365', 
    'list', 
    '/ipfix',
    '0',
    '1',
    '',
    '',
    'name cacheType cacheSize activeTimeout idleTimeout template exportingProcess',
    '',
    'name',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '369',
    '/ipfix/cache/name',
    'Arbitrary but unique name of the cache.',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.369', 
    'leaf', 
    '/ipfix/cache',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'cacheType', '374',
    '/ipfix/cache/cacheType',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#cacheType.374', 
    'leaf', 
    '/ipfix/cache',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'cacheSize', '388',
    '/ipfix/cache/cacheSize',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#cacheSize.388', 
    'leaf', 
    '/ipfix/cache',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'activeTimeout', '390',
    '/ipfix/cache/activeTimeout',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#activeTimeout.390', 
    'leaf', 
    '/ipfix/cache',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'idleTimeout', '392',
    '/ipfix/cache/idleTimeout',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#idleTimeout.392', 
    'leaf', 
    '/ipfix/cache',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'template', '394',
    '/ipfix/cache/template',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#template.394', 
    'container', 
    '/ipfix/cache',
    '0',
    '1',
    '',
    '',
    'templateId field',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'templateId', '395',
    '/ipfix/cache/template/templateId',
    'If omitted, the Template ID is assigned by the
monitoring device.',
    '',
    '/modules/ipfix-psamp/2008-02-20#templateId.395', 
    'leaf', 
    '/ipfix/cache/template',
    '0',
    '1',
    'uint16',
    '',
    '',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'field', '401',
    '/ipfix/cache/template/field',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#field.401', 
    'list', 
    '/ipfix/cache/template',
    '0',
    '1',
    '',
    '',
    'name ieEnterpriseNumber NameOrId ieLengthisFlowKey',
    '',
    'name',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '405',
    '/ipfix/cache/template/field/name',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.405', 
    'leaf', 
    '/ipfix/cache/template/field',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieEnterpriseNumber', '47',
    '/ipfix/cache/template/field/ieEnterpriseNumber',
    'Omitted in the case of an IETF specified Information
Elements.',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieEnterpriseNumber.47', 
    'leaf', 
    '/ipfix/cache/template/field',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'NameOrId', '53',
    '/ipfix/cache/template/field/NameOrId',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#NameOrId.53', 
    'choice', 
    '/ipfix/cache/template/field',
    '0',
    '1',
    '',
    '',
    'ieName ieId',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieName', '55',
    '/ipfix/cache/template/field/NameOrId/ieName',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieName.55', 
    'case', 
    '/ipfix/cache/template/field/NameOrId',
    '0',
    '1',
    '',
    '',
    'ieName',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieName', '55',
    '/ipfix/cache/template/field/NameOrId/ieName/ieName',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieName.55', 
    'leaf', 
    '/ipfix/cache/template/field/NameOrId/ieName',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieId', '58',
    '/ipfix/cache/template/field/NameOrId/ieId',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieId.58', 
    'case', 
    '/ipfix/cache/template/field/NameOrId',
    '0',
    '1',
    '',
    '',
    'ieId',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieId', '58',
    '/ipfix/cache/template/field/NameOrId/ieId/ieId',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieId.58', 
    'leaf', 
    '/ipfix/cache/template/field/NameOrId/ieId',
    '0',
    '1',
    'uint16',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieLength', '63',
    '/ipfix/cache/template/field/ieLength',
    'Length can be omitted if a default length exists for
the specified Information Element.',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieLength.63', 
    'leaf', 
    '/ipfix/cache/template/field',
    '0',
    '1',
    'uint16',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'isFlowKey', '409',
    '/ipfix/cache/template/field/isFlowKey',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#isFlowKey.409', 
    'leaf', 
    '/ipfix/cache/template/field',
    '0',
    '1',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'exportingProcess', '413',
    '/ipfix/cache/exportingProcess',
    'Records are exported by all Exporting Processes in the list.',
    '',
    '/modules/ipfix-psamp/2008-02-20#exportingProcess.413', 
    'leaf-list', 
    '/ipfix/cache',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '1', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'exportingProcess', '419',
    '/ipfix/exportingProcess',
    'Parameters of an Exporting Process.',
    '',
    '/modules/ipfix-psamp/2008-02-20#exportingProcess.419', 
    'list', 
    '/ipfix',
    '0',
    '1',
    '',
    '',
    'name exportingProcessId destination',
    '',
    'name',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '423',
    '/ipfix/exportingProcess/name',
    'Arbitrary but unique name of the Exporting Process.',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.423', 
    'leaf', 
    '/ipfix/exportingProcess',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'exportingProcessId', '428',
    '/ipfix/exportingProcess/exportingProcessId',
    'If omitted, the Exporting Process ID is assigned by the
monitoring device.',
    '',
    '/modules/ipfix-psamp/2008-02-20#exportingProcessId.428', 
    'leaf', 
    '/ipfix/exportingProcess',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'destination', '434',
    '/ipfix/exportingProcess/destination',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#destination.434', 
    'list', 
    '/ipfix/exportingProcess',
    '0',
    '1',
    '',
    '',
    'name type TransportProtocol option',
    '',
    'name',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '437',
    '/ipfix/exportingProcess/destination/name',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.437', 
    'leaf', 
    '/ipfix/exportingProcess/destination',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'type', '439',
    '/ipfix/exportingProcess/destination/type',
    'Transport Session type according to IPFIX-MIB',
    'draft-ietf-ipfix-mib-02.',
    '/modules/ipfix-psamp/2008-02-20#type.439', 
    'leaf', 
    '/ipfix/exportingProcess/destination',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'TransportProtocol', '451',
    '/ipfix/exportingProcess/destination/TransportProtocol',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#TransportProtocol.451', 
    'choice', 
    '/ipfix/exportingProcess/destination',
    '0',
    '1',
    '',
    '',
    'sctpExport udpExport tcpExport fileExport',
    '',
    '',
    '1', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sctpExport', '453',
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#sctpExport.453', 
    'case', 
    '/ipfix/exportingProcess/destination/TransportProtocol',
    '0',
    '1',
    '',
    '',
    'sctpExport',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sctpExport', '453',
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport/sctpExport',
    'SCTP export parameters.',
    'RFC 3758, RFC 4960.',
    '/modules/ipfix-psamp/2008-02-20#sctpExport.453', 
    'container', 
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport',
    '0',
    '1',
    '',
    '',
    'destinationIpAddress destinationTransportPort sourceIpAddress timedReliability',
    '',
    '',
    '1', '1', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'destinationIpAddress', '456',
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport/sctpExport/destinationIpAddress',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#destinationIpAddress.456', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport/sctpExport',
    '0',
    '1',
    'ip-address',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'destinationTransportPort', '460',
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport/sctpExport/destinationTransportPort',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#destinationTransportPort.460', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport/sctpExport',
    '0',
    '1',
    'port-number',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sourceIpAddress', '464',
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport/sctpExport/sourceIpAddress',
    'List of eligible local IP addresses to be used by
the SCTP endpoint. If omitted, all locally assigned IP
addresses are used by the local endpoint.',
    '',
    '/modules/ipfix-psamp/2008-02-20#sourceIpAddress.464', 
    'leaf-list', 
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport/sctpExport',
    '0',
    '1',
    'ip-address',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'timedReliability', '470',
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport/sctpExport/timedReliability',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#timedReliability.470', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/sctpExport/sctpExport',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'udpExport', '472',
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#udpExport.472', 
    'case', 
    '/ipfix/exportingProcess/destination/TransportProtocol',
    '0',
    '1',
    '',
    '',
    'udpExport',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'udpExport', '472',
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport',
    'UDP export parameters.',
    '',
    '/modules/ipfix-psamp/2008-02-20#udpExport.472', 
    'container', 
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport',
    '0',
    '1',
    '',
    '',
    'destinationIpAddress destinationTransportPort sourceIpAddress templateRefreshTimeout templateRefreshPacket optionTemplateRefreshTimeout optionTemplateRefreshPacket',
    '',
    '',
    '1', '1', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'destinationIpAddress', '474',
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport/destinationIpAddress',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#destinationIpAddress.474', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport',
    '0',
    '1',
    'ip-address',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'destinationTransportPort', '478',
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport/destinationTransportPort',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#destinationTransportPort.478', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport',
    '0',
    '1',
    'port-number',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'sourceIpAddress', '482',
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport/sourceIpAddress',
    'Source IP address. If omitted, the address
assigned to the outgoing interface is used.',
    '',
    '/modules/ipfix-psamp/2008-02-20#sourceIpAddress.482', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport',
    '0',
    '1',
    'ip-address',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'templateRefreshTimeout', '487',
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport/templateRefreshTimeout',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#templateRefreshTimeout.487', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'templateRefreshPacket', '488',
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport/templateRefreshPacket',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#templateRefreshPacket.488', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'optionTemplateRefreshTimeout', '489',
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport/optionTemplateRefreshTimeout',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#optionTemplateRefreshTimeout.489', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'optionTemplateRefreshPacket', '490',
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport/optionTemplateRefreshPacket',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#optionTemplateRefreshPacket.490', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/udpExport/udpExport',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'tcpExport', '492',
    '/ipfix/exportingProcess/destination/TransportProtocol/tcpExport',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#tcpExport.492', 
    'case', 
    '/ipfix/exportingProcess/destination/TransportProtocol',
    '0',
    '1',
    '',
    '',
    'tcpExport',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'tcpExport', '492',
    '/ipfix/exportingProcess/destination/TransportProtocol/tcpExport/tcpExport',
    'TCP export parameters.',
    '',
    '/modules/ipfix-psamp/2008-02-20#tcpExport.492', 
    'container', 
    '/ipfix/exportingProcess/destination/TransportProtocol/tcpExport',
    '0',
    '1',
    '',
    '',
    'destinationIpAddress destinationTransportPort',
    '',
    '',
    '1', '1', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'destinationIpAddress', '494',
    '/ipfix/exportingProcess/destination/TransportProtocol/tcpExport/tcpExport/destinationIpAddress',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#destinationIpAddress.494', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/tcpExport/tcpExport',
    '0',
    '1',
    'ip-address',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'destinationTransportPort', '498',
    '/ipfix/exportingProcess/destination/TransportProtocol/tcpExport/tcpExport/destinationTransportPort',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#destinationTransportPort.498', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/tcpExport/tcpExport',
    '0',
    '1',
    'port-number',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'fileExport', '503',
    '/ipfix/exportingProcess/destination/TransportProtocol/fileExport',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#fileExport.503', 
    'case', 
    '/ipfix/exportingProcess/destination/TransportProtocol',
    '0',
    '1',
    '',
    '',
    'fileExport',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'fileExport', '503',
    '/ipfix/exportingProcess/destination/TransportProtocol/fileExport/fileExport',
    'File export parameters.',
    '',
    '/modules/ipfix-psamp/2008-02-20#fileExport.503', 
    'container', 
    '/ipfix/exportingProcess/destination/TransportProtocol/fileExport',
    '0',
    '1',
    '',
    '',
    'uri',
    '',
    '',
    '1', '1', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'uri', '505',
    '/ipfix/exportingProcess/destination/TransportProtocol/fileExport/fileExport/uri',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#uri.505', 
    'leaf', 
    '/ipfix/exportingProcess/destination/TransportProtocol/fileExport/fileExport',
    '0',
    '1',
    'uri',
    '',
    '',
    '',
    '',
    '1', '1', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'option', '512',
    '/ipfix/exportingProcess/destination/option',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#option.512', 
    'list', 
    '/ipfix/exportingProcess/destination',
    '0',
    '1',
    '',
    '',
    'name type timeout optionTemplate',
    '',
    'name',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '514',
    '/ipfix/exportingProcess/destination/option/name',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.514', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'type', '515',
    '/ipfix/exportingProcess/destination/option/type',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#type.515', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'timeout', '552',
    '/ipfix/exportingProcess/destination/option/timeout',
    'Time interval for exporting option data.',
    '',
    '/modules/ipfix-psamp/2008-02-20#timeout.552', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'optionTemplate', '556',
    '/ipfix/exportingProcess/destination/option/optionTemplate',
    'If no Option Template is specified, the Exporter
defines a template according to option type and available
option data.',
    '',
    '/modules/ipfix-psamp/2008-02-20#optionTemplate.556', 
    'container', 
    '/ipfix/exportingProcess/destination/option',
    '0',
    '1',
    '',
    '',
    'templateId optionField',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'templateId', '560',
    '/ipfix/exportingProcess/destination/option/optionTemplate/templateId',
    'If omitted, the Template ID is assigned by the
monitoring device.',
    '',
    '/modules/ipfix-psamp/2008-02-20#templateId.560', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option/optionTemplate',
    '0',
    '1',
    'uint16',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'optionField', '565',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#optionField.565', 
    'list', 
    '/ipfix/exportingProcess/destination/option/optionTemplate',
    '0',
    '1',
    '',
    '',
    'name ieEnterpriseNumber NameOrId ieLengthisScope',
    '',
    'name',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'name', '568',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/name',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#name.568', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieEnterpriseNumber', '47',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/ieEnterpriseNumber',
    'Omitted in the case of an IETF specified Information
Elements.',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieEnterpriseNumber.47', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'NameOrId', '53',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/NameOrId',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#NameOrId.53', 
    'choice', 
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField',
    '0',
    '1',
    '',
    '',
    'ieName ieId',
    '',
    '',
    '0', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieName', '55',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/NameOrId/ieName',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieName.55', 
    'case', 
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/NameOrId',
    '0',
    '1',
    '',
    '',
    'ieName',
    '',
    '',
    '0', '0', '8',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieName', '55',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/NameOrId/ieName/ieName',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieName.55', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/NameOrId/ieName',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '9',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieId', '58',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/NameOrId/ieId',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieId.58', 
    'case', 
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/NameOrId',
    '0',
    '1',
    '',
    '',
    'ieId',
    '',
    '',
    '0', '0', '8',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieId', '58',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/NameOrId/ieId/ieId',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieId.58', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/NameOrId/ieId',
    '0',
    '1',
    'uint16',
    '',
    '',
    '',
    '',
    '1', '0', '9',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'ieLength', '63',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/ieLength',
    'Length can be omitted if a default length exists for
the specified Information Element.',
    '',
    '/modules/ipfix-psamp/2008-02-20#ieLength.63', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField',
    '0',
    '1',
    'uint16',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ipfix-psamp', 'ipfix-psamp', '2008-02-20', 'isScope', '570',
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField/isScope',
    '',
    '',
    '/modules/ipfix-psamp/2008-02-20#isScope.570', 
    'leaf', 
    '/ipfix/exportingProcess/destination/option/optionTemplate/optionField',
    '0',
    '1',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '7',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/RMON-MIB.yang
# module: RMON-MIB
# version: 2000-05-11
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'RMON-MIB');

INSERT INTO ncmodule VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'rmon-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:RMON-MIB',
    'IETF RMON MIB Working Group',
    'Remote network monitoring devices, often called
monitors or probes, are instruments that exist for
the purpose of managing a net...',
    'Remote network monitoring devices, often called
monitors or probes, are instruments that exist for
the purpose of managing a network. This MIB defines
objects for managing remote network monitoring devices.',
    '',
    'Steve Waldbusser
Phone: +1-650-948-6500
Fax:   +1-650-745-0671
Email: waldbusser@nextbeacon.com',
    'Reformatted into SMIv2 format.

This version published as RFC 2819.',
    '/xsd/RMON-MIB_2000-05-11.xsd',
    '/modules/RMON-MIB/2000-05-11', 
    '/src/RMON-MIB_2000-05-11.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/RMON-MIB.yang',
    'RMON-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'OwnerString', '100',
    'This data type is used to model an administratively
assigned name of the owner of a resource. Implementations
must accept values composed of well-formed NVT ASCII
sequences. In addition, implementations should accept
values composed of well-formed UTF-8 sequences.

It is suggested that this name contain one or more of
the following: IP address, management station name,
network manager\'s name, location, or phone number.
In some cases the agent itself will be the owner of
an entry.  In these cases, this string shall be set
to a string starting with \'monitor\'.

SNMP access control is articulated entirely in terms
of the contents of MIB views; access to a particular
SNMP object instance depends only upon its presence
or absence in a particular MIB view and never upon
its value or the value of related object instances.
Thus, objects of this type afford resolution of
resource contention only among cooperating
managers; they realize no access control function
with respect to uncooperative parties.',
    '',
    '/modules/RMON-MIB/2000-05-11#OwnerString.100', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'EntryStatus', '129',
    'The status of a table entry.

Setting this object to the value invalid(4) has the
effect of invalidating the corresponding entry.
That is, it effectively disassociates the mapping
identified with said entry.
It is an implementation-specific matter as to whether
the agent removes an invalidated entry from the table.
Accordingly, management stations must be prepared to
receive tabular information from agents that corresponds
to entries currently not in use.  Proper
interpretation of such entries requires examination
of the relevant EntryStatus object.

An existing instance of this object cannot be set to
createRequest(2).  This object may only be set to
createRequest(2) when this instance is created.  When
this object is created, the agent may wish to create
supplemental object instances with default values
to complete a conceptual row in this table.  Because the

creation of these default objects is entirely at the option
of the agent, the manager must not assume that any will be
created, but may make use of any that are created.
Immediately after completing the create operation, the agent
must set this object to underCreation(3).

When in the underCreation(3) state, an entry is allowed to
exist in a possibly incomplete, possibly inconsistent state,
usually to allow it to be modified in multiple PDUs.  When in
this state, an entry is not fully active.
Entries shall exist in the underCreation(3) state until
the management station is finished configuring the entry
and sets this object to valid(1) or aborts, setting this
object to invalid(4).  If the agent determines that an
entry has been in the underCreation(3) state for an
abnormally long time, it may decide that the management
station has crashed.  If the agent makes this decision,
it may set this object to invalid(4) to reclaim the
entry.  A prudent agent will understand that the
management station may need to wait for human input
and will allow for that possibility in its
determination of this abnormally long period.

An entry in the valid(1) state is fully configured and
consistent and fully represents the configuration or
operation such a row is intended to represent.  For
example, it could be a statistical function that is
configured and active, or a filter that is available
in the list of filters processed by the packet capture
process.

A manager is restricted to changing the state of an entry in
the following ways:

     To:       valid  createRequest  underCreation  invalid
From:
valid             OK             NO             OK       OK
createRequest    N/A            N/A            N/A      N/A
underCreation     OK             NO             OK       OK
invalid           NO             NO             NO       OK
nonExistent       NO             OK             NO       OK

In the table above, it is not applicable to move the state
from the createRequest state to any other state because the
manager will never find the variable in that state.  The
nonExistent state is not a value of the enumeration, rather
it means that the entryStatus variable does not exist at all.

An agent may allow an entryStatus variable to change state in
additional ways, so long as the semantics of the states are
followed.  This allowance is made to ease the implementation of
the agent and is made despite the fact that managers should
never exercise these additional state transitions.',
    '',
    '/modules/RMON-MIB/2000-05-11#EntryStatus.129', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'statistics', '213',
    '/statistics',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#statistics.213', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'etherStatsEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsEntry', '218',
    '/statistics/etherStatsEntry',
    'A collection of statistics kept for a particular
Ethernet interface.  As an example, an instance of the
etherStatsPkts object might be named etherStatsPkts.1',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsEntry.218', 
    'list', 
    '/statistics',
    '0',
    '1',
    '',
    '',
    'etherStatsIndex etherStatsDataSource etherStatsDropEvents etherStatsOctets etherStatsPkts etherStatsBroadcastPkts etherStatsMulticastPkts etherStatsCRCAlignErrors etherStatsUndersizePkts etherStatsOversizePkts etherStatsFragments etherStatsJabbers etherStatsCollisions etherStatsPkts64Octets etherStatsPkts65to127Octets etherStatsPkts128to255Octets etherStatsPkts256to511Octets etherStatsPkts512to1023Octets etherStatsPkts1024to1518Octets etherStatsOwner etherStatsStatus',
    '',
    'etherStatsIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsIndex', '228',
    '/statistics/etherStatsEntry/etherStatsIndex',
    'The value of this object uniquely identifies this
etherStats entry.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsIndex.228', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsDataSource', '239',
    '/statistics/etherStatsEntry/etherStatsDataSource',
    'This object identifies the source of the data that
this etherStats entry is configured to analyze.  This
source can be any ethernet interface on this device.
In order to identify a particular interface, this object
shall identify the instance of the ifIndex object,
defined in RFC 2233 [17], for the desired interface.
For example, if an entry were to receive data from
interface #1, this object would be set to ifIndex.1.

The statistics in this group reflect all packets
on the local network segment attached to the identified
interface.

An agent may or may not be able to tell if fundamental
changes to the media of the interface have occurred and
necessitate an invalidation of this entry.  For example, a
hot-pluggable ethernet card could be pulled out and replaced
by a token-ring card.  In such a case, if the agent has such
knowledge of the change, it is recommended that it
invalidate this entry.

This object may not be modified if the associated
etherStatsStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsDataSource.239', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsDropEvents', '269',
    '/statistics/etherStatsEntry/etherStatsDropEvents',
    'The total number of events in which packets
were dropped by the probe due to lack of resources.
Note that this number is not necessarily the number of
packets dropped; it is just the number of times this
condition has been detected.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsDropEvents.269', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsOctets', '281',
    '/statistics/etherStatsEntry/etherStatsOctets',
    'The total number of octets of data (including
those in bad packets) received on the
network (excluding framing bits but including
FCS octets).

This object can be used as a reasonable estimate of
10-Megabit ethernet utilization.  If greater precision is
desired, the etherStatsPkts and etherStatsOctets objects
should be sampled before and after a common interval.  The
differences in the sampled values are Pkts and Octets,
respectively, and the number of seconds in the interval is
Interval.  These values are used to calculate the Utilization
as follows:

		 Pkts * (9.6 + 6.4) + (Octets * .8)
 Utilization = -------------------------------------
			 Interval * 10,000

The result of this equation is the value Utilization which
is the percent utilization of the ethernet segment on a
scale of 0 to 100 percent.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsOctets.281', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsPkts', '310',
    '/statistics/etherStatsEntry/etherStatsPkts',
    'The total number of packets (including bad packets,
broadcast packets, and multicast packets) received.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsPkts.310', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsBroadcastPkts', '320',
    '/statistics/etherStatsEntry/etherStatsBroadcastPkts',
    'The total number of good packets received that were
directed to the broadcast address.  Note that this
does not include multicast packets.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsBroadcastPkts.320', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsMulticastPkts', '331',
    '/statistics/etherStatsEntry/etherStatsMulticastPkts',
    'The total number of good packets received that were
directed to a multicast address.  Note that this number
does not include packets directed to the broadcast

address.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsMulticastPkts.331', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsCRCAlignErrors', '344',
    '/statistics/etherStatsEntry/etherStatsCRCAlignErrors',
    'The total number of packets received that
had a length (excluding framing bits, but
including FCS octets) of between 64 and 1518
octets, inclusive, but had either a bad
Frame Check Sequence (FCS) with an integral
number of octets (FCS Error) or a bad FCS with
a non-integral number of octets (Alignment Error).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsCRCAlignErrors.344', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsUndersizePkts', '359',
    '/statistics/etherStatsEntry/etherStatsUndersizePkts',
    'The total number of packets received that were
less than 64 octets long (excluding framing bits,
but including FCS octets) and were otherwise well
formed.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsUndersizePkts.359', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsOversizePkts', '371',
    '/statistics/etherStatsEntry/etherStatsOversizePkts',
    'The total number of packets received that were
longer than 1518 octets (excluding framing bits,
but including FCS octets) and were otherwise
well formed.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsOversizePkts.371', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsFragments', '383',
    '/statistics/etherStatsEntry/etherStatsFragments',
    'The total number of packets received that were less than
64 octets in length (excluding framing bits but including
FCS octets) and had either a bad Frame Check Sequence
(FCS) with an integral number of octets (FCS Error) or a
bad FCS with a non-integral number of octets (Alignment
Error).

Note that it is entirely normal for etherStatsFragments to
increment.  This is because it counts both runts (which are
normal occurrences due to collisions) and noise hits.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsFragments.383', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsJabbers', '401',
    '/statistics/etherStatsEntry/etherStatsJabbers',
    'The total number of packets received that were
longer than 1518 octets (excluding framing bits,
but including FCS octets), and had either a bad
Frame Check Sequence (FCS) with an integral number
of octets (FCS Error) or a bad FCS with a non-integral
number of octets (Alignment Error).

Note that this definition of jabber is different
than the definition in IEEE-802.3 section 8.2.1.5
(10BASE5) and section 10.3.1.4 (10BASE2).  These
documents define jabber as the condition where any
packet exceeds 20 ms.  The allowed range to detect
jabber is between 20 ms and 150 ms.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsJabbers.401', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsCollisions', '422',
    '/statistics/etherStatsEntry/etherStatsCollisions',
    'The best estimate of the total number of collisions
on this Ethernet segment.

The value returned will depend on the location of the
RMON probe. Section 8.2.1.3 (10BASE-5) and section
10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a
station must detect a collision, in the receive mode, if
three or more stations are transmitting simultaneously.  A
repeater port must detect a collision when two or more

stations are transmitting simultaneously.  Thus a probe
placed on a repeater port could record more collisions
than a probe connected to a station on the same segment
would.

Probe location plays a much smaller role when considering
10BASE-T.  14.2.1.4 (10BASE-T) of IEEE standard 802.3
defines a collision as the simultaneous presence of signals
on the DO and RD circuits (transmitting and receiving
at the same time).  A 10BASE-T station can only detect
collisions when it is transmitting.  Thus probes placed on
a station and a repeater, should report the same number of
collisions.

Note also that an RMON probe inside a repeater should
ideally report collisions between the repeater and one or
more other hosts (transmit collisions as defined by IEEE
802.3k) plus receiver collisions observed on any coax
segments to which the repeater is connected.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsCollisions.422', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsPkts64Octets', '459',
    '/statistics/etherStatsEntry/etherStatsPkts64Octets',
    'The total number of packets (including bad
packets) received that were 64 octets in length
(excluding framing bits but including FCS octets).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsPkts64Octets.459', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsPkts65to127Octets', '470',
    '/statistics/etherStatsEntry/etherStatsPkts65to127Octets',
    'The total number of packets (including bad
packets) received that were between
65 and 127 octets in length inclusive
(excluding framing bits but including FCS octets).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsPkts65to127Octets.470', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsPkts128to255Octets', '482',
    '/statistics/etherStatsEntry/etherStatsPkts128to255Octets',
    'The total number of packets (including bad
packets) received that were between
128 and 255 octets in length inclusive
(excluding framing bits but including FCS octets).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsPkts128to255Octets.482', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsPkts256to511Octets', '494',
    '/statistics/etherStatsEntry/etherStatsPkts256to511Octets',
    'The total number of packets (including bad
packets) received that were between
256 and 511 octets in length inclusive
(excluding framing bits but including FCS octets).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsPkts256to511Octets.494', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsPkts512to1023Octets', '506',
    '/statistics/etherStatsEntry/etherStatsPkts512to1023Octets',
    'The total number of packets (including bad
packets) received that were between
512 and 1023 octets in length inclusive
(excluding framing bits but including FCS octets).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsPkts512to1023Octets.506', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsPkts1024to1518Octets', '518',
    '/statistics/etherStatsEntry/etherStatsPkts1024to1518Octets',
    'The total number of packets (including bad
packets) received that were between
1024 and 1518 octets in length inclusive
(excluding framing bits but including FCS octets).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsPkts1024to1518Octets.518', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsOwner', '530',
    '/statistics/etherStatsEntry/etherStatsOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsOwner.530', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherStatsStatus', '539',
    '/statistics/etherStatsEntry/etherStatsStatus',
    'The status of this etherStats entry.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherStatsStatus.539', 
    'leaf', 
    '/statistics/etherStatsEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'history', '550',
    '/history',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#history.550', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'historyControlEntry etherHistoryEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'historyControlEntry', '555',
    '/history/historyControlEntry',
    'A list of parameters that set up a periodic sampling of
statistics.  As an example, an instance of the
historyControlInterval object might be named
historyControlInterval.2',
    '',
    '/modules/RMON-MIB/2000-05-11#historyControlEntry.555', 
    'list', 
    '/history',
    '0',
    '1',
    '',
    '',
    'historyControlIndex historyControlDataSource historyControlBucketsRequested historyControlBucketsGranted historyControlInterval historyControlOwner historyControlStatus',
    '',
    'historyControlIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'historyControlIndex', '566',
    '/history/historyControlEntry/historyControlIndex',
    'An index that uniquely identifies an entry in the
historyControl table.  Each such entry defines a
set of samples at a particular interval for an
interface on the device.',
    '',
    '/modules/RMON-MIB/2000-05-11#historyControlIndex.566', 
    'leaf', 
    '/history/historyControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'historyControlDataSource', '579',
    '/history/historyControlEntry/historyControlDataSource',
    'This object identifies the source of the data for
which historical data was collected and
placed in a media-specific table on behalf of this
historyControlEntry.  This source can be any
interface on this device.  In order to identify

a particular interface, this object shall identify
the instance of the ifIndex object, defined
in  RFC 2233 [17], for the desired interface.
For example, if an entry were to receive data from
interface #1, this object would be set to ifIndex.1.

The statistics in this group reflect all packets
on the local network segment attached to the identified
interface.

An agent may or may not be able to tell if fundamental
changes to the media of the interface have occurred and
necessitate an invalidation of this entry.  For example, a
hot-pluggable ethernet card could be pulled out and replaced
by a token-ring card.  In such a case, if the agent has such
knowledge of the change, it is recommended that it
invalidate this entry.

This object may not be modified if the associated
historyControlStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#historyControlDataSource.579', 
    'leaf', 
    '/history/historyControlEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'historyControlBucketsRequested', '612',
    '/history/historyControlEntry/historyControlBucketsRequested',
    'The requested number of discrete time intervals
over which data is to be saved in the part of the
media-specific table associated with this
historyControlEntry.

When this object is created or modified, the probe
should set historyControlBucketsGranted as closely to
this object as is possible for the particular probe
implementation and available resources.',
    '',
    '/modules/RMON-MIB/2000-05-11#historyControlBucketsRequested.612', 
    'leaf', 
    '/history/historyControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'historyControlBucketsGranted', '631',
    '/history/historyControlEntry/historyControlBucketsGranted',
    'The number of discrete sampling intervals
over which data shall be saved in the part of
the media-specific table associated with this
historyControlEntry.

When the associated historyControlBucketsRequested
object is created or modified, the probe
should set this object as closely to the requested
value as is possible for the particular
probe implementation and available resources.  The
probe must not lower this value except as a result
of a modification to the associated
historyControlBucketsRequested object.

There will be times when the actual number of
buckets associated with this entry is less than
the value of this object.  In this case, at the
end of each sampling interval, a new bucket will
be added to the media-specific table.

When the number of buckets reaches the value of
this object and a new bucket is to be added to the
media-specific table, the oldest bucket associated
with this historyControlEntry shall be deleted by
the agent so that the new bucket can be added.

When the value of this object changes to a value less
than the current value, entries are deleted
from the media-specific table associated with this
historyControlEntry.  Enough of the oldest of these
entries shall be deleted by the agent so that their
number remains less than or equal to the new value of
this object.

When the value of this object changes to a value greater
than the current value, the number of associated media-
specific entries may be allowed to grow.',
    '',
    '/modules/RMON-MIB/2000-05-11#historyControlBucketsGranted.631', 
    'leaf', 
    '/history/historyControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'historyControlInterval', '677',
    '/history/historyControlEntry/historyControlInterval',
    'The interval in seconds over which the data is
sampled for each bucket in the part of the
media-specific table associated with this
historyControlEntry.  This interval can
be set to any number of seconds between 1 and
3600 (1 hour).

Because the counters in a bucket may overflow at their

maximum value with no indication, a prudent manager will
take into account the possibility of overflow in any of
the associated counters.  It is important to consider the
minimum time in which any counter could overflow on a
particular media type and set the historyControlInterval
object to a value less than this interval.  This is
typically most important for the \'octets\' counter in any
media-specific table.  For example, on an Ethernet
network, the etherHistoryOctets counter could overflow
in about one hour at the Ethernet\'s maximum
utilization.

This object may not be modified if the associated
historyControlStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#historyControlInterval.677', 
    'leaf', 
    '/history/historyControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'historyControlOwner', '711',
    '/history/historyControlEntry/historyControlOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.',
    '',
    '/modules/RMON-MIB/2000-05-11#historyControlOwner.711', 
    'leaf', 
    '/history/historyControlEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'historyControlStatus', '720',
    '/history/historyControlEntry/historyControlStatus',
    'The status of this historyControl entry.

Each instance of the media-specific table associated
with this historyControlEntry will be deleted by the agent
if this historyControlEntry is not equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#historyControlStatus.720', 
    'leaf', 
    '/history/historyControlEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryEntry', '736',
    '/history/etherHistoryEntry',
    'An historical sample of Ethernet statistics on a particular
Ethernet interface.  This sample is associated with the
historyControlEntry which set up the parameters for
a regular collection of these samples.  As an example, an
instance of the etherHistoryPkts object might be named
etherHistoryPkts.2.89',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryEntry.736', 
    'list', 
    '/history',
    '0',
    '1',
    '',
    '',
    'etherHistoryIndex etherHistorySampleIndex etherHistoryIntervalStart etherHistoryDropEvents etherHistoryOctets etherHistoryPkts etherHistoryBroadcastPkts etherHistoryMulticastPkts etherHistoryCRCAlignErrors etherHistoryUndersizePkts etherHistoryOversizePkts etherHistoryFragments etherHistoryJabbers etherHistoryCollisions etherHistoryUtilization',
    '',
    'etherHistoryIndex etherHistorySampleIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryIndex', '749',
    '/history/etherHistoryEntry/etherHistoryIndex',
    'The history of which this entry is a part.  The
history identified by a particular value of this
index is the same history as identified
by the same value of historyControlIndex.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryIndex.749', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistorySampleIndex', '762',
    '/history/etherHistoryEntry/etherHistorySampleIndex',
    'An index that uniquely identifies the particular
sample this entry represents among all samples
associated with the same historyControlEntry.
This index starts at 1 and increases by one
as each new sample is taken.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistorySampleIndex.762', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryIntervalStart', '776',
    '/history/etherHistoryEntry/etherHistoryIntervalStart',
    'The value of sysUpTime at the start of the interval
over which this sample was measured.  If the probe
keeps track of the time of day, it should start
the first sample of the history at a time such that
when the next hour of the day begins, a sample is
started at that instant.  Note that following this
rule may require the probe to delay collecting the
first sample of the history, as each sample must be
of the same interval.  Also note that the sample which
is currently being collected is not accessible in this
table until the end of its interval.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryIntervalStart.776', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryDropEvents', '794',
    '/history/etherHistoryEntry/etherHistoryDropEvents',
    'The total number of events in which packets
were dropped by the probe due to lack of resources
during this sampling interval.  Note that this number
is not necessarily the number of packets dropped, it
is just the number of times this condition has been

detected.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryDropEvents.794', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryOctets', '808',
    '/history/etherHistoryEntry/etherHistoryOctets',
    'The total number of octets of data (including
those in bad packets) received on the
network (excluding framing bits but including
FCS octets).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryOctets.808', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryPkts', '820',
    '/history/etherHistoryEntry/etherHistoryPkts',
    'The number of packets (including bad packets)
received during this sampling interval.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryPkts.820', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryBroadcastPkts', '830',
    '/history/etherHistoryEntry/etherHistoryBroadcastPkts',
    'The number of good packets received during this
sampling interval that were directed to the
broadcast address.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryBroadcastPkts.830', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryMulticastPkts', '841',
    '/history/etherHistoryEntry/etherHistoryMulticastPkts',
    'The number of good packets received during this
sampling interval that were directed to a
multicast address.  Note that this number does not
include packets addressed to the broadcast address.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryMulticastPkts.841', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryCRCAlignErrors', '853',
    '/history/etherHistoryEntry/etherHistoryCRCAlignErrors',
    'The number of packets received during this
sampling interval that had a length (excluding
framing bits but including FCS octets) between
64 and 1518 octets, inclusive, but had either a bad Frame
Check Sequence (FCS) with an integral number of octets
(FCS Error) or a bad FCS with a non-integral number
of octets (Alignment Error).',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryCRCAlignErrors.853', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryUndersizePkts', '868',
    '/history/etherHistoryEntry/etherHistoryUndersizePkts',
    'The number of packets received during this
sampling interval that were less than 64 octets
long (excluding framing bits but including FCS
octets) and were otherwise well formed.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryUndersizePkts.868', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryOversizePkts', '880',
    '/history/etherHistoryEntry/etherHistoryOversizePkts',
    'The number of packets received during this
sampling interval that were longer than 1518
octets (excluding framing bits but including
FCS octets) but were otherwise well formed.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryOversizePkts.880', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryFragments', '892',
    '/history/etherHistoryEntry/etherHistoryFragments',
    'The total number of packets received during this
sampling interval that were less than 64 octets in
length (excluding framing bits but including FCS

octets) had either a bad Frame Check Sequence (FCS)
with an integral number of octets (FCS Error) or a bad
FCS with a non-integral number of octets (Alignment
Error).

Note that it is entirely normal for etherHistoryFragments to
increment.  This is because it counts both runts (which are
normal occurrences due to collisions) and noise hits.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryFragments.892', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryJabbers', '912',
    '/history/etherHistoryEntry/etherHistoryJabbers',
    'The number of packets received during this
sampling interval that were longer than 1518 octets
(excluding framing bits but including FCS octets),
and  had either a bad Frame Check Sequence (FCS)
with an integral number of octets (FCS Error) or
a bad FCS with a non-integral number of octets
(Alignment Error).

Note that this definition of jabber is different
than the definition in IEEE-802.3 section 8.2.1.5
(10BASE5) and section 10.3.1.4 (10BASE2).  These
documents define jabber as the condition where any
packet exceeds 20 ms.  The allowed range to detect
jabber is between 20 ms and 150 ms.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryJabbers.912', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryCollisions', '934',
    '/history/etherHistoryEntry/etherHistoryCollisions',
    'The best estimate of the total number of collisions
on this Ethernet segment during this sampling
interval.

The value returned will depend on the location of the
RMON probe. Section 8.2.1.3 (10BASE-5) and section
10.3.1.3 (10BASE-2) of IEEE standard 802.3 states that a
station must detect a collision, in the receive mode, if
three or more stations are transmitting simultaneously.  A
repeater port must detect a collision when two or more

stations are transmitting simultaneously.  Thus a probe
placed on a repeater port could record more collisions
than a probe connected to a station on the same segment
would.

Probe location plays a much smaller role when considering
10BASE-T.  14.2.1.4 (10BASE-T) of IEEE standard 802.3
defines a collision as the simultaneous presence of signals
on the DO and RD circuits (transmitting and receiving
at the same time).  A 10BASE-T station can only detect
collisions when it is transmitting.  Thus probes placed on
a station and a repeater, should report the same number of
collisions.

Note also that an RMON probe inside a repeater should
ideally report collisions between the repeater and one or
more other hosts (transmit collisions as defined by IEEE
802.3k) plus receiver collisions observed on any coax
segments to which the repeater is connected.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryCollisions.934', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'etherHistoryUtilization', '972',
    '/history/etherHistoryEntry/etherHistoryUtilization',
    'The best estimate of the mean physical layer
network utilization on this interface during this
sampling interval, in hundredths of a percent.',
    '',
    '/modules/RMON-MIB/2000-05-11#etherHistoryUtilization.972', 
    'leaf', 
    '/history/etherHistoryEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarm', '987',
    '/alarm',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#alarm.987', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'alarmEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmEntry', '992',
    '/alarm/alarmEntry',
    'A list of parameters that set up a periodic checking
for alarm conditions.  For example, an instance of the
alarmValue object might be named alarmValue.8',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmEntry.992', 
    'list', 
    '/alarm',
    '0',
    '1',
    '',
    '',
    'alarmIndex alarmInterval alarmVariable alarmSampleType alarmValue alarmStartupAlarm alarmRisingThreshold alarmFallingThreshold alarmRisingEventIndex alarmFallingEventIndex alarmOwner alarmStatus',
    '',
    'alarmIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '1002',
    '/alarm/alarmEntry/alarmIndex',
    'An index that uniquely identifies an entry in the
alarm table.  Each such entry defines a
diagnostic sample at a particular interval
for an object on the device.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.1002', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmInterval', '1015',
    '/alarm/alarmEntry/alarmInterval',
    'The interval in seconds over which the data is
sampled and compared with the rising and falling
thresholds.  When setting this variable, care
should be taken in the case of deltaValue
sampling - the interval should be set short enough
that the sampled variable is very unlikely to
increase or decrease by more than 2^31 - 1 during
a single sampling interval.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmInterval.1015', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmVariable', '1034',
    '/alarm/alarmEntry/alarmVariable',
    'The object identifier of the particular variable to be
sampled.  Only variables that resolve to an ASN.1 primitive
type of INTEGER (INTEGER, Integer32, Counter32, Counter64,
Gauge, or TimeTicks) may be sampled.

Because SNMP access control is articulated entirely
in terms of the contents of MIB views, no access
control mechanism exists that can restrict the value of
this object to identify only those objects that exist
in a particular MIB view.  Because there is thus no
acceptable means of restricting the read access that
could be obtained through the alarm mechanism, the
probe must only grant write access to this object in

those views that have read access to all objects on
the probe.

During a set operation, if the supplied variable name is
not available in the selected MIB view, a badValue error
must be returned.  If at any time the variable name of
an established alarmEntry is no longer available in the
selected MIB view, the probe must change the status of
this alarmEntry to invalid(4).

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmVariable.1034', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmSampleType', '1067',
    '/alarm/alarmEntry/alarmSampleType',
    'The method of sampling the selected variable and
calculating the value to be compared against the
thresholds.  If the value of this object is
absoluteValue(1), the value of the selected variable
will be compared directly with the thresholds at the
end of the sampling interval.  If the value of this
object is deltaValue(2), the value of the selected
variable at the last sample will be subtracted from
the current value, and the difference compared with
the thresholds.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmSampleType.1067', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmValue', '1090',
    '/alarm/alarmEntry/alarmValue',
    'The value of the statistic during the last sampling
period.  For example, if the sample type is deltaValue,
this value will be the difference between the samples
at the beginning and end of the period.  If the sample
type is absoluteValue, this value will be the sampled
value at the end of the period.

This is the value that is compared with the rising and
falling thresholds.

The value during the current sampling period is not
made available until the period is completed and will
remain available until the next period completes.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmValue.1090', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmStartupAlarm', '1110',
    '/alarm/alarmEntry/alarmStartupAlarm',
    'The alarm that may be sent when this entry is first
set to valid.  If the first sample after this entry
becomes valid is greater than or equal to the
risingThreshold and alarmStartupAlarm is equal to
risingAlarm(1) or risingOrFallingAlarm(3), then a single
rising alarm will be generated.  If the first sample
after this entry becomes valid is less than or equal
to the fallingThreshold and alarmStartupAlarm is equal
to fallingAlarm(2) or risingOrFallingAlarm(3), then a
single falling alarm will be generated.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmStartupAlarm.1110', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmRisingThreshold', '1134',
    '/alarm/alarmEntry/alarmRisingThreshold',
    'A threshold for the sampled statistic.  When the current
sampled value is greater than or equal to this threshold,
and the value at the last sampling interval was less than
this threshold, a single event will be generated.
A single event will also be generated if the first
sample after this entry becomes valid is greater than or
equal to this threshold and the associated
alarmStartupAlarm is equal to risingAlarm(1) or
risingOrFallingAlarm(3).

After a rising event is generated, another such event

will not be generated until the sampled value
falls below this threshold and reaches the
alarmFallingThreshold.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmRisingThreshold.1134', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmFallingThreshold', '1159',
    '/alarm/alarmEntry/alarmFallingThreshold',
    'A threshold for the sampled statistic.  When the current
sampled value is less than or equal to this threshold,
and the value at the last sampling interval was greater than
this threshold, a single event will be generated.
A single event will also be generated if the first
sample after this entry becomes valid is less than or
equal to this threshold and the associated
alarmStartupAlarm is equal to fallingAlarm(2) or
risingOrFallingAlarm(3).

After a falling event is generated, another such event
will not be generated until the sampled value
rises above this threshold and reaches the
alarmRisingThreshold.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmFallingThreshold.1159', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmRisingEventIndex', '1183',
    '/alarm/alarmEntry/alarmRisingEventIndex',
    'The index of the eventEntry that is
used when a rising threshold is crossed.  The
eventEntry identified by a particular value of
this index is the same as identified by the same value
of the eventIndex object.  If there is no
corresponding entry in the eventTable, then
no association exists.  In particular, if this value
is zero, no associated event will be generated, as
zero is not a valid event index.

This object may not be modified if the associated

alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmRisingEventIndex.1183', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmFallingEventIndex', '1205',
    '/alarm/alarmEntry/alarmFallingEventIndex',
    'The index of the eventEntry that is
used when a falling threshold is crossed.  The
eventEntry identified by a particular value of
this index is the same as identified by the same value
of the eventIndex object.  If there is no
corresponding entry in the eventTable, then
no association exists.  In particular, if this value
is zero, no associated event will be generated, as
zero is not a valid event index.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmFallingEventIndex.1205', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmOwner', '1226',
    '/alarm/alarmEntry/alarmOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmOwner.1226', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmStatus', '1235',
    '/alarm/alarmEntry/alarmStatus',
    'The status of this alarm entry.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmStatus.1235', 
    'leaf', 
    '/alarm/alarmEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hosts', '1246',
    '/hosts',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#hosts.1246', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'hostControlEntry hostEntry hostTimeEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostControlEntry', '1251',
    '/hosts/hostControlEntry',
    'A list of parameters that set up the discovery of hosts
on a particular interface and the collection of statistics
about these hosts.  For example, an instance of the
hostControlTableSize object might be named
hostControlTableSize.1',
    '',
    '/modules/RMON-MIB/2000-05-11#hostControlEntry.1251', 
    'list', 
    '/hosts',
    '0',
    '1',
    '',
    '',
    'hostControlIndex hostControlDataSource hostControlTableSize hostControlLastDeleteTime hostControlOwner hostControlStatus',
    '',
    'hostControlIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostControlIndex', '1263',
    '/hosts/hostControlEntry/hostControlIndex',
    'An index that uniquely identifies an entry in the

hostControl table.  Each such entry defines
a function that discovers hosts on a particular interface
and places statistics about them in the hostTable and
the hostTimeTable on behalf of this hostControlEntry.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostControlIndex.1263', 
    'leaf', 
    '/hosts/hostControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostControlDataSource', '1278',
    '/hosts/hostControlEntry/hostControlDataSource',
    'This object identifies the source of the data for
this instance of the host function.  This source
can be any interface on this device.  In order
to identify a particular interface, this object shall
identify the instance of the ifIndex object, defined
in RFC 2233 [17], for the desired interface.
For example, if an entry were to receive data from
interface #1, this object would be set to ifIndex.1.

The statistics in this group reflect all packets
on the local network segment attached to the identified
interface.

An agent may or may not be able to tell if fundamental
changes to the media of the interface have occurred and
necessitate an invalidation of this entry.  For example, a
hot-pluggable ethernet card could be pulled out and replaced
by a token-ring card.  In such a case, if the agent has such
knowledge of the change, it is recommended that it
invalidate this entry.

This object may not be modified if the associated
hostControlStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#hostControlDataSource.1278', 
    'leaf', 
    '/hosts/hostControlEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostControlTableSize', '1308',
    '/hosts/hostControlEntry/hostControlTableSize',
    'The number of hostEntries in the hostTable and the
hostTimeTable associated with this hostControlEntry.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostControlTableSize.1308', 
    'leaf', 
    '/hosts/hostControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostControlLastDeleteTime', '1317',
    '/hosts/hostControlEntry/hostControlLastDeleteTime',
    'The value of sysUpTime when the last entry
was deleted from the portion of the hostTable
associated with this hostControlEntry.  If no
deletions have occurred, this value shall be zero.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostControlLastDeleteTime.1317', 
    'leaf', 
    '/hosts/hostControlEntry',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostControlOwner', '1328',
    '/hosts/hostControlEntry/hostControlOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostControlOwner.1328', 
    'leaf', 
    '/hosts/hostControlEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostControlStatus', '1337',
    '/hosts/hostControlEntry/hostControlStatus',
    'The status of this hostControl entry.

If this object is not equal to valid(1), all associated
entries in the hostTable, hostTimeTable, and the
hostTopNTable shall be deleted by the agent.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostControlStatus.1337', 
    'leaf', 
    '/hosts/hostControlEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostEntry', '1353',
    '/hosts/hostEntry',
    'A collection of statistics for a particular host that has
been discovered on an interface of this device.  For example,
an instance of the hostOutBroadcastPkts object might be
named hostOutBroadcastPkts.1.6.8.0.32.27.3.176',
    '',
    '/modules/RMON-MIB/2000-05-11#hostEntry.1353', 
    'list', 
    '/hosts',
    '0',
    '1',
    '',
    '',
    'hostAddress hostCreationOrder hostIndex hostInPkts hostOutPkts hostInOctets hostOutOctets hostOutErrors hostOutBroadcastPkts hostOutMulticastPkts',
    '',
    'hostIndex hostAddress',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostAddress', '1364',
    '/hosts/hostEntry/hostAddress',
    'The physical address of this host.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostAddress.1364', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostCreationOrder', '1372',
    '/hosts/hostEntry/hostCreationOrder',
    'An index that defines the relative ordering of
the creation time of hosts captured for a
particular hostControlEntry.  This index shall
be between 1 and N, where N is the value of
the associated hostControlTableSize.  The ordering
of the indexes is based on the order of each entry\'s
insertion into the table, in which entries added earlier
have a lower index value than entries added later.

It is important to note that the order for a
particular entry may change as an (earlier) entry
is deleted from the table.  Because this order may
change, management stations should make use of the
hostControlLastDeleteTime variable in the
hostControlEntry associated with the relevant
portion of the hostTable.  By observing
this variable, the management station may detect
the circumstances where a previous association
between a value of hostCreationOrder
and a hostEntry may no longer hold.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostCreationOrder.1372', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostIndex', '1401',
    '/hosts/hostEntry/hostIndex',
    'The set of collected host statistics of which
this entry is a part.  The set of hosts
identified by a particular value of this
index is associated with the hostControlEntry
as identified by the same value of hostControlIndex.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostIndex.1401', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostInPkts', '1415',
    '/hosts/hostEntry/hostInPkts',
    'The number of good packets transmitted to this
address since it was added to the hostTable.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostInPkts.1415', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostOutPkts', '1425',
    '/hosts/hostEntry/hostOutPkts',
    'The number of packets, including bad packets, transmitted
by this address since it was added to the hostTable.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostOutPkts.1425', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostInOctets', '1435',
    '/hosts/hostEntry/hostInOctets',
    'The number of octets transmitted to this address since
it was added to the hostTable (excluding framing
bits but including FCS octets), except for those
octets in bad packets.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostInOctets.1435', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostOutOctets', '1447',
    '/hosts/hostEntry/hostOutOctets',
    'The number of octets transmitted by this address since
it was added to the hostTable (excluding framing
bits but including FCS octets), including those
octets in bad packets.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostOutOctets.1447', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostOutErrors', '1459',
    '/hosts/hostEntry/hostOutErrors',
    'The number of bad packets transmitted by this address
since this host was added to the hostTable.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostOutErrors.1459', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostOutBroadcastPkts', '1469',
    '/hosts/hostEntry/hostOutBroadcastPkts',
    'The number of good packets transmitted by this
address that were directed to the broadcast address
since this host was added to the hostTable.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostOutBroadcastPkts.1469', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostOutMulticastPkts', '1480',
    '/hosts/hostEntry/hostOutMulticastPkts',
    'The number of good packets transmitted by this
address that were directed to a multicast address
since this host was added to the hostTable.
Note that this number does not include packets
directed to the broadcast address.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostOutMulticastPkts.1480', 
    'leaf', 
    '/hosts/hostEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeEntry', '1497',
    '/hosts/hostTimeEntry',
    'A collection of statistics for a particular host that has
been discovered on an interface of this device.  This
collection includes the relative ordering of the creation
time of this object.  For example, an instance of the
hostTimeOutBroadcastPkts object might be named
hostTimeOutBroadcastPkts.1.687',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeEntry.1497', 
    'list', 
    '/hosts',
    '0',
    '1',
    '',
    '',
    'hostTimeAddress hostTimeCreationOrder hostTimeIndex hostTimeInPkts hostTimeOutPkts hostTimeInOctets hostTimeOutOctets hostTimeOutErrors hostTimeOutBroadcastPkts hostTimeOutMulticastPkts',
    '',
    'hostTimeIndex hostTimeCreationOrder',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeAddress', '1510',
    '/hosts/hostTimeEntry/hostTimeAddress',
    'The physical address of this host.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeAddress.1510', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeCreationOrder', '1518',
    '/hosts/hostTimeEntry/hostTimeCreationOrder',
    'An index that uniquely identifies an entry in
the hostTime table among those entries associated
with the same hostControlEntry.  This index shall
be between 1 and N, where N is the value of

the associated hostControlTableSize.  The ordering
of the indexes is based on the order of each entry\'s
insertion into the table, in which entries added earlier
have a lower index value than entries added later.
Thus the management station has the ability to
learn of new entries added to this table without
downloading the entire table.

It is important to note that the index for a
particular entry may change as an (earlier) entry
is deleted from the table.  Because this order may
change, management stations should make use of the
hostControlLastDeleteTime variable in the
hostControlEntry associated with the relevant
portion of the hostTimeTable.  By observing
this variable, the management station may detect
the circumstances where a download of the table
may have missed entries, and where a previous
association between a value of hostTimeCreationOrder
and a hostTimeEntry may no longer hold.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeCreationOrder.1518', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeIndex', '1552',
    '/hosts/hostTimeEntry/hostTimeIndex',
    'The set of collected host statistics of which
this entry is a part.  The set of hosts
identified by a particular value of this
index is associated with the hostControlEntry
as identified by the same value of hostControlIndex.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeIndex.1552', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeInPkts', '1566',
    '/hosts/hostTimeEntry/hostTimeInPkts',
    'The number of good packets transmitted to this
address since it was added to the hostTimeTable.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeInPkts.1566', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeOutPkts', '1576',
    '/hosts/hostTimeEntry/hostTimeOutPkts',
    'The number of packets, including bad packets, transmitted
by this address since it was added to the hostTimeTable.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeOutPkts.1576', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeInOctets', '1586',
    '/hosts/hostTimeEntry/hostTimeInOctets',
    'The number of octets transmitted to this address since
it was added to the hostTimeTable (excluding framing
bits but including FCS octets), except for those
octets in bad packets.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeInOctets.1586', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeOutOctets', '1598',
    '/hosts/hostTimeEntry/hostTimeOutOctets',
    'The number of octets transmitted by this address since
it was added to the hostTimeTable (excluding framing
bits but including FCS octets), including those
octets in bad packets.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeOutOctets.1598', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeOutErrors', '1610',
    '/hosts/hostTimeEntry/hostTimeOutErrors',
    'The number of bad packets transmitted by this address
since this host was added to the hostTimeTable.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeOutErrors.1610', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeOutBroadcastPkts', '1620',
    '/hosts/hostTimeEntry/hostTimeOutBroadcastPkts',
    'The number of good packets transmitted by this
address that were directed to the broadcast address

since this host was added to the hostTimeTable.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeOutBroadcastPkts.1620', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTimeOutMulticastPkts', '1632',
    '/hosts/hostTimeEntry/hostTimeOutMulticastPkts',
    'The number of good packets transmitted by this
address that were directed to a multicast address
since this host was added to the hostTimeTable.
Note that this number does not include packets directed
to the broadcast address.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTimeOutMulticastPkts.1632', 
    'leaf', 
    '/hosts/hostTimeEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopN', '1648',
    '/hostTopN',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopN.1648', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'hostTopNControlEntry hostTopNEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNControlEntry', '1653',
    '/hostTopN/hostTopNControlEntry',
    'A set of parameters that control the creation of a report
of the top N hosts according to several metrics.  For
example, an instance of the hostTopNDuration object might
be named hostTopNDuration.3',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNControlEntry.1653', 
    'list', 
    '/hostTopN',
    '0',
    '1',
    '',
    '',
    'hostTopNControlIndex hostTopNHostIndex hostTopNRateBase hostTopNTimeRemaining hostTopNDuration hostTopNRequestedSize hostTopNGrantedSize hostTopNStartTime hostTopNOwner hostTopNStatus',
    '',
    'hostTopNControlIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNControlIndex', '1664',
    '/hostTopN/hostTopNControlEntry/hostTopNControlIndex',
    'An index that uniquely identifies an entry
in the hostTopNControl table.  Each such
entry defines one top N report prepared for
one interface.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNControlIndex.1664', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNHostIndex', '1677',
    '/hostTopN/hostTopNControlEntry/hostTopNHostIndex',
    'The host table for which a top N report will be prepared
on behalf of this entry.  The host table identified by a
particular value of this index is associated with the same
host table as identified by the same value of
hostIndex.

This object may not be modified if the associated
hostTopNStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNHostIndex.1677', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNRateBase', '1694',
    '/hostTopN/hostTopNControlEntry/hostTopNRateBase',
    'The variable for each host that the hostTopNRate
variable is based upon.

This object may not be modified if the associated
hostTopNStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNRateBase.1694', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNTimeRemaining', '1714',
    '/hostTopN/hostTopNControlEntry/hostTopNTimeRemaining',
    'The number of seconds left in the report currently being
collected.  When this object is modified by the management
station, a new collection is started, possibly aborting
a currently running report.  The new value is used
as the requested duration of this report, which is
loaded into the associated hostTopNDuration object.

When this object is set to a non-zero value, any
associated hostTopNEntries shall be made
inaccessible by the monitor.  While the value of this
object is non-zero, it decrements by one per second until
it reaches zero.  During this time, all associated
hostTopNEntries shall remain inaccessible.  At the time
that this object decrements to zero, the report is made
accessible in the hostTopNTable.  Thus, the hostTopN
table needs to be created only at the end of the collection
interval.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNTimeRemaining.1714', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNDuration', '1740',
    '/hostTopN/hostTopNControlEntry/hostTopNDuration',
    'The number of seconds that this report has collected
during the last sampling interval, or if this
report is currently being collected, the number
of seconds that this report is being collected
during this sampling interval.

When the associated hostTopNTimeRemaining object is set,
this object shall be set by the probe to the same value
and shall not be modified until the next time
the hostTopNTimeRemaining is set.

This value shall be zero if no reports have been
requested for this hostTopNControlEntry.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNDuration.1740', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNRequestedSize', '1762',
    '/hostTopN/hostTopNControlEntry/hostTopNRequestedSize',
    'The maximum number of hosts requested for the top N
table.

When this object is created or modified, the probe
should set hostTopNGrantedSize as closely to this
object as is possible for the particular probe
implementation and available resources.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNRequestedSize.1762', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNGrantedSize', '1777',
    '/hostTopN/hostTopNControlEntry/hostTopNGrantedSize',
    'The maximum number of hosts in the top N table.

When the associated hostTopNRequestedSize object is
created or modified, the probe should set this
object as closely to the requested value as is possible
for the particular implementation and available

resources. The probe must not lower this value except
as a result of a set to the associated
hostTopNRequestedSize object.

Hosts with the highest value of hostTopNRate shall be
placed in this table in decreasing order of this rate
until there is no more room or until there are no more
hosts.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNGrantedSize.1777', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNStartTime', '1799',
    '/hostTopN/hostTopNControlEntry/hostTopNStartTime',
    'The value of sysUpTime when this top N report was
last started.  In other words, this is the time that
the associated hostTopNTimeRemaining object was
modified to start the requested report.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNStartTime.1799', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNOwner', '1810',
    '/hostTopN/hostTopNControlEntry/hostTopNOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNOwner.1810', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNStatus', '1819',
    '/hostTopN/hostTopNControlEntry/hostTopNStatus',
    'The status of this hostTopNControl entry.

If this object is not equal to valid(1), all associated
hostTopNEntries shall be deleted by the agent.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNStatus.1819', 
    'leaf', 
    '/hostTopN/hostTopNControlEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNEntry', '1834',
    '/hostTopN/hostTopNEntry',
    'A set of statistics for a host that is part of a top N
report.  For example, an instance of the hostTopNRate
object might be named hostTopNRate.3.10',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNEntry.1834', 
    'list', 
    '/hostTopN',
    '0',
    '1',
    '',
    '',
    'hostTopNReport hostTopNIndex hostTopNAddress hostTopNRate',
    '',
    'hostTopNReport hostTopNIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNReport', '1844',
    '/hostTopN/hostTopNEntry/hostTopNReport',
    'This object identifies the top N report of which
this entry is a part.  The set of hosts
identified by a particular value of this
object is part of the same report as identified
by the same value of the hostTopNControlIndex object.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNReport.1844', 
    'leaf', 
    '/hostTopN/hostTopNEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNIndex', '1858',
    '/hostTopN/hostTopNEntry/hostTopNIndex',
    'An index that uniquely identifies an entry in
the hostTopN table among those in the same report.
This index is between 1 and N, where N is the
number of entries in this table.  Increasing values
of hostTopNIndex shall be assigned to entries with
decreasing values of hostTopNRate until index N
is assigned to the entry with the lowest value of
hostTopNRate or there are no more hostTopNEntries.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNIndex.1858', 
    'leaf', 
    '/hostTopN/hostTopNEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNAddress', '1875',
    '/hostTopN/hostTopNEntry/hostTopNAddress',
    'The physical address of this host.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNAddress.1875', 
    'leaf', 
    '/hostTopN/hostTopNEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'hostTopNRate', '1883',
    '/hostTopN/hostTopNEntry/hostTopNRate',
    'The amount of change in the selected variable
during this sampling interval.  The selected
variable is this host\'s instance of the object
selected by hostTopNRateBase.',
    '',
    '/modules/RMON-MIB/2000-05-11#hostTopNRate.1883', 
    'leaf', 
    '/hostTopN/hostTopNEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrix', '1897',
    '/matrix',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#matrix.1897', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'matrixControlEntry matrixSDEntry matrixDSEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixControlEntry', '1902',
    '/matrix/matrixControlEntry',
    'Information about a traffic matrix on a particular

interface.  For example, an instance of the
matrixControlLastDeleteTime object might be named
matrixControlLastDeleteTime.1',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixControlEntry.1902', 
    'list', 
    '/matrix',
    '0',
    '1',
    '',
    '',
    'matrixControlIndex matrixControlDataSource matrixControlTableSize matrixControlLastDeleteTime matrixControlOwner matrixControlStatus',
    '',
    'matrixControlIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixControlIndex', '1914',
    '/matrix/matrixControlEntry/matrixControlIndex',
    'An index that uniquely identifies an entry in the
matrixControl table.  Each such entry defines
a function that discovers conversations on a particular
interface and places statistics about them in the
matrixSDTable and the matrixDSTable on behalf of this
matrixControlEntry.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixControlIndex.1914', 
    'leaf', 
    '/matrix/matrixControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixControlDataSource', '1929',
    '/matrix/matrixControlEntry/matrixControlDataSource',
    'This object identifies the source of
the data from which this entry creates a traffic matrix.
This source can be any interface on this device.  In
order to identify a particular interface, this object
shall identify the instance of the ifIndex object,
defined in RFC 2233 [17], for the desired
interface.  For example, if an entry were to receive data
from interface #1, this object would be set to ifIndex.1.

The statistics in this group reflect all packets
on the local network segment attached to the identified
interface.

An agent may or may not be able to tell if fundamental
changes to the media of the interface have occurred and

necessitate an invalidation of this entry.  For example, a
hot-pluggable ethernet card could be pulled out and replaced
by a token-ring card.  In such a case, if the agent has such
knowledge of the change, it is recommended that it
invalidate this entry.

This object may not be modified if the associated
matrixControlStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixControlDataSource.1929', 
    'leaf', 
    '/matrix/matrixControlEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixControlTableSize', '1960',
    '/matrix/matrixControlEntry/matrixControlTableSize',
    'The number of matrixSDEntries in the matrixSDTable
for this interface.  This must also be the value of
the number of entries in the matrixDSTable for this
interface.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixControlTableSize.1960', 
    'leaf', 
    '/matrix/matrixControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixControlLastDeleteTime', '1971',
    '/matrix/matrixControlEntry/matrixControlLastDeleteTime',
    'The value of sysUpTime when the last entry
was deleted from the portion of the matrixSDTable
or matrixDSTable associated with this matrixControlEntry.
If no deletions have occurred, this value shall be
zero.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixControlLastDeleteTime.1971', 
    'leaf', 
    '/matrix/matrixControlEntry',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixControlOwner', '1983',
    '/matrix/matrixControlEntry/matrixControlOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixControlOwner.1983', 
    'leaf', 
    '/matrix/matrixControlEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixControlStatus', '1992',
    '/matrix/matrixControlEntry/matrixControlStatus',
    'The status of this matrixControl entry.

If this object is not equal to valid(1), all associated
entries in the matrixSDTable and the matrixDSTable
shall be deleted by the agent.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixControlStatus.1992', 
    'leaf', 
    '/matrix/matrixControlEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixSDEntry', '2008',
    '/matrix/matrixSDEntry',
    'A collection of statistics for communications between
two addresses on a particular interface.  For example,
an instance of the matrixSDPkts object might be named
matrixSDPkts.1.6.8.0.32.27.3.176.6.8.0.32.10.8.113',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixSDEntry.2008', 
    'list', 
    '/matrix',
    '0',
    '1',
    '',
    '',
    'matrixSDSourceAddress matrixSDDestAddress matrixSDIndex matrixSDPkts matrixSDOctets matrixSDErrors',
    '',
    'matrixSDIndex matrixSDSourceAddress 
matrixSDDestAddress',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixSDSourceAddress', '2020',
    '/matrix/matrixSDEntry/matrixSDSourceAddress',
    'The source physical address.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixSDSourceAddress.2020', 
    'leaf', 
    '/matrix/matrixSDEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixSDDestAddress', '2028',
    '/matrix/matrixSDEntry/matrixSDDestAddress',
    'The destination physical address.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixSDDestAddress.2028', 
    'leaf', 
    '/matrix/matrixSDEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixSDIndex', '2036',
    '/matrix/matrixSDEntry/matrixSDIndex',
    'The set of collected matrix statistics of which
this entry is a part.  The set of matrix statistics
identified by a particular value of this index
is associated with the same matrixControlEntry
as identified by the same value of matrixControlIndex.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixSDIndex.2036', 
    'leaf', 
    '/matrix/matrixSDEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixSDPkts', '2050',
    '/matrix/matrixSDEntry/matrixSDPkts',
    'The number of packets transmitted from the source
address to the destination address (this number includes
bad packets).',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixSDPkts.2050', 
    'leaf', 
    '/matrix/matrixSDEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixSDOctets', '2061',
    '/matrix/matrixSDEntry/matrixSDOctets',
    'The number of octets (excluding framing bits but
including FCS octets) contained in all packets
transmitted from the source address to the
destination address.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixSDOctets.2061', 
    'leaf', 
    '/matrix/matrixSDEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixSDErrors', '2073',
    '/matrix/matrixSDEntry/matrixSDErrors',
    'The number of bad packets transmitted from
the source address to the destination address.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixSDErrors.2073', 
    'leaf', 
    '/matrix/matrixSDEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixDSEntry', '2087',
    '/matrix/matrixDSEntry',
    'A collection of statistics for communications between
two addresses on a particular interface.  For example,
an instance of the matrixSDPkts object might be named
matrixSDPkts.1.6.8.0.32.10.8.113.6.8.0.32.27.3.176',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixDSEntry.2087', 
    'list', 
    '/matrix',
    '0',
    '1',
    '',
    '',
    'matrixDSSourceAddress matrixDSDestAddress matrixDSIndex matrixDSPkts matrixDSOctets matrixDSErrors',
    '',
    'matrixDSIndex matrixDSDestAddress 
matrixDSSourceAddress',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixDSSourceAddress', '2099',
    '/matrix/matrixDSEntry/matrixDSSourceAddress',
    'The source physical address.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixDSSourceAddress.2099', 
    'leaf', 
    '/matrix/matrixDSEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixDSDestAddress', '2107',
    '/matrix/matrixDSEntry/matrixDSDestAddress',
    'The destination physical address.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixDSDestAddress.2107', 
    'leaf', 
    '/matrix/matrixDSEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixDSIndex', '2115',
    '/matrix/matrixDSEntry/matrixDSIndex',
    'The set of collected matrix statistics of which
this entry is a part.  The set of matrix statistics
identified by a particular value of this index
is associated with the same matrixControlEntry
as identified by the same value of matrixControlIndex.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixDSIndex.2115', 
    'leaf', 
    '/matrix/matrixDSEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixDSPkts', '2129',
    '/matrix/matrixDSEntry/matrixDSPkts',
    'The number of packets transmitted from the source
address to the destination address (this number includes
bad packets).',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixDSPkts.2129', 
    'leaf', 
    '/matrix/matrixDSEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixDSOctets', '2140',
    '/matrix/matrixDSEntry/matrixDSOctets',
    'The number of octets (excluding framing bits
but including FCS octets) contained in all packets
transmitted from the source address to the
destination address.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixDSOctets.2140', 
    'leaf', 
    '/matrix/matrixDSEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'matrixDSErrors', '2152',
    '/matrix/matrixDSEntry/matrixDSErrors',
    'The number of bad packets transmitted from
the source address to the destination address.',
    '',
    '/modules/RMON-MIB/2000-05-11#matrixDSErrors.2152', 
    'leaf', 
    '/matrix/matrixDSEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filter', '2165',
    '/filter',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#filter.2165', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'filterEntry channelEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterEntry', '2170',
    '/filter/filterEntry',
    'A set of parameters for a packet filter applied on a
particular interface.  As an example, an instance of the
filterPktData object might be named filterPktData.12',
    '',
    '/modules/RMON-MIB/2000-05-11#filterEntry.2170', 
    'list', 
    '/filter',
    '0',
    '1',
    '',
    '',
    'filterIndex filterChannelIndex filterPktDataOffset filterPktData filterPktDataMask filterPktDataNotMask filterPktStatus filterPktStatusMask filterPktStatusNotMask filterOwner filterStatus',
    '',
    'filterIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterIndex', '2180',
    '/filter/filterEntry/filterIndex',
    'An index that uniquely identifies an entry
in the filter table.  Each such entry defines
one filter that is to be applied to every packet
received on an interface.',
    '',
    '/modules/RMON-MIB/2000-05-11#filterIndex.2180', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterChannelIndex', '2193',
    '/filter/filterEntry/filterChannelIndex',
    'This object identifies the channel of which this filter
is a part.  The filters identified by a particular value
of this object are associated with the same channel as
identified by the same value of the channelIndex object.',
    '',
    '/modules/RMON-MIB/2000-05-11#filterChannelIndex.2193', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterPktDataOffset', '2206',
    '/filter/filterEntry/filterPktDataOffset',
    'The offset from the beginning of each packet where
a match of packet data will be attempted.  This offset
is measured from the point in the physical layer
packet after the framing bits, if any.  For example,
in an Ethernet frame, this point is at the beginning of
the destination MAC address.

This object may not be modified if the associated
filterStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#filterPktDataOffset.2206', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterPktData', '2224',
    '/filter/filterEntry/filterPktData',
    'The data that is to be matched with the input packet.
For each packet received, this filter and the accompanying
filterPktDataMask and filterPktDataNotMask will be
adjusted for the offset.  The only bits relevant to this
match algorithm are those that have the corresponding
filterPktDataMask bit equal to one.  The following three
rules are then applied to every packet:

(1) If the packet is too short and does not have data
    corresponding to part of the filterPktData, the packet
    will fail this data match.

(2) For each relevant bit from the packet with the
    corresponding filterPktDataNotMask bit set to zero, if
    the bit from the packet is not equal to the corresponding
    bit from the filterPktData, then the packet will fail
    this data match.

(3) If for every relevant bit from the packet with the
    corresponding filterPktDataNotMask bit set to one, the
    bit from the packet is equal to the corresponding bit
    from the filterPktData, then the packet will fail this
    data match.

Any packets that have not failed any of the three matches
above have passed this data match.  In particular, a zero
length filter will match any packet.

This object may not be modified if the associated
filterStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#filterPktData.2224', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterPktDataMask', '2261',
    '/filter/filterEntry/filterPktDataMask',
    'The mask that is applied to the match process.
After adjusting this mask for the offset, only those
bits in the received packet that correspond to bits set
in this mask are relevant for further processing by the

match algorithm.  The offset is applied to filterPktDataMask
in the same way it is applied to the filter.  For the
purposes of the matching algorithm, if the associated
filterPktData object is longer than this mask, this mask is
conceptually extended with \'1\' bits until it reaches the
length of the filterPktData object.

This object may not be modified if the associated
filterStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#filterPktDataMask.2261', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterPktDataNotMask', '2282',
    '/filter/filterEntry/filterPktDataNotMask',
    'The inversion mask that is applied to the match
process.  After adjusting this mask for the offset,
those relevant bits in the received packet that correspond
to bits cleared in this mask must all be equal to their
corresponding bits in the filterPktData object for the packet
to be accepted.  In addition, at least one of those relevant
bits in the received packet that correspond to bits set in
this mask must be different to its corresponding bit in the
filterPktData object.

For the purposes of the matching algorithm, if the associated
filterPktData object is longer than this mask, this mask is
conceptually extended with \'0\' bits until it reaches the
length of the filterPktData object.

This object may not be modified if the associated
filterStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#filterPktDataNotMask.2282', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterPktStatus', '2306',
    '/filter/filterEntry/filterPktStatus',
    'The status that is to be matched with the input packet.
The only bits relevant to this match algorithm are those that
have the corresponding filterPktStatusMask bit equal to one.
The following two rules are then applied to every packet:

(1) For each relevant bit from the packet status with the
    corresponding filterPktStatusNotMask bit set to zero, if
    the bit from the packet status is not equal to the

    corresponding bit from the filterPktStatus, then the
    packet will fail this status match.

(2) If for every relevant bit from the packet status with the
    corresponding filterPktStatusNotMask bit set to one, the
    bit from the packet status is equal to the corresponding
    bit from the filterPktStatus, then the packet will fail
    this status match.

Any packets that have not failed either of the two matches
above have passed this status match.  In particular, a zero
length status filter will match any packet\'s status.

The value of the packet status is a sum.  This sum
initially takes the value zero.  Then, for each
error, E, that has been discovered in this packet,
2 raised to a value representing E is added to the sum.
The errors and the bits that represent them are dependent
on the media type of the interface that this channel
is receiving packets from.

The errors defined for a packet captured off of an
Ethernet interface are as follows:

    bit #    Error
	0    Packet is longer than 1518 octets
	1    Packet is shorter than 64 octets
	2    Packet experienced a CRC or Alignment error

For example, an Ethernet fragment would have a
value of 6 (2^1 + 2^2).

As this MIB is expanded to new media types, this object
will have other media-specific errors defined.

For the purposes of this status matching algorithm, if the
packet status is longer than this filterPktStatus object,
this object is conceptually extended with \'0\' bits until it
reaches the size of the packet status.

This object may not be modified if the associated
filterStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#filterPktStatus.2306', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterPktStatusMask', '2364',
    '/filter/filterEntry/filterPktStatusMask',
    'The mask that is applied to the status match process.
Only those bits in the received packet that correspond to
bits set in this mask are relevant for further processing
by the status match algorithm.  For the purposes
of the matching algorithm, if the associated filterPktStatus
object is longer than this mask, this mask is conceptually
extended with \'1\' bits until it reaches the size of the
filterPktStatus.  In addition, if a packet status is longer
than this mask, this mask is conceptually extended with \'0\'
bits until it reaches the size of the packet status.

This object may not be modified if the associated
filterStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#filterPktStatusMask.2364', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterPktStatusNotMask', '2384',
    '/filter/filterEntry/filterPktStatusNotMask',
    'The inversion mask that is applied to the status match
process.  Those relevant bits in the received packet status
that correspond to bits cleared in this mask must all be
equal to their corresponding bits in the filterPktStatus
object for the packet to be accepted.  In addition, at least
one of those relevant bits in the received packet status
that correspond to bits set in this mask must be different
to its corresponding bit in the filterPktStatus object for
the packet to be accepted.

For the purposes of the matching algorithm, if the associated
filterPktStatus object or a packet status is longer than this
mask, this mask is conceptually extended with \'0\' bits until
it reaches the longer of the lengths of the filterPktStatus
object and the packet status.

This object may not be modified if the associated
filterStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#filterPktStatusNotMask.2384', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterOwner', '2409',
    '/filter/filterEntry/filterOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.',
    '',
    '/modules/RMON-MIB/2000-05-11#filterOwner.2409', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'filterStatus', '2418',
    '/filter/filterEntry/filterStatus',
    'The status of this filter entry.',
    '',
    '/modules/RMON-MIB/2000-05-11#filterStatus.2418', 
    'leaf', 
    '/filter/filterEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelEntry', '2430',
    '/filter/channelEntry',
    'A set of parameters for a packet channel applied on a
particular interface.  As an example, an instance of the
channelMatches object might be named channelMatches.3',
    '',
    '/modules/RMON-MIB/2000-05-11#channelEntry.2430', 
    'list', 
    '/filter',
    '0',
    '1',
    '',
    '',
    'channelIndex channelIfIndex channelAcceptType channelDataControl channelTurnOnEventIndex channelTurnOffEventIndex channelEventIndex channelEventStatus channelMatches channelDescription channelOwner channelStatus',
    '',
    'channelIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelIndex', '2440',
    '/filter/channelEntry/channelIndex',
    'An index that uniquely identifies an entry in the channel
table.  Each such entry defines one channel, a logical
data and event stream.

It is suggested that before creating a channel, an
application should scan all instances of the
filterChannelIndex object to make sure that there are no
pre-existing filters that would be inadvertently be linked
to the channel.',
    '',
    '/modules/RMON-MIB/2000-05-11#channelIndex.2440', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelIfIndex', '2458',
    '/filter/channelEntry/channelIfIndex',
    'The value of this object uniquely identifies the
interface on this remote network monitoring device to which
the associated filters are applied to allow data into this
channel.  The interface identified by a particular value
of this object is the same interface as identified by the
same value of the ifIndex object, defined in RFC 2233 [17].

The filters in this group are applied to all packets on
the local network segment attached to the identified
interface.

An agent may or may not be able to tell if fundamental
changes to the media of the interface have occurred and
necessitate an invalidation of this entry.  For example, a
hot-pluggable ethernet card could be pulled out and replaced
by a token-ring card.  In such a case, if the agent has such
knowledge of the change, it is recommended that it
invalidate this entry.

This object may not be modified if the associated
channelStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#channelIfIndex.2458', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelAcceptType', '2488',
    '/filter/channelEntry/channelAcceptType',
    'This object controls the action of the filters
associated with this channel.  If this object is equal
to acceptMatched(1), packets will be accepted to this
channel if they are accepted by both the packet data and
packet status matches of an associated filter.  If
this object is equal to acceptFailed(2), packets will
be accepted to this channel only if they fail either
the packet data match or the packet status match of
each of the associated filters.

In particular, a channel with no associated filters will
match no packets if set to acceptMatched(1) case and will
match all packets in the acceptFailed(2) case.

This object may not be modified if the associated
channelStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#channelAcceptType.2488', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelDataControl', '2514',
    '/filter/channelEntry/channelDataControl',
    'This object controls the flow of data through this channel.
If this object is on(1), data, status and events flow
through this channel.  If this object is off(2), data,
status and events will not flow through this channel.',
    '',
    '/modules/RMON-MIB/2000-05-11#channelDataControl.2514', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelTurnOnEventIndex', '2529',
    '/filter/channelEntry/channelTurnOnEventIndex',
    'The value of this object identifies the event
that is configured to turn the associated
channelDataControl from off to on when the event is
generated.  The event identified by a particular value
of this object is the same event as identified by the
same value of the eventIndex object.  If there is no
corresponding entry in the eventTable, then no
association exists.  In fact, if no event is intended
for this channel, channelTurnOnEventIndex must be
set to zero, a non-existent event index.

This object may not be modified if the associated
channelStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#channelTurnOnEventIndex.2529', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelTurnOffEventIndex', '2551',
    '/filter/channelEntry/channelTurnOffEventIndex',
    'The value of this object identifies the event
that is configured to turn the associated
channelDataControl from on to off when the event is
generated.  The event identified by a particular value
of this object is the same event as identified by the
same value of the eventIndex object.  If there is no
corresponding entry in the eventTable, then no
association exists.  In fact, if no event is intended
for this channel, channelTurnOffEventIndex must be
set to zero, a non-existent event index.

This object may not be modified if the associated
channelStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#channelTurnOffEventIndex.2551', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelEventIndex', '2573',
    '/filter/channelEntry/channelEventIndex',
    'The value of this object identifies the event
that is configured to be generated when the
associated channelDataControl is on and a packet
is matched.  The event identified by a particular value
of this object is the same event as identified by the
same value of the eventIndex object.  If there is no
corresponding entry in the eventTable, then no
association exists.  In fact, if no event is intended
for this channel, channelEventIndex must be
set to zero, a non-existent event index.

This object may not be modified if the associated
channelStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#channelEventIndex.2573', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelEventStatus', '2595',
    '/filter/channelEntry/channelEventStatus',
    'The event status of this channel.

If this channel is configured to generate events
when packets are matched, a means of controlling
the flow of those events is often needed.  When
this object is equal to eventReady(1), a single
event may be generated, after which this object
will be set by the probe to eventFired(2).  While
in the eventFired(2) state, no events will be
generated until the object is modified to
eventReady(1) (or eventAlwaysReady(3)).  The
management station can thus easily respond to a
notification of an event by re-enabling this object.

If the management station wishes to disable this
flow control and allow events to be generated
at will, this object may be set to
eventAlwaysReady(3).  Disabling the flow control
is discouraged as it can result in high network
traffic or other performance problems.',
    '',
    '/modules/RMON-MIB/2000-05-11#channelEventStatus.2595', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelMatches', '2627',
    '/filter/channelEntry/channelMatches',
    'The number of times this channel has matched a packet.
Note that this object is updated even when
channelDataControl is set to off.',
    '',
    '/modules/RMON-MIB/2000-05-11#channelMatches.2627', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelDescription', '2638',
    '/filter/channelEntry/channelDescription',
    'A comment describing this channel.',
    '',
    '/modules/RMON-MIB/2000-05-11#channelDescription.2638', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelOwner', '2648',
    '/filter/channelEntry/channelOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.',
    '',
    '/modules/RMON-MIB/2000-05-11#channelOwner.2648', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'channelStatus', '2657',
    '/filter/channelEntry/channelStatus',
    'The status of this channel entry.',
    '',
    '/modules/RMON-MIB/2000-05-11#channelStatus.2657', 
    'leaf', 
    '/filter/channelEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'capture', '2668',
    '/capture',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#capture.2668', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'bufferControlEntry captureBufferEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlEntry', '2673',
    '/capture/bufferControlEntry',
    'A set of parameters that control the collection of a stream
of packets that have matched filters.  As an example, an
instance of the bufferControlCaptureSliceSize object might
be named bufferControlCaptureSliceSize.3',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlEntry.2673', 
    'list', 
    '/capture',
    '0',
    '1',
    '',
    '',
    'bufferControlIndex bufferControlChannelIndex bufferControlFullStatus bufferControlFullAction bufferControlCaptureSliceSize bufferControlDownloadSliceSize bufferControlDownloadOffset bufferControlMaxOctetsRequested bufferControlMaxOctetsGranted bufferControlCapturedPackets bufferControlTurnOnTime bufferControlOwner bufferControlStatus',
    '',
    'bufferControlIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlIndex', '2684',
    '/capture/bufferControlEntry/bufferControlIndex',
    'An index that uniquely identifies an entry
in the bufferControl table.  The value of this
index shall never be zero.  Each such
entry defines one set of packets that is
captured and controlled by one or more filters.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlIndex.2684', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlChannelIndex', '2698',
    '/capture/bufferControlEntry/bufferControlChannelIndex',
    'An index that identifies the channel that is the
source of packets for this bufferControl table.
The channel identified by a particular value of this
index is the same as identified by the same value of
the channelIndex object.

This object may not be modified if the associated
bufferControlStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlChannelIndex.2698', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlFullStatus', '2715',
    '/capture/bufferControlEntry/bufferControlFullStatus',
    'This object shows whether the buffer has room to
accept new packets or if it is full.

If the status is spaceAvailable(1), the buffer is
accepting new packets normally.  If the status is
full(2) and the associated bufferControlFullAction
object is wrapWhenFull, the buffer is accepting new
packets by deleting enough of the oldest packets
to make room for new ones as they arrive.  Otherwise,
if the status is full(2) and the
bufferControlFullAction object is lockWhenFull,
then the buffer has stopped collecting packets.

When this object is set to full(2) the probe must
not later set it to spaceAvailable(1) except in the
case of a significant gain in resources such as
an increase of bufferControlOctetsGranted.  In
particular, the wrap-mode action of deleting old
packets to make room for newly arrived packets
must not affect the value of this object.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlFullStatus.2715', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlFullAction', '2745',
    '/capture/bufferControlEntry/bufferControlFullAction',
    'Controls the action of the buffer when it
reaches the full status.  When in the lockWhenFull(1)
state and a packet is added to the buffer that
fills the buffer, the bufferControlFullStatus will
be set to full(2) and this buffer will stop capturing
packets.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlFullAction.2745', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlCaptureSliceSize', '2761',
    '/capture/bufferControlEntry/bufferControlCaptureSliceSize',
    'The maximum number of octets of each packet
that will be saved in this capture buffer.
For example, if a 1500 octet packet is received by
the probe and this object is set to 500, then only
500 octets of the packet will be stored in the
associated capture buffer.  If this variable is set
to 0, the capture buffer will save as many octets
as is possible.

This object may not be modified if the associated
bufferControlStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlCaptureSliceSize.2761', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlDownloadSliceSize', '2781',
    '/capture/bufferControlEntry/bufferControlDownloadSliceSize',
    'The maximum number of octets of each packet
in this capture buffer that will be returned in
an SNMP retrieval of that packet.  For example,
if 500 octets of a packet have been stored in the
associated capture buffer, the associated
bufferControlDownloadOffset is 0, and this
object is set to 100, then the captureBufferPacket
object that contains the packet will contain only
the first 100 octets of the packet.

A prudent manager will take into account possible
interoperability or fragmentation problems that may
occur if the download slice size is set too large.
In particular, conformant SNMP implementations are not
required to accept messages whose length exceeds 484
octets, although they are encouraged to support larger
datagrams whenever feasible.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlDownloadSliceSize.2781', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlDownloadOffset', '2807',
    '/capture/bufferControlEntry/bufferControlDownloadOffset',
    'The offset of the first octet of each packet
in this capture buffer that will be returned in
an SNMP retrieval of that packet.  For example,
if 500 octets of a packet have been stored in the
associated capture buffer and this object is set to
100, then the captureBufferPacket object that
contains the packet will contain bytes starting
100 octets into the packet.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlDownloadOffset.2807', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlMaxOctetsRequested', '2824',
    '/capture/bufferControlEntry/bufferControlMaxOctetsRequested',
    'The requested maximum number of octets to be
saved in this captureBuffer, including any
implementation-specific overhead. If this variable
is set to -1, the capture buffer will save as many
octets as is possible.

When this object is created or modified, the probe
should set bufferControlMaxOctetsGranted as closely
to this object as is possible for the particular probe
implementation and available resources.  However, if
the object has the special value of -1, the probe
must set bufferControlMaxOctetsGranted to -1.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlMaxOctetsRequested.2824', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlMaxOctetsGranted', '2845',
    '/capture/bufferControlEntry/bufferControlMaxOctetsGranted',
    'The maximum number of octets that can be
saved in this captureBuffer, including overhead.
If this variable is -1, the capture buffer will save
as many octets as possible.

When the bufferControlMaxOctetsRequested object is
created or modified, the probe should set this object
as closely to the requested value as is possible for the
particular probe implementation and available resources.
However, if the request object has the special value

of -1, the probe must set this object to -1.

The probe must not lower this value except as a result of
a modification to the associated
bufferControlMaxOctetsRequested object.

When this maximum number of octets is reached
and a new packet is to be added to this
capture buffer and the corresponding
bufferControlFullAction is set to wrapWhenFull(2),
enough of the oldest packets associated with this
capture buffer shall be deleted by the agent so
that the new packet can be added.  If the corresponding
bufferControlFullAction is set to lockWhenFull(1),
the new packet shall be discarded.  In either case,
the probe must set bufferControlFullStatus to
full(2).

When the value of this object changes to a value less
than the current value, entries are deleted from
the captureBufferTable associated with this
bufferControlEntry.  Enough of the
oldest of these captureBufferEntries shall be
deleted by the agent so that the number of octets
used remains less than or equal to the new value of
this object.

When the value of this object changes to a value greater
than the current value, the number of associated
captureBufferEntries may be allowed to grow.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlMaxOctetsGranted.2845', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlCapturedPackets', '2894',
    '/capture/bufferControlEntry/bufferControlCapturedPackets',
    'The number of packets currently in this captureBuffer.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlCapturedPackets.2894', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlTurnOnTime', '2903',
    '/capture/bufferControlEntry/bufferControlTurnOnTime',
    'The value of sysUpTime when this capture buffer was
first turned on.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlTurnOnTime.2903', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlOwner', '2912',
    '/capture/bufferControlEntry/bufferControlOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlOwner.2912', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'bufferControlStatus', '2921',
    '/capture/bufferControlEntry/bufferControlStatus',
    'The status of this buffer Control Entry.',
    '',
    '/modules/RMON-MIB/2000-05-11#bufferControlStatus.2921', 
    'leaf', 
    '/capture/bufferControlEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'captureBufferEntry', '2933',
    '/capture/captureBufferEntry',
    'A packet captured off of an attached network.  As an
example, an instance of the captureBufferPacketData
object might be named captureBufferPacketData.3.1783',
    '',
    '/modules/RMON-MIB/2000-05-11#captureBufferEntry.2933', 
    'list', 
    '/capture',
    '0',
    '1',
    '',
    '',
    'captureBufferControlIndex captureBufferIndex captureBufferPacketID captureBufferPacketData captureBufferPacketLength captureBufferPacketTime captureBufferPacketStatus',
    '',
    'captureBufferControlIndex captureBufferIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'captureBufferControlIndex', '2943',
    '/capture/captureBufferEntry/captureBufferControlIndex',
    'The index of the bufferControlEntry with which
this packet is associated.',
    '',
    '/modules/RMON-MIB/2000-05-11#captureBufferControlIndex.2943', 
    'leaf', 
    '/capture/captureBufferEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'captureBufferIndex', '2954',
    '/capture/captureBufferEntry/captureBufferIndex',
    'An index that uniquely identifies an entry
in the captureBuffer table associated with a
particular bufferControlEntry.  This index will
start at 1 and increase by one for each new packet
added with the same captureBufferControlIndex.

Should this value reach 2147483647, the next packet
added with the same captureBufferControlIndex shall
cause this value to wrap around to 1.',
    '',
    '/modules/RMON-MIB/2000-05-11#captureBufferIndex.2954', 
    'leaf', 
    '/capture/captureBufferEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'captureBufferPacketID', '2972',
    '/capture/captureBufferEntry/captureBufferPacketID',
    'An index that describes the order of packets
that are received on a particular interface.
The packetID of a packet captured on an
interface is defined to be greater than the
packetID\'s of all packets captured previously on
the same interface.  As the captureBufferPacketID
object has a maximum positive value of 2^31 - 1,
any captureBufferPacketID object shall have the
value of the associated packet\'s packetID mod 2^31.',
    '',
    '/modules/RMON-MIB/2000-05-11#captureBufferPacketID.2972', 
    'leaf', 
    '/capture/captureBufferEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'captureBufferPacketData', '2988',
    '/capture/captureBufferEntry/captureBufferPacketData',
    'The data inside the packet, starting at the beginning
of the packet plus any offset specified in the

associated bufferControlDownloadOffset, including any
link level headers.  The length of the data in this object
is the minimum of the length of the captured packet minus
the offset, the length of the associated
bufferControlCaptureSliceSize minus the offset, and the
associated bufferControlDownloadSliceSize.  If this minimum
is less than zero, this object shall have a length of zero.',
    '',
    '/modules/RMON-MIB/2000-05-11#captureBufferPacketData.2988', 
    'leaf', 
    '/capture/captureBufferEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'captureBufferPacketLength', '3005',
    '/capture/captureBufferEntry/captureBufferPacketLength',
    'The actual length (off the wire) of the packet stored
in this entry, including FCS octets.',
    '',
    '/modules/RMON-MIB/2000-05-11#captureBufferPacketLength.3005', 
    'leaf', 
    '/capture/captureBufferEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'captureBufferPacketTime', '3015',
    '/capture/captureBufferEntry/captureBufferPacketTime',
    'The number of milliseconds that had passed since
this capture buffer was first turned on when this
packet was captured.',
    '',
    '/modules/RMON-MIB/2000-05-11#captureBufferPacketTime.3015', 
    'leaf', 
    '/capture/captureBufferEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'captureBufferPacketStatus', '3026',
    '/capture/captureBufferEntry/captureBufferPacketStatus',
    'A value which indicates the error status of this packet.

The value of this object is defined in the same way as
filterPktStatus.  The value is a sum.  This sum
initially takes the value zero.  Then, for each
error, E, that has been discovered in this packet,
2 raised to a value representing E is added to the sum.

The errors defined for a packet captured off of an
Ethernet interface are as follows:

    bit #    Error
	0    Packet is longer than 1518 octets

	1    Packet is shorter than 64 octets
	2    Packet experienced a CRC or Alignment error
	3    First packet in this capture buffer after
	     it was detected that some packets were
	     not processed correctly.
	4    Packet\'s order in buffer is only approximate
	     (May only be set for packets sent from
	     the probe)

For example, an Ethernet fragment would have a
value of 6 (2^1 + 2^2).

As this MIB is expanded to new media types, this object
will have other media-specific errors defined.',
    '',
    '/modules/RMON-MIB/2000-05-11#captureBufferPacketStatus.3026', 
    'leaf', 
    '/capture/captureBufferEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'event', '3064',
    '/event',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#event.3064', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'eventEntry logEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'eventEntry', '3069',
    '/event/eventEntry',
    'A set of parameters that describe an event to be generated
when certain conditions are met.  As an example, an instance
of the eventLastTimeSent object might be named
eventLastTimeSent.6',
    '',
    '/modules/RMON-MIB/2000-05-11#eventEntry.3069', 
    'list', 
    '/event',
    '0',
    '1',
    '',
    '',
    'eventIndex eventDescription eventType eventCommunity eventLastTimeSent eventOwner eventStatus',
    '',
    'eventIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'eventIndex', '3080',
    '/event/eventEntry/eventIndex',
    'An index that uniquely identifies an entry in the
event table.  Each such entry defines one event that
is to be generated when the appropriate conditions
occur.',
    '',
    '/modules/RMON-MIB/2000-05-11#eventIndex.3080', 
    'leaf', 
    '/event/eventEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'eventDescription', '3093',
    '/event/eventEntry/eventDescription',
    'A comment describing this event entry.',
    '',
    '/modules/RMON-MIB/2000-05-11#eventDescription.3093', 
    'leaf', 
    '/event/eventEntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'eventType', '3103',
    '/event/eventEntry/eventType',
    'The type of notification that the probe will make
about this event.  In the case of log, an entry is
made in the log table for each event.  In the case of
snmp-trap, an SNMP trap is sent to one or more
management stations.',
    '',
    '/modules/RMON-MIB/2000-05-11#eventType.3103', 
    'leaf', 
    '/event/eventEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'eventCommunity', '3120',
    '/event/eventEntry/eventCommunity',
    'If an SNMP trap is to be sent, it will be sent to
the SNMP community specified by this octet string.',
    '',
    '/modules/RMON-MIB/2000-05-11#eventCommunity.3120', 
    'leaf', 
    '/event/eventEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'eventLastTimeSent', '3131',
    '/event/eventEntry/eventLastTimeSent',
    'The value of sysUpTime at the time this event
entry last generated an event.  If this entry has
not generated any events, this value will be
zero.',
    '',
    '/modules/RMON-MIB/2000-05-11#eventLastTimeSent.3131', 
    'leaf', 
    '/event/eventEntry',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'eventOwner', '3142',
    '/event/eventEntry/eventOwner',
    'The entity that configured this entry and is therefore
using the resources assigned to it.

If this object contains a string starting with \'monitor\'
and has associated entries in the log table, all connected
management stations should retrieve those log entries,
as they may have significance to all management stations
connected to this device',
    '',
    '/modules/RMON-MIB/2000-05-11#eventOwner.3142', 
    'leaf', 
    '/event/eventEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'eventStatus', '3157',
    '/event/eventEntry/eventStatus',
    'The status of this event entry.

If this object is not equal to valid(1), all associated
log entries shall be deleted by the agent.',
    '',
    '/modules/RMON-MIB/2000-05-11#eventStatus.3157', 
    'leaf', 
    '/event/eventEntry',
    '0',
    '1',
    'EntryStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'logEntry', '3172',
    '/event/logEntry',
    'A set of data describing an event that has been
logged.  For example, an instance of the logDescription
object might be named logDescription.6.47',
    '',
    '/modules/RMON-MIB/2000-05-11#logEntry.3172', 
    'list', 
    '/event',
    '0',
    '1',
    '',
    '',
    'logEventIndex logIndex logTime logDescription',
    '',
    'logEventIndex logIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'logEventIndex', '3182',
    '/event/logEntry/logEventIndex',
    'The event entry that generated this log
entry.  The log identified by a particular
value of this index is associated with the same
eventEntry as identified by the same value
of eventIndex.',
    '',
    '/modules/RMON-MIB/2000-05-11#logEventIndex.3182', 
    'leaf', 
    '/event/logEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'logIndex', '3196',
    '/event/logEntry/logIndex',
    'An index that uniquely identifies an entry
in the log table amongst those generated by the
same eventEntries.  These indexes are
assigned beginning with 1 and increase by one
with each new log entry.  The association
between values of logIndex and logEntries
is fixed for the lifetime of each logEntry.
The agent may choose to delete the oldest
instances of logEntry as required because of
lack of memory.  It is an implementation-specific
matter as to when this deletion may occur.',
    '',
    '/modules/RMON-MIB/2000-05-11#logIndex.3196', 
    'leaf', 
    '/event/logEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'logTime', '3216',
    '/event/logEntry/logTime',
    'The value of sysUpTime when this log entry was created.',
    '',
    '/modules/RMON-MIB/2000-05-11#logTime.3216', 
    'leaf', 
    '/event/logEntry',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'logDescription', '3224',
    '/event/logEntry/logDescription',
    'An implementation dependent description of the
event that activated this log entry.',
    '',
    '/modules/RMON-MIB/2000-05-11#logDescription.3224', 
    'leaf', 
    '/event/logEntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'risingAlarm', '3238',
    '/risingAlarm',
    'The SNMP trap that is generated when an alarm
entry crosses its rising threshold and generates
an event that is configured for sending SNMP
traps.',
    '',
    '/modules/RMON-MIB/2000-05-11#risingAlarm.3238', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'risingAlarm-alarmIndex risingAlarm-alarmVariable risingAlarm-alarmSampleType risingAlarm-alarmValue risingAlarm-alarmRisingThreshold',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'risingAlarm-alarmIndex', '3246',
    '/risingAlarm/risingAlarm-alarmIndex',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#risingAlarm-alarmIndex.3246', 
    'container', 
    '/risingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3247',
    '/risingAlarm/risingAlarm-alarmIndex/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3247', 
    'leaf', 
    '/risingAlarm/risingAlarm-alarmIndex',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'risingAlarm-alarmVariable', '3257',
    '/risingAlarm/risingAlarm-alarmVariable',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#risingAlarm-alarmVariable.3257', 
    'container', 
    '/risingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex alarmVariable',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3258',
    '/risingAlarm/risingAlarm-alarmVariable/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3258', 
    'leaf', 
    '/risingAlarm/risingAlarm-alarmVariable',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmVariable', '3266',
    '/risingAlarm/risingAlarm-alarmVariable/alarmVariable',
    'The object identifier of the particular variable to be
sampled.  Only variables that resolve to an ASN.1 primitive
type of INTEGER (INTEGER, Integer32, Counter32, Counter64,
Gauge, or TimeTicks) may be sampled.

Because SNMP access control is articulated entirely
in terms of the contents of MIB views, no access
control mechanism exists that can restrict the value of
this object to identify only those objects that exist
in a particular MIB view.  Because there is thus no
acceptable means of restricting the read access that
could be obtained through the alarm mechanism, the
probe must only grant write access to this object in

those views that have read access to all objects on
the probe.

During a set operation, if the supplied variable name is
not available in the selected MIB view, a badValue error
must be returned.  If at any time the variable name of
an established alarmEntry is no longer available in the
selected MIB view, the probe must change the status of
this alarmEntry to invalid(4).

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmVariable.3266', 
    'leaf', 
    '/risingAlarm/risingAlarm-alarmVariable',
    '0',
    '0',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'risingAlarm-alarmSampleType', '3300',
    '/risingAlarm/risingAlarm-alarmSampleType',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#risingAlarm-alarmSampleType.3300', 
    'container', 
    '/risingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex alarmSampleType',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3301',
    '/risingAlarm/risingAlarm-alarmSampleType/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3301', 
    'leaf', 
    '/risingAlarm/risingAlarm-alarmSampleType',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmSampleType', '3309',
    '/risingAlarm/risingAlarm-alarmSampleType/alarmSampleType',
    'The method of sampling the selected variable and
calculating the value to be compared against the
thresholds.  If the value of this object is
absoluteValue(1), the value of the selected variable
will be compared directly with the thresholds at the
end of the sampling interval.  If the value of this
object is deltaValue(2), the value of the selected
variable at the last sample will be subtracted from
the current value, and the difference compared with
the thresholds.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmSampleType.3309', 
    'leaf', 
    '/risingAlarm/risingAlarm-alarmSampleType',
    '0',
    '0',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'risingAlarm-alarmValue', '3333',
    '/risingAlarm/risingAlarm-alarmValue',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#risingAlarm-alarmValue.3333', 
    'container', 
    '/risingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex alarmValue',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3334',
    '/risingAlarm/risingAlarm-alarmValue/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3334', 
    'leaf', 
    '/risingAlarm/risingAlarm-alarmValue',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmValue', '3342',
    '/risingAlarm/risingAlarm-alarmValue/alarmValue',
    'The value of the statistic during the last sampling
period.  For example, if the sample type is deltaValue,
this value will be the difference between the samples
at the beginning and end of the period.  If the sample
type is absoluteValue, this value will be the sampled
value at the end of the period.

This is the value that is compared with the rising and
falling thresholds.

The value during the current sampling period is not
made available until the period is completed and will
remain available until the next period completes.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmValue.3342', 
    'leaf', 
    '/risingAlarm/risingAlarm-alarmValue',
    '0',
    '0',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'risingAlarm-alarmRisingThreshold', '3363',
    '/risingAlarm/risingAlarm-alarmRisingThreshold',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#risingAlarm-alarmRisingThreshold.3363', 
    'container', 
    '/risingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex alarmRisingThreshold',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3364',
    '/risingAlarm/risingAlarm-alarmRisingThreshold/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3364', 
    'leaf', 
    '/risingAlarm/risingAlarm-alarmRisingThreshold',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmRisingThreshold', '3372',
    '/risingAlarm/risingAlarm-alarmRisingThreshold/alarmRisingThreshold',
    'A threshold for the sampled statistic.  When the current
sampled value is greater than or equal to this threshold,
and the value at the last sampling interval was less than
this threshold, a single event will be generated.
A single event will also be generated if the first
sample after this entry becomes valid is greater than or
equal to this threshold and the associated
alarmStartupAlarm is equal to risingAlarm(1) or
risingOrFallingAlarm(3).

After a rising event is generated, another such event

will not be generated until the sampled value
falls below this threshold and reaches the
alarmFallingThreshold.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmRisingThreshold.3372', 
    'leaf', 
    '/risingAlarm/risingAlarm-alarmRisingThreshold',
    '0',
    '0',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'fallingAlarm', '3400',
    '/fallingAlarm',
    'The SNMP trap that is generated when an alarm
entry crosses its falling threshold and generates
an event that is configured for sending SNMP
traps.',
    '',
    '/modules/RMON-MIB/2000-05-11#fallingAlarm.3400', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'fallingAlarm-alarmIndex fallingAlarm-alarmVariable fallingAlarm-alarmSampleType fallingAlarm-alarmValue fallingAlarm-alarmFallingThreshold',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'fallingAlarm-alarmIndex', '3408',
    '/fallingAlarm/fallingAlarm-alarmIndex',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#fallingAlarm-alarmIndex.3408', 
    'container', 
    '/fallingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3409',
    '/fallingAlarm/fallingAlarm-alarmIndex/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3409', 
    'leaf', 
    '/fallingAlarm/fallingAlarm-alarmIndex',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'fallingAlarm-alarmVariable', '3419',
    '/fallingAlarm/fallingAlarm-alarmVariable',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#fallingAlarm-alarmVariable.3419', 
    'container', 
    '/fallingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex alarmVariable',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3420',
    '/fallingAlarm/fallingAlarm-alarmVariable/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3420', 
    'leaf', 
    '/fallingAlarm/fallingAlarm-alarmVariable',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmVariable', '3428',
    '/fallingAlarm/fallingAlarm-alarmVariable/alarmVariable',
    'The object identifier of the particular variable to be
sampled.  Only variables that resolve to an ASN.1 primitive
type of INTEGER (INTEGER, Integer32, Counter32, Counter64,
Gauge, or TimeTicks) may be sampled.

Because SNMP access control is articulated entirely
in terms of the contents of MIB views, no access
control mechanism exists that can restrict the value of
this object to identify only those objects that exist
in a particular MIB view.  Because there is thus no
acceptable means of restricting the read access that
could be obtained through the alarm mechanism, the
probe must only grant write access to this object in

those views that have read access to all objects on
the probe.

During a set operation, if the supplied variable name is
not available in the selected MIB view, a badValue error
must be returned.  If at any time the variable name of
an established alarmEntry is no longer available in the
selected MIB view, the probe must change the status of
this alarmEntry to invalid(4).

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmVariable.3428', 
    'leaf', 
    '/fallingAlarm/fallingAlarm-alarmVariable',
    '0',
    '0',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'fallingAlarm-alarmSampleType', '3462',
    '/fallingAlarm/fallingAlarm-alarmSampleType',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#fallingAlarm-alarmSampleType.3462', 
    'container', 
    '/fallingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex alarmSampleType',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3463',
    '/fallingAlarm/fallingAlarm-alarmSampleType/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3463', 
    'leaf', 
    '/fallingAlarm/fallingAlarm-alarmSampleType',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmSampleType', '3471',
    '/fallingAlarm/fallingAlarm-alarmSampleType/alarmSampleType',
    'The method of sampling the selected variable and
calculating the value to be compared against the
thresholds.  If the value of this object is
absoluteValue(1), the value of the selected variable
will be compared directly with the thresholds at the
end of the sampling interval.  If the value of this
object is deltaValue(2), the value of the selected
variable at the last sample will be subtracted from
the current value, and the difference compared with
the thresholds.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmSampleType.3471', 
    'leaf', 
    '/fallingAlarm/fallingAlarm-alarmSampleType',
    '0',
    '0',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'fallingAlarm-alarmValue', '3495',
    '/fallingAlarm/fallingAlarm-alarmValue',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#fallingAlarm-alarmValue.3495', 
    'container', 
    '/fallingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex alarmValue',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3496',
    '/fallingAlarm/fallingAlarm-alarmValue/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3496', 
    'leaf', 
    '/fallingAlarm/fallingAlarm-alarmValue',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmValue', '3504',
    '/fallingAlarm/fallingAlarm-alarmValue/alarmValue',
    'The value of the statistic during the last sampling
period.  For example, if the sample type is deltaValue,
this value will be the difference between the samples
at the beginning and end of the period.  If the sample
type is absoluteValue, this value will be the sampled
value at the end of the period.

This is the value that is compared with the rising and
falling thresholds.

The value during the current sampling period is not
made available until the period is completed and will
remain available until the next period completes.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmValue.3504', 
    'leaf', 
    '/fallingAlarm/fallingAlarm-alarmValue',
    '0',
    '0',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'fallingAlarm-alarmFallingThreshold', '3525',
    '/fallingAlarm/fallingAlarm-alarmFallingThreshold',
    '',
    '',
    '/modules/RMON-MIB/2000-05-11#fallingAlarm-alarmFallingThreshold.3525', 
    'container', 
    '/fallingAlarm',
    '0',
    '0',
    '',
    '',
    'alarmIndex alarmFallingThreshold',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmIndex', '3526',
    '/fallingAlarm/fallingAlarm-alarmFallingThreshold/alarmIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmIndex.3526', 
    'leaf', 
    '/fallingAlarm/fallingAlarm-alarmFallingThreshold',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'RMON-MIB', 'RMON-MIB', '2000-05-11', 'alarmFallingThreshold', '3534',
    '/fallingAlarm/fallingAlarm-alarmFallingThreshold/alarmFallingThreshold',
    'A threshold for the sampled statistic.  When the current
sampled value is less than or equal to this threshold,
and the value at the last sampling interval was greater than
this threshold, a single event will be generated.
A single event will also be generated if the first
sample after this entry becomes valid is less than or
equal to this threshold and the associated
alarmStartupAlarm is equal to fallingAlarm(2) or
risingOrFallingAlarm(3).

After a falling event is generated, another such event
will not be generated until the sampled value
rises above this threshold and reaches the
alarmRisingThreshold.

This object may not be modified if the associated
alarmStatus object is equal to valid(1).',
    '',
    '/modules/RMON-MIB/2000-05-11#alarmFallingThreshold.3534', 
    'leaf', 
    '/fallingAlarm/fallingAlarm-alarmFallingThreshold',
    '0',
    '0',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/HCNUM-TC.yang
# module: HCNUM-TC
# version: 2000-06-08
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'HCNUM-TC');

INSERT INTO ncmodule VALUES (
    '', 'HCNUM-TC', 'HCNUM-TC', '2000-06-08', 'hcnum-tc',
    'urn:ietf:params:xml:ns:yang:smiv2:HCNUM-TC',
    'IETF OPS Area',
    'A MIB module containing textual conventions
for high capacity data types. This module
addresses an immediate need for data types...',
    'A MIB module containing textual conventions
for high capacity data types. This module
addresses an immediate need for data types not directly
supported in the SMIv2. This short-term solution
is meant to be deprecated as a long-term solution
is deployed.',
    '',
    '        E-mail: mibs@ops.ietf.org
Subscribe: majordomo@psg.com
  with msg body: subscribe mibs

Andy Bierman
Cisco Systems Inc.
170 West Tasman Drive
San Jose, CA 95134 USA
+1 408-527-3711
abierman@cisco.com

Keith McCloghrie
Cisco Systems Inc.
170 West Tasman Drive
San Jose, CA 95134 USA
+1 408-526-5260
kzm@cisco.com

Randy Presuhn
BMC Software, Inc.
Office 1-3141
2141 North First Street
San Jose,  California 95131 USA
+1 408 546-1006
rpresuhn@bmc.com',
    'Initial Version of the High Capacity Numbers
MIB module, published as RFC 2856.',
    '/xsd/HCNUM-TC_2000-06-08.xsd',
    '/modules/HCNUM-TC/2000-06-08', 
    '/src/HCNUM-TC_2000-06-08.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/HCNUM-TC.yang',
    'HCNUM-TC.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'HCNUM-TC', 'HCNUM-TC', '2000-06-08', 'CounterBasedGauge64', '69',
    'The CounterBasedGauge64 type represents a non-negative
integer, which may increase or decrease, but shall never
exceed a maximum value, nor fall below a minimum value. The
maximum value can not be greater than 2^64-1
(18446744073709551615 decimal), and the minimum value can

not be smaller than 0.  The value of a CounterBasedGauge64
has its maximum value whenever the information being modeled
is greater than or equal to its maximum value, and has its
minimum value whenever the information being modeled is
smaller than or equal to its minimum value.  If the
information being modeled subsequently decreases below
(increases above) the maximum (minimum) value, the
CounterBasedGauge64 also decreases (increases).

Note that this TC is not strictly supported in SMIv2,
because the \'always increasing\' and \'counter wrap\' semantics
associated with the Counter64 base type are not preserved.
It is possible that management applications which rely
solely upon the (Counter64) ASN.1 tag to determine object
semantics will mistakenly operate upon objects of this type
as they would for Counter64 objects.

This textual convention represents a limited and short-term
solution, and may be deprecated as a long term solution is
defined and deployed to replace it.',
    '',
    '/modules/HCNUM-TC/2000-06-08#CounterBasedGauge64.69', 'uint64', 'counter64', 
    'yang-types', '62', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'HCNUM-TC', 'HCNUM-TC', '2000-06-08', 'ZeroBasedCounter64', '100',
    'This TC describes an object which counts events with the
following semantics: objects of this type will be set to
zero(0) on creation and will thereafter count appropriate
events, wrapping back to zero(0) when the value 2^64 is
reached.

Provided that an application discovers the new object within
the minimum time to wrap it can use the initial value as a
delta since it last polled the table of which this object is
part.  It is important for a management station to be aware
of this minimum time and the actual time between polls, and
to discard data if the actual time is too long or there is
no defined minimum time.

Typically this TC is used in tables where the INDEX space is
constantly changing and/or the TimeFilter mechanism is in
use.

Note that this textual convention does not retain all the
semantics of the Counter64 base type. Specifically, a
Counter64 has an arbitrary initial value, but objects
defined with this TC are required to start at the value

zero.  This behavior is not likely to have any adverse
effects on management applications which are expecting
Counter64 semantics.

This textual convention represents a limited and short-term
solution, and may be deprecated as a long term solution is
defined and deployed to replace it.',
    '',
    '/modules/HCNUM-TC/2000-06-08#ZeroBasedCounter64.100', 'uint64', 'counter64', 
    'yang-types', '62', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/ietf/ENTITY-STATE-TC-MIB.yang
# module: ENTITY-STATE-TC-MIB
# version: 2005-11-22
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'ENTITY-STATE-TC-MIB');

INSERT INTO ncmodule VALUES (
    '', 'ENTITY-STATE-TC-MIB', 'ENTITY-STATE-TC-MIB', '2005-11-22', 'entity-state',
    'urn:ietf:params:xml:ns:yang:smiv2:ENTITY-STATE-TC-MIB',
    'IETF Entity MIB Working Group',
    'This MIB defines state textual conventions.

Copyright (C) The Internet Society 2005.  This version
of this MIB module is part o...',
    'This MIB defines state textual conventions.

Copyright (C) The Internet Society 2005.  This version
of this MIB module is part of RFC 4268;  see the RFC
itself for full legal notices.',
    '',
    'General Discussion: entmib@ietf.org
To Subscribe:
http://www.ietf.org/mailman/listinfo/entmib

http://www.ietf.org/html.charters/entmib-charter.html

Sharon Chisholm
Nortel Networks
PO Box 3511 Station C
Ottawa, Ont.  K1Y 4H7
Canada
schishol@nortel.com

David T. Perkins
548 Qualbrook Ct
San Jose, CA 95110
USA
Phone: 408 394-8702
dperkins@snmpinfo.com',
    'Initial version, published as RFC 4268.',
    '/xsd/ENTITY-STATE-TC-MIB_2005-11-22.xsd',
    '/modules/ENTITY-STATE-TC-MIB/2005-11-22', 
    '/src/ENTITY-STATE-TC-MIB_2005-11-22.yang',
    '/home/andy/swdev/trunk/netconf/modules/ietf/ENTITY-STATE-TC-MIB.yang',
    'ENTITY-STATE-TC-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-STATE-TC-MIB', 'ENTITY-STATE-TC-MIB', '2005-11-22', 'EntityAdminState', '60',
    ' Represents the various possible administrative states.





A value of \'locked\' means the resource is administratively
prohibited from use.  A value of \'shuttingDown\' means that
usage is administratively limited to current instances of
use.  A value of \'unlocked\' means the resource is not
administratively prohibited from use.  A value of
\'unknown\' means that this resource is unable to
report administrative state.',
    '',
    '/modules/ENTITY-STATE-TC-MIB/2005-11-22#EntityAdminState.60', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-STATE-TC-MIB', 'ENTITY-STATE-TC-MIB', '2005-11-22', 'EntityOperState', '83',
    ' Represents the possible values of operational states.

A value of \'disabled\' means the resource is totally
inoperable.  A value of \'enabled\' means the resource
is partially or fully operable.  A value of \'testing\'
means the resource is currently being tested
and cannot therefore report whether it is operational
or not.  A value of \'unknown\' means that this
resource is unable to report operational state.',
    '',
    '/modules/ENTITY-STATE-TC-MIB/2005-11-22#EntityOperState.83', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-STATE-TC-MIB', 'ENTITY-STATE-TC-MIB', '2005-11-22', 'EntityUsageState', '102',
    ' Represents the possible values of usage states.
A value of \'idle\' means the resource is servicing no
users.  A value of \'active\' means the resource is
currently in use and it has sufficient spare capacity
to provide for additional users.  A value of \'busy\'
means the resource is currently in use, but it
currently has no spare capacity to provide for
additional users.  A value of \'unknown\' means
that this resource is unable to report usage state.',
    '',
    '/modules/ENTITY-STATE-TC-MIB/2005-11-22#EntityUsageState.102', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-STATE-TC-MIB', 'ENTITY-STATE-TC-MIB', '2005-11-22', 'EntityAlarmStatus', '121',
    ' Represents the possible values of alarm status.
An Alarm [RFC3877] is a persistent indication
of an error or warning condition.

When no bits of this attribute are set, then no active
alarms are known against this entity and it is not under
repair.

When the \'value of underRepair\' is set, the resource is
currently being repaired, which, depending on the
implementation, may make the other values in this bit
string not meaningful.

When the value of \'critical\' is set, one or more critical
alarms are active against the resource.  When the value
of \'major\' is set, one or more major alarms are active
against the resource.  When the value of \'minor\' is set,
one or more minor alarms are active against the resource.
When the value of \'warning\' is set, one or more warning
alarms are active against the resource.  When the value
of \'indeterminate\' is set, one or more alarms of whose
perceived severity cannot be determined are active
against this resource.

A value of \'unknown\' means that this resource is
unable to report alarm state.',
    '',
    '/modules/ENTITY-STATE-TC-MIB/2005-11-22#EntityAlarmStatus.121', 'bits', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ENTITY-STATE-TC-MIB', 'ENTITY-STATE-TC-MIB', '2005-11-22', 'EntityStandbyStatus', '160',
    ' Represents the possible values of standby status.

A value of \'hotStandby\' means the resource is not
providing service, but it will be immediately able to
take over the role of the resource to be backed up,
without the need for initialization activity, and will
contain the same information as the resource to be
backed up.  A value of \'coldStandy\' means that the
resource is to back up another resource, but will not
be immediately able to take over the role of a resource
to be backed up, and will require some initialization
activity.  A value of \'providingService\' means the
resource is providing service.  A value of
\'unknown\' means that this resource is unable to
report standby state.',
    '',
    '/modules/ENTITY-STATE-TC-MIB/2005-11-22#EntityStandbyStatus.160', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-NOTIFICATION-MIB.yang
# module: SNMP-NOTIFICATION-MIB
# version: 2002-10-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-NOTIFICATION-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmp-notification',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-NOTIFICATION-MIB',
    'IETF SNMPv3 Working Group',
    'This MIB module defines MIB objects which provide
mechanisms to remotely configure the parameters
used by an SNMP entity for the...',
    'This MIB module defines MIB objects which provide
mechanisms to remotely configure the parameters
used by an SNMP entity for the generation of
notifications.

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 3413;
see the RFC itself for full legal notices.',
    '',
    'WG-email:   snmpv3@lists.tislabs.com
Subscribe:  majordomo@lists.tislabs.com
	    In message body:  subscribe snmpv3

Co-Chair:   Russ Mundy
	    Network Associates Laboratories
Postal:     15204 Omega Drive, Suite 300
	    Rockville, MD 20850-4601
	    USA
EMail:      mundy@tislabs.com
Phone:      +1 301-947-7107

Co-Chair:   David Harrington
	    Enterasys Networks
Postal:     35 Industrial Way
	    P. O. Box 5004
	    Rochester, New Hampshire 03866-5005
	    USA
EMail:      dbh@enterasys.com
Phone:      +1 603-337-2614

Co-editor:  David B. Levi
	    Nortel Networks
Postal:     3505 Kesterwood Drive
	    Knoxville, Tennessee 37918
EMail:      dlevi@nortelnetworks.com
Phone:      +1 865 686 0432

Co-editor:  Paul Meyer
	    Secure Computing Corporation
Postal:     2675 Long Lake Road
	    Roseville, Minnesota 55113
EMail:      paul_meyer@securecomputing.com
Phone:      +1 651 628 1592

Co-editor:  Bob Stewart
	    Retired',
    'Clarifications, published as
RFC 3413.',
    '/xsd/SNMP-NOTIFICATION-MIB_2002-10-14.xsd',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14', 
    '/src/SNMP-NOTIFICATION-MIB_2002-10-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-NOTIFICATION-MIB.yang',
    'SNMP-NOTIFICATION-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyObjects', '93',
    '/snmpNotifyObjects',
    '',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyObjects.93', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'snmpNotifyEntry snmpNotifyFilterProfileEntry snmpNotifyFilterEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyEntry', '98',
    '/snmpNotifyObjects/snmpNotifyEntry',
    'An entry in this table selects a set of management targets
which should receive notifications, as well as the type of

notification which should be sent to each selected
management target.

Entries in the snmpNotifyTable are created and
deleted using the snmpNotifyRowStatus object.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyEntry.98', 
    'list', 
    '/snmpNotifyObjects',
    '0',
    '1',
    '',
    '',
    'snmpNotifyName snmpNotifyTag snmpNotifyType snmpNotifyStorageType snmpNotifyRowStatus',
    '',
    'snmpNotifyName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyName', '113',
    '/snmpNotifyObjects/snmpNotifyEntry/snmpNotifyName',
    'The locally arbitrary, but unique identifier associated
with this snmpNotifyEntry.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyName.113', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyTag', '124',
    '/snmpNotifyObjects/snmpNotifyEntry/snmpNotifyTag',
    'This object contains a single tag value which is used
to select entries in the snmpTargetAddrTable.  Any entry
in the snmpTargetAddrTable which contains a tag value
which is equal to the value of an instance of this
object is selected.  If this object contains a value
of zero length, no entries are selected.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyTag.124', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyEntry',
    '0',
    '1',
    'SnmpTagValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyType', '138',
    '/snmpNotifyObjects/snmpNotifyEntry/snmpNotifyType',
    'This object determines the type of notification to

be generated for entries in the snmpTargetAddrTable
selected by the corresponding instance of
snmpNotifyTag.  This value is only used when
generating notifications, and is ignored when
using the snmpTargetAddrTable for other purposes.

If the value of this object is trap(1), then any
messages generated for selected rows will contain
Unconfirmed-Class PDUs.

If the value of this object is inform(2), then any
messages generated for selected rows will contain
Confirmed-Class PDUs.

Note that if an SNMP entity only supports
generation of Unconfirmed-Class PDUs (and not
Confirmed-Class PDUs), then this object may be
read-only.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyType.138', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyStorageType', '169',
    '/snmpNotifyObjects/snmpNotifyEntry/snmpNotifyStorageType',
    'The storage type for this conceptual row.
Conceptual rows having the value \'permanent\' need not
allow write-access to any columnar objects in the row.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyStorageType.169', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyRowStatus', '180',
    '/snmpNotifyObjects/snmpNotifyEntry/snmpNotifyRowStatus',
    'The status of this conceptual row.

To create a row in this table, a manager must
set this object to either createAndGo(4) or
createAndWait(5).',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyRowStatus.180', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterProfileEntry', '196',
    '/snmpNotifyObjects/snmpNotifyFilterProfileEntry',
    'An entry in this table indicates the name of the filter
profile to be used when generating notifications using
the corresponding entry in the snmpTargetParamsTable.

Entries in the snmpNotifyFilterProfileTable are created
and deleted using the snmpNotifyFilterProfileRowStatus
object.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterProfileEntry.196', 
    'list', 
    '/snmpNotifyObjects',
    '0',
    '1',
    '',
    '',
    'snmpTargetParamsName snmpNotifyFilterProfileName snmpNotifyFilterProfileStorType snmpNotifyFilterProfileRowStatus',
    '',
    'snmpTargetParamsName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpTargetParamsName', '209',
    '/snmpNotifyObjects/snmpNotifyFilterProfileEntry/snmpTargetParamsName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpTargetParamsName.209', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterProfileEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterProfileName', '218',
    '/snmpNotifyObjects/snmpNotifyFilterProfileEntry/snmpNotifyFilterProfileName',
    'The name of the filter profile to be used when generating
notifications using the corresponding entry in the
snmpTargetAddrTable.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterProfileName.218', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterProfileEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterProfileStorType', '230',
    '/snmpNotifyObjects/snmpNotifyFilterProfileEntry/snmpNotifyFilterProfileStorType',
    'The storage type for this conceptual row.
Conceptual rows having the value \'permanent\' need not
allow write-access to any columnar objects in the row.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterProfileStorType.230', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterProfileEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterProfileRowStatus', '241',
    '/snmpNotifyObjects/snmpNotifyFilterProfileEntry/snmpNotifyFilterProfileRowStatus',
    'The status of this conceptual row.

To create a row in this table, a manager must
set this object to either createAndGo(4) or
createAndWait(5).

Until instances of all corresponding columns are
appropriately configured, the value of the
corresponding instance of the
snmpNotifyFilterProfileRowStatus column is \'notReady\'.

In particular, a newly created row cannot be made
active until the corresponding instance of
snmpNotifyFilterProfileName has been set.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterProfileRowStatus.241', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterProfileEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterEntry', '266',
    '/snmpNotifyObjects/snmpNotifyFilterEntry',
    'An element of a filter profile.

Entries in the snmpNotifyFilterTable are created and
deleted using the snmpNotifyFilterRowStatus object.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterEntry.266', 
    'list', 
    '/snmpNotifyObjects',
    '0',
    '1',
    '',
    '',
    'snmpNotifyFilterProfileName snmpNotifyFilterSubtree snmpNotifyFilterMask snmpNotifyFilterType snmpNotifyFilterStorageType snmpNotifyFilterRowStatus',
    '',
    'snmpNotifyFilterProfileName 
snmpNotifyFilterSubtree',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterProfileName', '277',
    '/snmpNotifyObjects/snmpNotifyFilterEntry/snmpNotifyFilterProfileName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterProfileName.277', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterSubtree', '286',
    '/snmpNotifyObjects/snmpNotifyFilterEntry/snmpNotifyFilterSubtree',
    'The MIB subtree which, when combined with the corresponding
instance of snmpNotifyFilterMask, defines a family of
subtrees which are included in or excluded from the
filter profile.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterSubtree.286', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterMask', '297',
    '/snmpNotifyObjects/snmpNotifyFilterEntry/snmpNotifyFilterMask',
    'The bit mask which, in combination with the corresponding
instance of snmpNotifyFilterSubtree, defines a family of
subtrees which are included in or excluded from the
filter profile.

Each bit of this bit mask corresponds to a
sub-identifier of snmpNotifyFilterSubtree, with the
most significant bit of the i-th octet of this octet
string value (extended if necessary, see below)
corresponding to the (8*i - 7)-th sub-identifier, and
the least significant bit of the i-th octet of this
octet string corresponding to the (8*i)-th
sub-identifier, where i is in the range 1 through 16.

Each bit of this bit mask specifies whether or not
the corresponding sub-identifiers must match when
determining if an OBJECT IDENTIFIER matches this
family of filter subtrees; a \'1\' indicates that an
exact match must occur; a \'0\' indicates \'wild card\',
i.e., any sub-identifier value matches.

Thus, the OBJECT IDENTIFIER X of an object instance
is contained in a family of filter subtrees if, for
each sub-identifier of the value of
snmpNotifyFilterSubtree, either:

  the i-th bit of snmpNotifyFilterMask is 0, or

  the i-th sub-identifier of X is equal to the i-th
  sub-identifier of the value of
  snmpNotifyFilterSubtree.

If the value of this bit mask is M bits long and
there are more than M sub-identifiers in the
corresponding instance of snmpNotifyFilterSubtree,
then the bit mask is extended with 1\'s to be the
required length.

Note that when the value of this object is the
zero-length string, this extension rule results in
a mask of all-1\'s being used (i.e., no \'wild card\'),
and the family of filter subtrees is the one
subtree uniquely identified by the corresponding
instance of snmpNotifyFilterSubtree.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterMask.297', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterType', '351',
    '/snmpNotifyObjects/snmpNotifyFilterEntry/snmpNotifyFilterType',
    'This object indicates whether the family of filter subtrees
defined by this entry are included in or excluded from a
filter.  A more detailed discussion of the use of this
object can be found in section 6. of [SNMP-APPL].',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterType.351', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterStorageType', '366',
    '/snmpNotifyObjects/snmpNotifyFilterEntry/snmpNotifyFilterStorageType',
    'The storage type for this conceptual row.
Conceptual rows having the value \'permanent\' need not

allow write-access to any columnar objects in the row.',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterStorageType.366', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-NOTIFICATION-MIB', 'SNMP-NOTIFICATION-MIB', '2002-10-14', 'snmpNotifyFilterRowStatus', '378',
    '/snmpNotifyObjects/snmpNotifyFilterEntry/snmpNotifyFilterRowStatus',
    'The status of this conceptual row.

To create a row in this table, a manager must
set this object to either createAndGo(4) or
createAndWait(5).',
    '',
    '/modules/SNMP-NOTIFICATION-MIB/2002-10-14#snmpNotifyFilterRowStatus.378', 
    'leaf', 
    '/snmpNotifyObjects/snmpNotifyFilterEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/ietf/IF-MIB.yang
# module: IF-MIB
# version: 2000-06-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'IF-MIB');

INSERT INTO ncmodule VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'if-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:IF-MIB',
    'IETF Interfaces MIB Working Group',
    'The MIB module to describe generic objects for network
interface sub-layers.  This MIB is an updated version of
MIB-II\'s ifTable...',
    'The MIB module to describe generic objects for network
interface sub-layers.  This MIB is an updated version of
MIB-II\'s ifTable, and incorporates the extensions defined in
RFC 1229.',
    '',
    '   Keith McCloghrie
Cisco Systems, Inc.
170 West Tasman Drive
San Jose, CA  95134-1706
US

408-526-5260
kzm@cisco.com',
    'Clarifications agreed upon by the Interfaces MIB WG, and
published as RFC 2863.',
    '/xsd/IF-MIB_2000-06-14.xsd',
    '/modules/IF-MIB/2000-06-14', 
    '/src/IF-MIB_2000-06-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/ietf/IF-MIB.yang',
    'IF-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'OwnerString', '61',
    'This data type is used to model an administratively
assigned name of the owner of a resource.  This information
is taken from the NVT ASCII character set.  It is suggested
that this name contain one or more of the following: ASCII
form of the manager station\'s transport address, management
station name (e.g., domain name), network management
personnel\'s name, location, or phone number.  In some cases
the agent itself will be the owner of an entry.  In these
cases, this string shall be set to a string starting with
\'agent\'.',
    '',
    '/modules/IF-MIB/2000-06-14#OwnerString.61', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'InterfaceIndex', '81',
    'A unique value, greater than zero, for each interface or
interface sub-layer in the managed system.  It is
recommended that values are assigned contiguously starting
from 1.  The value for each interface sub-layer must remain
constant at least from one re-initialization of the entity\'s
network management system to the next re-initialization.',
    '',
    '/modules/IF-MIB/2000-06-14#InterfaceIndex.81', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'InterfaceIndexOrZero', '95',
    'This textual convention is an extension of the
InterfaceIndex convention.  The latter defines a greater
than zero value used to identify an interface or interface
sub-layer in the managed system.  This extension permits the
additional value of zero.  the value zero is object-specific
and must therefore be defined as part of the description of
any object which uses this syntax.  Examples of the usage of
zero might include situations where interface was unknown,
or when none or all interfaces need to be referenced.',
    '',
    '/modules/IF-MIB/2000-06-14#InterfaceIndexOrZero.95', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'interfaces', '112',
    '/interfaces',
    '',
    '',
    '/modules/IF-MIB/2000-06-14#interfaces.112', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'ifNumber ifEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifNumber', '114',
    '/interfaces/ifNumber',
    'The number of network interfaces (regardless of their
current state) present on this system.',
    '',
    '/modules/IF-MIB/2000-06-14#ifNumber.114', 
    'leaf', 
    '/interfaces',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifEntry', '126',
    '/interfaces/ifEntry',
    'An entry containing management information applicable to a
particular interface.',
    '',
    '/modules/IF-MIB/2000-06-14#ifEntry.126', 
    'list', 
    '/interfaces',
    '0',
    '1',
    '',
    '',
    'ifIndex ifDescr ifType ifMtu ifSpeed ifPhysAddress ifAdminStatus ifOperStatus ifLastChange ifInOctets ifInUcastPkts ifInNUcastPkts ifInDiscards ifInErrors ifInUnknownProtos ifOutOctets ifOutUcastPkts ifOutNUcastPkts ifOutDiscards ifOutErrors ifOutQLen ifSpecific ifName ifInMulticastPkts ifInBroadcastPkts ifOutMulticastPkts ifOutBroadcastPkts ifHCInOctets ifHCInUcastPkts ifHCInMulticastPkts ifHCInBroadcastPkts ifHCOutOctets ifHCOutUcastPkts ifHCOutMulticastPkts ifHCOutBroadcastPkts ifLinkUpDownTrapEnable ifHighSpeed ifPromiscuousMode ifConnectorPresent ifAlias ifCounterDiscontinuityTime ifTestId ifTestStatus ifTestType ifTestResult ifTestCode ifTestOwner',
    '',
    'ifIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifIndex', '135',
    '/interfaces/ifEntry/ifIndex',
    'A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity\'s network management system to the next re-
initialization.',
    '',
    '/modules/IF-MIB/2000-06-14#ifIndex.135', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'InterfaceIndex',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifDescr', '148',
    '/interfaces/ifEntry/ifDescr',
    'A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software.',
    '',
    '/modules/IF-MIB/2000-06-14#ifDescr.148', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifType', '161',
    '/interfaces/ifEntry/ifType',
    'The type of interface.  Additional values for ifType are
assigned by the Internet Assigned Numbers Authority (IANA),
through updating the syntax of the IANAifType textual
convention.',
    '',
    '/modules/IF-MIB/2000-06-14#ifType.161', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'IANAifType',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifMtu', '172',
    '/interfaces/ifEntry/ifMtu',
    'The size of the largest packet which can be sent/received
on the interface, specified in octets.  For interfaces that
are used for transmitting network datagrams, this is the
size of the largest network datagram that can be sent on the
interface.',
    '',
    '/modules/IF-MIB/2000-06-14#ifMtu.172', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifSpeed', '184',
    '/interfaces/ifEntry/ifSpeed',
    'An estimate of the interface\'s current bandwidth in bits
per second.  For interfaces which do not vary in bandwidth
or for those where no accurate estimation can be made, this
object should contain the nominal bandwidth.  If the
bandwidth of the interface is greater than the maximum value
reportable by this object then this object should report its
maximum value (4,294,967,295) and ifHighSpeed must be used
to report the interace\'s speed.  For a sub-layer which has
no concept of bandwidth, this object should be zero.',
    '',
    '/modules/IF-MIB/2000-06-14#ifSpeed.184', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifPhysAddress', '200',
    '/interfaces/ifEntry/ifPhysAddress',
    'The interface\'s address at its protocol sub-layer.  For
example, for an 802.x interface, this object normally
contains a MAC address.  The interface\'s media-specific MIB
must define the bit and byte ordering and the format of the
value of this object.  For interfaces which do not have such
an address (e.g., a serial line), this object should contain
an octet string of zero length.',
    '',
    '/modules/IF-MIB/2000-06-14#ifPhysAddress.200', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'phys-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifAdminStatus', '214',
    '/interfaces/ifEntry/ifAdminStatus',
    'The desired state of the interface.  The testing(3) state
indicates that no operational packets can be passed.  When a
managed system initializes, all interfaces start with
ifAdminStatus in the down(2) state.  As a result of either
explicit management action or per configuration information
retained by the managed system, ifAdminStatus is then
changed to either the up(1) or testing(3) states (or remains
in the down(2) state).',
    '',
    '/modules/IF-MIB/2000-06-14#ifAdminStatus.214', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOperStatus', '233',
    '/interfaces/ifEntry/ifOperStatus',
    'The current operational state of the interface.  The
testing(3) state indicates that no operational packets can
be passed.  If ifAdminStatus is down(2) then ifOperStatus
should be down(2).  If ifAdminStatus is changed to up(1)
then ifOperStatus should change to up(1) if the interface is
ready to transmit and receive network traffic; it should
change to dormant(5) if the interface is waiting for
external actions (such as a serial line waiting for an
incoming connection); it should remain in the down(2) state
if and only if there is a fault that prevents it from going
to the up(1) state; it should remain in the notPresent(6)
state if the interface has missing (typically, hardware)
components.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOperStatus.233', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifLastChange', '261',
    '/interfaces/ifEntry/ifLastChange',
    'The value of sysUpTime at the time the interface entered
its current operational state.  If the current state was
entered prior to the last re-initialization of the local
network management subsystem, then this object contains a
zero value.',
    '',
    '/modules/IF-MIB/2000-06-14#ifLastChange.261', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifInOctets', '273',
    '/interfaces/ifEntry/ifInOctets',
    'The total number of octets received on the interface,
including framing characters.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifInOctets.273', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifInUcastPkts', '287',
    '/interfaces/ifEntry/ifInUcastPkts',
    'The number of packets, delivered by this sub-layer to a
higher (sub-)layer, which were not addressed to a multicast
or broadcast address at this sub-layer.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifInUcastPkts.287', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifInNUcastPkts', '302',
    '/interfaces/ifEntry/ifInNUcastPkts',
    'The number of packets, delivered by this sub-layer to a
higher (sub-)layer, which were addressed to a multicast or
broadcast address at this sub-layer.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.

This object is deprecated in favour of ifInMulticastPkts and
ifInBroadcastPkts.',
    '',
    '/modules/IF-MIB/2000-06-14#ifInNUcastPkts.302', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifInDiscards', '321',
    '/interfaces/ifEntry/ifInDiscards',
    'The number of inbound packets which were chosen to be
discarded even though no errors had been detected to prevent

their being deliverable to a higher-layer protocol.  One
possible reason for discarding such a packet could be to
free up buffer space.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifInDiscards.321', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifInErrors', '339',
    '/interfaces/ifEntry/ifInErrors',
    'For packet-oriented interfaces, the number of inbound
packets that contained errors preventing them from being
deliverable to a higher-layer protocol.  For character-
oriented or fixed-length interfaces, the number of inbound
transmission units that contained errors preventing them
from being deliverable to a higher-layer protocol.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifInErrors.339', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifInUnknownProtos', '357',
    '/interfaces/ifEntry/ifInUnknownProtos',
    'For packet-oriented interfaces, the number of packets
received via the interface which were discarded because of
an unknown or unsupported protocol.  For character-oriented
or fixed-length interfaces that support protocol
multiplexing the number of transmission units received via
the interface which were discarded because of an unknown or
unsupported protocol.  For any interface that does not
support protocol multiplexing, this counter will always be
0.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifInUnknownProtos.357', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOutOctets', '378',
    '/interfaces/ifEntry/ifOutOctets',
    'The total number of octets transmitted out of the
interface, including framing characters.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOutOctets.378', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOutUcastPkts', '392',
    '/interfaces/ifEntry/ifOutUcastPkts',
    'The total number of packets that higher-level protocols
requested be transmitted, and which were not addressed to a
multicast or broadcast address at this sub-layer, including
those that were discarded or not sent.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOutUcastPkts.392', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOutNUcastPkts', '408',
    '/interfaces/ifEntry/ifOutNUcastPkts',
    'The total number of packets that higher-level protocols
requested be transmitted, and which were addressed to a
multicast or broadcast address at this sub-layer, including
those that were discarded or not sent.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.

This object is deprecated in favour of ifOutMulticastPkts
and ifOutBroadcastPkts.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOutNUcastPkts.408', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOutDiscards', '428',
    '/interfaces/ifEntry/ifOutDiscards',
    'The number of outbound packets which were chosen to be
discarded even though no errors had been detected to prevent
their being transmitted.  One possible reason for discarding
such a packet could be to free up buffer space.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOutDiscards.428', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOutErrors', '444',
    '/interfaces/ifEntry/ifOutErrors',
    'For packet-oriented interfaces, the number of outbound
packets that could not be transmitted because of errors.
For character-oriented or fixed-length interfaces, the
number of outbound transmission units that could not be
transmitted because of errors.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOutErrors.444', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOutQLen', '461',
    '/interfaces/ifEntry/ifOutQLen',
    'The length of the output packet queue (in packets).',
    '',
    '/modules/IF-MIB/2000-06-14#ifOutQLen.461', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifSpecific', '470',
    '/interfaces/ifEntry/ifSpecific',
    'A reference to MIB definitions specific to the particular
media being used to realize the interface.  It is

recommended that this value point to an instance of a MIB
object in the media-specific MIB, i.e., that this object
have the semantics associated with the InstancePointer
textual convention defined in RFC 2579.  In fact, it is
recommended that the media-specific MIB specify what value
ifSpecific should/can take for values of ifType.  If no MIB
definitions specific to the particular media are available,
the value should be set to the OBJECT IDENTIFIER { 0 0 }.',
    '',
    '/modules/IF-MIB/2000-06-14#ifSpecific.470', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifName', '645',
    '/interfaces/ifEntry/ifName',
    'The textual name of the interface.  The value of this
object should be the name of the interface as assigned by
the local device and should be suitable for use in commands
entered at the device\'s `console\'.  This might be a text
name, such as `le0\' or a simple port number, such as `1\',
depending on the interface naming syntax of the device.  If
several entries in the ifTable together represent a single
interface as named by the device, then each will have the
same value of ifName.  Note that for an agent which responds
to SNMP queries concerning an interface on some other
(proxied) device, then the value of ifName for such an
interface is the proxied device\'s local name for it.

If there is no local name, or this object is otherwise not
applicable, then this object contains a zero-length string.',
    '',
    '/modules/IF-MIB/2000-06-14#ifName.645', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifInMulticastPkts', '667',
    '/interfaces/ifEntry/ifInMulticastPkts',
    'The number of packets, delivered by this sub-layer to a
higher (sub-)layer, which were addressed to a multicast
address at this sub-layer.  For a MAC layer protocol, this
includes both Group and Functional addresses.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other

times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifInMulticastPkts.667', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifInBroadcastPkts', '684',
    '/interfaces/ifEntry/ifInBroadcastPkts',
    'The number of packets, delivered by this sub-layer to a
higher (sub-)layer, which were addressed to a broadcast
address at this sub-layer.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifInBroadcastPkts.684', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOutMulticastPkts', '699',
    '/interfaces/ifEntry/ifOutMulticastPkts',
    'The total number of packets that higher-level protocols
requested be transmitted, and which were addressed to a
multicast address at this sub-layer, including those that
were discarded or not sent.  For a MAC layer protocol, this
includes both Group and Functional addresses.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOutMulticastPkts.699', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOutBroadcastPkts', '716',
    '/interfaces/ifEntry/ifOutBroadcastPkts',
    'The total number of packets that higher-level protocols
requested be transmitted, and which were addressed to a
broadcast address at this sub-layer, including those that
were discarded or not sent.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other

times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOutBroadcastPkts.716', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifHCInOctets', '733',
    '/interfaces/ifEntry/ifHCInOctets',
    'The total number of octets received on the interface,
including framing characters.  This object is a 64-bit
version of ifInOctets.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifHCInOctets.733', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifHCInUcastPkts', '748',
    '/interfaces/ifEntry/ifHCInUcastPkts',
    'The number of packets, delivered by this sub-layer to a
higher (sub-)layer, which were not addressed to a multicast
or broadcast address at this sub-layer.  This object is a
64-bit version of ifInUcastPkts.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifHCInUcastPkts.748', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifHCInMulticastPkts', '764',
    '/interfaces/ifEntry/ifHCInMulticastPkts',
    'The number of packets, delivered by this sub-layer to a
higher (sub-)layer, which were addressed to a multicast
address at this sub-layer.  For a MAC layer protocol, this
includes both Group and Functional addresses.  This object
is a 64-bit version of ifInMulticastPkts.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifHCInMulticastPkts.764', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifHCInBroadcastPkts', '781',
    '/interfaces/ifEntry/ifHCInBroadcastPkts',
    'The number of packets, delivered by this sub-layer to a
higher (sub-)layer, which were addressed to a broadcast
address at this sub-layer.  This object is a 64-bit version
of ifInBroadcastPkts.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifHCInBroadcastPkts.781', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifHCOutOctets', '797',
    '/interfaces/ifEntry/ifHCOutOctets',
    'The total number of octets transmitted out of the
interface, including framing characters.  This object is a
64-bit version of ifOutOctets.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifHCOutOctets.797', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifHCOutUcastPkts', '812',
    '/interfaces/ifEntry/ifHCOutUcastPkts',
    'The total number of packets that higher-level protocols
requested be transmitted, and which were not addressed to a
multicast or broadcast address at this sub-layer, including
those that were discarded or not sent.  This object is a
64-bit version of ifOutUcastPkts.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifHCOutUcastPkts.812', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifHCOutMulticastPkts', '829',
    '/interfaces/ifEntry/ifHCOutMulticastPkts',
    'The total number of packets that higher-level protocols
requested be transmitted, and which were addressed to a
multicast address at this sub-layer, including those that
were discarded or not sent.  For a MAC layer protocol, this
includes both Group and Functional addresses.  This object
is a 64-bit version of ifOutMulticastPkts.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifHCOutMulticastPkts.829', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifHCOutBroadcastPkts', '847',
    '/interfaces/ifEntry/ifHCOutBroadcastPkts',
    'The total number of packets that higher-level protocols
requested be transmitted, and which were addressed to a
broadcast address at this sub-layer, including those that
were discarded or not sent.  This object is a 64-bit version
of ifOutBroadcastPkts.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
ifCounterDiscontinuityTime.',
    '',
    '/modules/IF-MIB/2000-06-14#ifHCOutBroadcastPkts.847', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifLinkUpDownTrapEnable', '864',
    '/interfaces/ifEntry/ifLinkUpDownTrapEnable',
    'Indicates whether linkUp/linkDown traps should be generated
for this interface.

By default, this object should have the value enabled(1) for
interfaces which do not operate on \'top\' of any other
interface (as defined in the ifStackTable), and disabled(2)
otherwise.',
    '',
    '/modules/IF-MIB/2000-06-14#ifLinkUpDownTrapEnable.864', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifHighSpeed', '881',
    '/interfaces/ifEntry/ifHighSpeed',
    'An estimate of the interface\'s current bandwidth in units
of 1,000,000 bits per second.  If this object reports a
value of `n\' then the speed of the interface is somewhere in
the range of `n-500,000\' to `n+499,999\'.  For interfaces
which do not vary in bandwidth or for those where no
accurate estimation can be made, this object should contain
the nominal bandwidth.  For a sub-layer which has no concept
of bandwidth, this object should be zero.',
    '',
    '/modules/IF-MIB/2000-06-14#ifHighSpeed.881', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifPromiscuousMode', '896',
    '/interfaces/ifEntry/ifPromiscuousMode',
    'This object has a value of false(2) if this interface only
accepts packets/frames that are addressed to this station.
This object has a value of true(1) when the station accepts
all packets/frames transmitted on the media.  The value
true(1) is only legal on certain types of media.  If legal,
setting this object to a value of true(1) may require the
interface to be reset before becoming effective.

The value of ifPromiscuousMode does not affect the reception
of broadcast and multicast packets/frames by the interface.',
    '',
    '/modules/IF-MIB/2000-06-14#ifPromiscuousMode.896', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifConnectorPresent', '913',
    '/interfaces/ifEntry/ifConnectorPresent',
    'This object has the value \'true(1)\' if the interface
sublayer has a physical connector and the value \'false(2)\'
otherwise.',
    '',
    '/modules/IF-MIB/2000-06-14#ifConnectorPresent.913', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifAlias', '923',
    '/interfaces/ifEntry/ifAlias',
    'This object is an \'alias\' name for the interface as
specified by a network manager, and provides a non-volatile
\'handle\' for the interface.

On the first instantiation of an interface, the value of
ifAlias associated with that interface is the zero-length
string.  As and when a value is written into an instance of
ifAlias through a network management set operation, then the
agent must retain the supplied value in the ifAlias instance
associated with the same interface for as long as that
interface remains instantiated, including across all re-
initializations/reboots of the network management system,
including those which result in a change of the interface\'s
ifIndex value.

An example of the value which a network manager might store
in this object for a WAN interface is the (Telco\'s) circuit
number/identifier of the interface.

Some agents may support write-access only for interfaces
having particular values of ifType.  An agent which supports
write access to this object is required to keep the value in
non-volatile storage, but it may limit the length of new
values depending on how much storage is already occupied by
the current values for other interfaces.',
    '',
    '/modules/IF-MIB/2000-06-14#ifAlias.923', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'DisplayString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifCounterDiscontinuityTime', '957',
    '/interfaces/ifEntry/ifCounterDiscontinuityTime',
    'The value of sysUpTime on the most recent occasion at which
any one or more of this interface\'s counters suffered a
discontinuity.  The relevant counters are the specific
instances associated with this interface of any Counter32 or

Counter64 object contained in the ifTable or ifXTable.  If
no such discontinuities have occurred since the last re-
initialization of the local management subsystem, then this
object contains a zero value.',
    '',
    '/modules/IF-MIB/2000-06-14#ifCounterDiscontinuityTime.957', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifTestId', '984',
    '/interfaces/ifEntry/ifTestId',
    'This object identifies the current invocation of the
interface\'s test.',
    '',
    '/modules/IF-MIB/2000-06-14#ifTestId.984', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'TestAndIncr',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifTestStatus', '994',
    '/interfaces/ifEntry/ifTestStatus',
    'This object indicates whether or not some manager currently
has the necessary \'ownership\' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from \'notInUse(1)\' to \'inUse(2)\'.
After completion of a test, the agent resets the value back
to \'notInUse(1)\'.',
    '',
    '/modules/IF-MIB/2000-06-14#ifTestStatus.994', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifTestType', '1011',
    '/interfaces/ifEntry/ifTestType',
    'A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:

    noTest  OBJECT IDENTIFIER ::= { 0 0 }

When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is

only valid when no test is currently in progress, in which
case the indicated test is initiated.

When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned.',
    '',
    '/modules/IF-MIB/2000-06-14#ifTestType.1011', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifTestResult', '1039',
    '/interfaces/ifEntry/ifTestResult',
    'This object contains the result of the most recently
requested test, or the value none(1) if no tests have been
requested since the last reset.  Note that this facility
provides no provision for saving the results of one test
when starting another, as could be required if used by
multiple managers concurrently.',
    '',
    '/modules/IF-MIB/2000-06-14#ifTestResult.1039', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifTestCode', '1061',
    '/interfaces/ifEntry/ifTestCode',
    'This object contains a code which contains more specific
information on the test result, for example an error-code
after a failed test.  Error codes and other values this
object may take are specific to the type of interface and/or
test.  The value may have the semantics of either the
AutonomousType or InstancePointer textual conventions as
defined in RFC 2579.  The identifier:

    testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }

is defined for use if no additional result code is
available.',
    '',
    '/modules/IF-MIB/2000-06-14#ifTestCode.1061', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifTestOwner', '1081',
    '/interfaces/ifEntry/ifTestOwner',
    'The entity which currently has the \'ownership\' required to
invoke a test on this interface.',
    '',
    '/modules/IF-MIB/2000-06-14#ifTestOwner.1081', 
    'leaf', 
    '/interfaces/ifEntry',
    '0',
    '1',
    'OwnerString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifMIBObjects', '492',
    '/ifMIBObjects',
    '',
    '',
    '/modules/IF-MIB/2000-06-14#ifMIBObjects.492', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'ifStackEntry ifRcvAddressEntry ifTableLastChange ifStackLastChange',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifStackEntry', '497',
    '/ifMIBObjects/ifStackEntry',
    'Information on a particular relationship between two sub-
layers, specifying that one sub-layer runs on \'top\' of the
other sub-layer.  Each sub-layer corresponds to a conceptual
row in the ifTable.',
    '',
    '/modules/IF-MIB/2000-06-14#ifStackEntry.497', 
    'list', 
    '/ifMIBObjects',
    '0',
    '1',
    '',
    '',
    'ifStackHigherLayer ifStackLowerLayer ifStackStatus',
    '',
    'ifStackHigherLayer ifStackLowerLayer',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifStackHigherLayer', '508',
    '/ifMIBObjects/ifStackEntry/ifStackHigherLayer',
    'The value of ifIndex corresponding to the higher sub-layer
of the relationship, i.e., the sub-layer which runs on \'top\'
of the sub-layer identified by the corresponding instance of
ifStackLowerLayer.  If there is no higher sub-layer (below
the internetwork layer), then this object has the value 0.',
    '',
    '/modules/IF-MIB/2000-06-14#ifStackHigherLayer.508', 
    'leaf', 
    '/ifMIBObjects/ifStackEntry',
    '0',
    '1',
    'InterfaceIndexOrZero',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifStackLowerLayer', '520',
    '/ifMIBObjects/ifStackEntry/ifStackLowerLayer',
    'The value of ifIndex corresponding to the lower sub-layer
of the relationship, i.e., the sub-layer which runs \'below\'
the sub-layer identified by the corresponding instance of
ifStackHigherLayer.  If there is no lower sub-layer, then
this object has the value 0.',
    '',
    '/modules/IF-MIB/2000-06-14#ifStackLowerLayer.520', 
    'leaf', 
    '/ifMIBObjects/ifStackEntry',
    '0',
    '1',
    'InterfaceIndexOrZero',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifStackStatus', '532',
    '/ifMIBObjects/ifStackEntry/ifStackStatus',
    'The status of the relationship between two sub-layers.

Changing the value of this object from \'active\' to
\'notInService\' or \'destroy\' will likely have consequences up
and down the interface stack.  Thus, write access to this
object is likely to be inappropriate for some types of
interfaces, and many implementations will choose not to
support write-access for any type of interface.',
    '',
    '/modules/IF-MIB/2000-06-14#ifStackStatus.532', 
    'leaf', 
    '/ifMIBObjects/ifStackEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifRcvAddressEntry', '552',
    '/ifMIBObjects/ifRcvAddressEntry',
    'A list of objects identifying an address for which the
system will accept packets/frames on the particular
interface identified by the index value ifIndex.',
    '',
    '/modules/IF-MIB/2000-06-14#ifRcvAddressEntry.552', 
    'list', 
    '/ifMIBObjects',
    '0',
    '1',
    '',
    '',
    'ifIndex ifRcvAddressAddress ifRcvAddressStatus ifRcvAddressType',
    '',
    'ifIndex ifRcvAddressAddress',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifIndex', '561',
    '/ifMIBObjects/ifRcvAddressEntry/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/IF-MIB/2000-06-14#ifIndex.561', 
    'leaf', 
    '/ifMIBObjects/ifRcvAddressEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifRcvAddressAddress', '570',
    '/ifMIBObjects/ifRcvAddressEntry/ifRcvAddressAddress',
    'An address for which the system will accept packets/frames
on this entry\'s interface.',
    '',
    '/modules/IF-MIB/2000-06-14#ifRcvAddressAddress.570', 
    'leaf', 
    '/ifMIBObjects/ifRcvAddressEntry',
    '0',
    '1',
    'phys-address',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifRcvAddressStatus', '579',
    '/ifMIBObjects/ifRcvAddressEntry/ifRcvAddressStatus',
    'This object is used to create and delete rows in the
ifRcvAddressTable.',
    '',
    '/modules/IF-MIB/2000-06-14#ifRcvAddressStatus.579', 
    'leaf', 
    '/ifMIBObjects/ifRcvAddressEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifRcvAddressType', '588',
    '/ifMIBObjects/ifRcvAddressEntry/ifRcvAddressType',
    'This object has the value nonVolatile(3) for those entries
in the table which are valid and will not be deleted by the
next restart of the managed system.  Entries having the
value volatile(2) are valid and exist, but have not been
saved, so that will not exist after the next restart of the
managed system.  Entries having the value other(1) are valid
and exist but are not classified as to whether they will
continue to exist after the next restart.',
    '',
    '/modules/IF-MIB/2000-06-14#ifRcvAddressType.588', 
    'leaf', 
    '/ifMIBObjects/ifRcvAddressEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifTableLastChange', '609',
    '/ifMIBObjects/ifTableLastChange',
    'The value of sysUpTime at the time of the last creation or
deletion of an entry in the ifTable.  If the number of
entries has been unchanged since the last re-initialization
of the local network management subsystem, then this object
contains a zero value.',
    '',
    '/modules/IF-MIB/2000-06-14#ifTableLastChange.609', 
    'leaf', 
    '/ifMIBObjects',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifStackLastChange', '621',
    '/ifMIBObjects/ifStackLastChange',
    'The value of sysUpTime at the time of the last change of
the (whole) interface stack.  A change of the interface
stack is defined to be any creation, deletion, or change in
value of any instance of ifStackStatus.  If the interface
stack has been unchanged since the last re-initialization of
the local network management subsystem, then this object
contains a zero value.',
    '',
    '/modules/IF-MIB/2000-06-14#ifStackLastChange.621', 
    'leaf', 
    '/ifMIBObjects',
    '0',
    '1',
    'timeticks',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'linkDown', '1093',
    '/linkDown',
    'A linkDown trap signifies that the SNMP entity, acting in
an agent role, has detected that the ifOperStatus object for
one of its communication links is about to enter the down
state from some other state (but not from the notPresent
state).  This other state is indicated by the included value
of ifOperStatus.',
    '',
    '/modules/IF-MIB/2000-06-14#linkDown.1093', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'linkDown-ifIndex linkDown-ifAdminStatus linkDown-ifOperStatus',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'linkDown-ifIndex', '1103',
    '/linkDown/linkDown-ifIndex',
    '',
    '',
    '/modules/IF-MIB/2000-06-14#linkDown-ifIndex.1103', 
    'container', 
    '/linkDown',
    '0',
    '0',
    '',
    '',
    'ifIndex',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifIndex', '1104',
    '/linkDown/linkDown-ifIndex/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/IF-MIB/2000-06-14#ifIndex.1104', 
    'leaf', 
    '/linkDown/linkDown-ifIndex',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'linkDown-ifAdminStatus', '1114',
    '/linkDown/linkDown-ifAdminStatus',
    '',
    '',
    '/modules/IF-MIB/2000-06-14#linkDown-ifAdminStatus.1114', 
    'container', 
    '/linkDown',
    '0',
    '0',
    '',
    '',
    'ifIndex ifAdminStatus',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifIndex', '1115',
    '/linkDown/linkDown-ifAdminStatus/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/IF-MIB/2000-06-14#ifIndex.1115', 
    'leaf', 
    '/linkDown/linkDown-ifAdminStatus',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifAdminStatus', '1123',
    '/linkDown/linkDown-ifAdminStatus/ifAdminStatus',
    'The desired state of the interface.  The testing(3) state
indicates that no operational packets can be passed.  When a
managed system initializes, all interfaces start with
ifAdminStatus in the down(2) state.  As a result of either
explicit management action or per configuration information
retained by the managed system, ifAdminStatus is then
changed to either the up(1) or testing(3) states (or remains
in the down(2) state).',
    '',
    '/modules/IF-MIB/2000-06-14#ifAdminStatus.1123', 
    'leaf', 
    '/linkDown/linkDown-ifAdminStatus',
    '0',
    '0',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'linkDown-ifOperStatus', '1143',
    '/linkDown/linkDown-ifOperStatus',
    '',
    '',
    '/modules/IF-MIB/2000-06-14#linkDown-ifOperStatus.1143', 
    'container', 
    '/linkDown',
    '0',
    '0',
    '',
    '',
    'ifIndex ifOperStatus',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifIndex', '1144',
    '/linkDown/linkDown-ifOperStatus/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/IF-MIB/2000-06-14#ifIndex.1144', 
    'leaf', 
    '/linkDown/linkDown-ifOperStatus',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOperStatus', '1152',
    '/linkDown/linkDown-ifOperStatus/ifOperStatus',
    'The current operational state of the interface.  The
testing(3) state indicates that no operational packets can
be passed.  If ifAdminStatus is down(2) then ifOperStatus
should be down(2).  If ifAdminStatus is changed to up(1)
then ifOperStatus should change to up(1) if the interface is
ready to transmit and receive network traffic; it should
change to dormant(5) if the interface is waiting for
external actions (such as a serial line waiting for an
incoming connection); it should remain in the down(2) state
if and only if there is a fault that prevents it from going
to the up(1) state; it should remain in the notPresent(6)
state if the interface has missing (typically, hardware)
components.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOperStatus.1152', 
    'leaf', 
    '/linkDown/linkDown-ifOperStatus',
    '0',
    '0',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'linkUp', '1183',
    '/linkUp',
    'A linkUp trap signifies that the SNMP entity, acting in an
agent role, has detected that the ifOperStatus object for
one of its communication links left the down state and
transitioned into some other state (but not into the
notPresent state).  This other state is indicated by the
included value of ifOperStatus.',
    '',
    '/modules/IF-MIB/2000-06-14#linkUp.1183', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'linkUp-ifIndex linkUp-ifAdminStatus linkUp-ifOperStatus',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'linkUp-ifIndex', '1193',
    '/linkUp/linkUp-ifIndex',
    '',
    '',
    '/modules/IF-MIB/2000-06-14#linkUp-ifIndex.1193', 
    'container', 
    '/linkUp',
    '0',
    '0',
    '',
    '',
    'ifIndex',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifIndex', '1194',
    '/linkUp/linkUp-ifIndex/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/IF-MIB/2000-06-14#ifIndex.1194', 
    'leaf', 
    '/linkUp/linkUp-ifIndex',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'linkUp-ifAdminStatus', '1204',
    '/linkUp/linkUp-ifAdminStatus',
    '',
    '',
    '/modules/IF-MIB/2000-06-14#linkUp-ifAdminStatus.1204', 
    'container', 
    '/linkUp',
    '0',
    '0',
    '',
    '',
    'ifIndex ifAdminStatus',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifIndex', '1205',
    '/linkUp/linkUp-ifAdminStatus/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/IF-MIB/2000-06-14#ifIndex.1205', 
    'leaf', 
    '/linkUp/linkUp-ifAdminStatus',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifAdminStatus', '1213',
    '/linkUp/linkUp-ifAdminStatus/ifAdminStatus',
    'The desired state of the interface.  The testing(3) state
indicates that no operational packets can be passed.  When a
managed system initializes, all interfaces start with
ifAdminStatus in the down(2) state.  As a result of either
explicit management action or per configuration information
retained by the managed system, ifAdminStatus is then
changed to either the up(1) or testing(3) states (or remains
in the down(2) state).',
    '',
    '/modules/IF-MIB/2000-06-14#ifAdminStatus.1213', 
    'leaf', 
    '/linkUp/linkUp-ifAdminStatus',
    '0',
    '0',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'linkUp-ifOperStatus', '1233',
    '/linkUp/linkUp-ifOperStatus',
    '',
    '',
    '/modules/IF-MIB/2000-06-14#linkUp-ifOperStatus.1233', 
    'container', 
    '/linkUp',
    '0',
    '0',
    '',
    '',
    'ifIndex ifOperStatus',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifIndex', '1234',
    '/linkUp/linkUp-ifOperStatus/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/IF-MIB/2000-06-14#ifIndex.1234', 
    'leaf', 
    '/linkUp/linkUp-ifOperStatus',
    '0',
    '0',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-MIB', 'IF-MIB', '2000-06-14', 'ifOperStatus', '1242',
    '/linkUp/linkUp-ifOperStatus/ifOperStatus',
    'The current operational state of the interface.  The
testing(3) state indicates that no operational packets can
be passed.  If ifAdminStatus is down(2) then ifOperStatus
should be down(2).  If ifAdminStatus is changed to up(1)
then ifOperStatus should change to up(1) if the interface is
ready to transmit and receive network traffic; it should
change to dormant(5) if the interface is waiting for
external actions (such as a serial line waiting for an
incoming connection); it should remain in the down(2) state
if and only if there is a fault that prevents it from going
to the up(1) state; it should remain in the notPresent(6)
state if the interface has missing (typically, hardware)
components.',
    '',
    '/modules/IF-MIB/2000-06-14#ifOperStatus.1242', 
    'leaf', 
    '/linkUp/linkUp-ifOperStatus',
    '0',
    '0',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/ietf/INET-ADDRESS-MIB.yang
# module: INET-ADDRESS-MIB
# version: 2005-02-04
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'INET-ADDRESS-MIB');

INSERT INTO ncmodule VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'inet-address',
    'urn:ietf:params:xml:ns:yang:smiv2:INET-ADDRESS-MIB',
    'IETF Operations and Management Area',
    'This MIB module defines textual conventions for
representing Internet addresses.  An Internet
address can be an IPv4 address, an...',
    'This MIB module defines textual conventions for
representing Internet addresses.  An Internet
address can be an IPv4 address, an IPv6 address,
or a DNS domain name.  This module also defines
textual conventions for Internet port numbers,
autonomous system numbers, and the length of an
Internet address prefix.

Copyright (C) The Internet Society (2005).  This version
of this MIB module is part of RFC 4001, see the RFC
itself for full legal notices.',
    '',
    'Juergen Schoenwaelder (Editor)
International University Bremen
P.O. Box 750 561
28725 Bremen, Germany

Phone: +49 421 200-3587
EMail: j.schoenwaelder@iu-bremen.de

Send comments to <ietfmibs@ops.ietf.org>.',
    'Third version, published as RFC 4001.  This revision
introduces the InetZoneIndex, InetScopeType, and
InetVersion textual conventions.',
    '/xsd/INET-ADDRESS-MIB_2005-02-04.xsd',
    '/modules/INET-ADDRESS-MIB/2005-02-04', 
    '/src/INET-ADDRESS-MIB_2005-02-04.yang',
    '/home/andy/swdev/trunk/netconf/modules/ietf/INET-ADDRESS-MIB.yang',
    'INET-ADDRESS-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetAddressType', '71',
    'A value that represents a type of Internet address.

unknown(0)  An unknown address type.  This value MUST
	    be used if the value of the corresponding
	    InetAddress object is a zero-length string.
	    It may also be used to indicate an IP address
	    that is not in one of the formats defined
	    below.

ipv4(1)     An IPv4 address as defined by the
	    InetAddressIPv4 textual convention.

ipv6(2)     An IPv6 address as defined by the
	    InetAddressIPv6 textual convention.

ipv4z(3)    A non-global IPv4 address including a zone
	    index as defined by the InetAddressIPv4z
	    textual convention.

ipv6z(4)    A non-global IPv6 address including a zone
	    index as defined by the InetAddressIPv6z
	    textual convention.

dns(16)     A DNS domain name as defined by the
	    InetAddressDNS textual convention.

Each definition of a concrete InetAddressType value must be
accompanied by a definition of a textual convention for use
with that InetAddressType.

To support future extensions, the InetAddressType textual
convention SHOULD NOT be sub-typed in object type definitions.
It MAY be sub-typed in compliance statements in order to
require only a subset of these address types for a compliant
implementation.

Implementations must ensure that InetAddressType objects
and any dependent objects (e.g., InetAddress objects) are
consistent.  An inconsistentValue error must be generated
if an attempt to change an InetAddressType object would,
for example, lead to an undefined InetAddress value.  In

particular, InetAddressType/InetAddress pairs must be
changed together if the address type changes (e.g., from
ipv6(2) to ipv4(1)).',
    '',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressType.71', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetAddress', '128',
    'Denotes a generic Internet address.

An InetAddress value is always interpreted within the context
of an InetAddressType value.  Every usage of the InetAddress
textual convention is required to specify the InetAddressType
object that provides the context.  It is suggested that the
InetAddressType object be logically registered before the
object(s) that use the InetAddress textual convention, if
they appear in the same logical row.

The value of an InetAddress object must always be
consistent with the value of the associated InetAddressType
object.  Attempts to set an InetAddress object to a value
inconsistent with the associated InetAddressType
must fail with an inconsistentValue error.

When this textual convention is used as the syntax of an
index object, there may be issues with the limit of 128
sub-identifiers specified in SMIv2, STD 58.  In this case,
the object definition MUST include a \'SIZE\' clause to
limit the number of potential instance sub-identifiers;
otherwise the applicable constraints MUST be stated in
the appropriate conceptual row DESCRIPTION clauses, or
in the surrounding documentation if there is no single
DESCRIPTION clause that is appropriate.',
    '',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetAddress.128', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetAddressIPv4', '160',
    'Represents an IPv4 network address:

Octets   Contents         Encoding
 1-4     IPv4 address     network-byte order

The corresponding InetAddressType value is ipv4(1).

This textual convention SHOULD NOT be used directly in object
definitions, as it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or in
conjunction with InetAddressType, as a pair.',
    '',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressIPv4.160', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetAddressIPv6', '180',
    'Represents an IPv6 network address:

Octets   Contents         Encoding
 1-16    IPv6 address     network-byte order

The corresponding InetAddressType value is ipv6(2).

This textual convention SHOULD NOT be used directly in object
definitions, as it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or in
conjunction with InetAddressType, as a pair.',
    '',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressIPv6.180', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetAddressIPv4z', '200',
    'Represents a non-global IPv4 network address, together
with its zone index:

  Octets   Contents         Encoding
   1-4     IPv4 address     network-byte order
   5-8     zone index       network-byte order

The corresponding InetAddressType value is ipv4z(3).

The zone index (bytes 5-8) is used to disambiguate identical
address values on nodes that have interfaces attached to
different zones of the same scope.  The zone index may contain
the special value 0, which refers to the default zone for each
scope.

This textual convention SHOULD NOT be used directly in object

definitions, as it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or in
conjunction with InetAddressType, as a pair.',
    '',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressIPv4z.200', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetAddressIPv6z', '229',
    'Represents a non-global IPv6 network address, together
with its zone index:

  Octets   Contents         Encoding
   1-16    IPv6 address     network-byte order
  17-20    zone index       network-byte order

The corresponding InetAddressType value is ipv6z(4).

The zone index (bytes 17-20) is used to disambiguate
identical address values on nodes that have interfaces
attached to different zones of the same scope.  The zone index
may contain the special value 0, which refers to the default
zone for each scope.

This textual convention SHOULD NOT be used directly in object
definitions, as it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or in
conjunction with InetAddressType, as a pair.',
    '',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressIPv6z.229', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetAddressDNS', '257',
    'Represents a DNS domain name.  The name SHOULD be fully
qualified whenever possible.

The corresponding InetAddressType is dns(16).

The DESCRIPTION clause of InetAddress objects that may have
InetAddressDNS values MUST fully describe how (and when)
these names are to be resolved to IP addresses.

The resolution of an InetAddressDNS value may require to
query multiple DNS records (e.g., A for IPv4 and AAAA for
IPv6).  The order of the resolution process and which DNS
record takes precedence depends on the configuration of the
resolver.

This textual convention SHOULD NOT be used directly in object
definitions, as it restricts addresses to a specific format.
However, if it is used, it MAY be used either on its own or in
conjunction with InetAddressType, as a pair.',
    '',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressDNS.257', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetAddressPrefixLength', '285',
    'Denotes the length of a generic Internet network address
prefix.  A value of n corresponds to an IP address mask
that has n contiguous 1-bits from the most significant
bit (MSB), with all other bits set to 0.

An InetAddressPrefixLength value is always interpreted within
the context of an InetAddressType value.  Every usage of the
InetAddressPrefixLength textual convention is required to
specify the InetAddressType object that provides the
context.  It is suggested that the InetAddressType object be
logically registered before the object(s) that use the
InetAddressPrefixLength textual convention, if they appear
in the same logical row.

InetAddressPrefixLength values larger than
the maximum length of an IP address for a specific
InetAddressType are treated as the maximum significant
value applicable for the InetAddressType.  The maximum
significant value is 32 for the InetAddressType
\'ipv4(1)\' and \'ipv4z(3)\' and 128 for the InetAddressType
\'ipv6(2)\' and \'ipv6z(4)\'.  The maximum significant value
for the InetAddressType \'dns(16)\' is 0.

The value zero is object-specific and must be defined as
part of the description of any object that uses this
syntax.  Examples of the usage of zero might include
situations where the Internet network address prefix
is unknown or does not apply.

The upper bound of the prefix length has been chosen to
be consistent with the maximum size of an InetAddress.',
    '',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetAddressPrefixLength.285', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetPortNumber', '324',
    'Represents a 16 bit port number of an Internet transport

layer protocol.  Port numbers are assigned by IANA.  A
current list of all assignments is available from
<http://www.iana.org/>.

The value zero is object-specific and must be defined as
part of the description of any object that uses this
syntax.  Examples of the usage of zero might include
situations where a port number is unknown, or when the
value zero is used as a wildcard in a filter.',
    'STD 6 (RFC 768), STD 7 (RFC 793) and RFC 2960',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetPortNumber.324', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetAutonomousSystemNumber', '345',
    'Represents an autonomous system number that identifies an
Autonomous System (AS).  An AS is a set of routers under a
single technical administration, using an interior gateway
protocol and common metrics to route packets within the AS,
and using an exterior gateway protocol to route packets to
other ASes\'.  IANA maintains the AS number space and has
delegated large parts to the regional registries.

Autonomous system numbers are currently limited to 16 bits
(0..65535).  There is, however, work in progress to enlarge the
autonomous system number space to 32 bits.  Therefore, this
textual convention uses an Unsigned32 value without a
range restriction in order to support a larger autonomous
system number space.',
    'RFC 1771, RFC 1930',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetAutonomousSystemNumber.345', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetScopeType', '367',
    'Represents a scope type.  This textual convention can be used
in cases where a MIB has to represent different scope types
and there is no context information, such as an InetAddress
object, that implicitly defines the scope type.

Note that not all possible values have been assigned yet, but
they may be assigned in future revisions of this specification.
Applications should therefore be able to deal with values
not yet assigned.',
    'RFC 3513',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetScopeType.367', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetZoneIndex', '391',
    'A zone index identifies an instance of a zone of a
specific scope.

The zone index MUST disambiguate identical address
values.  For link-local addresses, the zone index will
typically be the interface index (ifIndex as defined in the
IF-MIB) of the interface on which the address is configured.

The zone index may contain the special value 0, which refers
to the default zone.  The default zone may be used in cases
where the valid zone index is not known (e.g., when a
management application has to write a link-local IPv6
address without knowing the interface index value).  The
default zone SHOULD NOT be used as an easy way out in
cases where the zone index for a non-global IPv6 address
is known.',
    'RFC4007',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetZoneIndex.391', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'INET-ADDRESS-MIB', 'INET-ADDRESS-MIB', '2005-02-04', 'InetVersion', '415',
    'A value representing a version of the IP protocol.

unknown(0)  An unknown or unspecified version of the IP
	    protocol.

ipv4(1)     The IPv4 protocol as defined in RFC 791 (STD 5).

ipv6(2)     The IPv6 protocol as defined in RFC 2460.

Note that this textual convention SHOULD NOT be used to
distinguish different address types associated with IP
protocols.  The InetAddressType has been designed for this
purpose.',
    'RFC 791, RFC 2460',
    '/modules/INET-ADDRESS-MIB/2005-02-04#InetVersion.415', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/ietf/IANA-RTPROTO-MIB.yang
# module: IANA-RTPROTO-MIB
# version: 2000-09-26
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'IANA-RTPROTO-MIB');

INSERT INTO ncmodule VALUES (
    '', 'IANA-RTPROTO-MIB', 'IANA-RTPROTO-MIB', '2000-09-26', 'iana-rtproto',
    'urn:ietf:params:xml:ns:yang:smiv2:IANA-RTPROTO-MIB',
    'IANA',
    'This MIB module defines the IANAipRouteProtocol and
IANAipMRouteProtocol textual conventions for use in MIBs
which need to ident...',
    'This MIB module defines the IANAipRouteProtocol and
IANAipMRouteProtocol textual conventions for use in MIBs
which need to identify unicast or multicast routing
mechanisms.

Any additions or changes to the contents of this MIB module
require either publication of an RFC, or Designated Expert
Review as defined in RFC 2434, Guidelines for Writing an
IANA Considerations Section in RFCs.  The Designated Expert 
will be selected by the IESG Area Director(s) of the Routing
Area.',
    '',
    ' Internet Assigned Numbers Authority
Internet Corporation for Assigned Names and Numbers
4676 Admiralty Way, Suite 330
Marina del Rey, CA 90292-6601

Phone: +1 310 823 9358
EMail: iana@iana.org',
    'Original version, published in coordination
with RFC 2932.',
    '/xsd/IANA-RTPROTO-MIB_2000-09-26.xsd',
    '/modules/IANA-RTPROTO-MIB/2000-09-26', 
    '/src/IANA-RTPROTO-MIB_2000-09-26.yang',
    '/home/andy/swdev/trunk/netconf/modules/ietf/IANA-RTPROTO-MIB.yang',
    'IANA-RTPROTO-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IANA-RTPROTO-MIB', 'IANA-RTPROTO-MIB', '2000-09-26', 'IANAipRouteProtocol', '55',
    'A mechanism for learning routes.  Inclusion of values for
routing protocols is not intended to imply that those
protocols need be supported.',
    '',
    '/modules/IANA-RTPROTO-MIB/2000-09-26#IANAipRouteProtocol.55', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'IANA-RTPROTO-MIB', 'IANA-RTPROTO-MIB', '2000-09-26', 'IANAipMRouteProtocol', '81',
    'The multicast routing protocol.  Inclusion of values for
multicast routing protocols is not intended to imply that
those protocols need be supported.',
    '',
    '/modules/IANA-RTPROTO-MIB/2000-09-26#IANAipMRouteProtocol.81', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/ietf/SNMP-TARGET-MIB.yang
# module: SNMP-TARGET-MIB
# version: 2002-10-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-TARGET-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmp-target',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-TARGET-MIB',
    'IETF SNMPv3 Working Group',
    'This MIB module defines MIB objects which provide
mechanisms to remotely configure the parameters used
by an SNMP entity for the...',
    'This MIB module defines MIB objects which provide
mechanisms to remotely configure the parameters used
by an SNMP entity for the generation of SNMP messages.

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 3413;
see the RFC itself for full legal notices.',
    '',
    'WG-email:   snmpv3@lists.tislabs.com
Subscribe:  majordomo@lists.tislabs.com
	    In message body:  subscribe snmpv3

Co-Chair:   Russ Mundy
	    Network Associates Laboratories
Postal:     15204 Omega Drive, Suite 300
	    Rockville, MD 20850-4601
	    USA
EMail:      mundy@tislabs.com
Phone:      +1 301-947-7107

Co-Chair:   David Harrington
	    Enterasys Networks
Postal:     35 Industrial Way
	    P. O. Box 5004
	    Rochester, New Hampshire 03866-5005
	    USA
EMail:      dbh@enterasys.com
Phone:      +1 603-337-2614

Co-editor:  David B. Levi
	    Nortel Networks
Postal:     3505 Kesterwood Drive
	    Knoxville, Tennessee 37918
EMail:      dlevi@nortelnetworks.com
Phone:      +1 865 686 0432

Co-editor:  Paul Meyer
	    Secure Computing Corporation
Postal:     2675 Long Lake Road

	    Roseville, Minnesota 55113
EMail:      paul_meyer@securecomputing.com
Phone:      +1 651 628 1592

Co-editor:  Bob Stewart
	    Retired',
    'Fixed DISPLAY-HINTS for UTF-8 strings, fixed hex
value of LF characters, clarified meaning of zero
length tag values, improved tag list examples.
Published as RFC 3413.',
    '/xsd/SNMP-TARGET-MIB_2002-10-14.xsd',
    '/modules/SNMP-TARGET-MIB/2002-10-14', 
    '/src/SNMP-TARGET-MIB_2002-10-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/ietf/SNMP-TARGET-MIB.yang',
    'SNMP-TARGET-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'SnmpTagValue', '96',
    'An octet string containing a tag value.
Tag values are preferably in human-readable form.

To facilitate internationalization, this information
is represented using the ISO/IEC IS 10646-1 character
set, encoded as an octet string using the UTF-8
character encoding scheme described in RFC 2279.

Since additional code points are added by amendments
to the 10646 standard from time to time,
implementations must be prepared to encounter any code
point from 0x00000000 to 0x7fffffff.

The use of control codes should be avoided, and certain

control codes are not allowed as described below.

For code points not directly supported by user
interface hardware or software, an alternative means
of entry and display, such as hexadecimal, may be
provided.

For information encoded in 7-bit US-ASCII, the UTF-8
representation is identical to the US-ASCII encoding.

Note that when this TC is used for an object that
is used or envisioned to be used as an index, then a
SIZE restriction must be specified so that the number
of sub-identifiers for any object instance does not
exceed the limit of 128, as defined by [RFC1905].

An object of this type contains a single tag value
which is used to select a set of entries in a table.

A tag value is an arbitrary string of octets, but
may not contain a delimiter character.  Delimiter
characters are defined to be one of the following:

    -  An ASCII space character (0x20).

    -  An ASCII TAB character (0x09).

    -  An ASCII carriage return (CR) character (0x0D).

    -  An ASCII line feed (LF) character (0x0A).

Delimiter characters are used to separate tag values
in a tag list.  An object of this type may only
contain a single tag value, and so delimiter
characters are not allowed in a value of this type.

Note that a tag value of 0 length means that no tag is
defined.  In other words, a tag value of 0 length would
never match anything in a tag list, and would never
select any table entries.

Some examples of valid tag values are:

    - \'acme\'

    - \'router\'

    - \'host\'

The use of a tag value to select table entries is
application and MIB specific.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#SnmpTagValue.96', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'SnmpTagList', '171',
    'An octet string containing a list of tag values.
Tag values are preferably in human-readable form.

To facilitate internationalization, this information
is represented using the ISO/IEC IS 10646-1 character
set, encoded as an octet string using the UTF-8
character encoding scheme described in RFC 2279.

Since additional code points are added by amendments
to the 10646 standard from time to time,
implementations must be prepared to encounter any code
point from 0x00000000 to 0x7fffffff.

The use of control codes should be avoided, except as
described below.

For code points not directly supported by user
interface hardware or software, an alternative means
of entry and display, such as hexadecimal, may be
provided.

For information encoded in 7-bit US-ASCII, the UTF-8
representation is identical to the US-ASCII encoding.

An object of this type contains a list of tag values
which are used to select a set of entries in a table.

A tag value is an arbitrary string of octets, but
may not contain a delimiter character.  Delimiter
characters are defined to be one of the following:

    -  An ASCII space character (0x20).

    -  An ASCII TAB character (0x09).

    -  An ASCII carriage return (CR) character (0x0D).

    -  An ASCII line feed (LF) character (0x0A).

Delimiter characters are used to separate tag values

in a tag list.  Only a single delimiter character may
occur between two tag values.  A tag value may not
have a zero length.  These constraints imply certain
restrictions on the contents of this object:

    - There cannot be a leading or trailing delimiter
      character.

    - There cannot be multiple adjacent delimiter
      characters.

Some examples of valid tag lists are:

    - \'\'                        -- an empty list

    - \'acme\'                    -- list of one tag

    - \'host router bridge\'      -- list of several tags

Note that although a tag value may not have a length of
zero, an empty string is still valid.  This indicates
an empty list (i.e. there are no tag values in the list).

The use of the tag list to select table entries is
application and MIB specific.  Typically, an application
will provide one or more tag values, and any entry
which contains some combination of these tag values
will be selected.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#SnmpTagList.171', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetObjects', '249',
    '/snmpTargetObjects',
    '',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetObjects.249', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'snmpTargetSpinLock snmpTargetAddrEntry snmpTargetParamsEntry snmpUnavailableContexts snmpUnknownContexts',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetSpinLock', '251',
    '/snmpTargetObjects/snmpTargetSpinLock',
    'This object is used to facilitate modification of table
entries in the SNMP-TARGET-MIB module by multiple
managers.  In particular, it is useful when modifying
the value of the snmpTargetAddrTagList object.

The procedure for modifying the snmpTargetAddrTagList
object is as follows:

    1.  Retrieve the value of snmpTargetSpinLock and
	of snmpTargetAddrTagList.

    2.  Generate a new value for snmpTargetAddrTagList.

    3.  Set the value of snmpTargetSpinLock to the
	retrieved value, and the value of
	snmpTargetAddrTagList to the new value.  If
	the set fails for the snmpTargetSpinLock
	object, go back to step 1.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetSpinLock.251', 
    'leaf', 
    '/snmpTargetObjects',
    '0',
    '1',
    'TestAndIncr',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrEntry', '279',
    '/snmpTargetObjects/snmpTargetAddrEntry',
    'A transport address to be used in the generation
of SNMP operations.

Entries in the snmpTargetAddrTable are created and
deleted using the snmpTargetAddrRowStatus object.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrEntry.279', 
    'list', 
    '/snmpTargetObjects',
    '0',
    '1',
    '',
    '',
    'snmpTargetAddrName snmpTargetAddrTDomain snmpTargetAddrTAddress snmpTargetAddrTimeout snmpTargetAddrRetryCount snmpTargetAddrTagList snmpTargetAddrParams snmpTargetAddrStorageType snmpTargetAddrRowStatus',
    '',
    'snmpTargetAddrName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrName', '291',
    '/snmpTargetObjects/snmpTargetAddrEntry/snmpTargetAddrName',
    'The locally arbitrary, but unique identifier associated
with this snmpTargetAddrEntry.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrName.291', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetAddrEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrTDomain', '302',
    '/snmpTargetObjects/snmpTargetAddrEntry/snmpTargetAddrTDomain',
    'This object indicates the transport type of the address
contained in the snmpTargetAddrTAddress object.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrTDomain.302', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetAddrEntry',
    '0',
    '1',
    'TDomain',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrTAddress', '311',
    '/snmpTargetObjects/snmpTargetAddrEntry/snmpTargetAddrTAddress',
    'This object contains a transport address.  The format of
this address depends on the value of the
snmpTargetAddrTDomain object.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrTAddress.311', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetAddrEntry',
    '0',
    '1',
    'TAddress',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrTimeout', '321',
    '/snmpTargetObjects/snmpTargetAddrEntry/snmpTargetAddrTimeout',
    'This object should reflect the expected maximum round
trip time for communicating with the transport address
defined by this row.  When a message is sent to this
address, and a response (if one is expected) is not
received within this time period, an implementation
may assume that the response will not be delivered.

Note that the time interval that an application waits
for a response may actually be derived from the value
of this object.  The method for deriving the actual time
interval is implementation dependent.  One such method
is to derive the expected round trip time based on a
particular retransmission algorithm and on the number
of timeouts which have occurred.  The type of message may
also be considered when deriving expected round trip
times for retransmissions.  For example, if a message is
being sent with a securityLevel that indicates both

authentication and privacy, the derived value may be
increased to compensate for extra processing time spent
during authentication and encryption processing.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrTimeout.321', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetAddrEntry',
    '0',
    '1',
    'TimeInterval',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrRetryCount', '350',
    '/snmpTargetObjects/snmpTargetAddrEntry/snmpTargetAddrRetryCount',
    'This object specifies a default number of retries to be
attempted when a response is not received for a generated
message.  An application may provide its own retry count,
in which case the value of this object is ignored.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrRetryCount.350', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetAddrEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrTagList', '364',
    '/snmpTargetObjects/snmpTargetAddrEntry/snmpTargetAddrTagList',
    'This object contains a list of tag values which are
used to select target addresses for a particular
operation.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrTagList.364', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetAddrEntry',
    '0',
    '1',
    'SnmpTagList',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrParams', '375',
    '/snmpTargetObjects/snmpTargetAddrEntry/snmpTargetAddrParams',
    'The value of this object identifies an entry in the
snmpTargetParamsTable.  The identified entry
contains SNMP parameters to be used when generating
messages to be sent to this transport address.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrParams.375', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetAddrEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrStorageType', '388',
    '/snmpTargetObjects/snmpTargetAddrEntry/snmpTargetAddrStorageType',
    'The storage type for this conceptual row.
Conceptual rows having the value \'permanent\' need not
allow write-access to any columnar objects in the row.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrStorageType.388', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetAddrEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetAddrRowStatus', '399',
    '/snmpTargetObjects/snmpTargetAddrEntry/snmpTargetAddrRowStatus',
    'The status of this conceptual row.

To create a row in this table, a manager must
set this object to either createAndGo(4) or
createAndWait(5).

Until instances of all corresponding columns are
appropriately configured, the value of the
corresponding instance of the snmpTargetAddrRowStatus
column is \'notReady\'.

In particular, a newly created row cannot be made
active until the corresponding instances of
snmpTargetAddrTDomain, snmpTargetAddrTAddress, and
snmpTargetAddrParams have all been set.

The following objects may not be modified while the
value of this object is active(1):
    - snmpTargetAddrTDomain
    - snmpTargetAddrTAddress
An attempt to set these objects while the value of
snmpTargetAddrRowStatus is active(1) will result in
an inconsistentValue error.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetAddrRowStatus.399', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetAddrEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetParamsEntry', '433',
    '/snmpTargetObjects/snmpTargetParamsEntry',
    'A set of SNMP target information.

Entries in the snmpTargetParamsTable are created and
deleted using the snmpTargetParamsRowStatus object.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetParamsEntry.433', 
    'list', 
    '/snmpTargetObjects',
    '0',
    '1',
    '',
    '',
    'snmpTargetParamsName snmpTargetParamsMPModel snmpTargetParamsSecurityModel snmpTargetParamsSecurityName snmpTargetParamsSecurityLevel snmpTargetParamsStorageType snmpTargetParamsRowStatus',
    '',
    'snmpTargetParamsName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetParamsName', '444',
    '/snmpTargetObjects/snmpTargetParamsEntry/snmpTargetParamsName',
    'The locally arbitrary, but unique identifier associated
with this snmpTargetParamsEntry.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetParamsName.444', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetParamsEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetParamsMPModel', '455',
    '/snmpTargetObjects/snmpTargetParamsEntry/snmpTargetParamsMPModel',
    'The Message Processing Model to be used when generating
SNMP messages using this entry.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetParamsMPModel.455', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetParamsEntry',
    '0',
    '1',
    'SnmpMessageProcessingModel',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetParamsSecurityModel', '464',
    '/snmpTargetObjects/snmpTargetParamsEntry/snmpTargetParamsSecurityModel',
    'The Security Model to be used when generating SNMP
messages using this entry.  An implementation may
choose to return an inconsistentValue error if an
attempt is made to set this variable to a value
for a security model which the implementation does
not support.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetParamsSecurityModel.464', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetParamsEntry',
    '0',
    '1',
    'SnmpSecurityModel',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetParamsSecurityName', '479',
    '/snmpTargetObjects/snmpTargetParamsEntry/snmpTargetParamsSecurityName',
    'The securityName which identifies the Principal on
whose behalf SNMP messages will be generated using
this entry.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetParamsSecurityName.479', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetParamsEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetParamsSecurityLevel', '489',
    '/snmpTargetObjects/snmpTargetParamsEntry/snmpTargetParamsSecurityLevel',
    'The Level of Security to be used when generating
SNMP messages using this entry.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetParamsSecurityLevel.489', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetParamsEntry',
    '0',
    '1',
    'SnmpSecurityLevel',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetParamsStorageType', '498',
    '/snmpTargetObjects/snmpTargetParamsEntry/snmpTargetParamsStorageType',
    'The storage type for this conceptual row.
Conceptual rows having the value \'permanent\' need not
allow write-access to any columnar objects in the row.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetParamsStorageType.498', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetParamsEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpTargetParamsRowStatus', '509',
    '/snmpTargetObjects/snmpTargetParamsEntry/snmpTargetParamsRowStatus',
    'The status of this conceptual row.

To create a row in this table, a manager must
set this object to either createAndGo(4) or
createAndWait(5).

Until instances of all corresponding columns are
appropriately configured, the value of the
corresponding instance of the snmpTargetParamsRowStatus
column is \'notReady\'.

In particular, a newly created row cannot be made
active until the corresponding
snmpTargetParamsMPModel,
snmpTargetParamsSecurityModel,
snmpTargetParamsSecurityName,
and snmpTargetParamsSecurityLevel have all been set.

The following objects may not be modified while the
value of this object is active(1):
    - snmpTargetParamsMPModel
    - snmpTargetParamsSecurityModel
    - snmpTargetParamsSecurityName
    - snmpTargetParamsSecurityLevel
An attempt to set these objects while the value of
snmpTargetParamsRowStatus is active(1) will result in
an inconsistentValue error.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpTargetParamsRowStatus.509', 
    'leaf', 
    '/snmpTargetObjects/snmpTargetParamsEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpUnavailableContexts', '544',
    '/snmpTargetObjects/snmpUnavailableContexts',
    'The total number of packets received by the SNMP
engine which were dropped because the context
contained in the message was unavailable.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpUnavailableContexts.544', 
    'leaf', 
    '/snmpTargetObjects',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-TARGET-MIB', 'SNMP-TARGET-MIB', '2002-10-14', 'snmpUnknownContexts', '554',
    '/snmpTargetObjects/snmpUnknownContexts',
    'The total number of packets received by the SNMP
engine which were dropped because the context
contained in the message was unknown.',
    '',
    '/modules/SNMP-TARGET-MIB/2002-10-14#snmpUnknownContexts.554', 
    'leaf', 
    '/snmpTargetObjects',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/DIFFSERV-MIB.yang
# module: DIFFSERV-MIB
# version: 2002-02-07
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'DIFFSERV-MIB');

INSERT INTO ncmodule VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffserv-mib',
    'urn:ietf:params:xml:ns:yang:smiv2:DIFFSERV-MIB',
    'IETF Differentiated Services WG',
    'This MIB defines the objects necessary to manage a device that
uses the Differentiated Services Architecture described in RFC
24...',
    'This MIB defines the objects necessary to manage a device that
uses the Differentiated Services Architecture described in RFC
2475. The Conceptual Model of a Differentiated Services Router
provides supporting information on how such a router is modeled.',
    '',
    '       Fred Baker
Cisco Systems
1121 Via Del Rey
Santa Barbara, CA 93117, USA
E-mail: fred@cisco.com

Kwok Ho Chan
Nortel Networks
600 Technology Park Drive
Billerica, MA 01821, USA
E-mail: khchan@nortelnetworks.com

Andrew Smith
Harbour Networks
Jiuling Building


21 North Xisanhuan Ave.
Beijing, 100089, PRC
E-mail: ah_smith@acm.org

Differentiated Services Working Group:
diffserv@ietf.org',
    'Initial version, published as RFC 3289.',
    '/xsd/DIFFSERV-MIB_2002-02-07.xsd',
    '/modules/DIFFSERV-MIB/2002-02-07', 
    '/src/DIFFSERV-MIB_2002-02-07.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/DIFFSERV-MIB.yang',
    'DIFFSERV-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'IndexInteger', '69',
    'An integer which may be used as a table index.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#IndexInteger.69', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'IndexIntegerNextFree', '78',
    'An integer which may be used as a new Index in a table.

The special value of 0 indicates that no more new entries can be
created in the relevant table.

When a MIB is used for configuration, an object with this SYNTAX
always contains a legal value (if non-zero) for an index that is
not currently used in the relevant table. The Command Generator
(Network Management Application) reads this variable and uses the
(non-zero) value read when creating a new row with an SNMP SET.
When the SET is performed, the Command Responder (agent) must
determine whether the value is indeed still unused; Two Network
Management Applications may attempt to create a row
(configuration entry) simultaneously and use the same value. If
it is currently unused, the SET succeeds and the Command
Responder (agent) changes the value of this object, according to
an implementation-specific algorithm.  If the value is in use,



however, the SET fails.  The Network Management Application must
then re-read this variable to obtain a new usable value.

An OBJECT-TYPE definition using this SYNTAX MUST specify the
relevant table for which the object is providing this
functionality.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#IndexIntegerNextFree.78', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'IfDirection', '112',
    'IfDirection specifies a direction of data travel on an
interface. \'inbound\' traffic is operated on during reception from
the interface, while \'outbound\' traffic is operated on prior to
transmission on the interface.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#IfDirection.112', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServDataPath', '124',
    '/diffServDataPath',
    '',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServDataPath.124', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'diffServDataPathEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServDataPathEntry', '129',
    '/diffServDataPath/diffServDataPathEntry',
    'An entry in the data path table indicates the start of a single
Differentiated Services Functional Data Path in this device.

These are associated with individual interfaces, logical or
physical, and therefore are instantiated by ifIndex. Therefore,
the interface index must have been assigned, according to the
procedures applicable to that, before it can be meaningfully
used. Generally, this means that the interface must exist.

When diffServDataPathStorage is of type nonVolatile, however,
this may reflect the configuration for an interface whose ifIndex
has been assigned but for which the supporting implementation is
not currently present.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServDataPathEntry.129', 
    'list', 
    '/diffServDataPath',
    '0',
    '1',
    '',
    '',
    'ifIndex diffServDataPathIfDirection diffServDataPathStart diffServDataPathStorage diffServDataPathStatus',
    '',
    'ifIndex diffServDataPathIfDirection',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'ifIndex', '148',
    '/diffServDataPath/diffServDataPathEntry/ifIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#ifIndex.148', 
    'leaf', 
    '/diffServDataPath/diffServDataPathEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServDataPathIfDirection', '157',
    '/diffServDataPath/diffServDataPathEntry/diffServDataPathIfDirection',
    'IfDirection specifies whether the reception or transmission path
for this interface is in view.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServDataPathIfDirection.157', 
    'leaf', 
    '/diffServDataPath/diffServDataPathEntry',
    '0',
    '1',
    'IfDirection',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServDataPathStart', '166',
    '/diffServDataPath/diffServDataPathEntry/diffServDataPathStart',
    'This selects the first Differentiated Services Functional Data
Path Element to handle traffic for this data path. This
RowPointer should point to an instance of one of:
  diffServClfrEntry
  diffServMeterEntry
  diffServActionEntry
  diffServAlgDropEntry
  diffServQEntry

A value of zeroDotZero in this attribute indicates that no
Differentiated Services treatment is performed on traffic of this
data path. A pointer with the value zeroDotZero normally
terminates a functional data path.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServDataPathStart.166', 
    'leaf', 
    '/diffServDataPath/diffServDataPathEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServDataPathStorage', '191',
    '/diffServDataPath/diffServDataPathEntry/diffServDataPathStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServDataPathStorage.191', 
    'leaf', 
    '/diffServDataPath/diffServDataPathEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServDataPathStatus', '202',
    '/diffServDataPath/diffServDataPathEntry/diffServDataPathStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServDataPathStatus.202', 
    'leaf', 
    '/diffServDataPath/diffServDataPathEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClassifier', '214',
    '/diffServClassifier',
    '',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClassifier.214', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'diffServClfrNextFree diffServClfrEntry diffServClfrElementNextFree diffServClfrElementEntry diffServMultiFieldClfrNextFree diffServMultiFieldClfrEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrNextFree', '216',
    '/diffServClassifier/diffServClfrNextFree',
    'This object contains an unused value for diffServClfrId, or a
zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrNextFree.216', 
    'leaf', 
    '/diffServClassifier',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrEntry', '228',
    '/diffServClassifier/diffServClfrEntry',
    'An entry in the classifier table describes a single classifier.
All classifier elements belonging to the same classifier use the
classifier\'s diffServClfrId as part of their index.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrEntry.228', 
    'list', 
    '/diffServClassifier',
    '0',
    '1',
    '',
    '',
    'diffServClfrId diffServClfrStorage diffServClfrStatus',
    '',
    'diffServClfrId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrId', '238',
    '/diffServClassifier/diffServClfrEntry/diffServClfrId',
    'An index that enumerates the classifier entries.  Managers
should obtain new values for row creation in this table by
reading diffServClfrNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrId.238', 
    'leaf', 
    '/diffServClassifier/diffServClfrEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrStorage', '248',
    '/diffServClassifier/diffServClfrEntry/diffServClfrStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrStorage.248', 
    'leaf', 
    '/diffServClassifier/diffServClfrEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrStatus', '259',
    '/diffServClassifier/diffServClfrEntry/diffServClfrStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrStatus.259', 
    'leaf', 
    '/diffServClassifier/diffServClfrEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrElementNextFree', '272',
    '/diffServClassifier/diffServClfrElementNextFree',
    'This object contains an unused value for diffServClfrElementId,
or a zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrElementNextFree.272', 
    'leaf', 
    '/diffServClassifier',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrElementEntry', '284',
    '/diffServClassifier/diffServClfrElementEntry',
    'An entry in the classifier element table describes a single
element of the classifier.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrElementEntry.284', 
    'list', 
    '/diffServClassifier',
    '0',
    '1',
    '',
    '',
    'diffServClfrId diffServClfrElementId diffServClfrElementPrecedence diffServClfrElementNext diffServClfrElementSpecific diffServClfrElementStorage diffServClfrElementStatus',
    '',
    'diffServClfrId diffServClfrElementId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrId', '292',
    '/diffServClassifier/diffServClfrElementEntry/diffServClfrId',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrId.292', 
    'leaf', 
    '/diffServClassifier/diffServClfrElementEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrElementId', '301',
    '/diffServClassifier/diffServClfrElementEntry/diffServClfrElementId',
    'An index that enumerates the Classifier Element entries.
Managers obtain new values for row creation in this table by
reading diffServClfrElementNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrElementId.301', 
    'leaf', 
    '/diffServClassifier/diffServClfrElementEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrElementPrecedence', '311',
    '/diffServClassifier/diffServClfrElementEntry/diffServClfrElementPrecedence',
    'The relative order in which classifier elements are applied:
higher numbers represent classifier element with higher
precedence.  Classifier elements with the same order must be
unambiguous i.e. they must define non-overlapping patterns, and
are considered to be applied simultaneously to the traffic
stream. Classifier elements with different order may overlap in
their filters:  the classifier element with the highest order
that matches is taken.

On a given interface, there must be a complete classifier in
place at all times in the ingress direction.  This means one or
more filters must match any possible pattern. There is no such



requirement in the egress direction.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrElementPrecedence.311', 
    'leaf', 
    '/diffServClassifier/diffServClfrElementEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrElementNext', '336',
    '/diffServClassifier/diffServClfrElementEntry/diffServClfrElementNext',
    'This attribute provides one branch of the fan-out functionality
of a classifier described in the Informal Differentiated Services
Model section 4.1.

This selects the next Differentiated Services Functional Data
Path Element to handle traffic for this data path. This
RowPointer should point to an instance of one of:
  diffServClfrEntry
  diffServMeterEntry
  diffServActionEntry
  diffServAlgDropEntry
  diffServQEntry

A value of zeroDotZero in this attribute indicates no further
Differentiated Services treatment is performed on traffic of this
data path. The use of zeroDotZero is the normal usage for the
last functional data path element of the current data path.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrElementNext.336', 
    'leaf', 
    '/diffServClassifier/diffServClfrElementEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrElementSpecific', '365',
    '/diffServClassifier/diffServClfrElementEntry/diffServClfrElementSpecific',
    'A pointer to a valid entry in another table, filter table, that
describes the applicable classification parameters, e.g. an entry
in diffServMultiFieldClfrTable.

The value zeroDotZero is interpreted to match anything not
matched by another classifier element - only one such entry may
exist for each classifier.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or



becomes inactive by other means, the element is ignored.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrElementSpecific.365', 
    'leaf', 
    '/diffServClassifier/diffServClfrElementEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrElementStorage', '386',
    '/diffServClassifier/diffServClfrElementEntry/diffServClfrElementStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrElementStorage.386', 
    'leaf', 
    '/diffServClassifier/diffServClfrElementEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServClfrElementStatus', '397',
    '/diffServClassifier/diffServClfrElementEntry/diffServClfrElementStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServClfrElementStatus.397', 
    'leaf', 
    '/diffServClassifier/diffServClfrElementEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrNextFree', '410',
    '/diffServClassifier/diffServMultiFieldClfrNextFree',
    'This object contains an unused value for
diffServMultiFieldClfrId, or a zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrNextFree.410', 
    'leaf', 
    '/diffServClassifier',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrEntry', '422',
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    'An IP Multi-field Classifier entry describes a single filter.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrEntry.422', 
    'list', 
    '/diffServClassifier',
    '0',
    '1',
    '',
    '',
    'diffServMultiFieldClfrId diffServMultiFieldClfrAddrType diffServMultiFieldClfrDstAddr diffServMultiFieldClfrDstPrefixLength diffServMultiFieldClfrSrcAddr diffServMultiFieldClfrSrcPrefixLength diffServMultiFieldClfrDscp diffServMultiFieldClfrFlowId diffServMultiFieldClfrProtocol diffServMultiFieldClfrDstL4PortMin diffServMultiFieldClfrDstL4PortMax diffServMultiFieldClfrSrcL4PortMin diffServMultiFieldClfrSrcL4PortMax diffServMultiFieldClfrStorage diffServMultiFieldClfrStatus',
    '',
    'diffServMultiFieldClfrId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrId', '430',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrId',
    'An index that enumerates the MultiField Classifier filter
entries.  Managers obtain new values for row creation in this
table by reading diffServMultiFieldClfrNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrId.430', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrAddrType', '440',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrAddrType',
    'The type of IP address used by this classifier entry.  While
other types of addresses are defined in the InetAddressType



textual convention, and DNS names, a classifier can only look at
packets on the wire. Therefore, this object is limited to IPv4
and IPv6 addresses.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrAddrType.440', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'InetAddressType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrDstAddr', '455',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrDstAddr',
    'The IP address to match against the packet\'s destination IP
address. This may not be a DNS name, but may be an IPv4 or IPv6
prefix.  diffServMultiFieldClfrDstPrefixLength indicates the
number of bits that are relevant.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrDstAddr.455', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrDstPrefixLength', '466',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrDstPrefixLength',
    'The length of the CIDR Prefix carried in
diffServMultiFieldClfrDstAddr. In IPv4 addresses, a length of 0
indicates a match of any address; a length of 32 indicates a
match of a single host address, and a length between 0 and 32
indicates the use of a CIDR Prefix. IPv6 is similar, except that
prefix lengths range from 0..128.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrDstPrefixLength.466', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'InetAddressPrefixLength',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrSrcAddr', '481',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrSrcAddr',
    'The IP address to match against the packet\'s source IP address.
This may not be a DNS name, but may be an IPv4 or IPv6 prefix.
diffServMultiFieldClfrSrcPrefixLength indicates the number of
bits that are relevant.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrSrcAddr.481', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'InetAddress',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrSrcPrefixLength', '492',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrSrcPrefixLength',
    'The length of the CIDR Prefix carried in
diffServMultiFieldClfrSrcAddr. In IPv4 addresses, a length of 0
indicates a match of any address; a length of 32 indicates a
match of a single host address, and a length between 0 and 32
indicates the use of a CIDR Prefix. IPv6 is similar, except that
prefix lengths range from 0..128.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrSrcPrefixLength.492', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'InetAddressPrefixLength',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrDscp', '507',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrDscp',
    'The value that the DSCP in the packet must have to match this
entry. A value of -1 indicates that a specific DSCP value has not
been defined and thus all DSCP values are considered a match.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrDscp.507', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'DscpOrAny',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrFlowId', '518',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrFlowId',
    'The flow identifier in an IPv6 header.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrFlowId.518', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrProtocol', '528',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrProtocol',
    'The IP protocol to match against the IPv4 protocol number or the
IPv6 Next- Header number in the packet. A value of 255 means
match all.  Note the protocol number of 255 is reserved by IANA,
and Next-Header number of 0 is used in IPv6.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrProtocol.528', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrDstL4PortMin', '542',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrDstL4PortMin',
    'The minimum value that the layer-4 destination port number in
the packet must have in order to match this classifier entry.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrDstL4PortMin.542', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'InetPortNumber',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrDstL4PortMax', '552',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrDstL4PortMax',
    'The maximum value that the layer-4 destination port number in
the packet must have in order to match this classifier entry.
This value must be equal to or greater than the value specified
for this entry in diffServMultiFieldClfrDstL4PortMin.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrDstL4PortMax.552', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'InetPortNumber',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrSrcL4PortMin', '564',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrSrcL4PortMin',
    'The minimum value that the layer-4 source port number in the
packet must have in order to match this classifier entry.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrSrcL4PortMin.564', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'InetPortNumber',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrSrcL4PortMax', '574',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrSrcL4PortMax',
    'The maximum value that the layer-4 source port number in the
packet must have in order to match this classifier entry. This
value must be equal to or greater than the value specified for
this entry in diffServMultiFieldClfrSrcL4PortMin.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrSrcL4PortMax.574', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'InetPortNumber',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrStorage', '586',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrStorage.586', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMultiFieldClfrStatus', '597',
    '/diffServClassifier/diffServMultiFieldClfrEntry/diffServMultiFieldClfrStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMultiFieldClfrStatus.597', 
    'leaf', 
    '/diffServClassifier/diffServMultiFieldClfrEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMeter', '612',
    '/diffServMeter',
    '',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMeter.612', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'diffServMeterNextFree diffServMeterEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMeterNextFree', '614',
    '/diffServMeter/diffServMeterNextFree',
    'This object contains an unused value for diffServMeterId, or a
zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMeterNextFree.614', 
    'leaf', 
    '/diffServMeter',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMeterEntry', '626',
    '/diffServMeter/diffServMeterEntry',
    'An entry in the meter table describes a single conformance level
of a meter.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMeterEntry.626', 
    'list', 
    '/diffServMeter',
    '0',
    '1',
    '',
    '',
    'diffServMeterId diffServMeterSucceedNext diffServMeterFailNext diffServMeterSpecific diffServMeterStorage diffServMeterStatus',
    '',
    'diffServMeterId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMeterId', '635',
    '/diffServMeter/diffServMeterEntry/diffServMeterId',
    'An index that enumerates the Meter entries.  Managers obtain new
values for row creation in this table by reading
diffServMeterNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMeterId.635', 
    'leaf', 
    '/diffServMeter/diffServMeterEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMeterSucceedNext', '645',
    '/diffServMeter/diffServMeterEntry/diffServMeterSucceedNext',
    'If the traffic does conform, this selects the next
Differentiated Services Functional Data Path element to handle
traffic for this data path. This RowPointer should point to an
instance of one of:
  diffServClfrEntry
  diffServMeterEntry
  diffServActionEntry
  diffServAlgDropEntry
  diffServQEntry

A value of zeroDotZero in this attribute indicates that no
further Differentiated Services treatment is performed on traffic
of this data path. The use of zeroDotZero is the normal usage for
the last functional data path element of the current data path.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMeterSucceedNext.645', 
    'leaf', 
    '/diffServMeter/diffServMeterEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMeterFailNext', '672',
    '/diffServMeter/diffServMeterEntry/diffServMeterFailNext',
    'If the traffic does not conform, this selects the next
Differentiated Services Functional Data Path element to handle
traffic for this data path. This RowPointer should point to an
instance of one of:
  diffServClfrEntry
  diffServMeterEntry



  diffServActionEntry
  diffServAlgDropEntry
  diffServQEntry

A value of zeroDotZero in this attribute indicates no further
Differentiated Services treatment is performed on traffic of this
data path. The use of zeroDotZero is the normal usage for the
last functional data path element of the current data path.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMeterFailNext.672', 
    'leaf', 
    '/diffServMeter/diffServMeterEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMeterSpecific', '702',
    '/diffServMeter/diffServMeterEntry/diffServMeterSpecific',
    'This indicates the behavior of the meter by pointing to an entry
containing detailed parameters. Note that entries in that
specific table must be managed explicitly.

For example, diffServMeterSpecific may point to an entry in
diffServTBParamTable, which contains an instance of a single set
of Token Bucket parameters.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the meter always succeeds.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMeterSpecific.702', 
    'leaf', 
    '/diffServMeter/diffServMeterEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMeterStorage', '720',
    '/diffServMeter/diffServMeterEntry/diffServMeterStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMeterStorage.720', 
    'leaf', 
    '/diffServMeter/diffServMeterEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMeterStatus', '731',
    '/diffServMeter/diffServMeterEntry/diffServMeterStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMeterStatus.731', 
    'leaf', 
    '/diffServMeter/diffServMeterEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParam', '746',
    '/diffServTBParam',
    '',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParam.746', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'diffServTBParamNextFree diffServTBParamEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParamNextFree', '748',
    '/diffServTBParam/diffServTBParamNextFree',
    'This object contains an unused value for diffServTBParamId, or a
zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParamNextFree.748', 
    'leaf', 
    '/diffServTBParam',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParamEntry', '760',
    '/diffServTBParam/diffServTBParamEntry',
    'An entry that describes a single set of token bucket
parameters.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParamEntry.760', 
    'list', 
    '/diffServTBParam',
    '0',
    '1',
    '',
    '',
    'diffServTBParamId diffServTBParamType diffServTBParamRate diffServTBParamBurstSize diffServTBParamInterval diffServTBParamStorage diffServTBParamStatus',
    '',
    'diffServTBParamId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParamId', '769',
    '/diffServTBParam/diffServTBParamEntry/diffServTBParamId',
    'An index that enumerates the Token Bucket Parameter entries.
Managers obtain new values for row creation in this table by
reading diffServTBParamNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParamId.769', 
    'leaf', 
    '/diffServTBParam/diffServTBParamEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParamType', '779',
    '/diffServTBParam/diffServTBParamEntry/diffServTBParamType',
    'The Metering algorithm associated with the Token Bucket
parameters.  zeroDotZero indicates this is unknown.

Standard values for generic algorithms:
diffServTBParamSimpleTokenBucket, diffServTBParamAvgRate,
diffServTBParamSrTCMBlind, diffServTBParamSrTCMAware,
diffServTBParamTrTCMBlind, diffServTBParamTrTCMAware, and
diffServTBParamTswTCM are specified in this MIB as OBJECT-
IDENTITYs; additional values may be further specified in other
MIBs.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParamType.779', 
    'leaf', 
    '/diffServTBParam/diffServTBParamEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParamRate', '796',
    '/diffServTBParam/diffServTBParamEntry/diffServTBParamRate',
    'The token-bucket rate, in kilobits per second (kbps). This
attribute is used for:
1. CIR in RFC 2697 for srTCM
2. CIR and PIR in RFC 2698 for trTCM
3. CTR and PTR in RFC 2859 for TSWTCM
4. AverageRate in RFC 3290.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParamRate.796', 
    'leaf', 
    '/diffServTBParam/diffServTBParamEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParamBurstSize', '812',
    '/diffServTBParam/diffServTBParamEntry/diffServTBParamBurstSize',
    'The maximum number of bytes in a single transmission burst. This
attribute is used for:
1. CBS and EBS in RFC 2697 for srTCM
2. CBS and PBS in RFC 2698 for trTCM
3. Burst Size in RFC 3290.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParamBurstSize.812', 
    'leaf', 
    '/diffServTBParam/diffServTBParamEntry',
    '0',
    '1',
    'BurstSize',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParamInterval', '825',
    '/diffServTBParam/diffServTBParamEntry/diffServTBParamInterval',
    'The time interval used with the token bucket.  For:
1. Average Rate Meter, the Informal Differentiated Services Model
   section 5.2.1, - Delta.
2. Simple Token Bucket Meter, the Informal Differentiated
   Services Model section 5.1, - time interval t.
3. RFC 2859 TSWTCM, - AVG_INTERVAL.
4. RFC 2697 srTCM, RFC 2698 trTCM, - token bucket update time
   interval.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParamInterval.825', 
    'leaf', 
    '/diffServTBParam/diffServTBParamEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParamStorage', '843',
    '/diffServTBParam/diffServTBParamEntry/diffServTBParamStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParamStorage.843', 
    'leaf', 
    '/diffServTBParam/diffServTBParamEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServTBParamStatus', '854',
    '/diffServTBParam/diffServTBParamEntry/diffServTBParamStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServTBParamStatus.854', 
    'leaf', 
    '/diffServTBParam/diffServTBParamEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAction', '869',
    '/diffServAction',
    '',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAction.869', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'diffServActionNextFree diffServActionEntry diffServDscpMarkActEntry diffServCountActNextFree diffServCountActEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServActionNextFree', '871',
    '/diffServAction/diffServActionNextFree',
    'This object contains an unused value for diffServActionId, or a
zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServActionNextFree.871', 
    'leaf', 
    '/diffServAction',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServActionEntry', '883',
    '/diffServAction/diffServActionEntry',
    'Each entry in the action table allows description of one
specific action to be applied to traffic.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServActionEntry.883', 
    'list', 
    '/diffServAction',
    '0',
    '1',
    '',
    '',
    'diffServActionId diffServActionInterface diffServActionNext diffServActionSpecific diffServActionStorage diffServActionStatus',
    '',
    'diffServActionId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServActionId', '892',
    '/diffServAction/diffServActionEntry/diffServActionId',
    'An index that enumerates the Action entries.  Managers obtain
new values for row creation in this table by reading
diffServActionNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServActionId.892', 
    'leaf', 
    '/diffServAction/diffServActionEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServActionInterface', '902',
    '/diffServAction/diffServActionEntry/diffServActionInterface',
    'The interface index (value of ifIndex) that this action occurs
on. This may be derived from the diffServDataPathStartEntry\'s
index by extension through the various RowPointers. However, as
this may be difficult for a network management station, it is
placed here as well.  If this is indeterminate, the value is
zero.

This is of especial relevance when reporting the counters which
may apply to traffic crossing an interface:
   diffServCountActOctets,
   diffServCountActPkts,
   diffServAlgDropOctets,
   diffServAlgDropPkts,
   diffServAlgRandomDropOctets, and
   diffServAlgRandomDropPkts.

It is also especially relevant to the queue and scheduler which
may be subsequently applied.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServActionInterface.902', 
    'leaf', 
    '/diffServAction/diffServActionEntry',
    '0',
    '1',
    'InterfaceIndexOrZero',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServActionNext', '927',
    '/diffServAction/diffServActionEntry/diffServActionNext',
    'This selects the next Differentiated Services Functional Data
Path Element to handle traffic for this data path. This
RowPointer should point to an instance of one of:
  diffServClfrEntry
  diffServMeterEntry
  diffServActionEntry
  diffServAlgDropEntry
  diffServQEntry

A value of zeroDotZero in this attribute indicates no further
Differentiated Services treatment is performed on traffic of this
data path. The use of zeroDotZero is the normal usage for the
last functional data path element of the current data path.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServActionNext.927', 
    'leaf', 
    '/diffServAction/diffServActionEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServActionSpecific', '953',
    '/diffServAction/diffServActionEntry/diffServActionSpecific',
    'A pointer to an object instance providing additional information
for the type of action indicated by this action table entry.

For the standard actions defined by this MIB module, this should
point to either a diffServDscpMarkActEntry or a
diffServCountActEntry. For other actions, it may point to an
object instance defined in some other MIB.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the Meter should be treated as
if it were not present.  This may lead to incorrect policy
behavior.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServActionSpecific.953', 
    'leaf', 
    '/diffServAction/diffServActionEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServActionStorage', '973',
    '/diffServAction/diffServActionEntry/diffServActionStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServActionStorage.973', 
    'leaf', 
    '/diffServAction/diffServActionEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServActionStatus', '984',
    '/diffServAction/diffServActionEntry/diffServActionStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServActionStatus.984', 
    'leaf', 
    '/diffServAction/diffServActionEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServDscpMarkActEntry', '1000',
    '/diffServAction/diffServDscpMarkActEntry',
    'An entry in the DSCP mark action table that describes a single
DSCP used for marking.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServDscpMarkActEntry.1000', 
    'list', 
    '/diffServAction',
    '0',
    '1',
    '',
    '',
    'diffServDscpMarkActDscp',
    '',
    'diffServDscpMarkActDscp',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServDscpMarkActDscp', '1009',
    '/diffServAction/diffServDscpMarkActEntry/diffServDscpMarkActDscp',
    'The DSCP that this Action will store into the DSCP field of the
subject. It is quite possible that the only packets subject to
this Action are already marked with this DSCP. Note also that
Differentiated Services processing may result in packet being
marked on both ingress to a network and on egress from it, and
that ingress and egress can occur in the same router.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServDscpMarkActDscp.1009', 
    'leaf', 
    '/diffServAction/diffServDscpMarkActEntry',
    '0',
    '1',
    'Dscp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServCountActNextFree', '1023',
    '/diffServAction/diffServCountActNextFree',
    'This object contains an unused value for
diffServCountActId, or a zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServCountActNextFree.1023', 
    'leaf', 
    '/diffServAction',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServCountActEntry', '1035',
    '/diffServAction/diffServCountActEntry',
    'An entry in the count action table describes a single set of
traffic counters.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServCountActEntry.1035', 
    'list', 
    '/diffServAction',
    '0',
    '1',
    '',
    '',
    'diffServCountActId diffServCountActOctets diffServCountActPkts diffServCountActStorage diffServCountActStatus',
    '',
    'diffServCountActId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServCountActId', '1044',
    '/diffServAction/diffServCountActEntry/diffServCountActId',
    'An index that enumerates the Count Action entries.  Managers
obtain new values for row creation in this table by reading



diffServCountActNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServCountActId.1044', 
    'leaf', 
    '/diffServAction/diffServCountActEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServCountActOctets', '1057',
    '/diffServAction/diffServCountActEntry/diffServCountActOctets',
    'The number of octets at the Action data path element.

Discontinuities in the value of this counter can occur at re-
initialization of the management system and at other times as
indicated by the value of ifCounterDiscontinuityTime on the
relevant interface.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServCountActOctets.1057', 
    'leaf', 
    '/diffServAction/diffServCountActEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServCountActPkts', '1070',
    '/diffServAction/diffServCountActEntry/diffServCountActPkts',
    'The number of packets at the Action data path element.

Discontinuities in the value of this counter can occur at re-
initialization of the management system and at other times as
indicated by the value of ifCounterDiscontinuityTime on the
relevant interface.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServCountActPkts.1070', 
    'leaf', 
    '/diffServAction/diffServCountActEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServCountActStorage', '1083',
    '/diffServAction/diffServCountActEntry/diffServCountActStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServCountActStorage.1083', 
    'leaf', 
    '/diffServAction/diffServCountActEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServCountActStatus', '1094',
    '/diffServAction/diffServCountActEntry/diffServCountActStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing



to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServCountActStatus.1094', 
    'leaf', 
    '/diffServAction/diffServCountActEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDrop', '1112',
    '/diffServAlgDrop',
    '',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDrop.1112', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'diffServAlgDropNextFree diffServAlgDropEntry diffServRandomDropNextFree diffServRandomDropEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropNextFree', '1114',
    '/diffServAlgDrop/diffServAlgDropNextFree',
    'This object contains an unused value for diffServAlgDropId, or a
zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropNextFree.1114', 
    'leaf', 
    '/diffServAlgDrop',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropEntry', '1126',
    '/diffServAlgDrop/diffServAlgDropEntry',
    'An entry describes a process that drops packets according to
some algorithm. Further details of the algorithm type are to be
found in diffServAlgDropType and with more detail parameter entry
pointed to by diffServAlgDropSpecific when necessary.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropEntry.1126', 
    'list', 
    '/diffServAlgDrop',
    '0',
    '1',
    '',
    '',
    'diffServAlgDropId diffServAlgDropType diffServAlgDropNext diffServAlgDropQMeasure diffServAlgDropQThreshold diffServAlgDropSpecific diffServAlgDropOctets diffServAlgDropPkts diffServAlgRandomDropOctets diffServAlgRandomDropPkts diffServAlgDropStorage diffServAlgDropStatus',
    '',
    'diffServAlgDropId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropId', '1137',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropId',
    'An index that enumerates the Algorithmic Dropper entries.
Managers obtain new values for row creation in this table by
reading diffServAlgDropNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropId.1137', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropType', '1147',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropType',
    'The type of algorithm used by this dropper. The value other(1)
requires further specification in some other MIB module.

In the tailDrop(2) algorithm, diffServAlgDropQThreshold
represents the maximum depth of the queue, pointed to by
diffServAlgDropQMeasure, beyond which all newly arriving packets
will be dropped.

In the headDrop(3) algorithm, if a packet arrives when the
current depth of the queue, pointed to by
diffServAlgDropQMeasure, is at diffServAlgDropQThreshold, packets
currently at the head of the queue are dropped to make room for
the new packet to be enqueued at the tail of the queue.

In the randomDrop(4) algorithm, on packet arrival, an Active
Queue Management algorithm is executed which may randomly drop a
packet. This algorithm may be proprietary, and it may drop either
the arriving packet or another packet in the queue.
diffServAlgDropSpecific points to a diffServRandomDropEntry that
describes the algorithm. For this algorithm,



diffServAlgDropQThreshold is understood to be the absolute
maximum size of the queue and additional parameters are described
in diffServRandomDropTable.

The alwaysDrop(5) algorithm is as its name specifies; always
drop. In this case, the other configuration values in this Entry
are not meaningful; There is no useful \'next\' processing step,
there is no queue, and parameters describing the queue are not
useful. Therefore, diffServAlgDropNext, diffServAlgDropMeasure,
and diffServAlgDropSpecific are all zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropType.1147', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropNext', '1193',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropNext',
    'This selects the next Differentiated Services Functional Data
Path Element to handle traffic for this data path. This
RowPointer should point to an instance of one of:
  diffServClfrEntry
  diffServMeterEntry
  diffServActionEntry
  diffServQEntry

A value of zeroDotZero in this attribute indicates no further
Differentiated Services treatment is performed on traffic of this
data path. The use of zeroDotZero is the normal usage for the
last functional data path element of the current data path.

When diffServAlgDropType is alwaysDrop(5), this object is
ignored.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropNext.1193', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropQMeasure', '1220',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropQMeasure',
    'Points to an entry in the diffServQTable to indicate the queue
that a drop algorithm is to monitor when deciding whether to drop
a packet. If the row pointed to does not exist, the algorithmic
dropper element is considered inactive.



Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropQMeasure.1220', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropQThreshold', '1238',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropQThreshold',
    'A threshold on the depth in bytes of the queue being measured at
which a trigger is generated to the dropping algorithm, unless
diffServAlgDropType is alwaysDrop(5) where this object is
ignored.

For the tailDrop(2) or headDrop(3) algorithms, this represents
the depth of the queue, pointed to by diffServAlgDropQMeasure, at
which the drop action will take place. Other algorithms will need
to define their own semantics for this threshold.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropQThreshold.1238', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropSpecific', '1257',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropSpecific',
    'Points to a table entry that provides further detail regarding a
drop algorithm.

Entries with diffServAlgDropType equal to other(1) may have this
point to a table defined in another MIB module.

Entries with diffServAlgDropType equal to randomDrop(4) must have
this point to an entry in diffServRandomDropTable.

For all other algorithms specified in this MIB, this should take
the value zeroDotZero.

The diffServAlgDropType is authoritative for the type of the drop
algorithm and the specific parameters for the drop algorithm
needs to be evaluated based on the diffServAlgDropType.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropSpecific.1257', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropOctets', '1284',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropOctets',
    'The number of octets that have been deterministically dropped by
this drop process.

Discontinuities in the value of this counter can occur at re-
initialization of the management system and at other times as
indicated by the value of ifCounterDiscontinuityTime on the
relevant interface.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropOctets.1284', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropPkts', '1298',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropPkts',
    'The number of packets that have been deterministically dropped
by this drop process.

Discontinuities in the value of this counter can occur at re-
initialization of the management system and at other times as
indicated by the value of ifCounterDiscontinuityTime on the
relevant interface.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropPkts.1298', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgRandomDropOctets', '1312',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgRandomDropOctets',
    'The number of octets that have been randomly dropped by this
drop process.  This counter applies, therefore, only to random
droppers.

Discontinuities in the value of this counter can occur at re-
initialization of the management system and at other times as
indicated by the value of ifCounterDiscontinuityTime on the
relevant interface.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgRandomDropOctets.1312', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgRandomDropPkts', '1327',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgRandomDropPkts',
    'The number of packets that have been randomly dropped by this
drop process. This counter applies, therefore, only to random
droppers.

Discontinuities in the value of this counter can occur at re-
initialization of the management system and at other times as
indicated by the value of ifCounterDiscontinuityTime on the
relevant interface.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgRandomDropPkts.1327', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'counter64',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropStorage', '1342',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropStorage.1342', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServAlgDropStatus', '1353',
    '/diffServAlgDrop/diffServAlgDropEntry/diffServAlgDropStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServAlgDropStatus.1353', 
    'leaf', 
    '/diffServAlgDrop/diffServAlgDropEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropNextFree', '1366',
    '/diffServAlgDrop/diffServRandomDropNextFree',
    'This object contains an unused value for diffServRandomDropId,
or a zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropNextFree.1366', 
    'leaf', 
    '/diffServAlgDrop',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropEntry', '1378',
    '/diffServAlgDrop/diffServRandomDropEntry',
    'An entry describes a process that drops packets according to a
random algorithm.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropEntry.1378', 
    'list', 
    '/diffServAlgDrop',
    '0',
    '1',
    '',
    '',
    'diffServRandomDropId diffServRandomDropMinThreshBytes diffServRandomDropMinThreshPkts diffServRandomDropMaxThreshBytes diffServRandomDropMaxThreshPkts diffServRandomDropProbMax diffServRandomDropWeight diffServRandomDropSamplingRate diffServRandomDropStorage diffServRandomDropStatus',
    '',
    'diffServRandomDropId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropId', '1387',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropId',
    'An index that enumerates the Random Drop entries.  Managers
obtain new values for row creation in this table by reading
diffServRandomDropNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropId.1387', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropMinThreshBytes', '1397',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropMinThreshBytes',
    'The average queue depth in bytes, beyond which traffic has a
non-zero probability of being dropped. Changes in this variable
may or may not be reflected in the reported value of
diffServRandomDropMinThreshPkts.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropMinThreshBytes.1397', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropMinThreshPkts', '1411',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropMinThreshPkts',
    'The average queue depth in packets, beyond which traffic has a
non-zero probability of being dropped. Changes in this variable
may or may not be reflected in the reported value of
diffServRandomDropMinThreshBytes.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropMinThreshPkts.1411', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropMaxThreshBytes', '1425',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropMaxThreshBytes',
    'The average queue depth beyond which traffic has a probability
indicated by diffServRandomDropProbMax of being dropped or
marked. Note that this differs from the physical queue limit,
which is stored in diffServAlgDropQThreshold. Changes in this
variable may or may not be reflected in the reported value of
diffServRandomDropMaxThreshPkts.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropMaxThreshBytes.1425', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropMaxThreshPkts', '1441',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropMaxThreshPkts',
    'The average queue depth beyond which traffic has a probability
indicated by diffServRandomDropProbMax of being dropped or
marked. Note that this differs from the physical queue limit,
which is stored in diffServAlgDropQThreshold. Changes in this
variable may or may not be reflected in the reported value of
diffServRandomDropMaxThreshBytes.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropMaxThreshPkts.1441', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropProbMax', '1457',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropProbMax',
    'The worst case random drop probability, expressed in drops per
thousand packets.

For example, if in the worst case every arriving packet may be
dropped (100%) for a period, this has the value 1000.
Alternatively, if in the worst case only one percent (1%) of
traffic may be dropped, it has the value 10.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropProbMax.1457', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropWeight', '1473',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropWeight',
    'The weighting of past history in affecting the Exponentially
Weighted Moving Average function that calculates the current
average queue depth.  The equation uses
diffServRandomDropWeight/65536 as the coefficient for the new
sample in the equation, and (65536 -
diffServRandomDropWeight)/65536 as the coefficient of the old
value.

Implementations may limit the values of diffServRandomDropWeight
to a subset of the possible range of values, such as powers of
two. Doing this would facilitate implementation of the
Exponentially Weighted Moving Average using shift instructions or
registers.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropWeight.1473', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropSamplingRate', '1495',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropSamplingRate',
    'The number of times per second the queue is sampled for queue
average calculation.  A value of zero is used to mean that the
queue is sampled approximately each time a packet is enqueued (or
dequeued).',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropSamplingRate.1495', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropStorage', '1508',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropStorage.1508', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServRandomDropStatus', '1519',
    '/diffServAlgDrop/diffServRandomDropEntry/diffServRandomDropStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServRandomDropStatus.1519', 
    'leaf', 
    '/diffServAlgDrop/diffServRandomDropEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServQueue', '1534',
    '/diffServQueue',
    '',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServQueue.1534', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'diffServQNextFree diffServQEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServQNextFree', '1536',
    '/diffServQueue/diffServQNextFree',
    'This object contains an unused value for diffServQId, or a zero
to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServQNextFree.1536', 
    'leaf', 
    '/diffServQueue',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServQEntry', '1548',
    '/diffServQueue/diffServQEntry',
    'An entry in the Queue Table describes a single queue or class of
traffic.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServQEntry.1548', 
    'list', 
    '/diffServQueue',
    '0',
    '1',
    '',
    '',
    'diffServQId diffServQNext diffServQMinRate diffServQMaxRate diffServQStorage diffServQStatus',
    '',
    'diffServQId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServQId', '1557',
    '/diffServQueue/diffServQEntry/diffServQId',
    'An index that enumerates the Queue entries.  Managers obtain new
values for row creation in this table by reading
diffServQNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServQId.1557', 
    'leaf', 
    '/diffServQueue/diffServQEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServQNext', '1567',
    '/diffServQueue/diffServQEntry/diffServQNext',
    'This selects the next Differentiated Services Scheduler.  The
RowPointer must point to a diffServSchedulerEntry.

A value of zeroDotZero in this attribute indicates an incomplete
diffServQEntry instance. In such a case, the entry has no
operational effect, since it has no parameters to give it
meaning.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServQNext.1567', 
    'leaf', 
    '/diffServQueue/diffServQEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServQMinRate', '1586',
    '/diffServQueue/diffServQEntry/diffServQMinRate',
    'This RowPointer indicates the diffServMinRateEntry that the
scheduler, pointed to by diffServQNext, should use to service
this queue.

If the row pointed to is zeroDotZero, the minimum rate and
priority is unspecified.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServQMinRate.1586', 
    'leaf', 
    '/diffServQueue/diffServQEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServQMaxRate', '1604',
    '/diffServQueue/diffServQEntry/diffServQMaxRate',
    'This RowPointer indicates the diffServMaxRateEntry that the
scheduler, pointed to by diffServQNext, should use to service
this queue.

If the row pointed to is zeroDotZero, the maximum rate is the
line speed of the interface.




Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServQMaxRate.1604', 
    'leaf', 
    '/diffServQueue/diffServQEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServQStorage', '1625',
    '/diffServQueue/diffServQEntry/diffServQStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServQStorage.1625', 
    'leaf', 
    '/diffServQueue/diffServQEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServQStatus', '1636',
    '/diffServQueue/diffServQEntry/diffServQStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServQStatus.1636', 
    'leaf', 
    '/diffServQueue/diffServQEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServScheduler', '1651',
    '/diffServScheduler',
    '',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServScheduler.1651', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'diffServSchedulerNextFree diffServSchedulerEntry diffServMinRateNextFree diffServMinRateEntry diffServMaxRateNextFree diffServMaxRateEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServSchedulerNextFree', '1653',
    '/diffServScheduler/diffServSchedulerNextFree',
    'This object contains an unused value for diffServSchedulerId, or
a zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServSchedulerNextFree.1653', 
    'leaf', 
    '/diffServScheduler',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServSchedulerEntry', '1665',
    '/diffServScheduler/diffServSchedulerEntry',
    'An entry in the Scheduler Table describing a single instance of
a scheduling algorithm.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServSchedulerEntry.1665', 
    'list', 
    '/diffServScheduler',
    '0',
    '1',
    '',
    '',
    'diffServSchedulerId diffServSchedulerNext diffServSchedulerMethod diffServSchedulerMinRate diffServSchedulerMaxRate diffServSchedulerStorage diffServSchedulerStatus',
    '',
    'diffServSchedulerId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServSchedulerId', '1674',
    '/diffServScheduler/diffServSchedulerEntry/diffServSchedulerId',
    'An index that enumerates the Scheduler entries.  Managers obtain
new values for row creation in this table by reading
diffServSchedulerNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServSchedulerId.1674', 
    'leaf', 
    '/diffServScheduler/diffServSchedulerEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServSchedulerNext', '1684',
    '/diffServScheduler/diffServSchedulerEntry/diffServSchedulerNext',
    'This selects the next Differentiated Services Functional Data
Path Element to handle traffic for this data path. This normally
is null (zeroDotZero), or points to a diffServSchedulerEntry or a
diffServQEntry.

However, this RowPointer may also point to an instance of:
  diffServClfrEntry,
  diffServMeterEntry,
  diffServActionEntry,
  diffServAlgDropEntry.

It would point another diffServSchedulerEntry when implementing
multiple scheduler methods for the same data path, such as having
one set of queues scheduled by WRR and that group participating
in a priority scheduling system in which other queues compete
with it in that way.  It might also point to a second scheduler
in a hierarchical scheduling system.

If the row pointed to is zeroDotZero, no further Differentiated
Services treatment is performed on traffic of this data path.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServSchedulerNext.1684', 
    'leaf', 
    '/diffServScheduler/diffServSchedulerEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServSchedulerMethod', '1717',
    '/diffServScheduler/diffServSchedulerEntry/diffServSchedulerMethod',
    'The scheduling algorithm used by this Scheduler. zeroDotZero
indicates that this is unknown.  Standard values for generic
algorithms: diffServSchedulerPriority, diffServSchedulerWRR, and
diffServSchedulerWFQ are specified in this MIB; additional values



may be further specified in other MIBs.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServSchedulerMethod.1717', 
    'leaf', 
    '/diffServScheduler/diffServSchedulerEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServSchedulerMinRate', '1732',
    '/diffServScheduler/diffServSchedulerEntry/diffServSchedulerMinRate',
    'This RowPointer indicates the entry in diffServMinRateTable
which indicates the priority or minimum output rate from this
scheduler. This attribute is used only when there is more than
one level of scheduler.

When it has the value zeroDotZero, it indicates that no minimum
rate or priority is imposed.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServSchedulerMinRate.1732', 
    'leaf', 
    '/diffServScheduler/diffServSchedulerEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServSchedulerMaxRate', '1752',
    '/diffServScheduler/diffServSchedulerEntry/diffServSchedulerMaxRate',
    'This RowPointer indicates the entry in diffServMaxRateTable
which indicates the maximum output rate from this scheduler.
When more than one maximum rate applies (eg, when a multi-rate
shaper is in view), it points to the first of those rate entries.
This attribute is used only when there is more than one level of
scheduler.

When it has the value zeroDotZero, it indicates that no maximum
rate is imposed.

Setting this to point to a target that does not exist results in
an inconsistentValue error.  If the row pointed to is removed or
becomes inactive by other means, the treatment is as if this
attribute contains a value of zeroDotZero.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServSchedulerMaxRate.1752', 
    'leaf', 
    '/diffServScheduler/diffServSchedulerEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServSchedulerStorage', '1774',
    '/diffServScheduler/diffServSchedulerEntry/diffServSchedulerStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServSchedulerStorage.1774', 
    'leaf', 
    '/diffServScheduler/diffServSchedulerEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServSchedulerStatus', '1785',
    '/diffServScheduler/diffServSchedulerEntry/diffServSchedulerStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServSchedulerStatus.1785', 
    'leaf', 
    '/diffServScheduler/diffServSchedulerEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMinRateNextFree', '1798',
    '/diffServScheduler/diffServMinRateNextFree',
    'This object contains an unused value for diffServMinRateId, or a
zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMinRateNextFree.1798', 
    'leaf', 
    '/diffServScheduler',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMinRateEntry', '1810',
    '/diffServScheduler/diffServMinRateEntry',
    'An entry in the Minimum Rate Parameters Table describes a single
set of scheduling parameters for use by one or more queues or
schedulers.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMinRateEntry.1810', 
    'list', 
    '/diffServScheduler',
    '0',
    '1',
    '',
    '',
    'diffServMinRateId diffServMinRatePriority diffServMinRateAbsolute diffServMinRateRelative diffServMinRateStorage diffServMinRateStatus',
    '',
    'diffServMinRateId',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMinRateId', '1820',
    '/diffServScheduler/diffServMinRateEntry/diffServMinRateId',
    'An index that enumerates the Scheduler Parameter entries.
Managers obtain new values for row creation in this table by
reading diffServMinRateNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMinRateId.1820', 
    'leaf', 
    '/diffServScheduler/diffServMinRateEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMinRatePriority', '1830',
    '/diffServScheduler/diffServMinRateEntry/diffServMinRatePriority',
    'The priority of this input to the associated scheduler, relative



to the scheduler\'s other inputs. A queue or scheduler with a
larger numeric value will be served before another with a smaller
numeric value.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMinRatePriority.1830', 
    'leaf', 
    '/diffServScheduler/diffServMinRateEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMinRateAbsolute', '1846',
    '/diffServScheduler/diffServMinRateEntry/diffServMinRateAbsolute',
    'The minimum absolute rate, in kilobits/sec, that a downstream
scheduler element should allocate to this queue. If the value is
zero, then there is effectively no minimum rate guarantee. If the
value is non-zero, the scheduler will assure the servicing of
this queue to at least this rate.

Note that this attribute value and that of
diffServMinRateRelative are coupled: changes to one will affect
the value of the other. They are linked by the following
equation, in that setting one will change the other:

  diffServMinRateRelative =
	  (diffServMinRateAbsolute*1000000)/ifSpeed

or, if appropriate:

  diffServMinRateRelative = diffServMinRateAbsolute/ifHighSpeed',
    'ifSpeed, ifHighSpeed, Interface MIB, RFC 2863',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMinRateAbsolute.1846', 
    'leaf', 
    '/diffServScheduler/diffServMinRateEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMinRateRelative', '1875',
    '/diffServScheduler/diffServMinRateEntry/diffServMinRateRelative',
    'The minimum rate that a downstream scheduler element should
allocate to this queue, relative to the maximum rate of the
interface as reported by ifSpeed or ifHighSpeed, in units of
1/1000 of 1. If the value is zero, then there is effectively no
minimum rate guarantee. If the value is non-zero, the scheduler
will assure the servicing of this queue to at least this rate.

Note that this attribute value and that of
diffServMinRateAbsolute are coupled: changes to one will affect
the value of the other. They are linked by the following
equation, in that setting one will change the other:



  diffServMinRateRelative =
	  (diffServMinRateAbsolute*1000000)/ifSpeed

or, if appropriate:

  diffServMinRateRelative = diffServMinRateAbsolute/ifHighSpeed',
    'ifSpeed, ifHighSpeed, Interface MIB, RFC 2863',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMinRateRelative.1875', 
    'leaf', 
    '/diffServScheduler/diffServMinRateEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMinRateStorage', '1906',
    '/diffServScheduler/diffServMinRateEntry/diffServMinRateStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMinRateStorage.1906', 
    'leaf', 
    '/diffServScheduler/diffServMinRateEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMinRateStatus', '1917',
    '/diffServScheduler/diffServMinRateEntry/diffServMinRateStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMinRateStatus.1917', 
    'leaf', 
    '/diffServScheduler/diffServMinRateEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMaxRateNextFree', '1930',
    '/diffServScheduler/diffServMaxRateNextFree',
    'This object contains an unused value for diffServMaxRateId, or a
zero to indicate that none exist.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMaxRateNextFree.1930', 
    'leaf', 
    '/diffServScheduler',
    '0',
    '1',
    'IndexIntegerNextFree',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMaxRateEntry', '1942',
    '/diffServScheduler/diffServMaxRateEntry',
    'An entry in the Maximum Rate Parameter Table describes a single
set of scheduling parameters for use by one or more queues or
schedulers.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMaxRateEntry.1942', 
    'list', 
    '/diffServScheduler',
    '0',
    '1',
    '',
    '',
    'diffServMaxRateId diffServMaxRateLevel diffServMaxRateAbsolute diffServMaxRateRelative diffServMaxRateThreshold diffServMaxRateStorage diffServMaxRateStatus',
    '',
    'diffServMaxRateId diffServMaxRateLevel',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMaxRateId', '1952',
    '/diffServScheduler/diffServMaxRateEntry/diffServMaxRateId',
    'An index that enumerates the Maximum Rate Parameter entries.
Managers obtain new values for row creation in this table by
reading diffServMaxRateNextFree.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMaxRateId.1952', 
    'leaf', 
    '/diffServScheduler/diffServMaxRateEntry',
    '0',
    '1',
    'IndexInteger',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMaxRateLevel', '1962',
    '/diffServScheduler/diffServMaxRateEntry/diffServMaxRateLevel',
    'An index that indicates which level of a multi-rate shaper is
being given its parameters. A multi-rate shaper has some number
of rate levels. Frame Relay\'s dual rate specification refers to a
\'committed\' and an \'excess\' rate; ATM\'s dual rate specification
refers to a \'mean\' and a \'peak\' rate. This table is generalized
to support an arbitrary number of rates. The committed or mean
rate is level 1, the peak rate (if any) is the highest level rate
configured, and if there are other rates they are distributed in
monotonically increasing order between them.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMaxRateLevel.1962', 
    'leaf', 
    '/diffServScheduler/diffServMaxRateEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMaxRateAbsolute', '1980',
    '/diffServScheduler/diffServMaxRateEntry/diffServMaxRateAbsolute',
    'The maximum rate in kilobits/sec that a downstream scheduler
element should allocate to this queue. If the value is zero, then
there is effectively no maximum rate limit and that the scheduler
should attempt to be work conserving for this queue. If the value
is non-zero, the scheduler will limit the servicing of this queue
to, at most, this rate in a non-work-conserving manner.

Note that this attribute value and that of
diffServMaxRateRelative are coupled: changes to one will affect
the value of the other. They are linked by the following



equation, in that setting one will change the other:

  diffServMaxRateRelative =
	  (diffServMaxRateAbsolute*1000000)/ifSpeed

or, if appropriate:

  diffServMaxRateRelative = diffServMaxRateAbsolute/ifHighSpeed',
    'ifSpeed, ifHighSpeed, Interface MIB, RFC 2863',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMaxRateAbsolute.1980', 
    'leaf', 
    '/diffServScheduler/diffServMaxRateEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMaxRateRelative', '2013',
    '/diffServScheduler/diffServMaxRateEntry/diffServMaxRateRelative',
    'The maximum rate that a downstream scheduler element should
allocate to this queue, relative to the maximum rate of the
interface as reported by ifSpeed or ifHighSpeed, in units of
1/1000 of 1. If the value is zero, then there is effectively no
maximum rate limit and the scheduler should attempt to be work
conserving for this queue. If the value is non-zero, the
scheduler will limit the servicing of this queue to, at most,
this rate in a non-work-conserving manner.

Note that this attribute value and that of
diffServMaxRateAbsolute are coupled: changes to one will affect
the value of the other. They are linked by the following
equation, in that setting one will change the other:

  diffServMaxRateRelative =
	  (diffServMaxRateAbsolute*1000000)/ifSpeed

or, if appropriate:

  diffServMaxRateRelative = diffServMaxRateAbsolute/ifHighSpeed',
    'ifSpeed, ifHighSpeed, Interface MIB, RFC 2863',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMaxRateRelative.2013', 
    'leaf', 
    '/diffServScheduler/diffServMaxRateEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMaxRateThreshold', '2044',
    '/diffServScheduler/diffServMaxRateEntry/diffServMaxRateThreshold',
    'The number of bytes of queue depth at which the rate of a



multi-rate scheduler will increase to the next output rate. In
the last conceptual row for such a shaper, this threshold is
ignored and by convention is zero.',
    'Adaptive rate Shaper, RFC 2963',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMaxRateThreshold.2044', 
    'leaf', 
    '/diffServScheduler/diffServMaxRateEntry',
    '0',
    '1',
    'BurstSize',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMaxRateStorage', '2061',
    '/diffServScheduler/diffServMaxRateEntry/diffServMaxRateStorage',
    'The storage type for this conceptual row.  Conceptual rows
having the value \'permanent\' need not allow write-access to any
columnar objects in the row.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMaxRateStorage.2061', 
    'leaf', 
    '/diffServScheduler/diffServMaxRateEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DIFFSERV-MIB', 'DIFFSERV-MIB', '2002-02-07', 'diffServMaxRateStatus', '2072',
    '/diffServScheduler/diffServMaxRateEntry/diffServMaxRateStatus',
    'The status of this conceptual row. All writable objects in this
row may be modified at any time. Setting this variable to
\'destroy\' when the MIB contains one or more RowPointers pointing
to it results in destruction being delayed until the row is no
longer used.',
    '',
    '/modules/DIFFSERV-MIB/2002-02-07#diffServMaxRateStatus.2072', 
    'leaf', 
    '/diffServScheduler/diffServMaxRateEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/IANA-LANGUAGE-MIB.yang
# module: IANA-LANGUAGE-MIB
# version: 2000-05-10
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'IANA-LANGUAGE-MIB');

INSERT INTO ncmodule VALUES (
    '', 'IANA-LANGUAGE-MIB', 'IANA-LANGUAGE-MIB', '2000-05-10', 'iana-language',
    'urn:ietf:params:xml:ns:yang:smiv2:IANA-LANGUAGE-MIB',
    'IANA',
    'The MIB module registers object identifier values for
well-known programming and scripting languages. Every
language registratio...',
    'The MIB module registers object identifier values for
well-known programming and scripting languages. Every
language registration MUST describe the format used
when transferring scripts written in this language.

Any additions or changes to the contents of this MIB
module require Designated Expert Review as defined in
the Guidelines for Writing IANA Considerations Section
document. The Designated Expert will be selected by
the IESG Area Director of the OPS Area.

Note, this module does not have to register all possible
languages since languages are identified by object
identifier values. It is therefore possible to registered 
languages in private OID trees. The references given below are not
normative with regard to the language version. Other
references might be better suited to describe some newer 
versions of this language. The references are only
provided as `a pointer into the right direction\'.',
    '',
    'Internet Assigned Numbers Authority (IANA)

Postal: ICANN
	4676 Admiralty Way, Suite 330
	Marina del Rey, CA 90292

Tel:    +1 310 823 9358 x20
E-Mail: iana@iana.org',
    'Import mib-2 instead of experimental, so that
this module compiles',
    '/xsd/IANA-LANGUAGE-MIB_2000-05-10.xsd',
    '/modules/IANA-LANGUAGE-MIB/2000-05-10', 
    '/src/IANA-LANGUAGE-MIB_2000-05-10.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/IANA-LANGUAGE-MIB.yang',
    'IANA-LANGUAGE-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/netconf.yang
# module: netconf
# version: 2008-04-26
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'netconf');

INSERT INTO ncmodule VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'nc',
    'urn:ietf:params:xml:ns:netconf:base:1.0',
    '',
    'NETCONF Protocol 
 * Data Types
 * Parmsets
 * RPCs
Translated from RFC 4741.',
    'NETCONF Protocol 
 * Data Types
 * Parmsets
 * RPCs
Translated from RFC 4741.',
    '',
    'Translated by Andy Bierman.
Send comments to <ietf@andybierman.com>.',
    'Change get-config and get output from \'config\' to \'data\'.',
    '/xsd/netconf_2008-04-26.xsd',
    '/modules/netconf/2008-04-26', 
    '/src/netconf_2008-04-26.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/netconf.yang',
    'netconf.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'Language', '36',
    'XML language type for LangString',
    '',
    '/modules/netconf/2008-04-26#Language.36', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'SessionId', '43',
    'NETCONF Session Id',
    '',
    '/modules/netconf/2008-04-26#SessionId.43', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'SessionIdOrZero', '50',
    'NETCONF Session Id or Zero to indicate none',
    '',
    '/modules/netconf/2008-04-26#SessionIdOrZero.50', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'LangString', '56',
    'XML string with a language attribute.',
    '',
    '/modules/netconf/2008-04-26#LangString.56', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'MessageId', '62',
    'NETCONF message-id attribute',
    '',
    '/modules/netconf/2008-04-26#MessageId.62', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ErrorType', '69',
    'NETCONF Error Type',
    '',
    '/modules/netconf/2008-04-26#ErrorType.69', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ErrorTag', '79',
    'NETCONF Error Tag',
    '',
    '/modules/netconf/2008-04-26#ErrorTag.79', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ErrorSeverity', '104',
    'NETCONF Error Severity',
    '',
    '/modules/netconf/2008-04-26#ErrorSeverity.104', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'TestOptionType', '112',
    'NETCONF \'test-option\' Element Content.
This is extended with the test-only enumeration.
The \'set\' option has no real effect since
the entire PDU is always validated before any
of it is applied (always test-then-set).',
    '',
    '/modules/netconf/2008-04-26#TestOptionType.112', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ErrorOptionType', '127',
    'NETCONF \'error-option\' Element Content',
    '',
    '/modules/netconf/2008-04-26#ErrorOptionType.127', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'FilterType', '137',
    'NETCONF \'filter\' Attribute Content',
    '',
    '/modules/netconf/2008-04-26#FilterType.137', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'EditOperationType', '146',
    'NETCONF \'operation\' Attribute Content',
    '',
    '/modules/netconf/2008-04-26#EditOperationType.146', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'DefaultOperationType', '157',
    'NETCONF \'default-operation\' Element Content',
    '',
    '/modules/netconf/2008-04-26#DefaultOperationType.157', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ConfirmTimeoutType', '167',
    'NETCONF \'confirm-timeout\' Element Content',
    '',
    '/modules/netconf/2008-04-26#ConfirmTimeoutType.167', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ConfigURIType', '177',
    '',
    '',
    '/modules/netconf/2008-04-26#ConfigURIType.177', 'string', 'anyURI', 
    'xsd', '348', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'NcCapabilities', '183',
    'Generic Capabilities List.',
    '',
    '/modules/netconf/2008-04-26#NcCapabilities.183', 
    'capabilities',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'NcAgentHello', '195',
    'Generic Agent Hello Message Parameters.',
    '',
    '/modules/netconf/2008-04-26#NcAgentHello.195', 
    'capabilitiessession-id',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'NcManagerHello', '206',
    'Generic Manager Hello Message Parameters.',
    '',
    '/modules/netconf/2008-04-26#NcManagerHello.206', 
    'capabilities',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ErrorInfoContent', '214',
    'NETCONF standard \'error-info\' Element Content;',
    '',
    '/modules/netconf/2008-04-26#ErrorInfoContent.214', 
    'bad-attribute bad-element ok-element err-element noop-element session-id',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'RpcErrorType', '285',
    'NETCONF \'rpc-error\' Element Content',
    '',
    '/modules/netconf/2008-04-26#RpcErrorType.285', 
    'error-type error-tag error-severity error-app-tag error-path error-message error-info',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'RpcDataReplyType', '359',
    'NETCONF \'rpc-reply\' Error and/or Data Content',
    '',
    '/modules/netconf/2008-04-26#RpcDataReplyType.359', 
    'rpc-error data',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'RpcOkReplyType', '374',
    'NETCONF \'rpc-reply\' OK Content.',
    '',
    '/modules/netconf/2008-04-26#RpcOkReplyType.374', 
    'ok-or-error',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'RpcReplyType', '393',
    'Generic NETCONF \'rpc-reply\' content. ',
    '',
    '/modules/netconf/2008-04-26#RpcReplyType.393', 
    'ok-or-data-error',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'CommonConfigSourceType', '411',
    'Common NETCONF config parameter contents.',
    '',
    '/modules/netconf/2008-04-26#CommonConfigSourceType.411', 
    'config-source',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'GetConfigSourceType', '431',
    'NETCONF config \'source\' Parameter contents.',
    '',
    '/modules/netconf/2008-04-26#GetConfigSourceType.431', 
    'config-source',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'RpcOperationSourceType', '445',
    'NETCONF \'source\' Parameter contents.',
    '',
    '/modules/netconf/2008-04-26#RpcOperationSourceType.445', 
    'config-source',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'RpcOperationTargetType', '463',
    'NETCONF \'target\' Parameter contents.',
    '',
    '/modules/netconf/2008-04-26#RpcOperationTargetType.463', 
    'config-source',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'rpc', '479',
    '/rpc',
    'Remote Procedure Call request message',
    'RFC 4741, section 4.1',
    '/modules/netconf/2008-04-26#rpc.479', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'rpc-reply', '487',
    '/rpc-reply',
    'Remote Procedure Call response message',
    'RFC 4741, section 4.2',
    '/modules/netconf/2008-04-26#rpc-reply.487', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'ok-or-data-error',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ok-or-data-error', '396',
    '/rpc-reply/ok-or-data-error',
    '',
    '',
    '/modules/netconf/2008-04-26#ok-or-data-error.396', 
    'choice', 
    '/rpc-reply',
    '0',
    '1',
    '',
    '',
    'ok data-error',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ok', '397',
    '/rpc-reply/ok-or-data-error/ok',
    '',
    '',
    '/modules/netconf/2008-04-26#ok.397', 
    'case', 
    '/rpc-reply/ok-or-data-error',
    '0',
    '1',
    '',
    '',
    'ok',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'ok', '397',
    '/rpc-reply/ok-or-data-error/ok/ok',
    'Sent in \'rpc-reply\' messages if no errors or
warnings occurred during the processing of an \'rpc\' request.',
    '',
    '/modules/netconf/2008-04-26#ok.397', 
    'leaf', 
    '/rpc-reply/ok-or-data-error/ok',
    '0',
    '1',
    'empty',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'data-error', '405',
    '/rpc-reply/ok-or-data-error/data-error',
    '',
    '',
    '/modules/netconf/2008-04-26#data-error.405', 
    'case', 
    '/rpc-reply/ok-or-data-error',
    '0',
    '1',
    '',
    '',
    'rpc-error data',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'rpc-error', '362',
    '/rpc-reply/ok-or-data-error/data-error/rpc-error',
    '',
    '',
    '/modules/netconf/2008-04-26#rpc-error.362', 
    'container', 
    '/rpc-reply/ok-or-data-error/data-error',
    '0',
    '1',
    '',
    '',
    'error-type error-tag error-severity error-app-tag error-path error-message error-info',
    '',
    '',
    '0', '1', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'error-type', '288',
    '/rpc-reply/ok-or-data-error/data-error/rpc-error/error-type',
    'Defines the conceptual layer that the error occurred.',
    '',
    '/modules/netconf/2008-04-26#error-type.288', 
    'leaf', 
    '/rpc-reply/ok-or-data-error/data-error/rpc-error',
    '0',
    '1',
    'ErrorType',
    '',
    '',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'error-tag', '295',
    '/rpc-reply/ok-or-data-error/data-error/rpc-error/error-tag',
    'Contains a string identifying the error condition.',
    '',
    '/modules/netconf/2008-04-26#error-tag.295', 
    'leaf', 
    '/rpc-reply/ok-or-data-error/data-error/rpc-error',
    '0',
    '1',
    'ErrorTag',
    '',
    '',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'error-severity', '302',
    '/rpc-reply/ok-or-data-error/data-error/rpc-error/error-severity',
    'Contains a string identifying the error severity, as
determined by the device.',
    '',
    '/modules/netconf/2008-04-26#error-severity.302', 
    'leaf', 
    '/rpc-reply/ok-or-data-error/data-error/rpc-error',
    '0',
    '1',
    'ErrorSeverity',
    '',
    '',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'error-app-tag', '310',
    '/rpc-reply/ok-or-data-error/data-error/rpc-error/error-app-tag',
    'Contains a string identifying the data-model-specific
or implementation-specific error condition, if one exists.
This element will not be present if no appropriate 
application error tag can be associated with a particular
error condition.',
    '',
    '/modules/netconf/2008-04-26#error-app-tag.310', 
    'leaf', 
    '/rpc-reply/ok-or-data-error/data-error/rpc-error',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'error-path', '320',
    '/rpc-reply/ok-or-data-error/data-error/rpc-error/error-path',
    'Contains the absolute XPath [2] expression identifying
the element path to the node that is associated with the error
being reported in a particular rpc-error element.  This element
will not be present if no appropriate payload element can be
associated with a particular error condition, or if the
\'bad-element\' QString returned in the \'error-info\' container is
sufficient to identify the node associated with the error.  When
the XPath expression is interpreted, the set of namespace
declarations are those in scope on the rpc-error element,
including the default namespace.',
    '',
    '/modules/netconf/2008-04-26#error-path.320', 
    'leaf', 
    '/rpc-reply/ok-or-data-error/data-error/rpc-error',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'error-message', '335',
    '/rpc-reply/ok-or-data-error/data-error/rpc-error/error-message',
    'Contains a string suitable for human display that
describes the error condition.  This element will not be present
if no appropriate message is provided for a particular error
condition.  This element SHOULD include an xml:lang attribute.',
    '',
    '/modules/netconf/2008-04-26#error-message.335', 
    'leaf', 
    '/rpc-reply/ok-or-data-error/data-error/rpc-error',
    '0',
    '1',
    'LangString',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'error-info', '344',
    '/rpc-reply/ok-or-data-error/data-error/rpc-error/error-info',
    'Contains protocol- or data-model-specific error content.
This element will not be present if no such error content is
provided for a particular error condition.  The list in 
RFC 4741, Appendix A, defines any mandatory error-info content 
for each error.  After any protocol-mandated content, a 
data model definition may mandate that certain application-layer
error information be included in the error-info container. 
An implementation may include additional elements to 
provide extended and/or implementation-specific debugging 
information.',
    '',
    '/modules/netconf/2008-04-26#error-info.344', 
    'leaf', 
    '/rpc-reply/ok-or-data-error/data-error/rpc-error',
    '0',
    '1',
    'anyxml',
    '',
    '',
    '',
    '',
    '1', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'data', '366',
    '/rpc-reply/ok-or-data-error/data-error/data',
    '',
    '',
    '/modules/netconf/2008-04-26#data.366', 
    'container', 
    '/rpc-reply/ok-or-data-error/data-error',
    '0',
    '1',
    '',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'get-config', '499',
    '/get-config',
    'Retrieve all or part of a specified configuration.',
    'RFC 4741, section 7.2',
    '/modules/netconf/2008-04-26#get-config.499', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input output',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '507',
    '/get-config/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.507', 
    'input or output', 
    '/get-config',
    '0',
    '0',
    '',
    '',
    'source filter',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'source', '508',
    '/get-config/input/source',
    'Particular configuration to retrieve.',
    '',
    '/modules/netconf/2008-04-26#source.508', 
    'container', 
    '/get-config/input',
    '0',
    '0',
    '',
    '',
    'config-source',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config-source', '414',
    '/get-config/input/source/config-source',
    '',
    '',
    '/modules/netconf/2008-04-26#config-source.414', 
    'choice', 
    '/get-config/input/source',
    '0',
    '0',
    '',
    '',
    'candidate running startup url',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/get-config/input/source/config-source/candidate',
    '',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'case', 
    '/get-config/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'candidate',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/get-config/input/source/config-source/candidate/candidate',
    'Only available if \'candidate\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'leaf', 
    '/get-config/input/source/config-source/candidate',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/get-config/input/source/config-source/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'case', 
    '/get-config/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'running',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/get-config/input/source/config-source/running/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'leaf', 
    '/get-config/input/source/config-source/running',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/get-config/input/source/config-source/startup',
    '',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'case', 
    '/get-config/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'startup',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/get-config/input/source/config-source/startup/startup',
    'Only available if \'startup\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'leaf', 
    '/get-config/input/source/config-source/startup',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '436',
    '/get-config/input/source/config-source/url',
    '',
    '',
    '/modules/netconf/2008-04-26#url.436', 
    'case', 
    '/get-config/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'url',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '436',
    '/get-config/input/source/config-source/url/url',
    'URL pointing to config data. Only available
if \'url\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#url.436', 
    'leaf', 
    '/get-config/input/source/config-source/url',
    '0',
    '0',
    'ConfigURIType',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'filter', '514',
    '/get-config/input/filter',
    'Subtree or Xpath filter to use.',
    '',
    '/modules/netconf/2008-04-26#filter.514', 
    'leaf', 
    '/get-config/input',
    '0',
    '0',
    'anyxml',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'output', '521',
    '/get-config/output',
    '',
    '',
    '/modules/netconf/2008-04-26#output.521', 
    'input or output', 
    '/get-config',
    '0',
    '0',
    '',
    '',
    'data',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'data', '522',
    '/get-config/output/data',
    'Copy of the source database subset which matched
the filter criteria (if any).',
    '',
    '/modules/netconf/2008-04-26#data.522', 
    'leaf', 
    '/get-config/output',
    '0',
    '0',
    'anyxml',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'edit-config', '530',
    '/edit-config',
    'The \'edit-config\' operation loads all or part of a specified
configuration to the specified target configuration.  This
operation allows the new configuration to be expressed in several
ways, such as using a local file, a remote file, or inline.  If
the target configuration does not exist, it will be created.  If a
NETCONF peer supports the :url capability (Section 8.8), the <url>
element can appear instead of the <config> parameter and should
identify a local configuration file.

The device analyzes the source and target configurations and
performs the requested changes.  The target configuration is not
necessarily replaced, as with the <copy-config> message.  Instead,
the target configuration is changed in accordance with the
source\'s data and requested operations.',
    'RFC 4741, section 7.2',
    '/modules/netconf/2008-04-26#edit-config.530', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '551',
    '/edit-config/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.551', 
    'input or output', 
    '/edit-config',
    '0',
    '0',
    '',
    '',
    'target default-operation test-option error-option edit-content',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'target', '552',
    '/edit-config/input/target',
    'Particular configuration to edit.',
    '',
    '/modules/netconf/2008-04-26#target.552', 
    'container', 
    '/edit-config/input',
    '0',
    '0',
    '',
    '',
    'config-source',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config-source', '414',
    '/edit-config/input/target/config-source',
    '',
    '',
    '/modules/netconf/2008-04-26#config-source.414', 
    'choice', 
    '/edit-config/input/target',
    '0',
    '0',
    '',
    '',
    'candidate running startup url',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/edit-config/input/target/config-source/candidate',
    '',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'case', 
    '/edit-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'candidate',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/edit-config/input/target/config-source/candidate/candidate',
    'Only available if \'candidate\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'leaf', 
    '/edit-config/input/target/config-source/candidate',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/edit-config/input/target/config-source/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'case', 
    '/edit-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'running',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/edit-config/input/target/config-source/running/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'leaf', 
    '/edit-config/input/target/config-source/running',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/edit-config/input/target/config-source/startup',
    '',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'case', 
    '/edit-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'startup',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/edit-config/input/target/config-source/startup/startup',
    'Only available if \'startup\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'leaf', 
    '/edit-config/input/target/config-source/startup',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/edit-config/input/target/config-source/url',
    '',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'case', 
    '/edit-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'url',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/edit-config/input/target/config-source/url/url',
    'URL pointing to desired config data output. Only 
available if \'url\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'leaf', 
    '/edit-config/input/target/config-source/url',
    '0',
    '0',
    'ConfigURIType',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'default-operation', '558',
    '/edit-config/input/default-operation',
    'Default operation to apply if not explicitly set.',
    '',
    '/modules/netconf/2008-04-26#default-operation.558', 
    'leaf', 
    '/edit-config/input',
    '0',
    '0',
    'DefaultOperationType',
    '',
    '',
    'merge',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'test-option', '564',
    '/edit-config/input/test-option',
    'Test option if validate capability supported.
The \'validate\' capability must be present to set
this object to \'test-then-set\'.',
    '',
    '/modules/netconf/2008-04-26#test-option.564', 
    'leaf', 
    '/edit-config/input',
    '0',
    '0',
    'TestOptionType',
    '',
    '',
    'set',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'error-option', '572',
    '/edit-config/input/error-option',
    'Error recovery option.',
    '',
    '/modules/netconf/2008-04-26#error-option.572', 
    'leaf', 
    '/edit-config/input',
    '0',
    '0',
    'ErrorOptionType',
    '',
    '',
    'stop-on-error',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'edit-content', '577',
    '/edit-config/input/edit-content',
    '',
    '',
    '/modules/netconf/2008-04-26#edit-content.577', 
    'choice', 
    '/edit-config/input',
    '0',
    '0',
    '',
    '',
    'config url',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config', '578',
    '/edit-config/input/edit-content/config',
    '',
    '',
    '/modules/netconf/2008-04-26#config.578', 
    'case', 
    '/edit-config/input/edit-content',
    '0',
    '0',
    '',
    '',
    'config',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config', '578',
    '/edit-config/input/edit-content/config/config',
    'Inline Config content: \'config\' element.',
    '',
    '/modules/netconf/2008-04-26#config.578', 
    'leaf', 
    '/edit-config/input/edit-content/config',
    '0',
    '0',
    'anyxml',
    '',
    '',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '583',
    '/edit-config/input/edit-content/url',
    '',
    '',
    '/modules/netconf/2008-04-26#url.583', 
    'case', 
    '/edit-config/input/edit-content',
    '0',
    '0',
    '',
    '',
    'url',
    '',
    '',
    '1', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '583',
    '/edit-config/input/edit-content/url/url',
    'Pointer to Config content: \'url\' element.',
    '',
    '/modules/netconf/2008-04-26#url.583', 
    'leaf', 
    '/edit-config/input/edit-content/url',
    '0',
    '0',
    'ConfigURIType',
    '',
    '',
    '',
    '',
    '1', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'copy-config', '593',
    '/copy-config',
    'Create or replace an entire configuration datastore with the
contents of another complete configuration datastore.  If the
target datastore exists, it is overwritten.  Otherwise, a new one
is created, if allowed.

If a NETCONF peer supports the :url capability (Section 8.8), the
\'url\' element can appear as the <source> or <target> parameter.

Even if it advertises the :writable-running capability, a device
may choose not to support the <running/> configuration datastore
as the <target> parameter of a <copy-config> operation.  A device
may choose not to support remote-to-remote copy operations, where
both the <source> and <target> parameters use the <url> element.

If the source and target parameters identify the same URL or
configuration datastore, an error MUST be returned with an error-
tag containing invalid-value.',
    'RFC 4741, section 7.3',
    '/modules/netconf/2008-04-26#copy-config.593', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '617',
    '/copy-config/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.617', 
    'input or output', 
    '/copy-config',
    '0',
    '0',
    '',
    '',
    'target source',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'target', '618',
    '/copy-config/input/target',
    'Particular configuration to copy to.',
    '',
    '/modules/netconf/2008-04-26#target.618', 
    'container', 
    '/copy-config/input',
    '0',
    '0',
    '',
    '',
    'config-source',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config-source', '414',
    '/copy-config/input/target/config-source',
    '',
    '',
    '/modules/netconf/2008-04-26#config-source.414', 
    'choice', 
    '/copy-config/input/target',
    '0',
    '0',
    '',
    '',
    'candidate running startup url',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/copy-config/input/target/config-source/candidate',
    '',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'case', 
    '/copy-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'candidate',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/copy-config/input/target/config-source/candidate/candidate',
    'Only available if \'candidate\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'leaf', 
    '/copy-config/input/target/config-source/candidate',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/copy-config/input/target/config-source/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'case', 
    '/copy-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'running',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/copy-config/input/target/config-source/running/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'leaf', 
    '/copy-config/input/target/config-source/running',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/copy-config/input/target/config-source/startup',
    '',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'case', 
    '/copy-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'startup',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/copy-config/input/target/config-source/startup/startup',
    'Only available if \'startup\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'leaf', 
    '/copy-config/input/target/config-source/startup',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/copy-config/input/target/config-source/url',
    '',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'case', 
    '/copy-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'url',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/copy-config/input/target/config-source/url/url',
    'URL pointing to desired config data output. Only 
available if \'url\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'leaf', 
    '/copy-config/input/target/config-source/url',
    '0',
    '0',
    'ConfigURIType',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'source', '624',
    '/copy-config/input/source',
    'Particular configuration to copy from.',
    '',
    '/modules/netconf/2008-04-26#source.624', 
    'container', 
    '/copy-config/input',
    '0',
    '0',
    '',
    '',
    'config-source',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config-source', '414',
    '/copy-config/input/source/config-source',
    '',
    '',
    '/modules/netconf/2008-04-26#config-source.414', 
    'choice', 
    '/copy-config/input/source',
    '0',
    '0',
    '',
    '',
    'candidate running startup url config',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/copy-config/input/source/config-source/candidate',
    '',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'case', 
    '/copy-config/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'candidate',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/copy-config/input/source/config-source/candidate/candidate',
    'Only available if \'candidate\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'leaf', 
    '/copy-config/input/source/config-source/candidate',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/copy-config/input/source/config-source/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'case', 
    '/copy-config/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'running',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/copy-config/input/source/config-source/running/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'leaf', 
    '/copy-config/input/source/config-source/running',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/copy-config/input/source/config-source/startup',
    '',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'case', 
    '/copy-config/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'startup',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/copy-config/input/source/config-source/startup/startup',
    'Only available if \'startup\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'leaf', 
    '/copy-config/input/source/config-source/startup',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '450',
    '/copy-config/input/source/config-source/url',
    '',
    '',
    '/modules/netconf/2008-04-26#url.450', 
    'case', 
    '/copy-config/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'url',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '450',
    '/copy-config/input/source/config-source/url/url',
    'URL pointing to config data. Only available
if \'url\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#url.450', 
    'leaf', 
    '/copy-config/input/source/config-source/url',
    '0',
    '0',
    'ConfigURIType',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config', '457',
    '/copy-config/input/source/config-source/config',
    '',
    '',
    '/modules/netconf/2008-04-26#config.457', 
    'case', 
    '/copy-config/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'config',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config', '457',
    '/copy-config/input/source/config-source/config/config',
    'Inline configuration data',
    '',
    '/modules/netconf/2008-04-26#config.457', 
    'leaf', 
    '/copy-config/input/source/config-source/config',
    '0',
    '0',
    'anyxml',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'delete-config', '632',
    '/delete-config',
    'Delete a configuration datastore.  The \'running\' configuration
datastore cannot be deleted.

If a NETCONF peer supports the :url capability (Section 8.8), the
\'url\' element can appear as the <target> parameter.',
    'RFC 4741, section 7.4',
    '/modules/netconf/2008-04-26#delete-config.632', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '644',
    '/delete-config/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.644', 
    'input or output', 
    '/delete-config',
    '0',
    '0',
    '',
    '',
    'target',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'target', '645',
    '/delete-config/input/target',
    'Particular configuration to delete.',
    '',
    '/modules/netconf/2008-04-26#target.645', 
    'container', 
    '/delete-config/input',
    '0',
    '0',
    '',
    '',
    'config-source',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config-source', '414',
    '/delete-config/input/target/config-source',
    '',
    '',
    '/modules/netconf/2008-04-26#config-source.414', 
    'choice', 
    '/delete-config/input/target',
    '0',
    '0',
    '',
    '',
    'candidate running startup url',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/delete-config/input/target/config-source/candidate',
    '',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'case', 
    '/delete-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'candidate',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/delete-config/input/target/config-source/candidate/candidate',
    'Only available if \'candidate\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'leaf', 
    '/delete-config/input/target/config-source/candidate',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/delete-config/input/target/config-source/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'case', 
    '/delete-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'running',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/delete-config/input/target/config-source/running/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'leaf', 
    '/delete-config/input/target/config-source/running',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/delete-config/input/target/config-source/startup',
    '',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'case', 
    '/delete-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'startup',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/delete-config/input/target/config-source/startup/startup',
    'Only available if \'startup\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'leaf', 
    '/delete-config/input/target/config-source/startup',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/delete-config/input/target/config-source/url',
    '',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'case', 
    '/delete-config/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'url',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/delete-config/input/target/config-source/url/url',
    'URL pointing to desired config data output. Only 
available if \'url\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'leaf', 
    '/delete-config/input/target/config-source/url',
    '0',
    '0',
    'ConfigURIType',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'lock', '652',
    '/lock',
    'The lock operation allows the client to lock the configuration
system of a device.  Such locks are intended to be short-lived and
allow a client to make a change without fear of interaction with
other NETCONF clients, non-NETCONF clients (e.g., SNMP and command
line interface (CLI) scripts), and human users. ...',
    'RFC 4741, section 7.5',
    '/modules/netconf/2008-04-26#lock.652', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '664',
    '/lock/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.664', 
    'input or output', 
    '/lock',
    '0',
    '0',
    '',
    '',
    'target',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'target', '665',
    '/lock/input/target',
    'Particular configuration to lock',
    '',
    '/modules/netconf/2008-04-26#target.665', 
    'container', 
    '/lock/input',
    '0',
    '0',
    '',
    '',
    'config-source',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config-source', '414',
    '/lock/input/target/config-source',
    '',
    '',
    '/modules/netconf/2008-04-26#config-source.414', 
    'choice', 
    '/lock/input/target',
    '0',
    '0',
    '',
    '',
    'candidate running startup url',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/lock/input/target/config-source/candidate',
    '',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'case', 
    '/lock/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'candidate',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/lock/input/target/config-source/candidate/candidate',
    'Only available if \'candidate\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'leaf', 
    '/lock/input/target/config-source/candidate',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/lock/input/target/config-source/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'case', 
    '/lock/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'running',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/lock/input/target/config-source/running/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'leaf', 
    '/lock/input/target/config-source/running',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/lock/input/target/config-source/startup',
    '',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'case', 
    '/lock/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'startup',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/lock/input/target/config-source/startup/startup',
    'Only available if \'startup\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'leaf', 
    '/lock/input/target/config-source/startup',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/lock/input/target/config-source/url',
    '',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'case', 
    '/lock/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'url',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/lock/input/target/config-source/url/url',
    'URL pointing to desired config data output. Only 
available if \'url\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'leaf', 
    '/lock/input/target/config-source/url',
    '0',
    '0',
    'ConfigURIType',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'unlock', '673',
    '/unlock',
    'The unlock operation is used to release a configuration lock,
previously obtained with the \'lock\' operation.

An unlock operation will not succeed if any of the following
conditions are true:

*  the specified lock is not currently active

*  the session issuing the <unlock> operation is not the same
   session that obtained the lock

The server MUST respond with either an <ok> element or an
\'rpc-error\'.',
    'RFC 4741, section 7.6',
    '/modules/netconf/2008-04-26#unlock.673', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '693',
    '/unlock/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.693', 
    'input or output', 
    '/unlock',
    '0',
    '0',
    '',
    '',
    'target',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'target', '694',
    '/unlock/input/target',
    'Particular configuration to unlock.',
    '',
    '/modules/netconf/2008-04-26#target.694', 
    'container', 
    '/unlock/input',
    '0',
    '0',
    '',
    '',
    'config-source',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config-source', '414',
    '/unlock/input/target/config-source',
    '',
    '',
    '/modules/netconf/2008-04-26#config-source.414', 
    'choice', 
    '/unlock/input/target',
    '0',
    '0',
    '',
    '',
    'candidate running startup url',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/unlock/input/target/config-source/candidate',
    '',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'case', 
    '/unlock/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'candidate',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/unlock/input/target/config-source/candidate/candidate',
    'Only available if \'candidate\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'leaf', 
    '/unlock/input/target/config-source/candidate',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/unlock/input/target/config-source/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'case', 
    '/unlock/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'running',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/unlock/input/target/config-source/running/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'leaf', 
    '/unlock/input/target/config-source/running',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/unlock/input/target/config-source/startup',
    '',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'case', 
    '/unlock/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'startup',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/unlock/input/target/config-source/startup/startup',
    'Only available if \'startup\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'leaf', 
    '/unlock/input/target/config-source/startup',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/unlock/input/target/config-source/url',
    '',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'case', 
    '/unlock/input/target/config-source',
    '0',
    '0',
    '',
    '',
    'url',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '468',
    '/unlock/input/target/config-source/url/url',
    'URL pointing to desired config data output. Only 
available if \'url\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#url.468', 
    'leaf', 
    '/unlock/input/target/config-source/url',
    '0',
    '0',
    'ConfigURIType',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'get', '702',
    '/get',
    'Retrieve running configuration and device state information.',
    'RFC 4741, section 7.7',
    '/modules/netconf/2008-04-26#get.702', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input output',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '710',
    '/get/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.710', 
    'input or output', 
    '/get',
    '0',
    '0',
    '',
    '',
    'filter',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'filter', '711',
    '/get/input/filter',
    'This parameter specifies the portion of the system
configuration and state data to retrieve.  If this parameter is
empty, all the device configuration and state information is
returned.

The filter element may optionally contain a \'type\' attribute.
This attribute indicates the type of filtering syntax used
within the filter element.  The default filtering mechanism in
NETCONF is referred to as subtree filtering and is described in
Section 6.  The value \'subtree\' explicitly identifies this type
of filtering.

If the NETCONF peer supports the :xpath capability
(Section 8.9), the value \'xpath\' may be used to indicate that
the select attribute of the filter element contains an XPath
expression.',
    '',
    '/modules/netconf/2008-04-26#filter.711', 
    'leaf', 
    '/get/input',
    '0',
    '0',
    'anyxml',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'output', '734',
    '/get/output',
    '',
    '',
    '/modules/netconf/2008-04-26#output.734', 
    'input or output', 
    '/get',
    '0',
    '0',
    '',
    '',
    'data',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'data', '735',
    '/get/output/data',
    'Copy of the \'running\' database subset which matched
the filter criteria (if any).',
    '',
    '/modules/netconf/2008-04-26#data.735', 
    'leaf', 
    '/get/output',
    '0',
    '0',
    'anyxml',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'close-session', '743',
    '/close-session',
    'Request graceful termination of a NETCONF session.

When a NETCONF server receives a <close-session> request, it will
gracefully close the session.  The server will release any locks
and resources associated with the session and gracefully close any
associated connections.  Any NETCONF requests received after a
\'close-session\' request will be ignored.',
    'RFC 4741, section 7.8',
    '/modules/netconf/2008-04-26#close-session.743', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'kill-session', '758',
    '/kill-session',
    'Force the termination of a NETCONF session.

When a NETCONF entity receives a <kill-session> request for an
open session, it will abort any operations currently in process,
release any locks and resources associated with the session, and
close any associated connections.

If a NETCONF server receives a <kill-session> request while
processing a confirmed commit (Section 8.4), it must restore the
configuration to its state before the confirmed commit was issued.

Otherwise, the <kill-session> operation does not roll back
configuration or other device state modifications made by the
entity holding the lock.',
    'RFC 4741, section 7.9',
    '/modules/netconf/2008-04-26#kill-session.758', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '779',
    '/kill-session/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.779', 
    'input or output', 
    '/kill-session',
    '0',
    '0',
    '',
    '',
    'session-id',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'session-id', '780',
    '/kill-session/input/session-id',
    'Particular session to kill.',
    '',
    '/modules/netconf/2008-04-26#session-id.780', 
    'leaf', 
    '/kill-session/input',
    '0',
    '0',
    'SessionId',
    '',
    '',
    '',
    '',
    '1', '1', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'commit', '788',
    '/commit',
    'Only available if \'candidate\' capability is supported.

When a candidate configuration\'s content is complete, the
configuration data can be committed, publishing the data set to
the rest of the device and requesting the device to conform to
the behavior described in the new configuration.

To commit the candidate configuration as the device\'s new
current configuration, use the <commit> operation.

The \'commit\' operation instructs the device to implement the
configuration data contained in the candidate configuration.
If the device is unable to commit all of the changes in the
candidate configuration datastore, then the running
configuration MUST remain unchanged.  If the device does
succeed in committing, the running configuration MUST be
updated with the contents of the candidate configuration.

If the system does not have the :candidate capability, the
\'commit\' operation is not available.',
    'RFC 4741, section 8.3.4.1',
    '/modules/netconf/2008-04-26#commit.788', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '815',
    '/commit/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.815', 
    'input or output', 
    '/commit',
    '0',
    '0',
    '',
    '',
    'confirmed confirm-timeout',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'confirmed', '816',
    '/commit/input/confirmed',
    'Request a confirmed commit.  Only available if 
\'confirmed-commit\' capability is supported.',
    'RFC 4741, section 8.4.5.1',
    '/modules/netconf/2008-04-26#confirmed.816', 
    'leaf', 
    '/commit/input',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'confirm-timeout', '824',
    '/commit/input/confirm-timeout',
    'Request a specific timeout period for a confirmed commit
if \'confirmed-commit\' capability supported.',
    'RFC 4741, section 8.4.5.1',
    '/modules/netconf/2008-04-26#confirm-timeout.824', 
    'leaf', 
    '/commit/input',
    '0',
    '0',
    'ConfirmTimeoutType',
    '',
    '',
    '600',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'discard-changes', '834',
    '/discard-changes',
    'Only available if \'candidate\' capability is supported.

If the client decides that the candidate configuration should not be
committed, the \'discard-changes\' operation can be used to revert the
candidate configuration to the current running configuration.

This operation discards any uncommitted changes by resetting the
candidate configuration with the content of the running
configuration.',
    'RFC 4741, section 8.3.4.2',
    '/modules/netconf/2008-04-26#discard-changes.834', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'validate', '852',
    '/validate',
    'Only available if \'validate\' capability is supported.

Validates the contents of the specified configuration.',
    'RFC 4741, section 8.6.4.1',
    '/modules/netconf/2008-04-26#validate.852', 
    'rpc', 
    '',
    '1',
    '0',
    '',
    '',
    'input',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'input', '862',
    '/validate/input',
    '',
    '',
    '/modules/netconf/2008-04-26#input.862', 
    'input or output', 
    '/validate',
    '0',
    '0',
    '',
    '',
    'source',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'source', '863',
    '/validate/input/source',
    'Particular configuration to validate.',
    '',
    '/modules/netconf/2008-04-26#source.863', 
    'container', 
    '/validate/input',
    '0',
    '0',
    '',
    '',
    'config-source',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config-source', '414',
    '/validate/input/source/config-source',
    '',
    '',
    '/modules/netconf/2008-04-26#config-source.414', 
    'choice', 
    '/validate/input/source',
    '0',
    '0',
    '',
    '',
    'candidate running startup url config',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/validate/input/source/config-source/candidate',
    '',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'case', 
    '/validate/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'candidate',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'candidate', '415',
    '/validate/input/source/config-source/candidate/candidate',
    'Only available if \'candidate\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#candidate.415', 
    'leaf', 
    '/validate/input/source/config-source/candidate',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/validate/input/source/config-source/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'case', 
    '/validate/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'running',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'running', '420',
    '/validate/input/source/config-source/running/running',
    '',
    '',
    '/modules/netconf/2008-04-26#running.420', 
    'leaf', 
    '/validate/input/source/config-source/running',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/validate/input/source/config-source/startup',
    '',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'case', 
    '/validate/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'startup',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'startup', '423',
    '/validate/input/source/config-source/startup/startup',
    'Only available if \'startup\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#startup.423', 
    'leaf', 
    '/validate/input/source/config-source/startup',
    '0',
    '0',
    'empty',
    '',
    '',
    '',
    '',
    '1', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '450',
    '/validate/input/source/config-source/url',
    '',
    '',
    '/modules/netconf/2008-04-26#url.450', 
    'case', 
    '/validate/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'url',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'url', '450',
    '/validate/input/source/config-source/url/url',
    'URL pointing to config data. Only available
if \'url\' capability supported.',
    '',
    '/modules/netconf/2008-04-26#url.450', 
    'leaf', 
    '/validate/input/source/config-source/url',
    '0',
    '0',
    'ConfigURIType',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config', '457',
    '/validate/input/source/config-source/config',
    '',
    '',
    '/modules/netconf/2008-04-26#config.457', 
    'case', 
    '/validate/input/source/config-source',
    '0',
    '0',
    '',
    '',
    'config',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf', 'netconf', '2008-04-26', 'config', '457',
    '/validate/input/source/config-source/config/config',
    'Inline configuration data',
    '',
    '/modules/netconf/2008-04-26#config.457', 
    'leaf', 
    '/validate/input/source/config-source/config',
    '0',
    '0',
    'anyxml',
    '',
    '',
    '',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/IF-INVERTED-STACK-MIB.yang
# module: IF-INVERTED-STACK-MIB
# version: 2000-06-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'IF-INVERTED-STACK-MIB');

INSERT INTO ncmodule VALUES (
    '', 'IF-INVERTED-STACK-MIB', 'IF-INVERTED-STACK-MIB', '2000-06-14', 'if-inverted',
    'urn:ietf:params:xml:ns:yang:smiv2:IF-INVERTED-STACK-MIB',
    'IETF Interfaces MIB Working Group',
    'The MIB module which provides the Inverted Stack Table for
interface sub-layers.',
    'The MIB module which provides the Inverted Stack Table for
interface sub-layers.',
    '',
    '   Keith McCloghrie
Cisco Systems, Inc.
170 West Tasman Drive
San Jose, CA  95134-1706
US

408-526-5260
kzm@cisco.com',
    'Initial revision, published as RFC 2864',
    '/xsd/IF-INVERTED-STACK-MIB_2000-06-14.xsd',
    '/modules/IF-INVERTED-STACK-MIB/2000-06-14', 
    '/src/IF-INVERTED-STACK-MIB_2000-06-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/IF-INVERTED-STACK-MIB.yang',
    'IF-INVERTED-STACK-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-INVERTED-STACK-MIB', 'IF-INVERTED-STACK-MIB', '2000-06-14', 'ifInvMIBObjects', '46',
    '/ifInvMIBObjects',
    '',
    '',
    '/modules/IF-INVERTED-STACK-MIB/2000-06-14#ifInvMIBObjects.46', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'ifInvStackEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-INVERTED-STACK-MIB', 'IF-INVERTED-STACK-MIB', '2000-06-14', 'ifInvStackEntry', '51',
    '/ifInvMIBObjects/ifInvStackEntry',
    'Information on a particular relationship between two sub-
layers, specifying that one sub-layer runs underneath the
other sub-layer.  Each sub-layer corresponds to a conceptual
row in the ifTable.',
    '',
    '/modules/IF-INVERTED-STACK-MIB/2000-06-14#ifInvStackEntry.51', 
    'list', 
    '/ifInvMIBObjects',
    '0',
    '1',
    '',
    '',
    'ifStackLowerLayer ifStackHigherLayer ifInvStackStatus',
    '',
    'ifStackLowerLayer ifStackHigherLayer',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-INVERTED-STACK-MIB', 'IF-INVERTED-STACK-MIB', '2000-06-14', 'ifStackLowerLayer', '61',
    '/ifInvMIBObjects/ifInvStackEntry/ifStackLowerLayer',
    'Automagically generated keyref leaf.',
    '',
    '/modules/IF-INVERTED-STACK-MIB/2000-06-14#ifStackLowerLayer.61', 
    'leaf', 
    '/ifInvMIBObjects/ifInvStackEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-INVERTED-STACK-MIB', 'IF-INVERTED-STACK-MIB', '2000-06-14', 'ifStackHigherLayer', '69',
    '/ifInvMIBObjects/ifInvStackEntry/ifStackHigherLayer',
    'Automagically generated keyref leaf.',
    '',
    '/modules/IF-INVERTED-STACK-MIB/2000-06-14#ifStackHigherLayer.69', 
    'leaf', 
    '/ifInvMIBObjects/ifInvStackEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'IF-INVERTED-STACK-MIB', 'IF-INVERTED-STACK-MIB', '2000-06-14', 'ifInvStackStatus', '78',
    '/ifInvMIBObjects/ifInvStackEntry/ifInvStackStatus',
    'The status of the relationship between two sub-layers.

An instance of this object exists for each instance of the
ifStackStatus object, and vice versa.  For example, if the
variable ifStackStatus.H.L exists, then the variable
ifInvStackStatus.L.H must also exist, and vice versa.  In
addition, the two variables always have the same value.

However, unlike ifStackStatus, the ifInvStackStatus object
is NOT write-able.  A network management application wishing
to change a relationship between sub-layers H and L cannot
do so by modifying the value of ifInvStackStatus.L.H, but
must instead modify the value of ifStackStatus.H.L.  After
the ifStackTable is modified, the change will be reflected
in this table.',
    '',
    '/modules/IF-INVERTED-STACK-MIB/2000-06-14#ifInvStackStatus.78', 
    'leaf', 
    '/ifInvMIBObjects/ifInvStackEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-COMMUNITY-MIB.yang
# module: SNMP-COMMUNITY-MIB
# version: 2000-03-06
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-COMMUNITY-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmp-community',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-COMMUNITY-MIB',
    'SNMPv3 Working Group',
    'This MIB module defines objects to help support coexistence
between SNMPv1, SNMPv2c, and SNMPv3.',
    'This MIB module defines objects to help support coexistence
between SNMPv1, SNMPv2c, and SNMPv3.',
    '',
    'WG-email:   snmpv3@lists.tislabs.com
Subscribe:  majordomo@lists.tislabs.com
	    In msg body:  subscribe snmpv3

Chair:      Russ Mundy
	    TIS Labs at Network Associates
Postal:     3060 Washington Rd
	    Glenwood MD 21738
	    USA
Email:      mundy@tislabs.com
Phone:      +1-301-854-6889

Co-editor:  Rob Frye
	    CoSine Communications
Postal:     1200 Bridge Parkway
	    Redwood City, CA 94065
	    USA
E-mail:     rfrye@cosinecom.com
Phone:      +1 703 725 1130

Co-editor:  David B. Levi
	    Nortel Networks
Postal:     3505 Kesterwood Drive
	    Knoxville, TN 37918
E-mail:     dlevi@nortelnetworks.com
Phone:      +1 423 686 0432

Co-editor:  Shawn A. Routhier
	    Integrated Systems Inc.
Postal:     333 North Ave 4th Floor
	    Wakefield, MA 01880
E-mail:     sar@epilogue.com
Phone:      +1 781 245 0804

Co-editor:  Bert Wijnen
	    Lucent Technologies
Postal:     Schagen 33
	    3461 GL Linschoten
	    Netherlands
Email:      bwijnen@lucent.com
Phone:      +31-348-407-775',
    'This version published as RFC 2576.',
    '/xsd/SNMP-COMMUNITY-MIB_2000-03-06.xsd',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06', 
    '/src/SNMP-COMMUNITY-MIB_2000-03-06.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-COMMUNITY-MIB.yang',
    'SNMP-COMMUNITY-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunityMIBObjects', '85',
    '/snmpCommunityMIBObjects',
    '',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunityMIBObjects.85', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'snmpCommunityEntry snmpTrapAddress snmpTrapCommunity',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunityEntry', '90',
    '/snmpCommunityMIBObjects/snmpCommunityEntry',
    'Information about a particular community string.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunityEntry.90', 
    'list', 
    '/snmpCommunityMIBObjects',
    '0',
    '1',
    '',
    '',
    'snmpCommunityIndex snmpCommunityName snmpCommunitySecurityName snmpCommunityContextEngineID snmpCommunityContextName snmpCommunityTransportTag snmpCommunityStorageType snmpCommunityStatus',
    '',
    'snmpCommunityIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunityIndex', '98',
    '/snmpCommunityMIBObjects/snmpCommunityEntry/snmpCommunityIndex',
    'The unique index value of a row in this table.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunityIndex.98', 
    'leaf', 
    '/snmpCommunityMIBObjects/snmpCommunityEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunityName', '108',
    '/snmpCommunityMIBObjects/snmpCommunityEntry/snmpCommunityName',
    'The community string for which a row in this table
represents a configuration.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunityName.108', 
    'leaf', 
    '/snmpCommunityMIBObjects/snmpCommunityEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunitySecurityName', '117',
    '/snmpCommunityMIBObjects/snmpCommunityEntry/snmpCommunitySecurityName',
    'A human readable string representing the corresponding
value of snmpCommunityName in a Security Model
independent format.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunitySecurityName.117', 
    'leaf', 
    '/snmpCommunityMIBObjects/snmpCommunityEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunityContextEngineID', '129',
    '/snmpCommunityMIBObjects/snmpCommunityEntry/snmpCommunityContextEngineID',
    'The contextEngineID indicating the location of the
context in which management information is accessed
when using the community string specified by the
corresponding instance of snmpCommunityName.

The default value is the snmpEngineID of the entity in
which this object is instantiated.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunityContextEngineID.129', 
    'leaf', 
    '/snmpCommunityMIBObjects/snmpCommunityEntry',
    '0',
    '1',
    'SnmpEngineID',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunityContextName', '143',
    '/snmpCommunityMIBObjects/snmpCommunityEntry/snmpCommunityContextName',
    'The context in which management information is accessed
when using the community string specified by the corresponding
instance of snmpCommunityName.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunityContextName.143', 
    'leaf', 
    '/snmpCommunityMIBObjects/snmpCommunityEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunityTransportTag', '156',
    '/snmpCommunityMIBObjects/snmpCommunityEntry/snmpCommunityTransportTag',
    'This object specifies a set of transport endpoints
from which a command responder application will accept
management requests.  If a management request containing
this community is received on a transport endpoint other
than the transport endpoints identified by this object,
the request is deemed unauthentic.

The transports identified by this object are specified

in the snmpTargetAddrTable.  Entries in that table
whose snmpTargetAddrTagList contains this tag value
are identified.

If the value of this object has zero-length, transport
endpoints are not checked when authenticating messages
containing this community string.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunityTransportTag.156', 
    'leaf', 
    '/snmpCommunityMIBObjects/snmpCommunityEntry',
    '0',
    '1',
    'SnmpTagValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunityStorageType', '180',
    '/snmpCommunityMIBObjects/snmpCommunityEntry/snmpCommunityStorageType',
    'The storage type for this conceptual row in the
snmpCommunityTable.  Conceptual rows having the value
\'permanent\' need not allow write-access to any
columnar object in the row.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunityStorageType.180', 
    'leaf', 
    '/snmpCommunityMIBObjects/snmpCommunityEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpCommunityStatus', '191',
    '/snmpCommunityMIBObjects/snmpCommunityEntry/snmpCommunityStatus',
    'The status of this conceptual row in the snmpCommunityTable.

An entry in this table is not qualified for activation
until instances of all corresponding columns have been
initialized, either through default values, or through
Set operations.  The snmpCommunityName and
snmpCommunitySecurityName objects must be explicitly set.

There is no restriction on setting columns in this table
when the value of snmpCommunityStatus is active(1).',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpCommunityStatus.191', 
    'leaf', 
    '/snmpCommunityMIBObjects/snmpCommunityEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpTrapAddress', '210',
    '/snmpCommunityMIBObjects/snmpTrapAddress',
    'The value of the agent-addr field of a Trap PDU which
is forwarded by a proxy forwarder application using
an SNMP version other than SNMPv1.  The value of this
object SHOULD contain the value of the agent-addr field
from the original Trap PDU as generated by an SNMPv1
agent.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpTrapAddress.210', 
    'leaf', 
    '/snmpCommunityMIBObjects',
    '0',
    '1',
    'ipv4-address',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-COMMUNITY-MIB', 'SNMP-COMMUNITY-MIB', '2000-03-06', 'snmpTrapCommunity', '223',
    '/snmpCommunityMIBObjects/snmpTrapCommunity',
    'The value of the community string field of an SNMPv1
message containing a Trap PDU which is forwarded by a
a proxy forwarder application using an SNMP version
other than SNMPv1.  The value of this object SHOULD
contain the value of the community string field from
the original SNMPv1 message containing a Trap PDU as
generated by an SNMPv1 agent.',
    '',
    '/modules/SNMP-COMMUNITY-MIB/2000-03-06#snmpTrapCommunity.223', 
    'leaf', 
    '/snmpCommunityMIBObjects',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/netconf-state.yang
# module: netconf-state
# version: 2008-02-27
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'netconf-state');

INSERT INTO ncmodule VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'ns',
    'urn:ietf:params:xml:ns:netconf:state:1.0',
    'IETF',
    'NetConf Monitoring Schema.
All elements in this Schema are read-only.',
    'NetConf Monitoring Schema.
All elements in this Schema are read-only.',
    '',
    '',
    'Updated to match draft-ietf-netconf-monitoring-01',
    '/xsd/netconf-state_2008-02-27.xsd',
    '/modules/netconf-state/2008-02-27', 
    '/src/netconf-state_2008-02-27.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/netconf-state.yang',
    'netconf-state.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'SessionId', '32',
    '',
    'rfc4741',
    '/modules/netconf-state/2008-02-27#SessionId.32', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'ConfigName', '39',
    '',
    'rfc4741',
    '/modules/netconf-state/2008-02-27#ConfigName.39', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'srcIdentifier', '67',
    'Information about source of the session.
IPv4Address, IPv6Address, DNS name or any other form is allowed',
    '',
    '/modules/netconf-state/2008-02-27#srcIdentifier.67', 'union', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'transportType', '48',
    '',
    '',
    '/modules/netconf-state/2008-02-27#transportType.48', 
    'transportType',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'sessionType', '58',
    '',
    '',
    '/modules/netconf-state/2008-02-27#sessionType.58', 
    'sessionType',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'netconfState', '79',
    '/netconfState',
    '',
    '',
    '/modules/netconf-state/2008-02-27#netconfState.79', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'capabilities sessions configurations',
    '',
    '',
    '0', '1', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'capabilities', '82',
    '/netconfState/capabilities',
    'List of NETCONF capabilities supported
by this device.',
    '',
    '/modules/netconf-state/2008-02-27#capabilities.82', 
    'container', 
    '/netconfState',
    '0',
    '1',
    '',
    '',
    'capability',
    '',
    '',
    '0', '1', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'capability', '86',
    '/netconfState/capabilities/capability',
    '',
    '',
    '/modules/netconf-state/2008-02-27#capability.86', 
    'leaf-list', 
    '/netconfState/capabilities',
    '0',
    '1',
    'uri',
    '',
    '',
    '',
    '',
    '0', '1', '3',
    '1', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'sessions', '92',
    '/netconfState/sessions',
    'List of NETCONF sessions currently
active on this device.',
    '',
    '/modules/netconf-state/2008-02-27#sessions.92', 
    'container', 
    '/netconfState',
    '0',
    '1',
    '',
    '',
    'session',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'session', '96',
    '/netconfState/sessions/session',
    '',
    '',
    '/modules/netconf-state/2008-02-27#session.96', 
    'list', 
    '/netconfState/sessions',
    '0',
    '1',
    '',
    '',
    'sessionId username transport protocol sourceIdentifier loginTime',
    '',
    'sessionId',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'sessionId', '98',
    '/netconfState/sessions/session/sessionId',
    '',
    '',
    '/modules/netconf-state/2008-02-27#sessionId.98', 
    'leaf', 
    '/netconfState/sessions/session',
    '0',
    '1',
    'SessionId',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'username', '99',
    '/netconfState/sessions/session/username',
    '',
    '',
    '/modules/netconf-state/2008-02-27#username.99', 
    'leaf', 
    '/netconfState/sessions/session',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'transport', '100',
    '/netconfState/sessions/session/transport',
    '',
    '',
    '/modules/netconf-state/2008-02-27#transport.100', 
    'leaf', 
    '/netconfState/sessions/session',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'protocol', '101',
    '/netconfState/sessions/session/protocol',
    '',
    '',
    '/modules/netconf-state/2008-02-27#protocol.101', 
    'leaf', 
    '/netconfState/sessions/session',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'sourceIdentifier', '102',
    '/netconfState/sessions/session/sourceIdentifier',
    '',
    '',
    '/modules/netconf-state/2008-02-27#sourceIdentifier.102', 
    'leaf', 
    '/netconfState/sessions/session',
    '0',
    '1',
    'srcIdentifier',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'loginTime', '103',
    '/netconfState/sessions/session/loginTime',
    '',
    '',
    '/modules/netconf-state/2008-02-27#loginTime.103', 
    'leaf', 
    '/netconfState/sessions/session',
    '0',
    '1',
    'date-and-time',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'configurations', '107',
    '/netconfState/configurations',
    'List of NETCONF configuration datastores (e.g. running,
startup, candidate) supported on this device and related
information.',
    '',
    '/modules/netconf-state/2008-02-27#configurations.107', 
    'container', 
    '/netconfState',
    '0',
    '1',
    '',
    '',
    'config subscriptions',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'config', '112',
    '/netconfState/configurations/config',
    '',
    '',
    '/modules/netconf-state/2008-02-27#config.112', 
    'list', 
    '/netconfState/configurations',
    '0',
    '1',
    '',
    '',
    'name lockStatus',
    '',
    'name',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'name', '114',
    '/netconfState/configurations/config/name',
    '',
    '',
    '/modules/netconf-state/2008-02-27#name.114', 
    'leaf', 
    '/netconfState/configurations/config',
    '0',
    '1',
    'ConfigName',
    '',
    '',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'lockStatus', '115',
    '/netconfState/configurations/config/lockStatus',
    'An indication of whether a resource is locked or
unlocked.  If locked, additional information about
the locking such as user an time stamp is provided.',
    '',
    '/modules/netconf-state/2008-02-27#lockStatus.115', 
    'container', 
    '/netconfState/configurations/config',
    '0',
    '1',
    '',
    '',
    'lock-state lockedBySession lockedTime',
    '',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'lock-state', '120',
    '/netconfState/configurations/config/lockStatus/lock-state',
    '',
    '',
    '/modules/netconf-state/2008-02-27#lock-state.120', 
    'leaf', 
    '/netconfState/configurations/config/lockStatus',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'lockedBySession', '126',
    '/netconfState/configurations/config/lockStatus/lockedBySession',
    'The session ID of the session that has locked
this resource.',
    '',
    '/modules/netconf-state/2008-02-27#lockedBySession.126', 
    'leaf', 
    '/netconfState/configurations/config/lockStatus',
    '0',
    '1',
    'SessionId',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'lockedTime', '132',
    '/netconfState/configurations/config/lockStatus/lockedTime',
    'The date and time of when the resource was
locked. If the resource is currently unlocked,
this element will not be present.',
    '',
    '/modules/netconf-state/2008-02-27#lockedTime.132', 
    'leaf', 
    '/netconfState/configurations/config/lockStatus',
    '0',
    '1',
    'date-and-time',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'subscriptions', '142',
    '/netconfState/configurations/subscriptions',
    'List of NETCONF notification subscriptions
active on this device and related information.',
    '',
    '/modules/netconf-state/2008-02-27#subscriptions.142', 
    'container', 
    '/netconfState/configurations',
    '0',
    '1',
    '',
    '',
    'subscription',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'subscription', '146',
    '/netconfState/configurations/subscriptions/subscription',
    'Information about Netconf Notification Subscriptions.',
    '',
    '/modules/netconf-state/2008-02-27#subscription.146', 
    'list', 
    '/netconfState/configurations/subscriptions',
    '0',
    '1',
    '',
    '',
    'session-id stream filter messagesSent',
    '',
    'session-id',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'session-id', '150',
    '/netconfState/configurations/subscriptions/subscription/session-id',
    'The session id associated with this subscription.',
    '',
    '/modules/netconf-state/2008-02-27#session-id.150', 
    'leaf', 
    '/netconfState/configurations/subscriptions/subscription',
    '0',
    '1',
    'SessionId',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'stream', '155',
    '/netconfState/configurations/subscriptions/subscription/stream',
    'The stream associated with this subscription.',
    '',
    '/modules/netconf-state/2008-02-27#stream.155', 
    'leaf', 
    '/netconfState/configurations/subscriptions/subscription',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'filter', '160',
    '/netconfState/configurations/subscriptions/subscription/filter',
    'The filters associated with this subscription.',
    '',
    '/modules/netconf-state/2008-02-27#filter.160', 
    'leaf', 
    '/netconfState/configurations/subscriptions/subscription',
    '0',
    '1',
    'anyxml',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'netconf-state', 'netconf-state', '2008-02-27', 'messagesSent', '164',
    '/netconfState/configurations/subscriptions/subscription/messagesSent',
    'A count of event notifications sent along
this connection since the subscription was
created.',
    '',
    '/modules/netconf-state/2008-02-27#messagesSent.164', 
    'leaf', 
    '/netconfState/configurations/subscriptions/subscription',
    '0',
    '1',
    'zero-based-counter32',
    '',
    '',
    '0',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/DISMAN-EVENT-MIB.yang
# module: DISMAN-EVENT-MIB
# version: 2000-10-16
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'DISMAN-EVENT-MIB');

INSERT INTO ncmodule VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'disman-event',
    'urn:ietf:params:xml:ns:yang:smiv2:DISMAN-EVENT-MIB',
    'IETF Distributed Management Working Group',
    'The MIB module for defining event triggers and actions
for network management purposes.',
    'The MIB module for defining event triggers and actions
for network management purposes.',
    '',
    'Ramanathan Kavasseri
Cisco Systems, Inc.
170 West Tasman Drive,
San Jose CA 95134-1706.
Phone: +1 408 526 4527
Email: ramk@cisco.com',
    'This is the initial version of this MIB.
Published as RFC 2981',
    '/xsd/DISMAN-EVENT-MIB_2000-10-16.xsd',
    '/modules/DISMAN-EVENT-MIB/2000-10-16', 
    '/src/DISMAN-EVENT-MIB_2000-10-16.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/DISMAN-EVENT-MIB.yang',
    'DISMAN-EVENT-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'FailureReason', '50',
    'Reasons for failures in an attempt to perform a management
request.

The first group of errors, numbered less than 0, are related
to problems in sending the request.  The existence of a
particular error code here does not imply that all
implementations are capable of sensing that error and


returning that code.

The second group, numbered greater than 0, are copied
directly from SNMP protocol operations and are intended to
carry exactly the meanings defined for the protocol as returned
in an SNMP response.

localResourceLack       some local resource such as memory
			lacking or
			mteResourceSampleInstanceMaximum
			exceeded
badDestination          unrecognized domain name or otherwise
			invalid destination address
destinationUnreachable  can\'t get to destination address
noResponse              no response to SNMP request
badType                 the data syntax of a retrieved object
			as not as expected
sampleOverrun           another sample attempt occurred before
			the previous one completed',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#FailureReason.50', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteResource', '109',
    '/mteResource',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteResource.109', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'mteResourceSampleMinimum mteResourceSampleInstanceMaximum mteResourceSampleInstances mteResourceSampleInstancesHigh mteResourceSampleInstanceLacks',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteResourceSampleMinimum', '111',
    '/mteResource/mteResourceSampleMinimum',
    'The minimum mteTriggerFrequency this system will
accept.  A system may use the larger values of this minimum to
lessen the impact of constant sampling.  For larger
sampling intervals the system samples less often and
suffers less overhead.  This object provides a way to enforce
such lower overhead for all triggers created after it is
set.

Unless explicitly resource limited, a system\'s value for
this object SHOULD be 1, allowing as small as a 1 second
interval for ongoing trigger sampling.

Changing this value will not invalidate an existing setting
of mteTriggerFrequency.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteResourceSampleMinimum.111', 
    'leaf', 
    '/mteResource',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteResourceSampleInstanceMaximum', '135',
    '/mteResource/mteResourceSampleInstanceMaximum',
    'The maximum number of instance entries this system will
support for sampling.

These are the entries that maintain state, one for each
instance of each sampled object as selected by
mteTriggerValueID.  Note that wildcarded objects result
in multiple instances of this state.

A value of 0 indicates no preset limit, that is, the limit
is dynamic based on system operation and resources.

Unless explicitly resource limited, a system\'s value for
this object SHOULD be 0.

Changing this value will not eliminate or inhibit existing
sample state but could prevent allocation of additional state
information.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteResourceSampleInstanceMaximum.135', 
    'leaf', 
    '/mteResource',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteResourceSampleInstances', '160',
    '/mteResource/mteResourceSampleInstances',
    'The number of currently active instance entries as
defined for mteResourceSampleInstanceMaximum.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteResourceSampleInstances.160', 
    'leaf', 
    '/mteResource',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteResourceSampleInstancesHigh', '170',
    '/mteResource/mteResourceSampleInstancesHigh',
    'The highest value of mteResourceSampleInstances that has
occurred since initialization of the management system.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteResourceSampleInstancesHigh.170', 
    'leaf', 
    '/mteResource',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteResourceSampleInstanceLacks', '180',
    '/mteResource/mteResourceSampleInstanceLacks',
    'The number of times this system could not take a new sample
because that allocation would have exceeded the limit set by
mteResourceSampleInstanceMaximum.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteResourceSampleInstanceLacks.180', 
    'leaf', 
    '/mteResource',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTrigger', '193',
    '/mteTrigger',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTrigger.193', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'mteTriggerFailures mteTriggerEntry mteTriggerDeltaEntry mteTriggerExistenceEntry mteTriggerBooleanEntry mteTriggerThresholdEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFailures', '195',
    '/mteTrigger/mteTriggerFailures',
    'The number of times an attempt to check for a trigger
condition has failed.  This counts individually for each
attempt in a group of targets or each attempt for a


wildcarded object.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFailures.195', 
    'leaf', 
    '/mteTrigger',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerEntry', '212',
    '/mteTrigger/mteTriggerEntry',
    'Information about a single trigger.  Applications create and
delete entries using mteTriggerEntryStatus.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerEntry.212', 
    'list', 
    '/mteTrigger',
    '0',
    '1',
    '',
    '',
    'mteOwner mteTriggerName mteTriggerComment mteTriggerTest mteTriggerSampleType mteTriggerValueID mteTriggerValueIDWildcard mteTriggerTargetTag mteTriggerContextName mteTriggerContextNameWildcard mteTriggerFrequency mteTriggerObjectsOwner mteTriggerObjects mteTriggerEnabled mteTriggerEntryStatus',
    '',
    'mteOwner mteTriggerName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteOwner', '221',
    '/mteTrigger/mteTriggerEntry/mteOwner',
    'The owner of this entry. The exact semantics of this
string are subject to the security policy defined by the
security administrator.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteOwner.221', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerName', '233',
    '/mteTrigger/mteTriggerEntry/mteTriggerName',
    'A locally-unique, administratively assigned name for the
trigger within the scope of mteOwner.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerName.233', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerComment', '244',
    '/mteTrigger/mteTriggerEntry/mteTriggerComment',
    'A description of the trigger\'s function and use.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerComment.244', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerTest', '253',
    '/mteTrigger/mteTriggerEntry/mteTriggerTest',
    'The type of trigger test to perform.  For \'boolean\' and
\'threshold\'  tests, the object at mteTriggerValueID MUST
evaluate to an integer, that is, anything that ends up encoded
for transmission (that is, in BER, not ASN.1) as an integer.

For \'existence\', the specific test is as selected by
mteTriggerExistenceTest.  When an object appears, vanishes
or changes value, the trigger fires. If the object\'s
appearance caused the trigger firing, the object MUST
vanish before the trigger can be fired again for it, and
vice versa. If the trigger fired due to a change in the
object\'s value, it will be fired again on every successive
value change for that object.

For \'boolean\', the specific test is as selected by
mteTriggerBooleanTest.  If the test result is true the trigger
fires.  The trigger will not fire again until the value has
become false and come back to true.

For \'threshold\' the test works as described below for


mteTriggerThresholdStartup, mteTriggerThresholdRising, and
mteTriggerThresholdFalling.

Note that combining \'boolean\' and \'threshold\' tests on the
same object may be somewhat redundant.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerTest.253', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerSampleType', '292',
    '/mteTrigger/mteTriggerEntry/mteTriggerSampleType',
    'The type of sampling to perform.

An \'absoluteValue\' sample requires only a single sample to be
meaningful, and is exactly the value of the object at
mteTriggerValueID at the sample time.

A \'deltaValue\' requires two samples to be meaningful and is
thus not available for testing until the second and subsequent
samples after the object at mteTriggerValueID is first found
to exist.  It is the difference between the two samples.  For
unsigned values it is always positive, based on unsigned
arithmetic.  For signed values it can be positive or negative.

For SNMP counters to be meaningful they should be sampled as a
\'deltaValue\'.

For \'deltaValue\' mteTriggerDeltaTable contains further
parameters.

If only \'existence\' is set in mteTriggerTest this object has
no meaning.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerSampleType.292', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerValueID', '324',
    '/mteTrigger/mteTriggerEntry/mteTriggerValueID',
    'The object identifier of the MIB object to sample to see
if the trigger should fire.

This may be wildcarded by truncating all or part of the
instance portion, in which case the value is obtained
as if with a GetNext function, checking multiple values


if they exist.  If such wildcarding is applied,
mteTriggerValueIDWildcard must be \'true\' and if not it must
be \'false\'.

Bad object identifiers or a mismatch between truncating the
identifier and the value of mteTriggerValueIDWildcard result
in operation as one would expect when providing the wrong
identifier to a Get or GetNext operation.  The Get will fail
or get the wrong object.  The GetNext will indeed get whatever
is next, proceeding until it runs past the initial part of the
identifier and perhaps many unintended objects for confusing
results.  If the value syntax of those objects is not usable,
that results in a \'badType\' error that terminates the scan.

Each instance that fills the wildcard is independent of any
additional instances, that is, wildcarded objects operate
as if there were a separate table entry for each instance
that fills the wildcard without having to actually predict
all possible instances ahead of time.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerValueID.324', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerValueIDWildcard', '359',
    '/mteTrigger/mteTriggerEntry/mteTriggerValueIDWildcard',
    'Control for whether mteTriggerValueID is to be treated as
fully-specified or wildcarded, with \'true\' indicating wildcard.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerValueIDWildcard.359', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerTargetTag', '369',
    '/mteTrigger/mteTriggerEntry/mteTriggerTargetTag',
    'The tag for the target(s) from which to obtain the condition
for a trigger check.

A length of 0 indicates the local system.  In this case,
access to the objects indicated by mteTriggerValueID is under
the security credentials of the requester that set
mteTriggerEntryStatus to \'active\'.  Those credentials are the
input parameters for isAccessAllowed from the Architecture for
Describing SNMP Management Frameworks.

Otherwise access rights are checked according to the security


parameters resulting from the tag.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerTargetTag.369', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'SnmpTagValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerContextName', '391',
    '/mteTrigger/mteTriggerEntry/mteTriggerContextName',
    'The management context from which to obtain mteTriggerValueID.

This may be wildcarded by leaving characters off the end.  For
example use \'Repeater\' to wildcard to \'Repeater1\',
\'Repeater2\', \'Repeater-999.87b\', and so on.  To indicate such
wildcarding is intended, mteTriggerContextNameWildcard must
be \'true\'.

Each instance that fills the wildcard is independent of any
additional instances, that is, wildcarded objects operate
as if there were a separate table entry for each instance
that fills the wildcard without having to actually predict
all possible instances ahead of time.

Operation of this feature assumes that the local system has a
list of available contexts against which to apply the
wildcard.  If the objects are being read from the local
system, this is clearly the system\'s own list of contexts.
For a remote system a local version of such a list is not
defined by any current standard and may not be available, so
this function MAY not be supported.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerContextName.391', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerContextNameWildcard', '420',
    '/mteTrigger/mteTriggerEntry/mteTriggerContextNameWildcard',
    'Control for whether mteTriggerContextName is to be treated as
fully-specified or wildcarded, with \'true\' indicating wildcard.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerContextNameWildcard.420', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFrequency', '430',
    '/mteTrigger/mteTriggerEntry/mteTriggerFrequency',
    'The number of seconds to wait between trigger samples.  To
encourage consistency in sampling, the interval is measured
from the beginning of one check to the beginning of the next
and the timer is restarted immediately when it expires, not
when the check completes.

If the next sample begins before the previous one completed the
system may either attempt to make the check or treat this as an
error condition with the error \'sampleOverrun\'.

A frequency of 0 indicates instantaneous recognition of the
condition.  This is not possible in many cases, but may
be supported in cases where it makes sense and the system is
able to do so.  This feature allows the MIB to be used in
implementations where such interrupt-driven behavior is
possible and is not likely to be supported for all MIB objects
even then since such sampling generally has to be tightly
integrated into low-level code.

Systems that can support this SHOULD document those cases
where it can be used.  In cases where it can not, setting this
object to 0 should be disallowed.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFrequency.430', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerObjectsOwner', '461',
    '/mteTrigger/mteTriggerEntry/mteTriggerObjectsOwner',
    'To go with mteTriggerObjects, the mteOwner of a group of
objects from mteObjectsTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerObjectsOwner.461', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerObjects', '473',
    '/mteTrigger/mteTriggerEntry/mteTriggerObjects',
    'The mteObjectsName of a group of objects from
mteObjectsTable.  These objects are to be added to any
Notification resulting from the firing of this trigger.

A list of objects may also be added based on the event or on
the value of mteTriggerTest.



A length of 0 indicates no additional objects.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerObjects.473', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerEnabled', '493',
    '/mteTrigger/mteTriggerEntry/mteTriggerEnabled',
    'A control to allow a trigger to be configured but not used.
When the value is \'false\' the trigger is not sampled.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerEnabled.493', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerEntryStatus', '503',
    '/mteTrigger/mteTriggerEntry/mteTriggerEntryStatus',
    'The control that allows creation and deletion of entries.
Once made active an entry may not be modified except to
delete it.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerEntryStatus.503', 
    'leaf', 
    '/mteTrigger/mteTriggerEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerDeltaEntry', '517',
    '/mteTrigger/mteTriggerDeltaEntry',
    'Information about a single trigger\'s delta sampling.  Entries
automatically exist in this this table for each mteTriggerEntry
that has mteTriggerSampleType set to \'deltaValue\'.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerDeltaEntry.517', 
    'list', 
    '/mteTrigger',
    '0',
    '1',
    '',
    '',
    'mteOwner mteTriggerName mteTriggerDeltaDiscontinuityID mteTriggerDeltaDiscontinuityIDWildcard mteTriggerDeltaDiscontinuityIDType',
    '',
    'mteOwner mteTriggerName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteOwner', '526',
    '/mteTrigger/mteTriggerDeltaEntry/mteOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteOwner.526', 
    'leaf', 
    '/mteTrigger/mteTriggerDeltaEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerName', '534',
    '/mteTrigger/mteTriggerDeltaEntry/mteTriggerName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerName.534', 
    'leaf', 
    '/mteTrigger/mteTriggerDeltaEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerDeltaDiscontinuityID', '543',
    '/mteTrigger/mteTriggerDeltaEntry/mteTriggerDeltaDiscontinuityID',
    'The OBJECT IDENTIFIER (OID) of a TimeTicks, TimeStamp, or
DateAndTime object that indicates a discontinuity in the value
at mteTriggerValueID.

The OID may be for a leaf object (e.g. sysUpTime.0) or may
be wildcarded to match mteTriggerValueID.

This object supports normal checking for a discontinuity in a
counter.  Note that if this object does not point to sysUpTime
discontinuity checking MUST still check sysUpTime for an overall
discontinuity.

If the object identified is not accessible the sample attempt
is in error, with the error code as from an SNMP request.

Bad object identifiers or a mismatch between truncating the
identifier and the value of mteDeltaDiscontinuityIDWildcard
result in operation as one would expect when providing the
wrong identifier to a Get operation.  The Get will fail or get
the wrong object.  If the value syntax of those objects is not
usable, that results in an error that terminates the sample
with a \'badType\' error code.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerDeltaDiscontinuityID.543', 
    'leaf', 
    '/mteTrigger/mteTriggerDeltaEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerDeltaDiscontinuityIDWildcard', '573',
    '/mteTrigger/mteTriggerDeltaEntry/mteTriggerDeltaDiscontinuityIDWildcard',
    'Control for whether mteTriggerDeltaDiscontinuityID is to be
treated as fully-specified or wildcarded, with \'true\'
indicating wildcard. Note that the value of this object will
be the same as that of the corresponding instance of
mteTriggerValueIDWildcard when the corresponding


mteTriggerSampleType is \'deltaValue\'.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerDeltaDiscontinuityIDWildcard.573', 
    'leaf', 
    '/mteTrigger/mteTriggerDeltaEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerDeltaDiscontinuityIDType', '589',
    '/mteTrigger/mteTriggerDeltaEntry/mteTriggerDeltaDiscontinuityIDType',
    'The value \'timeTicks\' indicates the
mteTriggerDeltaDiscontinuityID of this row is of syntax
TimeTicks.  The value \'timeStamp\' indicates syntax TimeStamp.
The value \'dateAndTime\' indicates syntax DateAndTime.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerDeltaDiscontinuityIDType.589', 
    'leaf', 
    '/mteTrigger/mteTriggerDeltaEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerExistenceEntry', '609',
    '/mteTrigger/mteTriggerExistenceEntry',
    'Information about a single existence trigger.  Entries
automatically exist in this this table for each mteTriggerEntry
that has \'existence\' set in mteTriggerTest.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerExistenceEntry.609', 
    'list', 
    '/mteTrigger',
    '0',
    '1',
    '',
    '',
    'mteOwner mteTriggerName mteTriggerExistenceTest mteTriggerExistenceStartup mteTriggerExistenceObjectsOwner mteTriggerExistenceObjects mteTriggerExistenceEventOwner mteTriggerExistenceEvent',
    '',
    'mteOwner mteTriggerName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteOwner', '618',
    '/mteTrigger/mteTriggerExistenceEntry/mteOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteOwner.618', 
    'leaf', 
    '/mteTrigger/mteTriggerExistenceEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerName', '626',
    '/mteTrigger/mteTriggerExistenceEntry/mteTriggerName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerName.626', 
    'leaf', 
    '/mteTrigger/mteTriggerExistenceEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerExistenceTest', '635',
    '/mteTrigger/mteTriggerExistenceEntry/mteTriggerExistenceTest',
    'The type of existence test to perform.  The trigger fires
when the object at mteTriggerValueID is seen to go from
present to absent, from absent to present, or to have it\'s
value changed, depending on which tests are selected:

present(0) - when this test is selected, the trigger fires
when the mteTriggerValueID object goes from absent to present.

absent(1)  - when this test is selected, the trigger fires
when the mteTriggerValueID object goes from present to absent.
changed(2) - when this test is selected, the trigger fires
the mteTriggerValueID object value changes.

Once the trigger has fired for either presence or absence it
will not fire again for that state until the object has been
to the other state. ',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerExistenceTest.635', 
    'leaf', 
    '/mteTrigger/mteTriggerExistenceEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerExistenceStartup', '663',
    '/mteTrigger/mteTriggerExistenceEntry/mteTriggerExistenceStartup',
    'Control for whether an event may be triggered when this entry
is first set to \'active\' and the test specified by
mteTriggerExistenceTest is true.  Setting an option causes
that trigger to fire when its test is true.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerExistenceStartup.663', 
    'leaf', 
    '/mteTrigger/mteTriggerExistenceEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerExistenceObjectsOwner', '678',
    '/mteTrigger/mteTriggerExistenceEntry/mteTriggerExistenceObjectsOwner',
    'To go with mteTriggerExistenceObjects, the mteOwner of a
group of objects from mteObjectsTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerExistenceObjectsOwner.678', 
    'leaf', 
    '/mteTrigger/mteTriggerExistenceEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerExistenceObjects', '690',
    '/mteTrigger/mteTriggerExistenceEntry/mteTriggerExistenceObjects',
    'The mteObjectsName of a group of objects from
mteObjectsTable.  These objects are to be added to any
Notification resulting from the firing of this trigger for
this test.

A list of objects may also be added based on the overall
trigger, the event or other settings in mteTriggerTest.

A length of 0 indicates no additional objects.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerExistenceObjects.690', 
    'leaf', 
    '/mteTrigger/mteTriggerExistenceEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerExistenceEventOwner', '709',
    '/mteTrigger/mteTriggerExistenceEntry/mteTriggerExistenceEventOwner',
    'To go with mteTriggerExistenceEvent, the mteOwner of an event
entry from the mteEventTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerExistenceEventOwner.709', 
    'leaf', 
    '/mteTrigger/mteTriggerExistenceEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerExistenceEvent', '721',
    '/mteTrigger/mteTriggerExistenceEntry/mteTriggerExistenceEvent',
    'The mteEventName of the event to invoke when mteTriggerType is
\'existence\' and this trigger fires.  A length of 0 indicates no
event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerExistenceEvent.721', 
    'leaf', 
    '/mteTrigger/mteTriggerExistenceEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerBooleanEntry', '738',
    '/mteTrigger/mteTriggerBooleanEntry',
    'Information about a single boolean trigger.  Entries
automatically exist in this this table for each mteTriggerEntry
that has \'boolean\' set in mteTriggerTest.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerBooleanEntry.738', 
    'list', 
    '/mteTrigger',
    '0',
    '1',
    '',
    '',
    'mteOwner mteTriggerName mteTriggerBooleanComparison mteTriggerBooleanValue mteTriggerBooleanStartup mteTriggerBooleanObjectsOwner mteTriggerBooleanObjects mteTriggerBooleanEventOwner mteTriggerBooleanEvent',
    '',
    'mteOwner mteTriggerName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteOwner', '747',
    '/mteTrigger/mteTriggerBooleanEntry/mteOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteOwner.747', 
    'leaf', 
    '/mteTrigger/mteTriggerBooleanEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerName', '755',
    '/mteTrigger/mteTriggerBooleanEntry/mteTriggerName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerName.755', 
    'leaf', 
    '/mteTrigger/mteTriggerBooleanEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerBooleanComparison', '764',
    '/mteTrigger/mteTriggerBooleanEntry/mteTriggerBooleanComparison',
    'The type of boolean comparison to perform.

The value at mteTriggerValueID is compared to
mteTriggerBooleanValue, so for example if
mteTriggerBooleanComparison is \'less\' the result would be true
if the value at mteTriggerValueID is less than the value of
mteTriggerBooleanValue.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerBooleanComparison.764', 
    'leaf', 
    '/mteTrigger/mteTriggerBooleanEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerBooleanValue', '786',
    '/mteTrigger/mteTriggerBooleanEntry/mteTriggerBooleanValue',
    'The value to use for the test specified by
mteTriggerBooleanTest.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerBooleanValue.786', 
    'leaf', 
    '/mteTrigger/mteTriggerBooleanEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerBooleanStartup', '796',
    '/mteTrigger/mteTriggerBooleanEntry/mteTriggerBooleanStartup',
    'Control for whether an event may be triggered when this entry
is first set to \'active\' or a new instance of the object at
mteTriggerValueID is found and the test specified by
mteTriggerBooleanComparison is true.  In that case an event is
triggered if mteTriggerBooleanStartup is \'true\'.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerBooleanStartup.796', 
    'leaf', 
    '/mteTrigger/mteTriggerBooleanEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerBooleanObjectsOwner', '809',
    '/mteTrigger/mteTriggerBooleanEntry/mteTriggerBooleanObjectsOwner',
    'To go with mteTriggerBooleanObjects, the mteOwner of a group
of objects from mteObjectsTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerBooleanObjectsOwner.809', 
    'leaf', 
    '/mteTrigger/mteTriggerBooleanEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerBooleanObjects', '821',
    '/mteTrigger/mteTriggerBooleanEntry/mteTriggerBooleanObjects',
    'The mteObjectsName of a group of objects from
mteObjectsTable.  These objects are to be added to any
Notification resulting from the firing of this trigger for
this test.

A list of objects may also be added based on the overall
trigger, the event or other settings in mteTriggerTest.

A length of 0 indicates no additional objects.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerBooleanObjects.821', 
    'leaf', 
    '/mteTrigger/mteTriggerBooleanEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerBooleanEventOwner', '840',
    '/mteTrigger/mteTriggerBooleanEntry/mteTriggerBooleanEventOwner',
    'To go with mteTriggerBooleanEvent, the mteOwner of an event
entry from mteEventTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerBooleanEventOwner.840', 
    'leaf', 
    '/mteTrigger/mteTriggerBooleanEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerBooleanEvent', '852',
    '/mteTrigger/mteTriggerBooleanEntry/mteTriggerBooleanEvent',
    'The mteEventName of the event to invoke when mteTriggerType is
\'boolean\' and this trigger fires.  A length of 0 indicates no
event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerBooleanEvent.852', 
    'leaf', 
    '/mteTrigger/mteTriggerBooleanEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdEntry', '869',
    '/mteTrigger/mteTriggerThresholdEntry',
    'Information about a single threshold trigger.  Entries
automatically exist in this table for each mteTriggerEntry
that has \'threshold\' set in mteTriggerTest.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdEntry.869', 
    'list', 
    '/mteTrigger',
    '0',
    '1',
    '',
    '',
    'mteOwner mteTriggerName mteTriggerThresholdStartup mteTriggerThresholdRising mteTriggerThresholdFalling mteTriggerThresholdDeltaRising mteTriggerThresholdDeltaFalling mteTriggerThresholdObjectsOwner mteTriggerThresholdObjects mteTriggerThresholdRisingEventOwner mteTriggerThresholdRisingEvent mteTriggerThresholdFallingEventOwner mteTriggerThresholdFallingEvent mteTriggerThresholdDeltaRisingEventOwner mteTriggerThresholdDeltaRisingEvent mteTriggerThresholdDeltaFallingEventOwner mteTriggerThresholdDeltaFallingEvent',
    '',
    'mteOwner mteTriggerName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteOwner', '878',
    '/mteTrigger/mteTriggerThresholdEntry/mteOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteOwner.878', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerName', '886',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerName.886', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdStartup', '895',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdStartup',
    'The event that may be triggered when this entry is first
set to \'active\' and a new instance of the object at
mteTriggerValueID is found.  If the first sample after this
instance becomes active is greater than or equal to
mteTriggerThresholdRising and mteTriggerThresholdStartup is
equal to \'rising\' or \'risingOrFalling\', then one
mteTriggerThresholdRisingEvent is triggered for that instance.
If the first sample after this entry becomes active is less
than or equal to mteTriggerThresholdFalling and
mteTriggerThresholdStartup is equal to \'falling\' or
\'risingOrFalling\', then one mteTriggerThresholdRisingEvent is
triggered for that instance.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdStartup.895', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdRising', '919',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdRising',
    'A threshold value to check against if mteTriggerType is
\'threshold\'.

When the current sampled value is greater than or equal to
this threshold, and the value at the last sampling interval
was less than this threshold, one
mteTriggerThresholdRisingEvent is triggered.  That event is
also triggered if the first sample after this entry becomes
active is greater than or equal to this threshold and
mteTriggerThresholdStartup is equal to \'rising\' or
\'risingOrFalling\'.

After a rising event is generated, another such event is not
triggered until the sampled value falls below this threshold
and reaches mteTriggerThresholdFalling.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdRising.919', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdFalling', '942',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdFalling',
    'A threshold value to check against if mteTriggerType is
\'threshold\'.

When the current sampled value is less than or equal to this
threshold, and the value at the last sampling interval was
greater than this threshold, one
mteTriggerThresholdFallingEvent is triggered.  That event is
also triggered if the first sample after this entry becomes
active is less than or equal to this threshold and
mteTriggerThresholdStartup is equal to \'falling\' or
\'risingOrFalling\'.

After a falling event is generated, another such event is not
triggered until the sampled value rises above this threshold
and reaches mteTriggerThresholdRising.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdFalling.942', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdDeltaRising', '965',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdDeltaRising',
    'A threshold value to check against if mteTriggerType is
\'threshold\'.

When the delta value (difference) between the current sampled
value (value(n)) and the previous sampled value (value(n-1))
is greater than or equal to this threshold,
and the delta value calculated at the last sampling interval
(i.e. value(n-1) - value(n-2)) was less than this threshold,
one mteTriggerThresholdDeltaRisingEvent is triggered. That event
is also triggered if the first delta value calculated after this
entry becomes active, i.e. value(2) - value(1), where value(1)
is the first sample taken of that instance, is greater than or
equal to this threshold.

After a rising event is generated, another such event is not
triggered until the delta value falls below this threshold and
reaches mteTriggerThresholdDeltaFalling.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdDeltaRising.965', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdDeltaFalling', '990',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdDeltaFalling',
    'A threshold value to check against if mteTriggerType is
\'threshold\'.

When the delta value (difference) between the current sampled
value (value(n)) and the previous sampled value (value(n-1))
is less than or equal to this threshold,
and the delta value calculated at the last sampling interval
(i.e. value(n-1) - value(n-2)) was greater than this threshold,
one mteTriggerThresholdDeltaFallingEvent is triggered. That event
is also triggered if the first delta value calculated after this
entry becomes active, i.e. value(2) - value(1), where value(1)
is the first sample taken of that instance, is less than or
equal to this threshold.

After a falling event is generated, another such event is not
triggered until the delta value falls below this threshold and
reaches mteTriggerThresholdDeltaRising.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdDeltaFalling.990', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdObjectsOwner', '1015',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdObjectsOwner',
    'To go with mteTriggerThresholdObjects, the mteOwner of a group
of objects from mteObjectsTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdObjectsOwner.1015', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdObjects', '1027',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdObjects',
    'The mteObjectsName of a group of objects from
mteObjectsTable.  These objects are to be added to any
Notification resulting from the firing of this trigger for
this test.

A list of objects may also be added based on the overall


trigger, the event or other settings in mteTriggerTest.

A length of 0 indicates no additional objects.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdObjects.1027', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdRisingEventOwner', '1048',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdRisingEventOwner',
    'To go with mteTriggerThresholdRisingEvent, the mteOwner of an
event entry from mteEventTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdRisingEventOwner.1048', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdRisingEvent', '1060',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdRisingEvent',
    'The mteEventName of the event to invoke when mteTriggerType is
\'threshold\' and this trigger fires based on
mteTriggerThresholdRising.  A length of 0 indicates no event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdRisingEvent.1060', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdFallingEventOwner', '1073',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdFallingEventOwner',
    'To go with mteTriggerThresholdFallingEvent, the mteOwner of an
event entry from mteEventTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdFallingEventOwner.1073', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdFallingEvent', '1085',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdFallingEvent',
    'The mteEventName of the event to invoke when mteTriggerType is
\'threshold\' and this trigger fires based on
mteTriggerThresholdFalling.  A length of 0 indicates no event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdFallingEvent.1085', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdDeltaRisingEventOwner', '1098',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdDeltaRisingEventOwner',
    'To go with mteTriggerThresholdDeltaRisingEvent, the mteOwner
of an event entry from mteEventTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdDeltaRisingEventOwner.1098', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdDeltaRisingEvent', '1110',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdDeltaRisingEvent',
    'The mteEventName of the event to invoke when mteTriggerType is
\'threshold\' and this trigger fires based on
mteTriggerThresholdDeltaRising. A length of 0 indicates
no event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdDeltaRisingEvent.1110', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdDeltaFallingEventOwner', '1124',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdDeltaFallingEventOwner',
    'To go with mteTriggerThresholdDeltaFallingEvent, the mteOwner
of an event entry from mteEventTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdDeltaFallingEventOwner.1124', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerThresholdDeltaFallingEvent', '1136',
    '/mteTrigger/mteTriggerThresholdEntry/mteTriggerThresholdDeltaFallingEvent',
    'The mteEventName of the event to invoke when mteTriggerType is
\'threshold\' and this trigger fires based on
mteTriggerThresholdDeltaFalling.  A length of 0 indicates
no event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerThresholdDeltaFallingEvent.1136', 
    'leaf', 
    '/mteTrigger/mteTriggerThresholdEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteObjects', '1153',
    '/mteObjects',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteObjects.1153', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'mteObjectsEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteObjectsEntry', '1158',
    '/mteObjects/mteObjectsEntry',
    'A group of objects.  Applications create and delete entries
using mteObjectsEntryStatus.

When adding objects to a notification they are added in the
lexical order of their index in this table.  Those associated
with a trigger come first, then trigger test, then event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteObjectsEntry.1158', 
    'list', 
    '/mteObjects',
    '0',
    '1',
    '',
    '',
    'mteOwner mteObjectsName mteObjectsIndex mteObjectsID mteObjectsIDWildcard mteObjectsEntryStatus',
    '',
    'mteOwner mteObjectsName mteObjectsIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteOwner', '1170',
    '/mteObjects/mteObjectsEntry/mteOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteOwner.1170', 
    'leaf', 
    '/mteObjects/mteObjectsEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteObjectsName', '1179',
    '/mteObjects/mteObjectsEntry/mteObjectsName',
    'A locally-unique, administratively assigned name for a group
of objects.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteObjectsName.1179', 
    'leaf', 
    '/mteObjects/mteObjectsEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteObjectsIndex', '1190',
    '/mteObjects/mteObjectsEntry/mteObjectsIndex',
    'An arbitrary integer for the purpose of identifying
individual objects within a mteObjectsName group.


Objects within a group are placed in the notification in the
numerical order of this index.

Groups are placed in the notification in the order of the
selections for overall trigger, trigger test, and event.
Within trigger test they are in the same order as the
numerical values of the bits defined for mteTriggerTest.

Bad object identifiers or a mismatch between truncating the
identifier and the value of mteDeltaDiscontinuityIDWildcard
result in operation as one would expect when providing the
wrong identifier to a Get operation.  The Get will fail or get
the wrong object.  If the object is not available it is omitted
from the notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteObjectsIndex.1190', 
    'leaf', 
    '/mteObjects/mteObjectsEntry',
    '0',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteObjectsID', '1217',
    '/mteObjects/mteObjectsEntry/mteObjectsID',
    'The object identifier of a MIB object to add to a
Notification that results from the firing of a trigger.

This may be wildcarded by truncating all or part of the
instance portion, in which case the instance portion of the
OID for obtaining this object will be the same as that used
in obtaining the mteTriggerValueID that fired.  If such
wildcarding is applied, mteObjectsIDWildcard must be
\'true\' and if not it must be \'false\'.

Each instance that fills the wildcard is independent of any
additional instances, that is, wildcarded objects operate
as if there were a separate table entry for each instance
that fills the wildcard without having to actually predict
all possible instances ahead of time.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteObjectsID.1217', 
    'leaf', 
    '/mteObjects/mteObjectsEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteObjectsIDWildcard', '1240',
    '/mteObjects/mteObjectsEntry/mteObjectsIDWildcard',
    'Control for whether mteObjectsID is to be treated as
fully-specified or wildcarded, with \'true\' indicating wildcard.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteObjectsIDWildcard.1240', 
    'leaf', 
    '/mteObjects/mteObjectsEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteObjectsEntryStatus', '1250',
    '/mteObjects/mteObjectsEntry/mteObjectsEntryStatus',
    'The control that allows creation and deletion of entries.
Once made active an entry MAY not be modified except to
delete it.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteObjectsEntryStatus.1250', 
    'leaf', 
    '/mteObjects/mteObjectsEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEvent', '1263',
    '/mteEvent',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEvent.1263', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'mteEventFailures mteEventEntry mteEventNotificationEntry mteEventSetEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventFailures', '1265',
    '/mteEvent/mteEventFailures',
    'The number of times an attempt to invoke an event
has failed.  This counts individually for each
attempt in a group of targets or each attempt for a
wildcarded trigger object.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventFailures.1265', 
    'leaf', 
    '/mteEvent',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventEntry', '1279',
    '/mteEvent/mteEventEntry',
    'Information about a single event.  Applications create and
delete entries using mteEventEntryStatus.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventEntry.1279', 
    'list', 
    '/mteEvent',
    '0',
    '1',
    '',
    '',
    'mteOwner mteEventName mteEventComment mteEventActions mteEventEnabled mteEventEntryStatus',
    '',
    'mteOwner mteEventName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteOwner', '1287',
    '/mteEvent/mteEventEntry/mteOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteOwner.1287', 
    'leaf', 
    '/mteEvent/mteEventEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventName', '1296',
    '/mteEvent/mteEventEntry/mteEventName',
    'A locally-unique, administratively assigned name for the
event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventName.1296', 
    'leaf', 
    '/mteEvent/mteEventEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventComment', '1307',
    '/mteEvent/mteEventEntry/mteEventComment',
    'A description of the event\'s function and use.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventComment.1307', 
    'leaf', 
    '/mteEvent/mteEventEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventActions', '1316',
    '/mteEvent/mteEventEntry/mteEventActions',
    'The actions to perform when this event occurs.

For \'notification\', Traps and/or Informs are sent according
to the configuration in the SNMP Notification MIB.

For \'set\', an SNMP Set operation is performed according to
control values in this entry.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventActions.1316', 
    'leaf', 
    '/mteEvent/mteEventEntry',
    '0',
    '1',
    'bits',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventEnabled', '1334',
    '/mteEvent/mteEventEntry/mteEventEnabled',
    'A control to allow an event to be configured but not used.
When the value is \'false\' the event does not execute even if


triggered.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventEnabled.1334', 
    'leaf', 
    '/mteEvent/mteEventEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventEntryStatus', '1347',
    '/mteEvent/mteEventEntry/mteEventEntryStatus',
    'The control that allows creation and deletion of entries.
Once made active an entry MAY not be modified except to
delete it.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventEntryStatus.1347', 
    'leaf', 
    '/mteEvent/mteEventEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventNotificationEntry', '1361',
    '/mteEvent/mteEventNotificationEntry',
    'Information about a single event\'s notification.  Entries
automatically exist in this this table for each mteEventEntry
that has \'notification\' set in mteEventActions.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventNotificationEntry.1361', 
    'list', 
    '/mteEvent',
    '0',
    '1',
    '',
    '',
    'mteOwner mteEventName mteEventNotification mteEventNotificationObjectsOwner mteEventNotificationObjects',
    '',
    'mteOwner mteEventName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteOwner', '1370',
    '/mteEvent/mteEventNotificationEntry/mteOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteOwner.1370', 
    'leaf', 
    '/mteEvent/mteEventNotificationEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventName', '1378',
    '/mteEvent/mteEventNotificationEntry/mteEventName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventName.1378', 
    'leaf', 
    '/mteEvent/mteEventNotificationEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventNotification', '1387',
    '/mteEvent/mteEventNotificationEntry/mteEventNotification',
    'The object identifier from the NOTIFICATION-TYPE for the
notification to use if metEventActions has \'notification\' set.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventNotification.1387', 
    'leaf', 
    '/mteEvent/mteEventNotificationEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventNotificationObjectsOwner', '1397',
    '/mteEvent/mteEventNotificationEntry/mteEventNotificationObjectsOwner',
    'To go with mteEventNotificationObjects, the mteOwner of a
group of objects from mteObjectsTable.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventNotificationObjectsOwner.1397', 
    'leaf', 
    '/mteEvent/mteEventNotificationEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventNotificationObjects', '1409',
    '/mteEvent/mteEventNotificationEntry/mteEventNotificationObjects',
    'The mteObjectsName of a group of objects from
mteObjectsTable if mteEventActions has \'notification\' set.
These objects are to be added to any Notification generated by
this event.

Objects may also be added based on the trigger that stimulated
the event.

A length of 0 indicates no additional objects.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventNotificationObjects.1409', 
    'leaf', 
    '/mteEvent/mteEventNotificationEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetEntry', '1432',
    '/mteEvent/mteEventSetEntry',
    'Information about a single event\'s set option.  Entries
automatically exist in this this table for each mteEventEntry
that has \'set\' set in mteEventActions.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetEntry.1432', 
    'list', 
    '/mteEvent',
    '0',
    '1',
    '',
    '',
    'mteOwner mteEventName mteEventSetObject mteEventSetObjectWildcard mteEventSetValue mteEventSetTargetTag mteEventSetContextName mteEventSetContextNameWildcard',
    '',
    'mteOwner mteEventName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteOwner', '1441',
    '/mteEvent/mteEventSetEntry/mteOwner',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteOwner.1441', 
    'leaf', 
    '/mteEvent/mteEventSetEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventName', '1449',
    '/mteEvent/mteEventSetEntry/mteEventName',
    'Automagically generated keyref leaf.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventName.1449', 
    'leaf', 
    '/mteEvent/mteEventSetEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetObject', '1458',
    '/mteEvent/mteEventSetEntry/mteEventSetObject',
    'The object identifier from the MIB object to set if
mteEventActions has \'set\' set.

This object identifier may be wildcarded by leaving
sub-identifiers off the end, in which case
nteEventSetObjectWildCard must be \'true\'.

If mteEventSetObject is wildcarded the instance used to set the
object to which it points is the same as the instance from the
value of mteTriggerValueID that triggered the event.

Each instance that fills the wildcard is independent of any
additional instances, that is, wildcarded objects operate
as if there were a separate table entry for each instance
that fills the wildcard without having to actually predict
all possible instances ahead of time.

Bad object identifiers or a mismatch between truncating the
identifier and the value of mteSetObjectWildcard
result in operation as one would expect when providing the
wrong identifier to a Set operation.  The Set will fail or set
the wrong object.  If the value syntax of the destination
object is not correct, the Set fails with the normal SNMP
error code.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetObject.1458', 
    'leaf', 
    '/mteEvent/mteEventSetEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetObjectWildcard', '1490',
    '/mteEvent/mteEventSetEntry/mteEventSetObjectWildcard',
    'Control over whether mteEventSetObject is to be treated as
fully-specified or wildcarded, with \'true\' indicating wildcard
if mteEventActions has \'set\' set.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetObjectWildcard.1490', 
    'leaf', 
    '/mteEvent/mteEventSetEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetValue', '1501',
    '/mteEvent/mteEventSetEntry/mteEventSetValue',
    'The value to which to set the object at mteEventSetObject
if mteEventActions has \'set\' set.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetValue.1501', 
    'leaf', 
    '/mteEvent/mteEventSetEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetTargetTag', '1511',
    '/mteEvent/mteEventSetEntry/mteEventSetTargetTag',
    'The tag for the target(s) at which to set the object at
mteEventSetObject to mteEventSetValue if mteEventActions
has \'set\' set.

Systems limited to self management MAY reject a non-zero
length for the value of this object.

A length of 0 indicates the local system.  In this case,
access to the objects indicated by mteEventSetObject is under
the security credentials of the requester that set
mteTriggerEntryStatus to \'active\'.  Those credentials are the
input parameters for isAccessAllowed from the Architecture for
Describing SNMP Management Frameworks.

Otherwise access rights are checked according to the security
parameters resulting from the tag.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetTargetTag.1511', 
    'leaf', 
    '/mteEvent/mteEventSetEntry',
    '0',
    '1',
    'SnmpTagValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetContextName', '1535',
    '/mteEvent/mteEventSetEntry/mteEventSetContextName',
    'The management context in which to set mteEventObjectID.
if mteEventActions has \'set\' set.

This may be wildcarded by leaving characters off the end.  To
indicate such wildcarding mteEventSetContextNameWildcard must
be \'true\'.

If this context name is wildcarded the value used to complete
the wildcarding of mteTriggerContextName will be appended.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetContextName.1535', 
    'leaf', 
    '/mteEvent/mteEventSetEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetContextNameWildcard', '1552',
    '/mteEvent/mteEventSetEntry/mteEventSetContextNameWildcard',
    'Control for whether mteEventSetContextName is to be treated as
fully-specified or wildcarded, with \'true\' indicating wildcard
if mteEventActions has \'set\' set.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetContextNameWildcard.1552', 
    'leaf', 
    '/mteEvent/mteEventSetEntry',
    '0',
    '1',
    'TruthValue',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'dismanEventMIBNotificationObjects', '1566',
    '/dismanEventMIBNotificationObjects',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#dismanEventMIBNotificationObjects.1566', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'mteHotTrigger mteHotTargetName mteHotContextName mteHotOID mteHotValue mteFailedReason',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTrigger', '1568',
    '/dismanEventMIBNotificationObjects/mteHotTrigger',
    'The name of the trigger causing the notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTrigger.1568', 
    'leaf', 
    '/dismanEventMIBNotificationObjects',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTargetName', '1576',
    '/dismanEventMIBNotificationObjects/mteHotTargetName',
    'The SNMP Target MIB\'s snmpTargetAddrName related to the
notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTargetName.1576', 
    'leaf', 
    '/dismanEventMIBNotificationObjects',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotContextName', '1585',
    '/dismanEventMIBNotificationObjects/mteHotContextName',
    'The context name related to the notification.  This MUST be as
fully-qualified as possible, including filling in wildcard
information determined in processing.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotContextName.1585', 
    'leaf', 
    '/dismanEventMIBNotificationObjects',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotOID', '1595',
    '/dismanEventMIBNotificationObjects/mteHotOID',
    'The object identifier of the destination object related to the
notification.  This MUST be as fully-qualified as possible,
including filling in wildcard information determined in
processing.

For a trigger-related notification this is from
mteTriggerValueID.

For a set failure this is from mteEventSetObject.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotOID.1595', 
    'leaf', 
    '/dismanEventMIBNotificationObjects',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotValue', '1611',
    '/dismanEventMIBNotificationObjects/mteHotValue',
    'The value of the object at mteTriggerValueID when a
trigger fired.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotValue.1611', 
    'leaf', 
    '/dismanEventMIBNotificationObjects',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteFailedReason', '1620',
    '/dismanEventMIBNotificationObjects/mteFailedReason',
    'The reason for the failure of an attempt to check for a
trigger condition or set an object in response to an event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteFailedReason.1620', 
    'leaf', 
    '/dismanEventMIBNotificationObjects',
    '0',
    '1',
    'FailureReason',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFired', '1631',
    '/mteTriggerFired',
    'Notification that the trigger indicated by the object
instances has fired, for triggers with mteTriggerType
\'boolean\' or \'existence\'.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFired.1631', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'mteTriggerFired-mteHotTrigger mteTriggerFired-mteHotTargetName mteTriggerFired-mteHotContextName mteTriggerFired-mteHotOID mteTriggerFired-mteHotValue',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFired-mteHotTrigger', '1638',
    '/mteTriggerFired/mteTriggerFired-mteHotTrigger',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFired-mteHotTrigger.1638', 
    'container', 
    '/mteTriggerFired',
    '0',
    '0',
    '',
    '',
    'mteHotTrigger',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTrigger', '1639',
    '/mteTriggerFired/mteTriggerFired-mteHotTrigger/mteHotTrigger',
    'The name of the trigger causing the notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTrigger.1639', 
    'leaf', 
    '/mteTriggerFired/mteTriggerFired-mteHotTrigger',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFired-mteHotTargetName', '1648',
    '/mteTriggerFired/mteTriggerFired-mteHotTargetName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFired-mteHotTargetName.1648', 
    'container', 
    '/mteTriggerFired',
    '0',
    '0',
    '',
    '',
    'mteHotTargetName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTargetName', '1649',
    '/mteTriggerFired/mteTriggerFired-mteHotTargetName/mteHotTargetName',
    'The SNMP Target MIB\'s snmpTargetAddrName related to the
notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTargetName.1649', 
    'leaf', 
    '/mteTriggerFired/mteTriggerFired-mteHotTargetName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFired-mteHotContextName', '1659',
    '/mteTriggerFired/mteTriggerFired-mteHotContextName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFired-mteHotContextName.1659', 
    'container', 
    '/mteTriggerFired',
    '0',
    '0',
    '',
    '',
    'mteHotContextName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotContextName', '1660',
    '/mteTriggerFired/mteTriggerFired-mteHotContextName/mteHotContextName',
    'The context name related to the notification.  This MUST be as
fully-qualified as possible, including filling in wildcard
information determined in processing.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotContextName.1660', 
    'leaf', 
    '/mteTriggerFired/mteTriggerFired-mteHotContextName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFired-mteHotOID', '1671',
    '/mteTriggerFired/mteTriggerFired-mteHotOID',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFired-mteHotOID.1671', 
    'container', 
    '/mteTriggerFired',
    '0',
    '0',
    '',
    '',
    'mteHotOID',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotOID', '1672',
    '/mteTriggerFired/mteTriggerFired-mteHotOID/mteHotOID',
    'The object identifier of the destination object related to the
notification.  This MUST be as fully-qualified as possible,
including filling in wildcard information determined in
processing.

For a trigger-related notification this is from
mteTriggerValueID.

For a set failure this is from mteEventSetObject.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotOID.1672', 
    'leaf', 
    '/mteTriggerFired/mteTriggerFired-mteHotOID',
    '0',
    '0',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFired-mteHotValue', '1689',
    '/mteTriggerFired/mteTriggerFired-mteHotValue',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFired-mteHotValue.1689', 
    'container', 
    '/mteTriggerFired',
    '0',
    '0',
    '',
    '',
    'mteHotValue',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotValue', '1690',
    '/mteTriggerFired/mteTriggerFired-mteHotValue/mteHotValue',
    'The value of the object at mteTriggerValueID when a
trigger fired.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotValue.1690', 
    'leaf', 
    '/mteTriggerFired/mteTriggerFired-mteHotValue',
    '0',
    '0',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerRising', '1702',
    '/mteTriggerRising',
    'Notification that the rising threshold was met for triggers
with mteTriggerType \'threshold\'.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerRising.1702', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'mteTriggerRising-mteHotTrigger mteTriggerRising-mteHotTargetName mteTriggerRising-mteHotContextName mteTriggerRising-mteHotOID mteTriggerRising-mteHotValue',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerRising-mteHotTrigger', '1708',
    '/mteTriggerRising/mteTriggerRising-mteHotTrigger',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerRising-mteHotTrigger.1708', 
    'container', 
    '/mteTriggerRising',
    '0',
    '0',
    '',
    '',
    'mteHotTrigger',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTrigger', '1709',
    '/mteTriggerRising/mteTriggerRising-mteHotTrigger/mteHotTrigger',
    'The name of the trigger causing the notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTrigger.1709', 
    'leaf', 
    '/mteTriggerRising/mteTriggerRising-mteHotTrigger',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerRising-mteHotTargetName', '1718',
    '/mteTriggerRising/mteTriggerRising-mteHotTargetName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerRising-mteHotTargetName.1718', 
    'container', 
    '/mteTriggerRising',
    '0',
    '0',
    '',
    '',
    'mteHotTargetName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTargetName', '1719',
    '/mteTriggerRising/mteTriggerRising-mteHotTargetName/mteHotTargetName',
    'The SNMP Target MIB\'s snmpTargetAddrName related to the
notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTargetName.1719', 
    'leaf', 
    '/mteTriggerRising/mteTriggerRising-mteHotTargetName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerRising-mteHotContextName', '1729',
    '/mteTriggerRising/mteTriggerRising-mteHotContextName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerRising-mteHotContextName.1729', 
    'container', 
    '/mteTriggerRising',
    '0',
    '0',
    '',
    '',
    'mteHotContextName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotContextName', '1730',
    '/mteTriggerRising/mteTriggerRising-mteHotContextName/mteHotContextName',
    'The context name related to the notification.  This MUST be as
fully-qualified as possible, including filling in wildcard
information determined in processing.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotContextName.1730', 
    'leaf', 
    '/mteTriggerRising/mteTriggerRising-mteHotContextName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerRising-mteHotOID', '1741',
    '/mteTriggerRising/mteTriggerRising-mteHotOID',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerRising-mteHotOID.1741', 
    'container', 
    '/mteTriggerRising',
    '0',
    '0',
    '',
    '',
    'mteHotOID',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotOID', '1742',
    '/mteTriggerRising/mteTriggerRising-mteHotOID/mteHotOID',
    'The object identifier of the destination object related to the
notification.  This MUST be as fully-qualified as possible,
including filling in wildcard information determined in
processing.

For a trigger-related notification this is from
mteTriggerValueID.

For a set failure this is from mteEventSetObject.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotOID.1742', 
    'leaf', 
    '/mteTriggerRising/mteTriggerRising-mteHotOID',
    '0',
    '0',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerRising-mteHotValue', '1759',
    '/mteTriggerRising/mteTriggerRising-mteHotValue',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerRising-mteHotValue.1759', 
    'container', 
    '/mteTriggerRising',
    '0',
    '0',
    '',
    '',
    'mteHotValue',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotValue', '1760',
    '/mteTriggerRising/mteTriggerRising-mteHotValue/mteHotValue',
    'The value of the object at mteTriggerValueID when a
trigger fired.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotValue.1760', 
    'leaf', 
    '/mteTriggerRising/mteTriggerRising-mteHotValue',
    '0',
    '0',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFalling', '1772',
    '/mteTriggerFalling',
    'Notification that the falling threshold was met for triggers
with mteTriggerType \'threshold\'.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFalling.1772', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'mteTriggerFalling-mteHotTrigger mteTriggerFalling-mteHotTargetName mteTriggerFalling-mteHotContextName mteTriggerFalling-mteHotOID mteTriggerFalling-mteHotValue',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFalling-mteHotTrigger', '1778',
    '/mteTriggerFalling/mteTriggerFalling-mteHotTrigger',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFalling-mteHotTrigger.1778', 
    'container', 
    '/mteTriggerFalling',
    '0',
    '0',
    '',
    '',
    'mteHotTrigger',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTrigger', '1779',
    '/mteTriggerFalling/mteTriggerFalling-mteHotTrigger/mteHotTrigger',
    'The name of the trigger causing the notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTrigger.1779', 
    'leaf', 
    '/mteTriggerFalling/mteTriggerFalling-mteHotTrigger',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFalling-mteHotTargetName', '1788',
    '/mteTriggerFalling/mteTriggerFalling-mteHotTargetName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFalling-mteHotTargetName.1788', 
    'container', 
    '/mteTriggerFalling',
    '0',
    '0',
    '',
    '',
    'mteHotTargetName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTargetName', '1789',
    '/mteTriggerFalling/mteTriggerFalling-mteHotTargetName/mteHotTargetName',
    'The SNMP Target MIB\'s snmpTargetAddrName related to the
notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTargetName.1789', 
    'leaf', 
    '/mteTriggerFalling/mteTriggerFalling-mteHotTargetName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFalling-mteHotContextName', '1799',
    '/mteTriggerFalling/mteTriggerFalling-mteHotContextName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFalling-mteHotContextName.1799', 
    'container', 
    '/mteTriggerFalling',
    '0',
    '0',
    '',
    '',
    'mteHotContextName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotContextName', '1800',
    '/mteTriggerFalling/mteTriggerFalling-mteHotContextName/mteHotContextName',
    'The context name related to the notification.  This MUST be as
fully-qualified as possible, including filling in wildcard
information determined in processing.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotContextName.1800', 
    'leaf', 
    '/mteTriggerFalling/mteTriggerFalling-mteHotContextName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFalling-mteHotOID', '1811',
    '/mteTriggerFalling/mteTriggerFalling-mteHotOID',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFalling-mteHotOID.1811', 
    'container', 
    '/mteTriggerFalling',
    '0',
    '0',
    '',
    '',
    'mteHotOID',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotOID', '1812',
    '/mteTriggerFalling/mteTriggerFalling-mteHotOID/mteHotOID',
    'The object identifier of the destination object related to the
notification.  This MUST be as fully-qualified as possible,
including filling in wildcard information determined in
processing.

For a trigger-related notification this is from
mteTriggerValueID.

For a set failure this is from mteEventSetObject.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotOID.1812', 
    'leaf', 
    '/mteTriggerFalling/mteTriggerFalling-mteHotOID',
    '0',
    '0',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFalling-mteHotValue', '1829',
    '/mteTriggerFalling/mteTriggerFalling-mteHotValue',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFalling-mteHotValue.1829', 
    'container', 
    '/mteTriggerFalling',
    '0',
    '0',
    '',
    '',
    'mteHotValue',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotValue', '1830',
    '/mteTriggerFalling/mteTriggerFalling-mteHotValue/mteHotValue',
    'The value of the object at mteTriggerValueID when a
trigger fired.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotValue.1830', 
    'leaf', 
    '/mteTriggerFalling/mteTriggerFalling-mteHotValue',
    '0',
    '0',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFailure', '1842',
    '/mteTriggerFailure',
    'Notification that an attempt to check a trigger has failed.

The network manager must enable this notification only with
a certain fear and trembling, as it can easily crowd out more
important information.  It should be used only to help diagnose
a problem that has appeared in the error counters and can not
be found otherwise.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFailure.1842', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'mteTriggerFailure-mteHotTrigger mteTriggerFailure-mteHotTargetName mteTriggerFailure-mteHotContextName mteTriggerFailure-mteHotOID mteTriggerFailure-mteFailedReason',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFailure-mteHotTrigger', '1853',
    '/mteTriggerFailure/mteTriggerFailure-mteHotTrigger',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFailure-mteHotTrigger.1853', 
    'container', 
    '/mteTriggerFailure',
    '0',
    '0',
    '',
    '',
    'mteHotTrigger',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTrigger', '1854',
    '/mteTriggerFailure/mteTriggerFailure-mteHotTrigger/mteHotTrigger',
    'The name of the trigger causing the notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTrigger.1854', 
    'leaf', 
    '/mteTriggerFailure/mteTriggerFailure-mteHotTrigger',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFailure-mteHotTargetName', '1863',
    '/mteTriggerFailure/mteTriggerFailure-mteHotTargetName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFailure-mteHotTargetName.1863', 
    'container', 
    '/mteTriggerFailure',
    '0',
    '0',
    '',
    '',
    'mteHotTargetName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTargetName', '1864',
    '/mteTriggerFailure/mteTriggerFailure-mteHotTargetName/mteHotTargetName',
    'The SNMP Target MIB\'s snmpTargetAddrName related to the
notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTargetName.1864', 
    'leaf', 
    '/mteTriggerFailure/mteTriggerFailure-mteHotTargetName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFailure-mteHotContextName', '1874',
    '/mteTriggerFailure/mteTriggerFailure-mteHotContextName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFailure-mteHotContextName.1874', 
    'container', 
    '/mteTriggerFailure',
    '0',
    '0',
    '',
    '',
    'mteHotContextName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotContextName', '1875',
    '/mteTriggerFailure/mteTriggerFailure-mteHotContextName/mteHotContextName',
    'The context name related to the notification.  This MUST be as
fully-qualified as possible, including filling in wildcard
information determined in processing.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotContextName.1875', 
    'leaf', 
    '/mteTriggerFailure/mteTriggerFailure-mteHotContextName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFailure-mteHotOID', '1886',
    '/mteTriggerFailure/mteTriggerFailure-mteHotOID',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFailure-mteHotOID.1886', 
    'container', 
    '/mteTriggerFailure',
    '0',
    '0',
    '',
    '',
    'mteHotOID',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotOID', '1887',
    '/mteTriggerFailure/mteTriggerFailure-mteHotOID/mteHotOID',
    'The object identifier of the destination object related to the
notification.  This MUST be as fully-qualified as possible,
including filling in wildcard information determined in
processing.

For a trigger-related notification this is from
mteTriggerValueID.

For a set failure this is from mteEventSetObject.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotOID.1887', 
    'leaf', 
    '/mteTriggerFailure/mteTriggerFailure-mteHotOID',
    '0',
    '0',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteTriggerFailure-mteFailedReason', '1904',
    '/mteTriggerFailure/mteTriggerFailure-mteFailedReason',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteTriggerFailure-mteFailedReason.1904', 
    'container', 
    '/mteTriggerFailure',
    '0',
    '0',
    '',
    '',
    'mteFailedReason',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteFailedReason', '1905',
    '/mteTriggerFailure/mteTriggerFailure-mteFailedReason/mteFailedReason',
    'The reason for the failure of an attempt to check for a
trigger condition or set an object in response to an event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteFailedReason.1905', 
    'leaf', 
    '/mteTriggerFailure/mteTriggerFailure-mteFailedReason',
    '0',
    '0',
    'FailureReason',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetFailure', '1917',
    '/mteEventSetFailure',
    'Notification that an attempt to do a set in response to an
event has failed.

The network manager must enable this notification only with
a certain fear and trembling, as it can easily crowd out more
important information.  It should be used only to help diagnose
a problem that has appeared in the error counters and can not
be found otherwise.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetFailure.1917', 
    'notification', 
    '',
    '1',
    '0',
    '',
    '',
    'mteEventSetFailure-mteHotTrigger mteEventSetFailure-mteHotTargetName mteEventSetFailure-mteHotContextName mteEventSetFailure-mteHotOID mteEventSetFailure-mteFailedReason',
    '',
    '',
    '0', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetFailure-mteHotTrigger', '1929',
    '/mteEventSetFailure/mteEventSetFailure-mteHotTrigger',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetFailure-mteHotTrigger.1929', 
    'container', 
    '/mteEventSetFailure',
    '0',
    '0',
    '',
    '',
    'mteHotTrigger',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTrigger', '1930',
    '/mteEventSetFailure/mteEventSetFailure-mteHotTrigger/mteHotTrigger',
    'The name of the trigger causing the notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTrigger.1930', 
    'leaf', 
    '/mteEventSetFailure/mteEventSetFailure-mteHotTrigger',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetFailure-mteHotTargetName', '1939',
    '/mteEventSetFailure/mteEventSetFailure-mteHotTargetName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetFailure-mteHotTargetName.1939', 
    'container', 
    '/mteEventSetFailure',
    '0',
    '0',
    '',
    '',
    'mteHotTargetName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotTargetName', '1940',
    '/mteEventSetFailure/mteEventSetFailure-mteHotTargetName/mteHotTargetName',
    'The SNMP Target MIB\'s snmpTargetAddrName related to the
notification.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotTargetName.1940', 
    'leaf', 
    '/mteEventSetFailure/mteEventSetFailure-mteHotTargetName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetFailure-mteHotContextName', '1950',
    '/mteEventSetFailure/mteEventSetFailure-mteHotContextName',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetFailure-mteHotContextName.1950', 
    'container', 
    '/mteEventSetFailure',
    '0',
    '0',
    '',
    '',
    'mteHotContextName',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotContextName', '1951',
    '/mteEventSetFailure/mteEventSetFailure-mteHotContextName/mteHotContextName',
    'The context name related to the notification.  This MUST be as
fully-qualified as possible, including filling in wildcard
information determined in processing.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotContextName.1951', 
    'leaf', 
    '/mteEventSetFailure/mteEventSetFailure-mteHotContextName',
    '0',
    '0',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetFailure-mteHotOID', '1962',
    '/mteEventSetFailure/mteEventSetFailure-mteHotOID',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetFailure-mteHotOID.1962', 
    'container', 
    '/mteEventSetFailure',
    '0',
    '0',
    '',
    '',
    'mteHotOID',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteHotOID', '1963',
    '/mteEventSetFailure/mteEventSetFailure-mteHotOID/mteHotOID',
    'The object identifier of the destination object related to the
notification.  This MUST be as fully-qualified as possible,
including filling in wildcard information determined in
processing.

For a trigger-related notification this is from
mteTriggerValueID.

For a set failure this is from mteEventSetObject.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteHotOID.1963', 
    'leaf', 
    '/mteEventSetFailure/mteEventSetFailure-mteHotOID',
    '0',
    '0',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteEventSetFailure-mteFailedReason', '1980',
    '/mteEventSetFailure/mteEventSetFailure-mteFailedReason',
    '',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteEventSetFailure-mteFailedReason.1980', 
    'container', 
    '/mteEventSetFailure',
    '0',
    '0',
    '',
    '',
    'mteFailedReason',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'DISMAN-EVENT-MIB', 'DISMAN-EVENT-MIB', '2000-10-16', 'mteFailedReason', '1981',
    '/mteEventSetFailure/mteEventSetFailure-mteFailedReason/mteFailedReason',
    'The reason for the failure of an attempt to check for a
trigger condition or set an object in response to an event.',
    '',
    '/modules/DISMAN-EVENT-MIB/2000-10-16#mteFailedReason.1981', 
    'leaf', 
    '/mteEventSetFailure/mteEventSetFailure-mteFailedReason',
    '0',
    '0',
    'FailureReason',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-USER-BASED-SM-MIB.yang
# module: SNMP-USER-BASED-SM-MIB
# version: 2002-10-16
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-USER-BASED-SM-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'snmp-user',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-USER-BASED-SM-MIB',
    'SNMPv3 Working Group',
    'The management information definitions for the
SNMP User-based Security Model.

Copyright (C) The Internet Society (2002). This
...',
    'The management information definitions for the
SNMP User-based Security Model.

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 3414;
see the RFC itself for full legal notices.',
    '',
    'WG-email:   snmpv3@lists.tislabs.com
Subscribe:  majordomo@lists.tislabs.com
	    In msg body:  subscribe snmpv3

Chair:      Russ Mundy
	    Network Associates Laboratories
postal:     15204 Omega Drive, Suite 300
	    Rockville, MD 20850-4601
	    USA
email:      mundy@tislabs.com

phone:      +1 301-947-7107

Co-Chair:   David Harrington
	    Enterasys Networks
Postal:     35 Industrial Way
	    P. O. Box 5004
	    Rochester, New Hampshire 03866-5005
	    USA
EMail:      dbh@enterasys.com
Phone:      +1 603-337-2614

Co-editor   Uri Blumenthal
	    Lucent Technologies
postal:     67 Whippany Rd.
	    Whippany, NJ 07981
	    USA
email:      uri@lucent.com
phone:      +1-973-386-2163

Co-editor:  Bert Wijnen
	    Lucent Technologies
postal:     Schagen 33
	    3461 GL Linschoten
	    Netherlands
email:      bwijnen@lucent.com
phone:      +31-348-480-685',
    'Changes in this revision:
- Updated references and contact info.
- Clarification to usmUserCloneFrom DESCRIPTION
  clause
- Fixed \'command responder\' into \'command generator\'
  in last para of DESCRIPTION clause of
  usmUserTable.
This revision published as RFC3414.',
    '/xsd/SNMP-USER-BASED-SM-MIB_2002-10-16.xsd',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16', 
    '/src/SNMP-USER-BASED-SM-MIB_2002-10-16.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-USER-BASED-SM-MIB.yang',
    'SNMP-USER-BASED-SM-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'KeyChange', '97',
    'Every definition of an object with this syntax must identify
a protocol P, a secret key K, and a hash algorithm H
that produces output of L octets.

The object\'s value is a manager-generated, partially-random
value which, when modified, causes the value of the secret
key K, to be modified via a one-way function.

The value of an instance of this object is the concatenation
of two components: first a \'random\' component and then a
\'delta\' component.

The lengths of the random and delta components
are given by the corresponding value of the protocol P;
if P requires K to be a fixed length, the length of both the
random and delta components is that fixed length; if P
allows the length of K to be variable up to a particular
maximum length, the length of the random component is that
maximum length and the length of the delta component is any
length less than or equal to that maximum length.
For example, usmHMACMD5AuthProtocol requires K to be a fixed
length of 16 octets and L - of 16 octets.
usmHMACSHAAuthProtocol requires K to be a fixed length of
20 octets and L - of 20 octets. Other protocols may define
other sizes, as deemed appropriate.

When a requester wants to change the old key K to a new
key keyNew on a remote entity, the \'random\' component is
obtained from either a true random generator, or from a
pseudorandom generator, and the \'delta\' component is
computed as follows:

 - a temporary variable is initialized to the existing value
   of K;
 - if the length of the keyNew is greater than L octets,
   then:
    - the random component is appended to the value of the
      temporary variable, and the result is input to the
      the hash algorithm H to produce a digest value, and
      the temporary variable is set to this digest value;
    - the value of the temporary variable is XOR-ed with
      the first (next) L-octets (16 octets in case of MD5)
      of the keyNew to produce the first (next) L-octets
      (16 octets in case of MD5) of the \'delta\' component.
    - the above two steps are repeated until the unused
      portion of the keyNew component is L octets or less,
 - the random component is appended to the value of the
   temporary variable, and the result is input to the
   hash algorithm H to produce a digest value;
 - this digest value, truncated if necessary to be the same
   length as the unused portion of the keyNew, is XOR-ed
   with the unused portion of the keyNew to produce the
   (final portion of the) \'delta\' component.

 For example, using MD5 as the hash algorithm H:

    iterations = (lenOfDelta - 1)/16; /* integer division */
    temp = keyOld;
    for (i = 0; i < iterations; i++) {
	temp = MD5 (temp || random);
	delta[i*16 .. (i*16)+15] =
	       temp XOR keyNew[i*16 .. (i*16)+15];
    }
    temp = MD5 (temp || random);
    delta[i*16 .. lenOfDelta-1] =
	   temp XOR keyNew[i*16 .. lenOfDelta-1];

The \'random\' and \'delta\' components are then concatenated as
described above, and the resulting octet string is sent to
the recipient as the new value of an instance of this object.

At the receiver side, when an instance of this object is set
to a new value, then a new value of K is computed as follows:

 - a temporary variable is initialized to the existing value
   of K;
 - if the length of the delta component is greater than L
   octets, then:
    - the random component is appended to the value of the
      temporary variable, and the result is input to the
      hash algorithm H to produce a digest value, and the
      temporary variable is set to this digest value;
    - the value of the temporary variable is XOR-ed with
      the first (next) L-octets (16 octets in case of MD5)
      of the delta component to produce the first (next)
      L-octets (16 octets in case of MD5) of the new value
      of K.
    - the above two steps are repeated until the unused
      portion of the delta component is L octets or less,
 - the random component is appended to the value of the
   temporary variable, and the result is input to the
   hash algorithm H to produce a digest value;
 - this digest value, truncated if necessary to be the same
   length as the unused portion of the delta component, is
   XOR-ed with the unused portion of the delta component to
   produce the (final portion of the) new value of K.

 For example, using MD5 as the hash algorithm H:

    iterations = (lenOfDelta - 1)/16; /* integer division */
    temp = keyOld;
    for (i = 0; i < iterations; i++) {
	temp = MD5 (temp || random);
	keyNew[i*16 .. (i*16)+15] =
	       temp XOR delta[i*16 .. (i*16)+15];
    }
    temp = MD5 (temp || random);
    keyNew[i*16 .. lenOfDelta-1] =
	   temp XOR delta[i*16 .. lenOfDelta-1];

The value of an object with this syntax, whenever it is
retrieved by the management protocol, is always the zero
length string.

Note that the keyOld and keyNew are the localized keys.

Note that it is probably wise that when an SNMP entity sends
a SetRequest to change a key, that it keeps a copy of the old
key until it has confirmed that the key change actually
succeeded.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#KeyChange.97', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmStats', '222',
    '/usmStats',
    '',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmStats.222', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'usmStatsUnsupportedSecLevels usmStatsNotInTimeWindows usmStatsUnknownUserNames usmStatsUnknownEngineIDs usmStatsWrongDigests usmStatsDecryptionErrors',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmStatsUnsupportedSecLevels', '224',
    '/usmStats/usmStatsUnsupportedSecLevels',
    'The total number of packets received by the SNMP
engine which were dropped because they requested a
securityLevel that was unknown to the SNMP engine
or otherwise unavailable.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmStatsUnsupportedSecLevels.224', 
    'leaf', 
    '/usmStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmStatsNotInTimeWindows', '235',
    '/usmStats/usmStatsNotInTimeWindows',
    'The total number of packets received by the SNMP
engine which were dropped because they appeared
outside of the authoritative SNMP engine\'s window.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmStatsNotInTimeWindows.235', 
    'leaf', 
    '/usmStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmStatsUnknownUserNames', '245',
    '/usmStats/usmStatsUnknownUserNames',
    'The total number of packets received by the SNMP
engine which were dropped because they referenced a
user that was not known to the SNMP engine.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmStatsUnknownUserNames.245', 
    'leaf', 
    '/usmStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmStatsUnknownEngineIDs', '255',
    '/usmStats/usmStatsUnknownEngineIDs',
    'The total number of packets received by the SNMP
engine which were dropped because they referenced an
snmpEngineID that was not known to the SNMP engine.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmStatsUnknownEngineIDs.255', 
    'leaf', 
    '/usmStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmStatsWrongDigests', '265',
    '/usmStats/usmStatsWrongDigests',
    'The total number of packets received by the SNMP
engine which were dropped because they didn\'t
contain the expected digest value.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmStatsWrongDigests.265', 
    'leaf', 
    '/usmStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmStatsDecryptionErrors', '275',
    '/usmStats/usmStatsDecryptionErrors',
    'The total number of packets received by the SNMP
engine which were dropped because they could not be
decrypted.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmStatsDecryptionErrors.275', 
    'leaf', 
    '/usmStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUser', '287',
    '/usmUser',
    '',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUser.287', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'usmUserSpinLock usmUserEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserSpinLock', '289',
    '/usmUser/usmUserSpinLock',
    'An advisory lock used to allow several cooperating
Command Generator Applications to coordinate their
use of facilities to alter secrets in the
usmUserTable.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserSpinLock.289', 
    'leaf', 
    '/usmUser',
    '0',
    '1',
    'TestAndIncr',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserEntry', '303',
    '/usmUser/usmUserEntry',
    'A user configured in the SNMP engine\'s Local
Configuration Datastore (LCD) for the User-based
Security Model.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserEntry.303', 
    'list', 
    '/usmUser',
    '0',
    '1',
    '',
    '',
    'usmUserEngineID usmUserName usmUserSecurityName usmUserCloneFrom usmUserAuthProtocol usmUserAuthKeyChange usmUserOwnAuthKeyChange usmUserPrivProtocol usmUserPrivKeyChange usmUserOwnPrivKeyChange usmUserPublic usmUserStorageType usmUserStatus',
    '',
    'usmUserEngineID usmUserName',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserEngineID', '313',
    '/usmUser/usmUserEntry/usmUserEngineID',
    'An SNMP engine\'s administratively-unique identifier.

In a simple agent, this value is always that agent\'s
own snmpEngineID value.

The value can also take the value of the snmpEngineID
of a remote SNMP engine with which this user can
communicate.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserEngineID.313', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'SnmpEngineID',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserName', '328',
    '/usmUser/usmUserEntry/usmUserName',
    'A human readable string representing the name of
the user.

This is the (User-based Security) Model dependent
security ID.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserName.328', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserSecurityName', '342',
    '/usmUser/usmUserEntry/usmUserSecurityName',
    'A human readable string representing the user in
Security Model independent format.

The default transformation of the User-based Security
Model dependent security ID to the securityName and
vice versa is the identity function so that the
securityName is the same as the userName.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserSecurityName.342', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserCloneFrom', '356',
    '/usmUser/usmUserEntry/usmUserCloneFrom',
    'A pointer to another conceptual row in this
usmUserTable.  The user in this other conceptual
row is called the clone-from user.

When a new user is created (i.e., a new conceptual
row is instantiated in this table), the privacy and
authentication parameters of the new user must be
cloned from its clone-from user. These parameters are:
  - authentication protocol (usmUserAuthProtocol)
  - privacy protocol (usmUserPrivProtocol)
They will be copied regardless of what the current
value is.

Cloning also causes the initial values of the secret
authentication key (authKey) and the secret encryption

key (privKey) of the new user to be set to the same
values as the corresponding secrets of the clone-from
user to allow the KeyChange process to occur as
required during user creation.

The first time an instance of this object is set by
a management operation (either at or after its
instantiation), the cloning process is invoked.
Subsequent writes are successful but invoke no
action to be taken by the receiver.
The cloning process fails with an \'inconsistentName\'
error if the conceptual row representing the
clone-from user does not exist or is not in an active
state when the cloning process is invoked.

When this object is read, the ZeroDotZero OID
is returned.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserCloneFrom.356', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'RowPointer',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserAuthProtocol', '396',
    '/usmUser/usmUserEntry/usmUserAuthProtocol',
    'An indication of whether messages sent on behalf of
this user to/from the SNMP engine identified by
usmUserEngineID, can be authenticated, and if so,
the type of authentication protocol which is used.

An instance of this object is created concurrently
with the creation of any other object instance for
the same user (i.e., as part of the processing of
the set operation which creates the first object
instance in the same conceptual row).

If an initial set operation (i.e. at row creation time)
tries to set a value for an unknown or unsupported
protocol, then a \'wrongValue\' error must be returned.

The value will be overwritten/set when a set operation
is performed on the corresponding instance of
usmUserCloneFrom.

Once instantiated, the value of such an instance of
this object can only be changed via a set operation to
the value of the usmNoAuthProtocol.

If a set operation tries to change the value of an

existing instance of this object to any value other
than usmNoAuthProtocol, then an \'inconsistentValue\'
error must be returned.

If a set operation tries to set the value to the
usmNoAuthProtocol while the usmUserPrivProtocol value
in the same row is not equal to usmNoPrivProtocol,
then an \'inconsistentValue\' error must be returned.
That means that an SNMP command generator application
must first ensure that the usmUserPrivProtocol is set
to the usmNoPrivProtocol value before it can set
the usmUserAuthProtocol value to usmNoAuthProtocol.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserAuthProtocol.396', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserAuthKeyChange', '441',
    '/usmUser/usmUserEntry/usmUserAuthKeyChange',
    'An object, which when modified, causes the secret
authentication key used for messages sent on behalf
of this user to/from the SNMP engine identified by
usmUserEngineID, to be modified via a one-way
function.

The associated protocol is the usmUserAuthProtocol.
The associated secret key is the user\'s secret
authentication key (authKey). The associated hash
algorithm is the algorithm used by the user\'s
usmUserAuthProtocol.

When creating a new user, it is an \'inconsistentName\'
error for a set operation to refer to this object
unless it is previously or concurrently initialized
through a set operation on the corresponding instance
of usmUserCloneFrom.

When the value of the corresponding usmUserAuthProtocol
is usmNoAuthProtocol, then a set is successful, but
effectively is a no-op.

When this object is read, the zero-length (empty)
string is returned.

The recommended way to do a key change is as follows:

  1) GET(usmUserSpinLock.0) and save in sValue.
  2) generate the keyChange value based on the old
     (existing) secret key and the new secret key,
     let us call this kcValue.

If you do the key change on behalf of another user:

  3) SET(usmUserSpinLock.0=sValue,
	 usmUserAuthKeyChange=kcValue
	 usmUserPublic=randomValue)

If you do the key change for yourself:

  4) SET(usmUserSpinLock.0=sValue,
	 usmUserOwnAuthKeyChange=kcValue
	 usmUserPublic=randomValue)

If you get a response with error-status of noError,
then the SET succeeded and the new key is active.
If you do not get a response, then you can issue a
GET(usmUserPublic) and check if the value is equal
to the randomValue you did send in the SET. If so, then
the key change succeeded and the new key is active
(probably the response got lost). If not, then the SET
request probably never reached the target and so you
can start over with the procedure above.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserAuthKeyChange.441', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'KeyChange',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserOwnAuthKeyChange', '502',
    '/usmUser/usmUserEntry/usmUserOwnAuthKeyChange',
    'Behaves exactly as usmUserAuthKeyChange, with one
notable difference: in order for the set operation
to succeed, the usmUserName of the operation
requester must match the usmUserName that
indexes the row which is targeted by this
operation.
In addition, the USM security model must be
used for this operation.

The idea here is that access to this column can be
public, since it will only allow a user to change
his own secret authentication key (authKey).
Note that this can only be done once the row is active.

When a set is received and the usmUserName of the
requester is not the same as the umsUserName that
indexes the row which is targeted by this operation,
then a \'noAccess\' error must be returned.

When a set is received and the security model in use
is not USM, then a \'noAccess\' error must be returned.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserOwnAuthKeyChange.502', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'KeyChange',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserPrivProtocol', '531',
    '/usmUser/usmUserEntry/usmUserPrivProtocol',
    'An indication of whether messages sent on behalf of
this user to/from the SNMP engine identified by
usmUserEngineID, can be protected from disclosure,
and if so, the type of privacy protocol which is used.

An instance of this object is created concurrently
with the creation of any other object instance for
the same user (i.e., as part of the processing of
the set operation which creates the first object
instance in the same conceptual row).

If an initial set operation (i.e. at row creation time)
tries to set a value for an unknown or unsupported
protocol, then a \'wrongValue\' error must be returned.

The value will be overwritten/set when a set operation
is performed on the corresponding instance of
usmUserCloneFrom.

Once instantiated, the value of such an instance of
this object can only be changed via a set operation to
the value of the usmNoPrivProtocol.

If a set operation tries to change the value of an
existing instance of this object to any value other
than usmNoPrivProtocol, then an \'inconsistentValue\'
error must be returned.

Note that if any privacy protocol is used, then you
must also use an authentication protocol. In other
words, if usmUserPrivProtocol is set to anything else
than usmNoPrivProtocol, then the corresponding instance
of usmUserAuthProtocol cannot have a value of

usmNoAuthProtocol. If it does, then an
\'inconsistentValue\' error must be returned.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserPrivProtocol.531', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'AutonomousType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserPrivKeyChange', '575',
    '/usmUser/usmUserEntry/usmUserPrivKeyChange',
    'An object, which when modified, causes the secret
encryption key used for messages sent on behalf
of this user to/from the SNMP engine identified by
usmUserEngineID, to be modified via a one-way
function.

The associated protocol is the usmUserPrivProtocol.
The associated secret key is the user\'s secret
privacy key (privKey). The associated hash
algorithm is the algorithm used by the user\'s
usmUserAuthProtocol.

When creating a new user, it is an \'inconsistentName\'
error for a set operation to refer to this object
unless it is previously or concurrently initialized
through a set operation on the corresponding instance
of usmUserCloneFrom.

When the value of the corresponding usmUserPrivProtocol
is usmNoPrivProtocol, then a set is successful, but
effectively is a no-op.

When this object is read, the zero-length (empty)
string is returned.
See the description clause of usmUserAuthKeyChange for
a recommended procedure to do a key change.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserPrivKeyChange.575', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'KeyChange',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserOwnPrivKeyChange', '609',
    '/usmUser/usmUserEntry/usmUserOwnPrivKeyChange',
    'Behaves exactly as usmUserPrivKeyChange, with one
notable difference: in order for the Set operation
to succeed, the usmUserName of the operation
requester must match the usmUserName that indexes

the row which is targeted by this operation.
In addition, the USM security model must be
used for this operation.

The idea here is that access to this column can be
public, since it will only allow a user to change
his own secret privacy key (privKey).
Note that this can only be done once the row is active.

When a set is received and the usmUserName of the
requester is not the same as the umsUserName that
indexes the row which is targeted by this operation,
then a \'noAccess\' error must be returned.

When a set is received and the security model in use
is not USM, then a \'noAccess\' error must be returned.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserOwnPrivKeyChange.609', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'KeyChange',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserPublic', '638',
    '/usmUser/usmUserEntry/usmUserPublic',
    'A publicly-readable value which can be written as part
of the procedure for changing a user\'s secret
authentication and/or privacy key, and later read to
determine whether the change of the secret was
effected.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserPublic.638', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserStorageType', '653',
    '/usmUser/usmUserEntry/usmUserStorageType',
    'The storage type for this conceptual row.

Conceptual rows having the value \'permanent\' must
allow write-access at a minimum to:

- usmUserAuthKeyChange, usmUserOwnAuthKeyChange
  and usmUserPublic for a user who employs
  authentication, and
- usmUserPrivKeyChange, usmUserOwnPrivKeyChange
  and usmUserPublic for a user who employs
  privacy.

Note that any user who employs authentication or
privacy must allow its secret(s) to be updated and
thus cannot be \'readOnly\'.

If an initial set operation tries to set the value to
\'readOnly\' for a user who employs authentication or
privacy, then an \'inconsistentValue\' error must be
returned.  Note that if the value has been previously
set (implicit or explicit) to any value, then the rules
as defined in the StorageType Textual Convention apply.

It is an implementation issue to decide if a SET for
a readOnly or permanent row is accepted at all. In some
contexts this may make sense, in others it may not. If
a SET for a readOnly or permanent row is not accepted
at all, then a \'wrongValue\' error must be returned.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserStorageType.653', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'StorageType',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USER-BASED-SM-MIB', 'SNMP-USER-BASED-SM-MIB', '2002-10-16', 'usmUserStatus', '689',
    '/usmUser/usmUserEntry/usmUserStatus',
    'The status of this conceptual row.

Until instances of all corresponding columns are
appropriately configured, the value of the
corresponding instance of the usmUserStatus column
is \'notReady\'.

In particular, a newly created row for a user who
employs authentication, cannot be made active until the
corresponding usmUserCloneFrom and usmUserAuthKeyChange
have been set.

Further, a newly created row for a user who also
employs privacy, cannot be made active until the
usmUserPrivKeyChange has been set.

The RowStatus TC [RFC2579] requires that this
DESCRIPTION clause states under which circumstances
other objects in this row can be modified:

The value of this object has no effect on whether
other objects in this conceptual row can be modified,
except for usmUserOwnAuthKeyChange and
usmUserOwnPrivKeyChange. For these 2 objects, the

value of usmUserStatus MUST be active.',
    '',
    '/modules/SNMP-USER-BASED-SM-MIB/2002-10-16#usmUserStatus.689', 
    'leaf', 
    '/usmUser/usmUserEntry',
    '0',
    '1',
    'RowStatus',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/NETWORK-SERVICES-MIB.yang
# module: NETWORK-SERVICES-MIB
# version: 2000-03-03
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'NETWORK-SERVICES-MIB');

INSERT INTO ncmodule VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'network-services',
    'urn:ietf:params:xml:ns:yang:smiv2:NETWORK-SERVICES-MIB',
    'IETF Mail and Directory Management Working Group',
    'The MIB module describing network service applications',
    'The MIB module describing network service applications',
    '',
    '        Ned Freed

Postal: Innosoft International, Inc.
	1050 Lakes Drive
	West Covina, CA 91790
	US

   Tel: +1 626 919 3600
   Fax: +1 626 919 3614

E-Mail: ned.freed@innosoft.com',
    'This revision, published in RFC 2788, changes a number of
DisplayStrings to SnmpAdminStrings. Note that this change
is not strictly supported by SMIv2.  However, the alternative
of deprecating the old objects and defining new objects
would have a more adverse impact on backward compatibility
and interoperability, given the particular semantics of
these objects. The defining reference for distinguished
names has also been updated from RFC 1779 to RFC 2253.',
    '/xsd/NETWORK-SERVICES-MIB_2000-03-03.xsd',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03', 
    '/src/NETWORK-SERVICES-MIB_2000-03-03.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/NETWORK-SERVICES-MIB.yang',
    'NETWORK-SERVICES-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'DistinguishedName', '75',
    'A Distinguished Name represented in accordance with
RFC 2253, presented in the UTF-8 charset defined in
RFC 2279.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#DistinguishedName.75', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'URLString', '87',
    'A Uniform Resource Locator represented in accordance
with RFCs 1738 and 2368, presented in the NVT ASCII
charset defined in RFC 854.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#URLString.87', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'application', '99',
    '/application',
    '',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#application.99', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'applEntry assocEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applEntry', '104',
    '/application/applEntry',
    'An entry associated with a single network service
application.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applEntry.104', 
    'list', 
    '/application',
    '0',
    '1',
    '',
    '',
    'applIndex applName applDirectoryName applVersion applUptime applOperStatus applLastChange applInboundAssociations applOutboundAssociations applAccumulatedInboundAssociations applAccumulatedOutboundAssociations applLastInboundActivity applLastOutboundActivity applRejectedInboundAssociations applFailedOutboundAssociations applDescription applURL',
    '',
    'applIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applIndex', '113',
    '/application/applEntry/applIndex',
    'An index to uniquely identify the network service
application. This attribute is the index used for
lexicographic ordering of the table.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applIndex.113', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applName', '125',
    '/application/applEntry/applName',
    'The name the network service application chooses to be
known by.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applName.125', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applDirectoryName', '134',
    '/application/applEntry/applDirectoryName',
    'The Distinguished Name of the directory entry where
static information about this application is stored.
An empty string indicates that no information about
the application is available in the directory.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applDirectoryName.134', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'DistinguishedName',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applVersion', '145',
    '/application/applEntry/applVersion',
    'The version of network service application software.
This field is usually defined by the vendor of the
network service application software.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applVersion.145', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applUptime', '155',
    '/application/applEntry/applUptime',
    'The value of sysUpTime at the time the network service
application was last initialized.  If the application was
last initialized prior to the last initialization of the
network management subsystem, then this object contains
a zero value.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applUptime.155', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applOperStatus', '167',
    '/application/applEntry/applOperStatus',
    'Indicates the operational status of the network service
application. \'down\' indicates that the network service is

not available. \'up\' indicates that the network service
is operational and available.  \'halted\' indicates that the
service is operational but not available.  \'congested\'
indicates that the service is operational but no additional
inbound associations can be accommodated.  \'restarting\'
indicates that the service is currently unavailable but is
in the process of restarting and will be available soon.
\'quiescing\' indicates that service is currently operational
but is in the process of shutting down. Additional inbound
associations may be rejected by applications in the
\'quiescing\' state.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applOperStatus.167', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applLastChange', '195',
    '/application/applEntry/applLastChange',
    'The value of sysUpTime at the time the network service
application entered its current operational state.  If
the current state was entered prior to the last
initialization of the local network management subsystem,
then this object contains a zero value.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applLastChange.195', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applInboundAssociations', '207',
    '/application/applEntry/applInboundAssociations',
    'The number of current associations to the network service
application, where it is the responder.  An inbound
association occurs when another application successfully
connects to this one.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applInboundAssociations.207', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applOutboundAssociations', '218',
    '/application/applEntry/applOutboundAssociations',
    'The number of current associations to the network service
application, where it is the initiator.  An outbound
association occurs when this application successfully
connects to another one.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applOutboundAssociations.218', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'gauge32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applAccumulatedInboundAssociations', '229',
    '/application/applEntry/applAccumulatedInboundAssociations',
    'The total number of associations to the application entity
since application initialization, where it was the responder.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applAccumulatedInboundAssociations.229', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applAccumulatedOutboundAssociations', '238',
    '/application/applEntry/applAccumulatedOutboundAssociations',
    'The total number of associations to the application entity
since application initialization, where it was the initiator.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applAccumulatedOutboundAssociations.238', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applLastInboundActivity', '247',
    '/application/applEntry/applLastInboundActivity',
    'The value of sysUpTime at the time this application last
had an inbound association.  If the last association
occurred prior to the last initialization of the network
subsystem, then this object contains a zero value.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applLastInboundActivity.247', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applLastOutboundActivity', '258',
    '/application/applEntry/applLastOutboundActivity',
    'The value of sysUpTime at the time this application last
had an outbound association.  If the last association
occurred prior to the last initialization of the network
subsystem, then this object contains a zero value.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applLastOutboundActivity.258', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applRejectedInboundAssociations', '269',
    '/application/applEntry/applRejectedInboundAssociations',
    'The total number of inbound associations the application
entity has rejected, since application initialization.
Rejected associations are not counted in the accumulated
association totals.  Note that this only counts

associations the application entity has rejected itself;
it does not count rejections that occur at lower layers
of the network.  Thus, this counter may not reflect the
true number of failed inbound associations.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applRejectedInboundAssociations.269', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applFailedOutboundAssociations', '285',
    '/application/applEntry/applFailedOutboundAssociations',
    'The total number associations where the application entity
is initiator and association establishment has failed,
since application initialization.  Failed associations are
not counted in the accumulated association totals.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applFailedOutboundAssociations.285', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applDescription', '296',
    '/application/applEntry/applDescription',
    'A text description of the application.  This information
is intended to identify and briefly describe the
application in a status display.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applDescription.296', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applURL', '306',
    '/application/applEntry/applURL',
    'A URL pointing to a description of the application.
This information is intended to identify and describe
the application in a status display.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applURL.306', 
    'leaf', 
    '/application/applEntry',
    '0',
    '1',
    'URLString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'assocEntry', '320',
    '/application/assocEntry',
    'An entry associated with an association for a network
service application.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#assocEntry.320', 
    'list', 
    '/application',
    '0',
    '1',
    '',
    '',
    'applIndex assocIndex assocRemoteApplication assocApplicationProtocol assocApplicationType assocDuration',
    '',
    'applIndex assocIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'applIndex', '328',
    '/application/assocEntry/applIndex',
    'Automagically generated keyref leaf.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#applIndex.328', 
    'leaf', 
    '/application/assocEntry',
    '0',
    '1',
    'keyref',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'assocIndex', '337',
    '/application/assocEntry/assocIndex',
    'An index to uniquely identify each association for a network
service application.  This attribute is the index that is
used for lexicographic ordering of the table.  Note that the
table is also indexed by the applIndex.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#assocIndex.337', 
    'leaf', 
    '/application/assocEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'assocRemoteApplication', '350',
    '/application/assocEntry/assocRemoteApplication',
    'The name of the system running remote network service
application.  For an IP-based application this should be
either a domain name or IP address.  For an OSI application
it should be the string encoded distinguished name of the
managed object.  For X.400(1984) MTAs which do not have a
Distinguished Name, the RFC 2156 syntax \'mta in

globalid\' used in X400-Received: fields can be used. Note,
however, that not all connections an MTA makes are
necessarily to another MTA.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#assocRemoteApplication.350', 
    'leaf', 
    '/application/assocEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'assocApplicationProtocol', '367',
    '/application/assocEntry/assocApplicationProtocol',
    'An identification of the protocol being used for the
application.  For an OSI Application, this will be the
Application Context.  For Internet applications, OID
values of the form {applTCPProtoID port} or {applUDPProtoID
port} are used for TCP-based and UDP-based protocols,
respectively. In either case \'port\' corresponds to the
primary port number being used by the protocol. The
usual IANA procedures may be used to register ports for
new protocols.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#assocApplicationProtocol.367', 
    'leaf', 
    '/application/assocEntry',
    '0',
    '1',
    'object-identifier',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'assocApplicationType', '383',
    '/application/assocEntry/assocApplicationType',
    'This indicates whether the remote application is some type of
client making use of this network service (e.g., a Mail User
Agent) or a server acting as a peer. Also indicated is whether
the remote end initiated an incoming connection to the network
service or responded to an outgoing connection made by the
local application.  MTAs and messaging gateways are
considered to be peers for the purposes of this variable.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#assocApplicationType.383', 
    'leaf', 
    '/application/assocEntry',
    '0',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'NETWORK-SERVICES-MIB', 'NETWORK-SERVICES-MIB', '2000-03-03', 'assocDuration', '402',
    '/application/assocEntry/assocDuration',
    'The value of sysUpTime at the time this association was
started.  If this association started prior to the last
initialization of the network subsystem, then this
object contains a zero value.',
    '',
    '/modules/NETWORK-SERVICES-MIB/2000-03-03#assocDuration.402', 
    'leaf', 
    '/application/assocEntry',
    '0',
    '1',
    'timestamp',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/HOST-RESOURCES-TYPES.yang
# module: HOST-RESOURCES-TYPES
# version: 2000-03-06
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'HOST-RESOURCES-TYPES');

INSERT INTO ncmodule VALUES (
    '', 'HOST-RESOURCES-TYPES', 'HOST-RESOURCES-TYPES', '2000-03-06', 'host-resources-types',
    'urn:ietf:params:xml:ns:yang:smiv2:HOST-RESOURCES-TYPES',
    'IETF Host Resources MIB Working Group',
    'This MIB module registers type definitions for
storage types, device types, and file system types.

After the initial revision, ...',
    'This MIB module registers type definitions for
storage types, device types, and file system types.

After the initial revision, this module will be
maintained by IANA.',
    '',
    'Steve Waldbusser
Postal: Lucent Technologies, Inc.
	1213 Innsbruck Dr.
	Sunnyvale, CA 94089
	USA
Phone: 650-318-1251
Fax:   650-318-1633
Email: waldbusser@ins.com

In addition, the Host Resources MIB mailing list is dedicated
to discussion of this MIB. To join the mailing list, send a
request message to hostmib-request@andrew.cmu.edu. The mailing
list address is hostmib@andrew.cmu.edu.',
    'The original version of this module, published as RFC
2790.',
    '/xsd/HOST-RESOURCES-TYPES_2000-03-06.xsd',
    '/modules/HOST-RESOURCES-TYPES/2000-03-06', 
    '/src/HOST-RESOURCES-TYPES_2000-03-06.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/HOST-RESOURCES-TYPES.yang',
    'HOST-RESOURCES-TYPES.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/RFC-1215.yang
# module: RFC-1215
# version: 1991-03-01
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'RFC-1215');

INSERT INTO ncmodule VALUES (
    '', 'RFC-1215', 'RFC-1215', '1991-03-01', 'rfc-1215',
    'urn:ietf:params:xml:ns:yang:smiv2:RFC-1215',
    '',
    '',
    '',
    '',
    '',
    'From RFC 1215.',
    '/xsd/RFC-1215_1991-03-01.xsd',
    '/modules/RFC-1215/1991-03-01', 
    '/src/RFC-1215_1991-03-01.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/RFC-1215.yang',
    'RFC-1215.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-MPD-MIB.yang
# module: SNMP-MPD-MIB
# version: 2002-10-14
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-MPD-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-MPD-MIB', 'SNMP-MPD-MIB', '2002-10-14', 'snmp-mpd',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-MPD-MIB',
    'SNMPv3 Working Group',
    'The MIB for Message Processing and Dispatching

Copyright (C) The Internet Society (2002). This
version of this MIB module is pa...',
    'The MIB for Message Processing and Dispatching

Copyright (C) The Internet Society (2002). This
version of this MIB module is part of RFC 3412;
see the RFC itself for full legal notices.',
    '',
    'WG-EMail:   snmpv3@lists.tislabs.com
Subscribe:  snmpv3-request@lists.tislabs.com

Co-Chair:   Russ Mundy
	    Network Associates Laboratories
postal:     15204 Omega Drive, Suite 300
	    Rockville, MD 20850-4601
	    USA

EMail:      mundy@tislabs.com
phone:      +1 301-947-7107

Co-Chair &
Co-editor:  David Harrington
	    Enterasys Networks
postal:     35 Industrial Way
	    P. O. Box 5005
	    Rochester NH 03866-5005
	    USA
EMail:      dbh@enterasys.com
phone:      +1 603-337-2614

Co-editor:  Jeffrey Case
	    SNMP Research, Inc.
postal:     3001 Kimberlin Heights Road
	    Knoxville, TN 37920-9716
	    USA
EMail:      case@snmp.com
phone:      +1 423-573-1434

Co-editor:  Randy Presuhn
	    BMC Software, Inc.
postal:     2141 North First Street
	    San Jose, CA 95131
	    USA
EMail:      randy_presuhn@bmc.com
phone:      +1 408-546-1006

Co-editor:  Bert Wijnen
	    Lucent Technologies
postal:     Schagen 33
	    3461 GL Linschoten
	    Netherlands
EMail:      bwijnen@lucent.com
phone:      +31 348-680-485',
    'Updated addresses, published as RFC 3412.',
    '/xsd/SNMP-MPD-MIB_2002-10-14.xsd',
    '/modules/SNMP-MPD-MIB/2002-10-14', 
    '/src/SNMP-MPD-MIB_2002-10-14.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-MPD-MIB.yang',
    'SNMP-MPD-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-MPD-MIB', 'SNMP-MPD-MIB', '2002-10-14', 'snmpMPDStats', '93',
    '/snmpMPDStats',
    '',
    '',
    '/modules/SNMP-MPD-MIB/2002-10-14#snmpMPDStats.93', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'snmpUnknownSecurityModels snmpInvalidMsgs snmpUnknownPDUHandlers',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-MPD-MIB', 'SNMP-MPD-MIB', '2002-10-14', 'snmpUnknownSecurityModels', '95',
    '/snmpMPDStats/snmpUnknownSecurityModels',
    'The total number of packets received by the SNMP
engine which were dropped because they referenced a
securityModel that was not known to or supported by
the SNMP engine.',
    '',
    '/modules/SNMP-MPD-MIB/2002-10-14#snmpUnknownSecurityModels.95', 
    'leaf', 
    '/snmpMPDStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-MPD-MIB', 'SNMP-MPD-MIB', '2002-10-14', 'snmpInvalidMsgs', '106',
    '/snmpMPDStats/snmpInvalidMsgs',
    'The total number of packets received by the SNMP
engine which were dropped because there were invalid
or inconsistent components in the SNMP message.',
    '',
    '/modules/SNMP-MPD-MIB/2002-10-14#snmpInvalidMsgs.106', 
    'leaf', 
    '/snmpMPDStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-MPD-MIB', 'SNMP-MPD-MIB', '2002-10-14', 'snmpUnknownPDUHandlers', '116',
    '/snmpMPDStats/snmpUnknownPDUHandlers',
    'The total number of packets received by the SNMP
engine which were dropped because the PDU contained
in the packet could not be passed to an application
responsible for handling the pduType, e.g. no SNMP
application had registered for the proper
combination of the contextEngineID and the pduType.',
    '',
    '/modules/SNMP-MPD-MIB/2002-10-14#snmpUnknownPDUHandlers.116', 
    'leaf', 
    '/snmpMPDStats',
    '0',
    '1',
    'counter32',
    '',
    '',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-USM-DH-OBJECTS-MIB.yang
# module: SNMP-USM-DH-OBJECTS-MIB
# version: 2000-03-06
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB');

INSERT INTO ncmodule VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'snmp-usm',
    'urn:ietf:params:xml:ns:yang:smiv2:SNMP-USM-DH-OBJECTS-MIB',
    'Excite@Home',
    'The management information definitions for providing forward
secrecy for key changes for the usmUserTable, and for providing a
m...',
    'The management information definitions for providing forward
secrecy for key changes for the usmUserTable, and for providing a
method for \'kickstarting\' access to the agent via a Diffie-Helman
key agreement.',
    '',
    'Author: Mike StJohns
Postal: Excite@Home
	450 Broadway
	Redwood City, CA 94063
Email:  stjohns@corp.home.net
Phone:  +1-650-556-5368',
    'Initial version published as RFC 2786.',
    '/xsd/SNMP-USM-DH-OBJECTS-MIB_2000-03-06.xsd',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06', 
    '/src/SNMP-USM-DH-OBJECTS-MIB_2000-03-06.yang',
    '/home/andy/swdev/trunk/netconf/modules/./ietf/SNMP-USM-DH-OBJECTS-MIB.yang',
    'SNMP-USM-DH-OBJECTS-MIB.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'DHKeyChange', '48',
    'Upon initialization, or upon creation of a row containing an
object of this type, and after any successful SET of this value, a
GET of this value returns \'y\' where y = g^xa MOD p, and where g is
the base from usmDHParameters, p is the prime from
usmDHParameters, and xa is a new random integer selected by the
agent in the interval 2^(l-1) <= xa < 2^l < p-1.  \'l\' is the
optional privateValueLength from usmDHParameters in bits.  If \'l\'
is omitted, then xa (and xr below) is selected in the interval 0
<= xa < p-1.  y is expressed as an OCTET STRING \'PV\' of length \'k\'
which satisfies

	  k
    y =  SUM   2^(8(k-i)) PV\'i
	 i=1

    where PV1,...,PVk are the octets of PV from first to last, and
    where PV1 <> 0.

A successful SET consists of the value \'y\' expressed as an OCTET
STRING as above concatenated with the value \'z\'(expressed as an
OCTET STRING in the same manner as y) where z = g^xr MOD p, where
g, p and l are as above, and where xr is a new random integer
selected by the manager in the interval 2^(l-1) <= xr < 2^l <
p-1. A SET to an object of this type will fail with the error
wrongValue if the current \'y\' does not match the \'y\' portion of
the value of the varbind for the object. (E.g. GET yout, SET
concat(yin, z), yout <> yin).

Note that the private values xa and xr are never transmitted from
manager to device or vice versa, only the values y and z.
Obviously, these values must be retained until a successful SET on
the associated object.

The shared secret \'sk\' is calculated at the agent as sk = z^xa MOD
p, and at the manager as sk = y^xr MOD p.

Each object definition of this type MUST describe how to map from
the shared secret \'sk\' to the operational key value used by the
protocols and operations related to the object.  In general, if n
bits of key are required, the author suggests using the n
right-most bits of the shared secret as the operational key value.',
    '-- Diffie-Hellman Key-Agreement Standard, PKCS #3;
RSA Laboratories, November 1993',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06#DHKeyChange.48', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'usmDHPublicObjects', '97',
    '/usmDHPublicObjects',
    '',
    '',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06#usmDHPublicObjects.97', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'usmDHParameters',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'usmDHParameters', '99',
    '/usmDHPublicObjects/usmDHParameters',
    'The public Diffie-Hellman parameters for doing a Diffie-Hellman
key agreement for this device.  This is encoded as an ASN.1
DHParameter per PKCS #3, section 9.  E.g.

    DHParameter ::= SEQUENCE {
       prime   INTEGER,   -- p
       base    INTEGER,   -- g
       privateValueLength  INTEGER OPTIONAL }


Implementors are encouraged to use either the values from
Oakley Group 1  or the values of from Oakley Group 2 as specified
in RFC-2409, The Internet Key Exchange, Section 6.1, 6.2 as the
default for this object.  Other values may be used, but the
security properties of those values MUST be well understood and
MUST meet the requirements of PKCS #3 for the selection of
Diffie-Hellman primes.

    In addition, any time usmDHParameters changes, all values of
type DHKeyChange will change and new random numbers MUST be
generated by the agent for each DHKeyChange object.',
    '-- Diffie-Hellman Key-Agreement Standard, PKCS #3,
RSA Laboratories, November 1993
-- The Internet Key Exchange, RFC 2409, November 1998,
Sec 6.1, 6.2',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06#usmDHParameters.99', 
    'leaf', 
    '/usmDHPublicObjects',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'usmDHKickstartGroup', '135',
    '/usmDHKickstartGroup',
    '',
    '',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06#usmDHKickstartGroup.135', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'usmDHKickstartEntry',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'usmDHKickstartEntry', '140',
    '/usmDHKickstartGroup/usmDHKickstartEntry',
    'An entry in the usmDHKickstartTable.  The agent SHOULD either
delete this entry or mark it as inactive upon a successful SET of
any of the KeyChange-typed objects in the usmUserEntry or upon a
successful SET of any of the DHKeyChange-typed objects in the
usmDhKeyChangeEntry where the related usmSecurityName (e.g. row of
usmUserTable or row of ushDhKeyChangeTable) equals this entry\'s
usmDhKickstartSecurityName.  In otherwords, once you\'ve changed
one or more of the keys for a row in usmUserTable with a
particular security name, the row in this table with that same
security name is no longer useful or meaningful.',
    '',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06#usmDHKickstartEntry.140', 
    'list', 
    '/usmDHKickstartGroup',
    '0',
    '1',
    '',
    '',
    'usmDHKickstartIndex usmDHKickstartMyPublic usmDHKickstartMgrPublic usmDHKickstartSecurityName',
    '',
    'usmDHKickstartIndex',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'usmDHKickstartIndex', '157',
    '/usmDHKickstartGroup/usmDHKickstartEntry/usmDHKickstartIndex',
    'Index value for this row.',
    '',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06#usmDHKickstartIndex.157', 
    'leaf', 
    '/usmDHKickstartGroup/usmDHKickstartEntry',
    '0',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'usmDHKickstartMyPublic', '167',
    '/usmDHKickstartGroup/usmDHKickstartEntry/usmDHKickstartMyPublic',
    'The agent\'s Diffie-Hellman public value for this row.  At
initialization, the agent generates a random number and derives
its public value from that number.  This public value is published
here.  This public value \'y\' equals g^r MOD p where g is the from
the set of Diffie-Hellman parameters, p is the prime from those
parameters, and r is a random integer selected by the agent in the
interval 2^(l-1) <= r < p-1 < 2^l.  If l is unspecified, then r is
a random integer selected in the interval 0 <= r < p-1

The public value is expressed as an OCTET STRING \'PV\' of length
\'k\' which satisfies

	  k
    y =  SUM   2^(8(k-i)) PV\'i
	 i = 1

    where PV1,...,PVk are the octets of PV from first to last, and
    where PV1 != 0.


The following DH parameters (Oakley group #2, RFC 2409, sec 6.1,
6.2) are used for this object:

g = 2
p = FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1
    29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD
    EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245
    E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED
    EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE65381
    FFFFFFFF FFFFFFFF
l=1024',
    '-- Diffie-Hellman Key-Agreement Standard, PKCS#3v1.4;
RSA Laboratories, November 1993
-- The Internet Key Exchange, RFC2409;
Harkins, D., Carrel, D.; November 1998',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06#usmDHKickstartMyPublic.167', 
    'leaf', 
    '/usmDHKickstartGroup/usmDHKickstartEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'usmDHKickstartMgrPublic', '210',
    '/usmDHKickstartGroup/usmDHKickstartEntry/usmDHKickstartMgrPublic',
    'The manager\'s Diffie-Hellman public value for this row.  Note
that this value is not set via the SNMP agent, but may be set via
some out of band method, such as the device\'s configuration file.
The manager calculates this value in the same manner and using the
same parameter set as the agent does.  E.g. it selects a random
number \'r\', calculates y = g^r mod p and provides \'y\' as the
public number expressed as an OCTET STRING.  See
usmDHKickstartMyPublic for details.

When this object is set with a valid value during initialization,
a row is created in the usmUserTable with the following values:

usmUserEngineID             localEngineID
usmUserName                 [value of usmDHKickstartSecurityName]
usmUserSecurityName         [value of usmDHKickstartSecurityName]
usmUserCloneFrom            ZeroDotZero
usmUserAuthProtocol         usmHMACMD5AuthProtocol
usmUserAuthKeyChange        -- derived from set value
usmUserOwnAuthKeyChange     -- derived from set value
usmUserPrivProtocol         usmDESPrivProtocol
usmUserPrivKeyChange        -- derived from set value
usmUserOwnPrivKeyChange     -- derived from set value
usmUserPublic               \'\'
usmUserStorageType          permanent
usmUserStatus               active

A shared secret \'sk\' is calculated at the agent as sk =
mgrPublic^r mod p where r is the agents random number and p is the
DH prime from the common parameters.  The underlying privacy key
for this row is derived from sk by applying the key derivation
function PBKDF2 defined in PKCS#5v2.0 with a salt of 0xd1310ba6,
and iterationCount of 500, a keyLength of 16 (for
usmDESPrivProtocol), and a prf (pseudo random function) of
\'id-hmacWithSHA1\'.  The underlying authentication key for this row
is derived from sk by applying the key derivation function PBKDF2
with a salt of 0x98dfb5ac , an interation count of 500, a
keyLength of 16 (for usmHMAC5AuthProtocol), and a prf of
\'id-hmacWithSHA1\'.  Note: The salts are the first two words in the
ks0 [key schedule 0] of the BLOWFISH cipher from \'Applied
Cryptography\' by Bruce Schnier - they could be any relatively
random string of bits.

The manager can use its knowledge of its own random number and the
agent\'s public value to kickstart its access to the agent in a
secure manner.  Note that the security of this approach is
directly related to the strength of the authorization security of
the out of band provisioning of the managers public value
(e.g. the configuration file), but is not dependent at all on the
strength of the confidentiality of the out of band provisioning
data.',
    '-- Password-Based Cryptography Standard, PKCS#5v2.0;
RSA Laboratories, March 1999
-- Applied Cryptography, 2nd Ed.; B. Schneier,
Counterpane Systems; John Wiley & Sons, 1996',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06#usmDHKickstartMgrPublic.210', 
    'leaf', 
    '/usmDHKickstartGroup/usmDHKickstartEntry',
    '0',
    '1',
    'binary',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'SNMP-USM-DH-OBJECTS-MIB', 'SNMP-USM-DH-OBJECTS-MIB', '2000-03-06', 'usmDHKickstartSecurityName', '272',
    '/usmDHKickstartGroup/usmDHKickstartEntry/usmDHKickstartSecurityName',
    'The usmUserName and usmUserSecurityName in the usmUserTable
associated with this row.  This is provided in the same manner and
at the same time as the usmDHKickstartMgrPublic value -
e.g. possibly manually, or via the device\'s configuration file.',
    '',
    '/modules/SNMP-USM-DH-OBJECTS-MIB/2000-03-06#usmDHKickstartSecurityName.272', 
    'leaf', 
    '/usmDHKickstartGroup/usmDHKickstartEntry',
    '0',
    '1',
    'SnmpAdminString',
    '',
    '',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/netconfcentral/ncx.yang
# module: ncx
# version: 2008-04-16
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'ncx');

INSERT INTO ncmodule VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'ncx',
    'http://netconfcentral.com/ncx',
    'Netconf Central',
    'This module contains definitions for Netconf Central extensions.
These elements will be present in appinfo elements,
used in YAN...',
    'This module contains definitions for Netconf Central extensions.
These elements will be present in appinfo elements,
used in YANG or NCX to XSD translation.',
    '',
    'Andy Bierman <andy at netconfcentral.com>',
    'Added metadata and rpc-type extensions.',
    '/xsd/ncx_2008-04-16.xsd',
    '/modules/ncx/2008-04-16', 
    '/src/ncx_2008-04-16.yang',
    '/home/andy/swdev/trunk/netconf/modules/netconfcentral/ncx.yang',
    'ncx.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'reference', '182',
    '',
    '',
    '/modules/ncx/2008-04-16#reference.182', 
    'reference',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'belongs-to', '32',
    '/belongs-to',
    'Contains the module name value for a belongs-to-stmt.
Will be present in appinfo for a YANG submodule.',
    '',
    '/modules/ncx/2008-04-16#belongs-to.32', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'case-name', '39',
    '/case-name',
    'Contains the identifier-str value for a YANG case name.
Will be present in appinfo for all choice case definitions.',
    '',
    '/modules/ncx/2008-04-16#case-name.39', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'choice-name', '46',
    '/choice-name',
    'Contains the identifier-str value for a YANG choice name.
Will be present in appinfo for all choice object definitions.',
    '',
    '/modules/ncx/2008-04-16#choice-name.46', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'config', '53',
    '/config',
    'Contains the value from the config-stmt.
Will be present in appinfo for top-level objects
or if config-stmt is present in the object definition.',
    '',
    '/modules/ncx/2008-04-16#config.53', 
    'leaf', 
    '',
    '1',
    '1',
    'boolean',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'contact', '61',
    '/contact',
    'Contains the value from the contact-stmt.
Will be present in appinfo for the module.
if defined in the module.',
    '',
    '/modules/ncx/2008-04-16#contact.61', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'default', '69',
    '/default',
    'Contains the value from the default-stmt.
Will be present in appinfo for a typedef that includes
a default-stmt.',
    '',
    '/modules/ncx/2008-04-16#default.69', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'mandatory', '77',
    '/mandatory',
    'Contains the value from the mandatory-stmt.
Will be present in appinfo if mandatory-stmt is 
present in the object definition.',
    '',
    '/modules/ncx/2008-04-16#mandatory.77', 
    'leaf', 
    '',
    '1',
    '1',
    'boolean',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'min-elements', '86',
    '/min-elements',
    'Contains the value from the min-elements-stmt.
Will be present in appinfo for a list or leaf-list
object, if the min-elements-stmt is present
in the object definition.',
    '',
    '/modules/ncx/2008-04-16#min-elements.86', 
    'leaf', 
    '',
    '1',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'max-elements', '96',
    '/max-elements',
    'Contains the value from the max-elements-stmt.
Will be present in appinfo for a list or leaf-list
object, if the max-elements-stmt is present
in the object definition.',
    '',
    '/modules/ncx/2008-04-16#max-elements.96', 
    'leaf', 
    '',
    '1',
    '1',
    'union',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'must', '110',
    '/must',
    'Contains the fields from one must-stmt.  Will be present
in appinfo for each must-stmt defined within an object.',
    '',
    '/modules/ncx/2008-04-16#must.110', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'xpath description referenceerror-app-tag error-message',
    '',
    '',
    '1', '1', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'xpath', '115',
    '/must/xpath',
    'The xpath statement specifying the system conditions
that must be true for a valid configuration.',
    '',
    '/modules/ncx/2008-04-16#xpath.115', 
    'leaf', 
    '/must',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '1', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'description', '123',
    '/must/description',
    'Contains the description-stmt value from the must-stmt,
if present.',
    '',
    '/modules/ncx/2008-04-16#description.123', 
    'leaf', 
    '/must',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'reference', '183',
    '/must/reference',
    'Contains information from the reference-stmt.  Will
be present in appinfo for objects which contain a
reference-stmt.',
    '',
    '/modules/ncx/2008-04-16#reference.183', 
    'container', 
    '/must',
    '0',
    '1',
    '',
    '',
    'text url',
    '',
    '',
    '1', '1', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'text', '189',
    '/must/reference/text',
    'Value from the reference-stmt.',
    '',
    '/modules/ncx/2008-04-16#text.189', 
    'leaf', 
    '/must/reference',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '1', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'url', '195',
    '/must/reference/url',
    'URL for the specified reference.  Will be present
if the \'text\' field begins with \'RFC xxxx\' or \'draft-\'',
    '',
    '/modules/ncx/2008-04-16#url.195', 
    'leaf', 
    '/must/reference',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'error-app-tag', '132',
    '/must/error-app-tag',
    'Contains the error-app-tag-stmt value from the must-stmt,
if present.',
    '',
    '/modules/ncx/2008-04-16#error-app-tag.132', 
    'leaf', 
    '/must',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'error-message', '139',
    '/must/error-message',
    'Contains the error-message-stmt value from the must-stmt,
if present.',
    '',
    '/modules/ncx/2008-04-16#error-message.139', 
    'leaf', 
    '/must',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'ordered-by', '147',
    '/ordered-by',
    'Contains the value from the ordered-by.
Will be present in appinfo for all list and leaf-list
object definitions.',
    '',
    '/modules/ncx/2008-04-16#ordered-by.147', 
    'leaf', 
    '',
    '1',
    '1',
    'enum',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'organization', '158',
    '/organization',
    'Contains the value from the organization-stmt.
Will be present in appinfo if oraganization-stmt is 
present in the module.',
    '',
    '/modules/ncx/2008-04-16#organization.158', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'path', '166',
    '/path',
    'Contains the path-stmt Xpath expression value for a keyref.
Will be present in appinfo for all keyref typedefs, and
inline type-stmts for leafs and leaf-lists.',
    '',
    '/modules/ncx/2008-04-16#path.166', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'position', '174',
    '/position',
    'Contains the position-stmt value for a bit definition.
Will be present in appinfo for all \'bits\' typedefs, and
inline type-stmts for leafs and leaf-lists.',
    '',
    '/modules/ncx/2008-04-16#position.174', 
    'leaf', 
    '',
    '1',
    '1',
    'uint32',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'reference', '183',
    '/reference',
    'Contains information from the reference-stmt.  Will
be present in appinfo for objects which contain a
reference-stmt.',
    '',
    '/modules/ncx/2008-04-16#reference.183', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'text url',
    '',
    '',
    '1', '1', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'text', '189',
    '/reference/text',
    'Value from the reference-stmt.',
    '',
    '/modules/ncx/2008-04-16#text.189', 
    'leaf', 
    '/reference',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '1', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'url', '195',
    '/reference/url',
    'URL for the specified reference.  Will be present
if the \'text\' field begins with \'RFC xxxx\' or \'draft-\'',
    '',
    '/modules/ncx/2008-04-16#url.195', 
    'leaf', 
    '/reference',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'revision', '206',
    '/revision',
    'Contains the fields from one revision-stmt.  Will be present
in appinfo for each revision-stmt defined within the module.',
    '',
    '/modules/ncx/2008-04-16#revision.206', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'version description',
    '',
    '',
    '1', '1', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'version', '211',
    '/revision/version',
    'Contains the date string value from the revision-stmt.',
    '',
    '/modules/ncx/2008-04-16#version.211', 
    'leaf', 
    '/revision',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '1', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'description', '218',
    '/revision/description',
    'Contains the description-stmt value from the revision-stmt.',
    '',
    '/modules/ncx/2008-04-16#description.218', 
    'leaf', 
    '/revision',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '1', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'rpc-output', '226',
    '/rpc-output',
    'Contains the XSD type name value for the RPC output data
for one RPC method.  Will be present in appinfo for 
all rpc definitions which contain an output-stmt.',
    '',
    '/modules/ncx/2008-04-16#rpc-output.226', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'source', '234',
    '/source',
    'Contains the complete filespec of the source file used
for the XSD translation. Will be present in the appinfo
for the module header.',
    '',
    '/modules/ncx/2008-04-16#source.234', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'units', '242',
    '/units',
    'Contains the units-stmt value for a type or leaf.
Will be present in appinfo for typedefs, and 
inline type-stmts for leafs and leaf-lists,
which contain a units-stmt.',
    '',
    '/modules/ncx/2008-04-16#units.242', 
    'leaf', 
    '',
    '1',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'value', '252',
    '/value',
    'Contains the value-stmt value for an enum definition.
Will be present in appinfo for all \'enumeration\' 
typedefs, and inline type-stmts for leafs and leaf-lists.',
    '',
    '/modules/ncx/2008-04-16#value.252', 
    'leaf', 
    '',
    '1',
    '1',
    'int32',
    '',
    '',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncextension VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'no-duplicates', '260',
    'Used to indicate that no duplicate values are allowed
in a leaf-list.',
    '',
    '/modules/ncx/2008-04-16#no-duplicates.260', 
    '', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncextension VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'metadata', '266',
    'Used to define an XML attribute to be associated with a
data-def-stmt node.',
    '',
    '/modules/ncx/2008-04-16#metadata.266', 
    'syntax-string', '1',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncextension VALUES (
    '', 'ncx', 'ncx', '2008-04-16', 'rpc-type', '275',
    'Used to classify an RPC method. Used within an rpc-stmt node.
Suggested argument values:
  config, monitor, exec, debug, other',
    '',
    '/modules/ncx/2008-04-16#rpc-type.275', 
    'type-string', '1',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/netconfcentral/xsd.yang
# module: xsd
# version: 2007-12-06
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'xsd');

INSERT INTO ncmodule VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'xsd',
    'http://www.w3.org/2001/XMLSchema',
    'YANG Language Design Team',
    'XSD derived types for usage in YANG.',
    'XSD derived types for usage in YANG.',
    '',
    'yang@ietf.org',
    'Initial revision.  There is more work to do
filling in patterns for some of the string types',
    '/xsd/xsd_2007-12-06.xsd',
    '/modules/xsd/2007-12-06', 
    '/src/xsd_2007-12-06.yang',
    '/home/andy/swdev/trunk/netconf/modules/netconfcentral/xsd.yang',
    'xsd.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'normalizedString', '25',
    'XSD normalized string',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#normalizedString',
    '/modules/xsd/2007-12-06#normalizedString.25', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'token', '34',
    'XSD token string',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#token',
    '/modules/xsd/2007-12-06#token.34', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'base64Binary', '43',
    'XSD base64 binary encoded string',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#base64Binary',
    '/modules/xsd/2007-12-06#base64Binary.43', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'hexBinary', '52',
    'XSD hex binary encoded string',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#hexBinary',
    '/modules/xsd/2007-12-06#hexBinary.52', 'binary', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'integer', '61',
    'XSD unbounded integer type. 
This cannot be given a range like a number.
This pattern does not supoort string representations
of numbers, such as one two three',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#integer',
    '/modules/xsd/2007-12-06#integer.61', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'positiveInteger', '75',
    'XSD unbounded positive integer.
This cannot be given a range like a number.
This pattern does not supoort string representations
of numbers, such as one two three',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#positiveInteger',
    '/modules/xsd/2007-12-06#positiveInteger.75', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'negativeInteger', '89',
    'XSD unbounded negative integer.
This cannot be given a range like a number.
This pattern does not supoort string representations
of numbers, such as one two three',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#negativeInteger',
    '/modules/xsd/2007-12-06#negativeInteger.89', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'nonNegativeInteger', '103',
    'XSD unbounded non-negative integer.
This cannot be given a range like a number.
This pattern does not supoort string representations
of numbers, such as one two three',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#nonNegativeInteger',
    '/modules/xsd/2007-12-06#nonNegativeInteger.103', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'nonPositiveInteger', '117',
    'XSD unbounded non-positive integer.
This cannot be given a range like a number.
This pattern does not supoort string representations
of numbers, such as one two three',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#nonPositiveInteger',
    '/modules/xsd/2007-12-06#nonPositiveInteger.117', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'long', '131',
    'XSD 64 bit signed integer.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#long',
    '/modules/xsd/2007-12-06#long.131', 'int64', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'unsignedLong', '140',
    'XSD 64 bit unsigned integer.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#unsignedLong',
    '/modules/xsd/2007-12-06#unsignedLong.140', 'uint64', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'int', '149',
    'XSD 32 bit signed integer.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#int',
    '/modules/xsd/2007-12-06#int.149', 'int32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'unsignedInt', '158',
    'XSD 32 bit unsigned integer.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#unsignedInt',
    '/modules/xsd/2007-12-06#unsignedInt.158', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'short', '167',
    'XSD 16 bit signed integer.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#short',
    '/modules/xsd/2007-12-06#short.167', 'int16', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'unsignedShort', '176',
    'XSD 16 bit unsigned integer.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#unsignedShort',
    '/modules/xsd/2007-12-06#unsignedShort.176', 'uint16', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'byte', '185',
    'XSD 8 bit signed integer.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#byte',
    '/modules/xsd/2007-12-06#byte.185', 'int8', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'unsignedByte', '194',
    'XSD 8 bit unsigned integer.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#unsignedByte',
    '/modules/xsd/2007-12-06#unsignedByte.194', 'uint8', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'decimal', '203',
    'XSD decimal data type.
[To do: not sure if this is a bounded real number
 or an unbounded real number.].',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#decimal',
    '/modules/xsd/2007-12-06#decimal.203', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'float', '214',
    'XSD 32 bit floating point number.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#float',
    '/modules/xsd/2007-12-06#float.214', 'float32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'double', '223',
    'XSD 64 bit floating point number.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#double',
    '/modules/xsd/2007-12-06#double.223', 'float64', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'duration', '236',
    'XSD duration string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#duration',
    '/modules/xsd/2007-12-06#duration.236', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'dateTime', '245',
    'XSD date and time string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#dateTime',
    '/modules/xsd/2007-12-06#dateTime.245', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'date', '256',
    'XSD date string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#date',
    '/modules/xsd/2007-12-06#date.256', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'time', '265',
    'XSD time string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#time',
    '/modules/xsd/2007-12-06#time.265', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'gYear', '274',
    'XSD year string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#gYear',
    '/modules/xsd/2007-12-06#gYear.274', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'gYearMonth', '283',
    'XSD year and month string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#gYearMonth',
    '/modules/xsd/2007-12-06#gYearMonth.283', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'gMonth', '292',
    'XSD month string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#gMonth',
    '/modules/xsd/2007-12-06#gMonth.292', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'gMonthDay', '301',
    'XSD month and day string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#gMonthDay',
    '/modules/xsd/2007-12-06#gMonthDay.301', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'gDay', '310',
    'XSD day string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#gDay',
    '/modules/xsd/2007-12-06#gDay.310', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'Name', '319',
    'XSD name string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#Name',
    '/modules/xsd/2007-12-06#Name.319', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'QName', '328',
    'XSD namespace-qualified name string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#QName',
    '/modules/xsd/2007-12-06#QName.328', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'NCName', '337',
    'XSD not-namespace-qualified name string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#NCName',
    '/modules/xsd/2007-12-06#NCName.337', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'anyURI', '348',
    'XSD universal resource identifier string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#anyURI',
    '/modules/xsd/2007-12-06#anyURI.348', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'language', '357',
    'XSD language identifier string type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#language',
    '/modules/xsd/2007-12-06#language.357', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'ID', '366',
    'XSD ID attribute type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#ID',
    '/modules/xsd/2007-12-06#ID.366', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'IDREF', '375',
    'XSD IDREF attribute type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#IDREF',
    '/modules/xsd/2007-12-06#IDREF.375', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'IDREFS', '384',
    'XSD IDREFS attribute type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#IDREFS',
    '/modules/xsd/2007-12-06#IDREFS.384', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'ENTITY', '393',
    'XSD ENTITY attribute type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#ENTITY',
    '/modules/xsd/2007-12-06#ENTITY.393', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'ENTITIES', '402',
    'XSD ENTITIES attribute type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#ENTITIES',
    '/modules/xsd/2007-12-06#ENTITIES.402', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'NOTATION', '411',
    'XSD NOTATION attribute type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#NOTATION',
    '/modules/xsd/2007-12-06#NOTATION.411', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'NMTOKEN', '420',
    'XSD NMTOKEN attribute type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#NMTOKEN',
    '/modules/xsd/2007-12-06#NMTOKEN.420', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'xsd', 'xsd', '2007-12-06', 'NMTOKENS', '429',
    'XSD NMTOKENS attribute type.',
    'http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html#NMTOKENS',
    '/modules/xsd/2007-12-06#NMTOKENS.429', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./netconfcentral/sessions.yang
# module: sessions
# version: 2008-04-17
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'sessions');

INSERT INTO ncmodule VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'ses',
    'http://netconfcentral.com/ns/sessions',
    'Netconf Central',
    'This module contains objects for monitoring NETCONF
session statistics and state info.',
    'This module contains objects for monitoring NETCONF
session statistics and state info.',
    '',
    'Andy Bierman <support@netconfcentral.com>',
    'Remove NCX version and rename ysessions to sessions.',
    '/xsd/sessions_2008-04-17.xsd',
    '/modules/sessions/2008-04-17', 
    '/src/sessions_2008-04-17.yang',
    '/home/andy/swdev/trunk/netconf/modules/./netconfcentral/sessions.yang',
    'sessions.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'UserName', '32',
    'NETCONF Session User name string',
    '',
    '/modules/sessions/2008-04-17#UserName.32', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncgrouping VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'SessionStats', '42',
    'The set of session statistics collected by the agent',
    '',
    '/modules/sessions/2008-04-17#SessionStats.42', 
    'inBytes inDropBytes inMsgs inErrMsgs outBytes outMsgs outErrMsgs',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'netconfd', '107',
    '/netconfd',
    'The sessionInfo container is implemented as a child
of the top-level element <netconfd>.',
    '',
    '/modules/sessions/2008-04-17#netconfd.107', 
    'container', 
    '',
    '1',
    '1',
    '',
    '',
    'sessionInfo',
    '',
    '',
    '1', '0', '1',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'sessionInfo', '112',
    '/netconfd/sessionInfo',
    'Read-only Session Statistics and Information',
    '',
    '/modules/sessions/2008-04-17#sessionInfo.112', 
    'container', 
    '/netconfd',
    '0',
    '1',
    '',
    '',
    'activeSessions closedSessions failedSessions sessionTotals sessions',
    '',
    '',
    '0', '0', '2',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'activeSessions', '118',
    '/netconfd/sessionInfo/activeSessions',
    'Current number of open NETCONF sessions.',
    '',
    '/modules/sessions/2008-04-17#activeSessions.118', 
    'leaf', 
    '/netconfd/sessionInfo',
    '0',
    '1',
    'zero-based-counter32',
    '',
    '',
    '0',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'closedSessions', '124',
    '/netconfd/sessionInfo/closedSessions',
    'Total number of closed NETCONF sessions.',
    '',
    '/modules/sessions/2008-04-17#closedSessions.124', 
    'leaf', 
    '/netconfd/sessionInfo',
    '0',
    '1',
    'zero-based-counter32',
    '',
    '',
    '0',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'failedSessions', '130',
    '/netconfd/sessionInfo/failedSessions',
    'Total number of failed NETCONF sessions, which
failed to be established for any reason.',
    '',
    '/modules/sessions/2008-04-17#failedSessions.130', 
    'leaf', 
    '/netconfd/sessionInfo',
    '0',
    '1',
    'zero-based-counter32',
    '',
    '',
    '0',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'sessionTotals', '137',
    '/netconfd/sessionInfo/sessionTotals',
    'Running global statistics totals aggregating
all open and closed session statistics totals',
    '',
    '/modules/sessions/2008-04-17#sessionTotals.137', 
    'container', 
    '/netconfd/sessionInfo',
    '0',
    '1',
    '',
    '',
    'inBytes inDropBytes inMsgs inErrMsgs outBytes outMsgs outErrMsgs',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'inBytes', '46',
    '/netconfd/sessionInfo/sessionTotals/inBytes',
    'The total number of bytes contained in NETCONF PDUs
received on a particular session.',
    '',
    '/modules/sessions/2008-04-17#inBytes.46', 
    'leaf', 
    '/netconfd/sessionInfo/sessionTotals',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'inDropBytes', '54',
    '/netconfd/sessionInfo/sessionTotals/inDropBytes',
    'The total number of bytes dropped (and therefore not received)
on a particular session.',
    '',
    '/modules/sessions/2008-04-17#inDropBytes.54', 
    'leaf', 
    '/netconfd/sessionInfo/sessionTotals',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'inMsgs', '62',
    '/netconfd/sessionInfo/sessionTotals/inMsgs',
    'The total number of NETCONF PDUs received
on a particular session without errors.',
    '',
    '/modules/sessions/2008-04-17#inMsgs.62', 
    'leaf', 
    '/netconfd/sessionInfo/sessionTotals',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'inErrMsgs', '70',
    '/netconfd/sessionInfo/sessionTotals/inErrMsgs',
    'The total number of NETCONF PDUs received
on a particular session with errors',
    '',
    '/modules/sessions/2008-04-17#inErrMsgs.70', 
    'leaf', 
    '/netconfd/sessionInfo/sessionTotals',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'outBytes', '78',
    '/netconfd/sessionInfo/sessionTotals/outBytes',
    'The total number of bytes contained in NETCONF PDUs
transmitted on a particular session.',
    '',
    '/modules/sessions/2008-04-17#outBytes.78', 
    'leaf', 
    '/netconfd/sessionInfo/sessionTotals',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'outMsgs', '86',
    '/netconfd/sessionInfo/sessionTotals/outMsgs',
    'The total number of NETCONF PDUs transmitted
on a particular session which did not contain any 
<rpc-error> elements.',
    '',
    '/modules/sessions/2008-04-17#outMsgs.86', 
    'leaf', 
    '/netconfd/sessionInfo/sessionTotals',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'outErrMsgs', '95',
    '/netconfd/sessionInfo/sessionTotals/outErrMsgs',
    'The total number of NETCONF PDUs transmitted
on a particular session which contained one or more
<rpc-error> elements.',
    '',
    '/modules/sessions/2008-04-17#outErrMsgs.95', 
    'leaf', 
    '/netconfd/sessionInfo/sessionTotals',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'sessions', '144',
    '/netconfd/sessionInfo/sessions',
    'Container for active session information and statistics.
There is one entry for each session which is active 
or starting up.',
    '',
    '/modules/sessions/2008-04-17#sessions.144', 
    'container', 
    '/netconfd/sessionInfo',
    '0',
    '1',
    '',
    '',
    'session',
    '',
    '',
    '0', '0', '3',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'session', '150',
    '/netconfd/sessionInfo/sessions/session',
    'Per-Session Information Block',
    '',
    '/modules/sessions/2008-04-17#session.150', 
    'list', 
    '/netconfd/sessionInfo/sessions',
    '0',
    '1',
    '',
    '',
    'id startTime userName state locks stats',
    '',
    'id',
    '0', '0', '4',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'id', '155',
    '/netconfd/sessionInfo/sessions/session/id',
    'The session ID assigned by the agent for the session.',
    '',
    '/modules/sessions/2008-04-17#id.155', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session',
    '0',
    '1',
    'SessionId',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'startTime', '161',
    '/netconfd/sessionInfo/sessions/session/startTime',
    'The system time when this session was first opened.',
    '',
    '/modules/sessions/2008-04-17#startTime.161', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session',
    '0',
    '1',
    'date-and-time',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'userName', '167',
    '/netconfd/sessionInfo/sessions/session/userName',
    'The user name associated with this session.',
    '',
    '/modules/sessions/2008-04-17#userName.167', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session',
    '0',
    '1',
    'UserName',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'state', '173',
    '/netconfd/sessionInfo/sessions/session/state',
    'A textual representation of the current session state.',
    '',
    '/modules/sessions/2008-04-17#state.173', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'locks', '179',
    '/netconfd/sessionInfo/sessions/session/locks',
    'Container for the list of names of the locked 
configurations',
    '',
    '/modules/sessions/2008-04-17#locks.179', 
    'container', 
    '/netconfd/sessionInfo/sessions/session',
    '0',
    '1',
    '',
    '',
    'config',
    '',
    '',
    '0', '1', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'config', '187',
    '/netconfd/sessionInfo/sessions/session/locks/config',
    'Each <config> leaf contains the name of a 
configuration that is currently locked by 
this session.',
    '',
    '/modules/sessions/2008-04-17#config.187', 
    'leaf-list', 
    '/netconfd/sessionInfo/sessions/session/locks',
    '0',
    '1',
    'string',
    '',
    '',
    '',
    '',
    '0', '1', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'stats', '197',
    '/netconfd/sessionInfo/sessions/session/stats',
    'The set of statistics collected for this session.',
    '',
    '/modules/sessions/2008-04-17#stats.197', 
    'container', 
    '/netconfd/sessionInfo/sessions/session',
    '0',
    '1',
    '',
    '',
    'inBytes inDropBytes inMsgs inErrMsgs outBytes outMsgs outErrMsgs',
    '',
    '',
    '0', '0', '5',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'inBytes', '46',
    '/netconfd/sessionInfo/sessions/session/stats/inBytes',
    'The total number of bytes contained in NETCONF PDUs
received on a particular session.',
    '',
    '/modules/sessions/2008-04-17#inBytes.46', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session/stats',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'inDropBytes', '54',
    '/netconfd/sessionInfo/sessions/session/stats/inDropBytes',
    'The total number of bytes dropped (and therefore not received)
on a particular session.',
    '',
    '/modules/sessions/2008-04-17#inDropBytes.54', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session/stats',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'inMsgs', '62',
    '/netconfd/sessionInfo/sessions/session/stats/inMsgs',
    'The total number of NETCONF PDUs received
on a particular session without errors.',
    '',
    '/modules/sessions/2008-04-17#inMsgs.62', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session/stats',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'inErrMsgs', '70',
    '/netconfd/sessionInfo/sessions/session/stats/inErrMsgs',
    'The total number of NETCONF PDUs received
on a particular session with errors',
    '',
    '/modules/sessions/2008-04-17#inErrMsgs.70', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session/stats',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'outBytes', '78',
    '/netconfd/sessionInfo/sessions/session/stats/outBytes',
    'The total number of bytes contained in NETCONF PDUs
transmitted on a particular session.',
    '',
    '/modules/sessions/2008-04-17#outBytes.78', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session/stats',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'outMsgs', '86',
    '/netconfd/sessionInfo/sessions/session/stats/outMsgs',
    'The total number of NETCONF PDUs transmitted
on a particular session which did not contain any 
<rpc-error> elements.',
    '',
    '/modules/sessions/2008-04-17#outMsgs.86', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session/stats',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncobject VALUES (
    '', 'sessions', 'sessions', '2008-04-17', 'outErrMsgs', '95',
    '/netconfd/sessionInfo/sessions/session/stats/outErrMsgs',
    'The total number of NETCONF PDUs transmitted
on a particular session which contained one or more
<rpc-error> elements.',
    '',
    '/modules/sessions/2008-04-17#outErrMsgs.95', 
    'leaf', 
    '/netconfd/sessionInfo/sessions/session/stats',
    '0',
    '1',
    'zero-based-counter64',
    '',
    '',
    '0',
    '',
    '0', '0', '6',
    '0', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/./yang/ieee-types.yang
# module: ieee-types
# version: 2007-10-02
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'ieee-types');

INSERT INTO ncmodule VALUES (
    '', 'ieee-types', 'ieee-types', '2007-10-02', 'ieee',
    'urn:ietf:params:xml:ns:yang:ieee-types',
    'YANG Language Design Team',
    'This module contains standard derived YANG types
for IEEE 802 addresses and related things.',
    'This module contains standard derived YANG types
for IEEE 802 addresses and related things.',
    '',
    'Martin Bjorklund (Editor) <mbj@tail-f.com>',
    'Initial revision.',
    '/xsd/ieee-types_2007-10-02.xsd',
    '/modules/ieee-types/2007-10-02', 
    '/src/ieee-types_2007-10-02.yang',
    '/home/andy/swdev/trunk/netconf/modules/./yang/ieee-types.yang',
    'ieee-types.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ieee-types', 'ieee-types', '2007-10-02', 'mac-address', '30',
    'The mac-address type represents an 802 MAC address
represented in the `canonical\' order defined by 
IEEE 802.1a, i.e., as if it were transmitted least 
significant bit first, even though 802.5 (in contrast
to other 802.x protocols) requires MAC addresses to 
be transmitted most significant bit first.',
    'RFC 2579 STD 58',
    '/modules/ieee-types/2007-10-02#mac-address.30', 'string', 'phys-address', 
    'yang-types', '268', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ieee-types', 'ieee-types', '2007-10-02', 'bridgeid', '49',
    'The bridgeid type represents identifers that uniquely
identify a bridge.  Its first four hexadecimal digits
contain a priority value followed by a colon. The
remaining characters contain the MAC address used to 
refer to a bridge in a unique fashion (typically, the
numerically smallest MAC address of all ports on the
bridge).',
    'RFC 4188',
    '/modules/ieee-types/2007-10-02#bridgeid.49', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'ieee-types', 'ieee-types', '2007-10-02', 'vlanid', '66',
    'The vlanid type uniquely identifies a VLAN. This is 
the 12-bit VLAN-ID used in the VLAN Tag header. The 
range is defined by the referenced specification.',
    'IEEE Std 802.1Q 2003 Edition, Virtual Bridged Local
Area Networks.',
    '/modules/ieee-types/2007-10-02#vlanid.66', 'uint16', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/yang/inet-types.yang
# module: inet-types
# version: 2007-10-02
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'inet-types');

INSERT INTO ncmodule VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'inet',
    'urn:ietf:params:xml:ns:yang:inet-types',
    'YANG Language Design Team',
    'This module contains standard derived YANG types
for Internet addresses and related things.',
    'This module contains standard derived YANG types
for Internet addresses and related things.',
    '',
    'Martin Bjorklund (Editor) <mbj@tail-f.com>',
    'Initial revision.',
    '/xsd/inet-types_2007-10-02.xsd',
    '/modules/inet-types/2007-10-02', 
    '/src/inet-types_2007-10-02.yang',
    '/home/andy/swdev/trunk/netconf/modules/yang/inet-types.yang',
    'inet-types.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'ip-version', '26',
    'This value represents the version of the IP protocol.',
    'RFC 791 (STD 5), RFC 2460',
    '/modules/inet-types/2007-10-02#ip-version.26', 'enum', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'dscp', '51',
    'The dscp type represents a Differentiated Services
Code-Point that may be used for marking a traffic
stream.',
    'RFC 3289, RFC 2474, RFC 2780',
    '/modules/inet-types/2007-10-02#dscp.51', 'uint8', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'flow-label', '63',
    'The flow-label type represents flow identifier or 
Flow Label in an IPv6 packet header that may be 
used to discriminate traffic flows.',
    'RFC 2460',
    '/modules/inet-types/2007-10-02#flow-label.63', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'port-number', '75',
    'The port-number type represents a 16-bit port
number of an Internet transport layer protocol
such as UDP, TCP, DCCP or SCTP. Port numbers are
assigned by IANA.  A current list of all 
assignments is available from
<http://www.iana.org/>.

Note that the value zero is not a valid port
number. A union type might be used in situations
where the value zero is meaningful.',
    'RFC 4001',
    '/modules/inet-types/2007-10-02#port-number.75', 'uint16', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'asn', '98',
    'The asn type represents autonomous system numbers which
identify an Autonomous System (AS). An AS is a set of
routers under a single technical administration, using an
interior gateway protocol and common metrics to route
packets within the AS, and using an exterior gateway
protocol to route packets to other ASs\'. IANA maintains
the AS number space and has delegated large parts to the
regional registries.

Autonomous system numbers are currently limited to 16 bits
(0..65535). There is however work in progress to enlarge
the autonomous system number space to 32 bits. This
textual convention therefore uses an uint32 base type
without a range restriction in order to support a larger
autonomous system number space.',
    'RFC 1771, RFC 1930, RFC 4001',
    '/modules/inet-types/2007-10-02#asn.98', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'ip-address', '124',
    'The ip-address type represents an IP address and
is IP version neutral. The format of the textual
representations implies the IP version.',
    '',
    '/modules/inet-types/2007-10-02#ip-address.124', 'union', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'ipv4-address', '135',
    'The ipv4-address type represents an IPv4 address in
dotted-quad notation. The IPv4 address may include
a zone index, separated by a % sign.',
    '',
    '/modules/inet-types/2007-10-02#ipv4-address.135', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'ipv6-address', '148',
    'The ipv6-address type represents an IPv6 address in
full, mixed, shortened and shortened mixed notation.
The IPv6 address may include a zone index, separated
by a % sign.',
    '',
    '/modules/inet-types/2007-10-02#ipv6-address.148', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'ip-prefix', '175',
    'The ip-prefix type represents an IP prefix and
is IP version neutral. The format of the textual
representations implies the IP version.',
    '',
    '/modules/inet-types/2007-10-02#ip-prefix.175', 'union', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'ipv4-prefix', '186',
    'The ipv4-prefix type represents an IPv4 address prefix.
The prefix length is given by the number following the
slash character and must be less than or equal 32. 
Values larger than 32 should be treated as 32.

A prefix length value of n corresponds to an IP address
mask which has n contiguous 1-bits from the most
significant bit (MSB) and all other bits set to 0.

The IPv4 address represented in dotted quad notation 
should have all bits that do not belong to the prefix
set to zero.',
    '',
    '/modules/inet-types/2007-10-02#ipv4-prefix.186', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'ipv6-prefix', '208',
    'The ipv6-prefix type represents an IPv6 address prefix.
The prefix length is given by the number following the
slash character and must be less than or equal 128. 
Values larger than 128 should be treated as 128.

A prefix length value of n corresponds to an IP address
mask which has n contiguous 1-bits from the most
significant bit (MSB) and all other bits set to 0.

The IPv6 address represented in dotted quad notation 
should have all bits that do not belong to the prefix
set to zero.',
    '',
    '/modules/inet-types/2007-10-02#ipv6-prefix.208', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'domain-name', '243',
    'The domain-name type represents a DNS domain
name. The name SHOULD be fully qualified
whenever possible.

The description clause of objects using the
domain-name type MUST describe how (and when)
these names are resolved to IP addresses.

Note that the resolution of a domain-name value 
may require to query multiple DNS records (e.g.,
A for IPv4 and AAAA for IPv6).  The order of the
resolution process and which DNS record takes
precedence depends on the configuration of the
resolver.',
    'RFC 1034',
    '/modules/inet-types/2007-10-02#domain-name.243', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'inet-types', 'inet-types', '2007-10-02', 'host', '266',
    'The host type represents either an IP address
or a DNS domain name.',
    '',
    '/modules/inet-types/2007-10-02#host.266', 'union', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/yang/yang-smi.yang
# module: yang-smi
# version: 2008-03-20
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'yang-smi');

INSERT INTO ncmodule VALUES (
    '', 'yang-smi', 'yang-smi', '2008-03-20', 'smi',
    'urn:ietf:params:xml:ns:yang:yang-smi',
    'YANG Language Design Team',
    'This module contains extensions for dealing with SMIv2 modules.',
    'This module contains extensions for dealing with SMIv2 modules.',
    '',
    'Martin Bjorklund (Editor) <mbj@tail-f.com>',
    'Initial revision.',
    '/xsd/yang-smi_2008-03-20.xsd',
    '/modules/yang-smi/2008-03-20', 
    '/src/yang-smi_2008-03-20.yang',
    '/home/andy/swdev/trunk/netconf/modules/yang/yang-smi.yang',
    'yang-smi.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncextension VALUES (
    '', 'yang-smi', 'yang-smi', '2008-03-20', 'oid', '21',
    'OBJECT IDENTIFIER value assigned to a particular node.',
    '',
    '/modules/yang-smi/2008-03-20#oid.21', 
    'oid', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncextension VALUES (
    '', 'yang-smi', 'yang-smi', '2008-03-20', 'display-hint', '27',
    'DISPLAY-HINT value provided in a TEXTUAL-CONVENTION macro.',
    '',
    '/modules/yang-smi/2008-03-20#display-hint.27', 
    'hint', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO ncextension VALUES (
    '', 'yang-smi', 'yang-smi', '2008-03-20', 'default', '33',
    'DEFVAL value provided in an OBJECT-TYPE macro.',
    '',
    '/modules/yang-smi/2008-03-20#default.33', 
    'default', '0',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

#
# Generated by yangdump version 0.9.3
#
# mySQL database: netconfcentral
# source: /home/andy/swdev/trunk/netconf/modules/yang/yang-types.yang
# module: yang-types
# version: 2007-10-02
#
#################################################

INSERT INTO ncquickmod VALUES (
    '', 'yang-types');

INSERT INTO ncmodule VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'yang',
    'urn:ietf:params:xml:ns:yang:yang-types',
    'YANG Language Design Team',
    'This module contains standard derived YANG types.',
    'This module contains standard derived YANG types.',
    '',
    'Martin Bjorklund (Editor) <mbj@tail-f.com>',
    'Initial revision.',
    '/xsd/yang-types_2007-10-02.xsd',
    '/modules/yang-types/2007-10-02', 
    '/src/yang-types_2007-10-02.yang',
    '/home/andy/swdev/trunk/netconf/modules/yang/yang-types.yang',
    'yang-types.yang', '1', '1', '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'counter32', '25',
    'The counter32 type represents a non-negative integer
which monotonically increases until it reaches a
maximum value of 2^32-1 (4294967295 decimal), when it
wraps around and starts increasing again from zero.

Counters have no defined `initial\' value, and thus, a
single value of a counter has (in general) no information
content.  Discontinuities in the monotonically increasing
value normally occur at re-initialization of the
management system, and at other times as specified in the
description of an object instance using this type.  If
such other times can occur, for example, the creation of
an object instance of type counter32 at times other than
re-initialization, then a corresponding object should be
defined, with an appropriate type, to indicate the last
discontinuity.

The counter32 type should not be used for configuration
objects. A default statement should not be used for
attributes with a type value of counter32.',
    'RFC 2578 (STD 58)',
    '/modules/yang-types/2007-10-02#counter32.25', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'zero-based-counter32', '52',
    'The zero-based-counter32 type represents a counter32
which has the defined `initial\' value zero.',
    'RFC 2021',
    '/modules/yang-types/2007-10-02#zero-based-counter32.52', 'uint32', 'counter32', 
    'yang-types', '25', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'counter64', '62',
    'The counter64 type represents a non-negative integer
which monotonically increases until it reaches a
maximum value of 2^64-1 (18446744073709551615), when
it wraps around and starts increasing again from zero.

Counters have no defined `initial\' value, and thus, a
single value of a counter has (in general) no information
content.  Discontinuities in the monotonically increasing
value normally occur at re-initialization of the
management system, and at other times as specified in the
description of an object instance using this type.  If
such other times can occur, for example, the creation of
an object instance of type counter64 at times other than
re-initialization, then a corresponding object should be
defined, with an appropriate type, to indicate the last
discontinuity.

The counter64 type should not be used for configuration
objects. A default statement should not be used for
attributes with a type value of counter64.',
    'RFC 2578 (STD 58)',
    '/modules/yang-types/2007-10-02#counter64.62', 'uint64', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'zero-based-counter64', '89',
    'The zero-based-counter64 type represents a counter64
which has the defined `initial\' value zero.',
    'RFC 2856',
    '/modules/yang-types/2007-10-02#zero-based-counter64.89', 'uint64', 'counter64', 
    'yang-types', '62', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'gauge32', '99',
    'The gauge32 type represents a non-negative integer,
which may increase or decrease, but shall never
exceed a maximum value, nor fall below a minimum
value.  The maximum value can not be greater than
2^32-1 (4294967295 decimal), and the minimum value
can not be smaller than 0.  The value of a gauge32
has its maximum value whenever the information
being modeled is greater than or equal to its
maximum value, and has its minimum value whenever
the information being modeled is smaller than or
equal to its minimum value.  If the information
being modeled subsequently decreases below
(increases above) the maximum (minimum) value, the
gauge32 also decreases (increases).',
    'RFC 2578 (STD 58)',
    '/modules/yang-types/2007-10-02#gauge32.99', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'gauge64', '120',
    'The gauge64 type represents a non-negative integer,
which may increase or decrease, but shall never
exceed a maximum value, nor fall below a minimum
value.  The maximum value can not be greater than
2^64-1 (18446744073709551615), and the minimum value
can not be smaller than 0.  The value of a gauge64
has its maximum value whenever the information
being modeled is greater than or equal to its
maximum value, and has its minimum value whenever
the information being modeled is smaller than or
equal to its minimum value.  If the information
being modeled subsequently decreases below
(increases above) the maximum (minimum) value, the
gauge64 also decreases (increases).',
    'RFC 2856',
    '/modules/yang-types/2007-10-02#gauge64.120', 'uint64', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'uri', '145',
    'A uri type represents Uniform Resource Identifier (URI) 
as defined by STD 66.

Objects using this type MUST be in US-ASCII encoding, and
MUST be normalized as described by RFC 3986 Sections
6.2.1, 6.2.2.1, and 6.2.2.2.  All unnecessary
percent-encoding is removed, and all case-insensitive
characters are set to lowercase except for hexadecimal
digits, which are normalized to uppercase as described in
Section 6.2.2.1.

The purpose of this normalization is to help provide unique
URIs.  Note that this normalization is not sufficient to
provide uniqueness.  Two URIs that are textually distinct
after this normalization may still be equivalent.

Objects using this type MAY restrict the schemes that they
permit.  For example, \'data:\' and \'urn:\' schemes might not
be appropriate.

A zero-length URI is not a valid URI.  This can be used to
express \'URI absent\' where required, for example when used
as an index field.',
    'RFC 3986 (STD 66), RFC 3305, and RFC 5017',
    '/modules/yang-types/2007-10-02#uri.145', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'object-identifier', '175',
    'The object-identifier type represents administratively
assigned names in a registration-hierarchical-name tree.

Values of this type are denoted as a sequence of numerical
non-negative sub-identifier values. Each sub-identifier
value MUST NOT exceed 2^32-1 (4294967295). Sub-identifiers
are separated by single dots and without any intermediate
white space.

Although the number of sub-identifiers is not limited,
module designers should realize that there may be
implementations that stick with the SMIv1/v2 limit of 128
sub-identifiers.',
    'ITU-T Recommendation X.660 / ISO/IEC 9834-1',
    '/modules/yang-types/2007-10-02#object-identifier.175', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'date-and-time', '201',
    'The date-and-time type is a profile of the ISO 8601
            standard for representation of dates and times using the
            Gregorian calendar. The format is most easily described
            using the following ABFN (see RFC 3339):

            date-fullyear   = 4DIGIT
            date-month      = 2DIGIT  ; 01-12
            date-mday       = 2DIGIT  ; 01-28, 01-29, 01-30, 01-31
            time-hour       = 2DIGIT  ; 00-23
            time-minute     = 2DIGIT  ; 00-59
            time-second     = 2DIGIT  ; 00-58, 00-59, 00-60
            time-secfrac    = "." 1*DIGIT
            time-numoffset  = ("+" / "-") time-hour ":" time-minute
            time-offset     = "Z" / time-numoffset

            partial-time    = time-hour ":" time-minute ":" time-second
                              [time-secfrac]
            full-date       = date-fullyear "-" date-month "-" date-mday
            full-time       = partial-time time-offset

;
',
    'RFC 3339',
    '/modules/yang-types/2007-10-02#date-and-time.201', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'timeticks', '231',
    'The timeticks type represents a non-negative integer
which represents the time, modulo 2^32 (4294967296
decimal), in hundredths of a second between two epochs.
When objects are defined which use this type, the
description of the object identifies both of the reference
epochs.',
    'RFC 2578 (STD 58)',
    '/modules/yang-types/2007-10-02#timeticks.231', 'uint32', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'timestamp', '244',
    'The timestamp type represents the value of an associated
timeticks object at which a specific occurrence
happened.  The specific occurrence must be defined in the
description of any object defined using this type.  When
the specific occurrence occurred prior to the last time
the associated timeticks attribute was zero, then the
timestamp value is zero.  Note that this requires all
timestamp values to be reset to zero when the value of
the associated timeticks attribute reaches 497+ days and
wraps around to zero.

The associated timeticks object must be specified
in the description of any object using this type.',
    'RFC 2579 (STD 58)',
    '/modules/yang-types/2007-10-02#timestamp.244', 'uint32', 'timeticks', 
    'yang-types', '231', 
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');

INSERT INTO nctypedef VALUES (
    '', 'yang-types', 'yang-types', '2007-10-02', 'phys-address', '268',
    'Represents media- or physical-level addresses.',
    'RFC 2579 (STD 58)',
    '/modules/yang-types/2007-10-02#phys-address.268', 'string', '', 
    '',
    '',
    '1', '1',
    '2008-07-07 12:11:59', 
    '2008-07-07 12:11:59');
