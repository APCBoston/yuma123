ncx-module yangdiff {
  header {
    description 
       "yangdiff provides the ability to compare two revisions
        of the same conceptual YANG module.  The entire concetual
        data model is compared, not individual files.  This means
        any included sub-modules will be processed as well.

        INPUT FILES

           To compare one module, use the 'old' and 'new'
           parameters to specify YANG module files.

           To compare all the modules in a subtree, use the 
           'old' and 'new' parameters to specify a directory
           to be searched for YANG modules to be processed.

           Unless the 'help' or 'version' parameters is entered, 
           the 'old' and 'new' parameters must be present.

        SEARCH PATH

            When a module name is entered as input, or when a
            module or submodule name is specified in an import or include
            statement within the file, the following search algorithm
            is used to find the file:

            1) file is in the current directory
            2) YANG_MODPATH environment var (or set by modpath parameter)
            3) $HOME/modules directory
            4) $YANG_HOME/modules directory
            5) $YANG_INSTALL/modules directory OR
               default install module location, '/usr/share/yang/modules'

            By default, the entire directory tree for all locations
            (except step 1) will be searched, not just the specified
            directory.  The 'no-subdirs' parameter can be used to
            prevent sub-directories from being searched.

            Any directory name beginning with a dot character '.'
            will be skipped.  Also, any directory named 'CVS' will
            be skipped in directory searches.

        OUTPUT MODES

            By default, any comparison output will be sent to STDOUT.

            The 'output' parameter can be used to specify the 
            full filespec of the output file,  or a
            complete directory specification to be combined
            with the default filename (yangdiff.log).

        ERROR LOGGING

            By default, warnings and errors are sent to STDOUT.

            A log file can be specified instead with the 'log' parameter.
            Existing log files can be reused with the 'logappend'
            parameter, otherwise log files are overwritten.

            The logging level can be controlled with the 'log-level'
            parameter.  The default log level is 'info'.  The
            log-levels are additive:

               off:    suppress all errors (not recommended!)
                       A program return code of '1' indicates some error.
               error:  print errors
               warn:   print warnings
               info:   print generally interesting trace info
               debug:  print general debugging trace info
               debug2: print verbose debugging trace info
    
        ENVIRONMENT VARIABLES

            The following optional environment variables can be used
            to control module and data search behavior:

            HOME:  the user's home directory  (e.g., /home/andy)

            YANG_HOME:  The root of the user's YANG work directory
                        (e.g., /home/andy/swdev/netconf)

            YANG_INSTALL:  The root of the directory that yangdiff
                            is installed on this system
                           (default is, /usr/share/yang)

            YANG_MODPATH: Colon-separated list of directories to
                          search for modules and submodules.
                          (e.g.: './workdir/modules:/home/andy/test-modules')
                          The 'modpath' parameter will override this
                          environment variable, if both are present.

       CONFIGURATION FILES

              * config file
                default: /etc/yangdiff.conf

            An ASCII configuration file format is supported to 
            store command line parameters.  The 'config' parameter
            is used to specify a specific config file, otherwise
            the default config file will be checked. 

            - A hash mark until EOLN is treated as a comment
            - All text is case-sensitive
            - Whitespace within a line is not significant
            - Whitespace to end a line is significant/
              Unless the line starts a multi-line string,
              an escaped EOLN (backslash EOLN) is needed
              to enter a leaf on multiple lines.
            - For parmsets that define lists, the key components
              are listed just after the parameter name, without
              any name,  e.g.,

                interface eth0 {
                  # name = eth0 is not listed inside the braces
                  ifMtu 1500
                  ifName mySystem
                }
 
            A config file can contain any number of parameter
            sets for different programs.  Each program
            must have its own section, identifies by its name:

                # this is a comment
                yangdiff {
                  log-level debug
                  output \"~/swdev/testfiles\"
                }
 
                yangdump {
                  ...
                }

        FILES            

            The following data files must be present in the module
            search path in order for this program to function:
 
              * yangdiff.ncx (this file)
                default locations: 
                  ~/modules/netconfcentral/yangdiff.ncx
                  /usr/share/yang/modules/netconfcentral/yangdiff.ncx

              * ncxtypes.ncx
                default locations: 
                   ~/modules/netconfcentral/ncxtypes.ncx
                   /usr/share/yang/modules/netconfcentral/ncxtypes.ncx

        BUGS
           - keyref Xpath expressions are not validated
           - must-stmt Xpath expressions are not validated
          
             Internal diagnostics may generate the following
             type of message if any bugs are detected at runtime:

             [E0]
                 filename.c:linenum error-number (error-msg)
 
             Please send a bug report to support@netconfcentral.com
             if any messages of this type appear in the error log.
        ";
    version "2008-06-11";
    owner ncx;
    application yangdiff;
    copyright "Copyright (C) 2008, Andy Bierman.";
    contact-info "Send comments to <support@netconfcentral.com>.";
  }

  imports {
    import ncxtypes;
  }

  definitions {

    type DiffType {
      description
        "Type of comparision output requested.
         The basic format is:

           [add/delete/modify] field-name [field-value]

         The 'terse' option will include the names
         of the fields that are different.

            A foo  -->  Added foo in new revision
            D foo  -->  Deleted foo in new revision
            M foo  -->  Modified foo in new revision

         The 'normal' option will also include the values of the
         fields that are different, and provide nested context.

            A foo 'bar' -->  Added foo with new value bar in new revision
            D foo  -->  Deleted foo with old value bar in new revision
            M foo  -->  Modified foo with new value bar in new revision

         The 'revision' option will generate the differences in
         YANG revision-stmt format.

              revision <todays-date> {
                description 
                  \"
                    - Added import baxtypes'
                    - Changed contact to 'support@acme.com'
                    - Deleted /myobjects/first-list
                    - Added must to /myobjects/some/list\";
              }  
          ";
      syntax { enum = { terse normal revision }; }
      default "normal";
    }

    type DiffIndentType {
      description 
       "Requested indent amount.
        Only a limited range of line indent values are allowed.";
      syntax { uint32 (0..9); }
      default "3";
    }

    parmset yangdiff {
      description 
         "CLI Parameter Set for the YANG Module Compare Application.";

      order loose;
      type cli;

      parms {

        parm config {
          description
            "The name of the configuration file to use.
             Any parameter except this one can be set in the config file.
             The default config file will be not be checked if this
             parameter is present.";
           type string;
           usage optional;   
        }

        parm old {
            description 
              "If this parameter indicates a filename, then it
               represents the YANG or NCX source module name 
               to compare as the older of the two revisions.

               If this parameter indicates a directory,
               then it will be used to to search for a
               file with the same name as identified by
               the 'new' parameter.

               This parameter must be present unless the 'help'
               or 'version' paraemters are used.";
            type NcModuleSpec;
            usage optional;
        }

        parm new {
            description 
              "If this parameter indicates a filename, then it
               represents the YANG or NCX source module name 
               to compare as the newer of the two revisions.

               If this parameter indicates a directory
               (and the 'old' parameter indicates a filename),
               then it will be used to to search for a
               file with the same name as the 'new' parameter.

               If the 'old' parameter identifies a directory
               as well (and the 'no-subdirs' parameter is present),
               then the modules within the 'new' directory will be 
               compared to files with the same name in the 'old' 
               directory.  If the 'no-subdirs' parameter is not
               present, then all sub-directories within the 'src'
               directory will also be checked.

               This parameter must be present unless the 'help'
               or 'version' paraemters are used.";
            type NcModuleSpec;
            usage optional;
        }

        parm difftype {
            description 
              "The type of comparision output requested.";
            type DiffType;
            usage optional;
        }

        parm output {
          description 
            "Output directory or file name to use. 
             The default is STDOUT if none is specified.

             If this parameter represents an existing directory,
             then the default comparision output file (yangdiff.log)
             will be generated in the specified directory.

             If this parameter represents a file name,
             then all comparision output will be directed
             to the specified file.  If the file already exists,
             it will be overwritten.";
          type string;
          usage optional;
        }

        parm help {
          description "Print yangdiff help file and exit.";
          type empty;
	  usage optional;
        }

        parm indent {
          description 
            "Number of spaces to indent (0..9) in formatted output.";
          type DiffIndentType;
	  usage optional;
        }

	parm log {
          description
             "Filespec for the program output file to use instead of STDOUT.";
          type string;
	  usage optional;
        }

	parm log-append {
          description
             "If present, the log will be appended not over-written.
              If not, the log will be over-written.
              Only meaningful if the 'log' parameter is
              also present.";
          type empty;
	  usage optional;
        }

        parm log-level {
          description
            "Sets the debug logging level for the program.";
          type NcDebugType;
          usage optional;
        }

        parm modpath {
          description
             "Directory search path for YANG and NCX modules.";
          type NcPathList;
          usage optional;
        }

	parm no-header {
          description
             "If present, the header clauses will be skipped, and any 
	      differences between the module headers will not be reported.
              Only object definitions will be compared.

              If missing, then header clauses will be compared,
              along will all the object definitions.";
          type empty;
	  usage optional;
        }

	parm no-subdirs {
          description
             "If present, the file search paths for modules, scripts, and data
              files will not include sub-directories if they exist in the
              specified path.

              If missing, then these file search paths will include
              sub-directories, if present.  Any directory name beginning
              with a dot '.' character, or named 'CVS', will be ignored.";
          type empty;
	  usage optional;
        }

        parm version {
          description "Print yangdiff version string and exit.";
          type empty;
	  usage optional;
        }

      }
    }

  }
}


