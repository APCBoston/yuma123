<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://netconfcentral.org/ncx/types"
 targetNamespace="http://netconfcentral.org/ncx/types"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 elementFormDefault="qualified" attributeFormDefault="unqualified"
 xml:lang="en" version="0.2" xmlns:ncx="http://netconfcentral.org/ncx/1.0">
 <xs:annotation>
  <xs:documentation> Converted from NCX module by ncxdump v0.2

    Module: ncxtypes
    Owner: ncx
    Application: types
    Version: 0.2
    Copyright (C) 2006-2007, Andy Bierman.
    Contact Info: Send comments to &lt;ietf@andybierman.com&gt;.

    Description:
      NCX Common Data Types

    Revision History:

      Revision: 0.1
      Initial version.

      Revision: 0.2
      Changed application to types
</xs:documentation>
 </xs:annotation>

 <xs:import namespace="http://www.w3.org/XML/1998/namespace"
  schemaLocation="http://www.w3.org/2001/xml.xsd"/>

 <xs:simpleType name="NcxName">
  <xs:annotation>
   <xs:documentation>General Purpose NCX Name string.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:pattern value="[a-z,A-Z][a-z,A-Z,0-9,\-,_]*"/>
   <xs:minLength value="1"/>
   <xs:maxLength value="1023"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcxQName">
  <xs:annotation>
   <xs:documentation>Qualified Name:
            module-name:NcxName OR owner-name:NcxName.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:pattern value="(([a-z,A-Z][a-z,A-Z,0-9,\-,_]*):)?([a-z,A-Z][a-z,A-Z,0-9,\-,_]*)"/>
   <xs:minLength value="1"/>
   <xs:maxLength value="2046"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name="NcxSimpleId">
  <xs:annotation>
   <xs:documentation>Simple Definition Identifier string.</xs:documentation>
  </xs:annotation>
  <xs:simpleContent>
   <xs:extension base="NcxName"/>
  </xs:simpleContent>
 </xs:complexType>

 <xs:simpleType name="NcxScopedId">
  <xs:annotation>
   <xs:documentation>Scoped Definition Identifier string.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:pattern value="([a-z,A-Z][a-z,A-Z,0-9,\-,_]*)\.(([a-z,A-Z][a-z,A-Z,0-9,\-,_]*)+)"/>
   <xs:minLength value="3"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcxModQualId">
  <xs:annotation>
   <xs:documentation>Module Qualified Simple Definition Identifier string.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:pattern value="([a-z,A-Z][a-z,A-Z,0-9,\-,_]*):([a-z,A-Z][a-z,A-Z,0-9,\-,_]*)"/>
   <xs:minLength value="3"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcxModScopedId">
  <xs:annotation>
   <xs:documentation>Module Qualified Scoped Definition Identifier string.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:pattern value="([a-z,A-Z][a-z,A-Z,0-9,\-,_]*):([a-z,A-Z][a-z,A-Z,0-9,\-,_]*)\.(([a-z,A-Z][a-z,A-Z,0-9,\-,_]*)+)"/>
   <xs:minLength value="5"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcxIdentifier">
  <xs:annotation>
   <xs:documentation>Union of all the Identifier types.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="NcxSimpleId NcxScopedId NcxModQualId NcxModScopedId"/>
 </xs:simpleType>

 <xs:simpleType name="NcxSessionId">
  <xs:annotation>
   <xs:documentation>NCX Session ID number</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:unsignedInt">
   <xs:minInclusive value="1"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcxLineLength">
  <xs:annotation>
   <xs:documentation>Requested Maximum Line Length</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:unsignedInt">
   <xs:minInclusive value="32"/>
   <xs:maxInclusive value="65535"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name="NcxUserName">
  <xs:annotation>
   <xs:documentation>NCX User Name string.</xs:documentation>
  </xs:annotation>
  <xs:simpleContent>
   <xs:extension base="NcxName"/>
  </xs:simpleContent>
 </xs:complexType>

 <xs:complexType name="NcxGroupName">
  <xs:annotation>
   <xs:documentation>NCX Group Name string.</xs:documentation>
  </xs:annotation>
  <xs:simpleContent>
   <xs:extension base="NcxName"/>
  </xs:simpleContent>
 </xs:complexType>

 <xs:simpleType name="NcxModuleList">
  <xs:annotation>
   <xs:documentation>List of NCX Module names.</xs:documentation>
  </xs:annotation>
  <xs:list itemType="NcxName"/>
 </xs:simpleType>

 <xs:simpleType name="NcxLockList">
  <xs:annotation>
   <xs:documentation>List of config named that are currently locked.</xs:documentation>
  </xs:annotation>
  <xs:list itemType="NcxName"/>
 </xs:simpleType>

 <xs:simpleType name="NcAccessControlType">
  <xs:annotation>
   <xs:documentation>NCX System access control mode.
          open == no access control checking enforced 
          loose == any RPC method in the netconf namespace can
              be invoked;  read-only data allowed for all
          strict == ncxacl RPC entry must be present to invoke
              an RPC method; ncxacl Data entry must be present
              to access any data. (Except for user == 'root'.)
         </xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="open"/>
   <xs:enumeration value="loose"/>
   <xs:enumeration value="strict"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcxAccessType">
  <xs:annotation>
   <xs:documentation>NETCONF Data Access Types:

          none == no access allowed at all.
               This value is used in ACLs, not max-access clauses.
          read-only == read access allowed in all operations.
               This value implies notify access as well.
          read-write == all but create/delete allowed.
               Values can be read and edited.
               Merge and replace operations will be permitted, even
               (e.g., create the instance if it does not exist.
               This allows a manager to save static or agent-created entries
               in copy-config operations, and then reload them later.
          read-create == all access allowed
               Instances can be read, created, edited, and deleted.
        </xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="none"/>
   <xs:enumeration value="read-only"/>
   <xs:enumeration value="read-write"/>
   <xs:enumeration value="read-create"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcxRpcType">
  <xs:annotation>
   <xs:documentation>NCX RPC Type Classifications</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="other"/>
   <xs:enumeration value="config"/>
   <xs:enumeration value="exec"/>
   <xs:enumeration value="monitor"/>
   <xs:enumeration value="debug"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcxRpcTypeList">
  <xs:annotation>
   <xs:documentation>List NCX RPC Type Classifications</xs:documentation>
   <xs:appinfo>
    <ncx:no-duplicates/>
    <ncx:merge-type>sort</ncx:merge-type>
   </xs:appinfo>
  </xs:annotation>
  <xs:list itemType="NcxRpcType"/>
 </xs:simpleType>

 <xs:simpleType name="NcLogControlType">
  <xs:annotation>
   <xs:documentation>NCX Session logging control enumeration.
         Each successive value includes all the previous
         messages from lower value enumeration values,
         plus the messages for the specified value.

          off == no logging of RPC or data access is done
          error == log error messages
          info == log info messages 
          debug == log debug level 1 messages
          debug2 == log debug level 2 messages
          debug3 == log debug level 3 messages
         </xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="off"/>
   <xs:enumeration value="error"/>
   <xs:enumeration value="info"/>
   <xs:enumeration value="debug"/>
   <xs:enumeration value="debug2"/>
   <xs:enumeration value="debug3"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcPortNumber">
  <xs:annotation>
   <xs:documentation>Transport layer port number.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:unsignedInt">
   <xs:minInclusive value="1"/>
   <xs:maxInclusive value="65535"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="NcIndex">
  <xs:annotation>
   <xs:documentation>Non-negative index value</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:unsignedInt">
   <xs:minInclusive value="1"/>
  </xs:restriction>
 </xs:simpleType>

</xs:schema>
