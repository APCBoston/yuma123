<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
 targetNamespace="urn:ietf:params:xml:ns:netconf:base:1.0"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 elementFormDefault="qualified" attributeFormDefault="unqualified"
 xml:lang="en" version="0.6" xmlns:ncx="http://netconfcentral.org/ncx/1.0">
 <xs:annotation>
  <xs:documentation> Converted from NCX module by ncxdump v0.2

    Module: netconf
    Owner: ietf
    Application: netconf
    Version: 0.6
    Copyright (C) Andy Bierman (2006-2007).  All Rights Reserved.
    Contact Info: Translated by Andy Bierman.
       Send comments to &lt;ietf@andybierman.com&gt;.

    Description:
      NETCONF Protocol 
        * Data Types
        * Parmsets
        * RPCs
       Translated from RFC 4741.

    Revision History:

      Revision: 0.6
      Fix bug in RpcErrorType

      Revision: 0.5
      Align to prot-12 version.

      Revision: 0.4
      Align to prot-10 version.

      Revision: 0.1
      Initial version.
</xs:documentation>
 </xs:annotation>

 <xs:import namespace="http://www.w3.org/XML/1998/namespace"
  schemaLocation="http://www.w3.org/2001/xml.xsd"/>

 <xs:simpleType name="language">
  <xs:annotation>
   <xs:documentation>XML language type for LangString</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:pattern value="[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="SessionId">
  <xs:annotation>
   <xs:documentation>NETCONF Session Id</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:unsignedInt">
   <xs:minInclusive value="1"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="SessionIdOrZero">
  <xs:annotation>
   <xs:documentation>NETCONF Session Id or Zero to indicate none</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:unsignedInt"/>
 </xs:simpleType>

 <xs:complexType name="NcCapabilities">
  <xs:annotation>
   <xs:documentation>Generic Capabilities List.</xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="capability" type="xs:anyURI"/>
  </xs:sequence>
 </xs:complexType>

 <xs:complexType name="NcAgentHello">
  <xs:annotation>
   <xs:documentation>Generic Agent Hello Message Parameters.</xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="capabilities" type="NcCapabilities">
    <xs:key name="capabilitiesKey">
     <xs:selector xpath="capability"/>
     <xs:field xpath="capability"/>
    </xs:key>
   </xs:element>
   <xs:element name="session-id" type="SessionId"/>
  </xs:sequence>
 </xs:complexType>

 <xs:complexType name="NcManagerHello">
  <xs:annotation>
   <xs:documentation>Generic Manager Hello Message Parameters.</xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="capabilities" type="NcCapabilities">
    <xs:key name="capabilitiesKey">
     <xs:selector xpath="capability"/>
     <xs:field xpath="capability"/>
    </xs:key>
   </xs:element>
  </xs:sequence>
 </xs:complexType>

 <xs:simpleType name="LangStringBT">
  <xs:restriction base="xs:string"/>
 </xs:simpleType>

 <xs:complexType name="LangString">
  <xs:annotation>
   <xs:documentation>XML string with a language attribute.</xs:documentation>
  </xs:annotation>
  <xs:simpleContent>
   <xs:extension base="LangStringBT">
    <xs:attribute name="lang" type="language"/>
   </xs:extension>
  </xs:simpleContent>
 </xs:complexType>

 <xs:simpleType name="MessageId">
  <xs:annotation>
   <xs:documentation>NETCONF message-id attribute</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:minLength value="1"/>
   <xs:maxLength value="4095"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="ErrorType">
  <xs:annotation>
   <xs:documentation>NETCONF Error Type</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="transport"/>
   <xs:enumeration value="rpc"/>
   <xs:enumeration value="protocol"/>
   <xs:enumeration value="application"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="ErrorTag">
  <xs:annotation>
   <xs:documentation>NETCONF Error Tag</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="in-use"/>
   <xs:enumeration value="invalid-value"/>
   <xs:enumeration value="too-big"/>
   <xs:enumeration value="missing-attribute"/>
   <xs:enumeration value="bad-attribute"/>
   <xs:enumeration value="unknown-attribute"/>
   <xs:enumeration value="missing-element"/>
   <xs:enumeration value="bad-element"/>
   <xs:enumeration value="unknown-element"/>
   <xs:enumeration value="unknown-namespace"/>
   <xs:enumeration value="access-denied"/>
   <xs:enumeration value="lock-denied"/>
   <xs:enumeration value="resource-denied"/>
   <xs:enumeration value="rollback-failed"/>
   <xs:enumeration value="data-exists"/>
   <xs:enumeration value="data-missing"/>
   <xs:enumeration value="operation-not-supported"/>
   <xs:enumeration value="operation-failed"/>
   <xs:enumeration value="partial-operation"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="ErrorSeverity">
  <xs:annotation>
   <xs:documentation>NETCONF Error Severity</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="error"/>
   <xs:enumeration value="warning"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name="ErrorInfoContent">
  <xs:annotation>
   <xs:documentation>NETCONF standard &lt;error-info&gt; Element Content;</xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="bad-attribute" type="xs:QName" minOccurs="0"
    maxOccurs="unbounded"/>
   <xs:element name="bad-element" type="xs:QName" minOccurs="0"
    maxOccurs="unbounded"/>
   <xs:element name="ok-element" type="xs:QName" minOccurs="0"
    maxOccurs="unbounded"/>
   <xs:element name="err-element" type="xs:QName" minOccurs="0"
    maxOccurs="unbounded"/>
   <xs:element name="noop-element" type="xs:QName" minOccurs="0"
    maxOccurs="unbounded"/>
   <xs:element name="session-id" type="SessionIdOrZero" minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>

 <xs:complexType name="RpcErrorType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;rpc-error&gt; Element Content</xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="error-type" type="ErrorType"/>
   <xs:element name="error-tag" type="ErrorTag"/>
   <xs:element name="error-severity" type="ErrorSeverity"/>
   <xs:element name="error-app-tag" type="xs:string" minOccurs="0"/>
   <xs:element name="error-path" type="xs:string" minOccurs="0"/>
   <xs:element name="error-message" type="LangString" minOccurs="0"/>
   <xs:element name="error-info" type="xs:anyType" minOccurs="0"/>
  </xs:sequence>
 </xs:complexType>

 <xs:complexType name="RpcDataReplyType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;rpc-reply&gt; Error and/or Data Content</xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="rpc-error" type="RpcErrorType" minOccurs="0"
    maxOccurs="unbounded"/>
   <xs:element name="data" type="xs:anyType" minOccurs="0"/>
  </xs:sequence>
  <xs:attribute name="message-id" type="MessageId" use="required"/>
 </xs:complexType>

 <xs:complexType name="RpcOkReplyType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;rpc-reply&gt; OK Content.</xs:documentation>
  </xs:annotation>
  <xs:choice>
   <xs:element name="ok"/>
   <xs:element name="rpc-error" type="RpcErrorType" minOccurs="0"
    maxOccurs="unbounded"/>
  </xs:choice>
  <xs:attribute name="message-id" type="MessageId" use="required"/>
 </xs:complexType>

 <xs:complexType name="RpcReplyType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;rpc-reply&gt; construct. </xs:documentation>
  </xs:annotation>
  <xs:choice>
   <xs:element name="ok"/>
   <xs:group>
    <xs:element name="rpc-error" type="RpcErrorType" minOccurs="0"
     maxOccurs="unbounded"/>
    <xs:element name="data" type="xs:anyType" minOccurs="0"/>
   </xs:group>
  </xs:choice>
  <xs:attribute name="message-id" type="MessageId" use="required"/>
 </xs:complexType>

 <xs:complexType name="ConfigInlineType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;config&gt; element content.  

         Note: The &lt;config&gt; base type is 'root', not 'any'.
         For NCX automation purposes, this type contains any 
         number of application containers, each containing
         zero or more parmsets.</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="xs:anyType"/>
  </xs:complexContent>
 </xs:complexType>

 <xs:simpleType name="TestOptionType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;test-option&gt; Element Content.
         This is extended with the test-only enumeration.
         The 'set' option has no real effect since
         the entire PDU is always validated before any
         of it is applied (always test-then-set).</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="test-then-set"/>
   <xs:enumeration value="set"/>
   <xs:enumeration value="test-only"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="ErrorOptionType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;error-option&gt; Element Content</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="stop-on-error"/>
   <xs:enumeration value="continue-on-error"/>
   <xs:enumeration value="rollback-on-error"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="FilterType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;filter&gt; Attribute Content</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="subtree"/>
   <xs:enumeration value="xpath"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name="InlineFilterType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;filter&gt; Element Content</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="xs:anyType">
    <xs:attribute name="type" type="FilterType" use="required"
     default="subtree"/>
    <xs:attribute name="select" type="xs:string"/>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:simpleType name="EditOperationType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;operation&gt; Attribute Content</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="merge"/>
   <xs:enumeration value="replace"/>
   <xs:enumeration value="create"/>
   <xs:enumeration value="delete"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="DefaultOperationType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;default-operation&gt; Element Content</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="merge"/>
   <xs:enumeration value="replace"/>
   <xs:enumeration value="none"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="ConfirmTimeoutType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;confirm-timeout&gt; Element Content in seconds</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:unsignedInt">
   <xs:minInclusive value="1"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name="ConfigURIType">
  <xs:simpleContent>
   <xs:extension base="xs:anyURI"/>
  </xs:simpleContent>
 </xs:complexType>

 <xs:complexType name="GetConfigSourceType">
  <xs:annotation>
   <xs:documentation>NETCONF config &lt;source&gt; Parameter.</xs:documentation>
  </xs:annotation>
  <xs:choice>
   <xs:element name="candidate"/>
   <xs:element name="running"/>
   <xs:element name="startup"/>
   <xs:element name="url" type="ConfigURIType"/>
  </xs:choice>
 </xs:complexType>

 <xs:complexType name="RpcOperationSourceType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;source&gt; Parameter.</xs:documentation>
  </xs:annotation>
  <xs:choice>
   <xs:element name="config" type="ConfigInlineType"/>
   <xs:element name="candidate"/>
   <xs:element name="running"/>
   <xs:element name="startup"/>
   <xs:element name="url" type="ConfigURIType"/>
  </xs:choice>
 </xs:complexType>

 <xs:complexType name="RpcOperationTargetType">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;target&gt; Parameter.</xs:documentation>
  </xs:annotation>
  <xs:choice>
   <xs:element name="candidate"/>
   <xs:element name="running"/>
   <xs:element name="startup"/>
   <xs:element name="url" type="ConfigURIType"/>
  </xs:choice>
 </xs:complexType>

 <xs:complexType name="GetConfigPS">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;get-config&gt; Parameter Set.</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="nc:rpcOperationType">
    <xs:sequence>
     <xs:element name="source" type="GetConfigSourceType">
      <xs:annotation>
       <xs:documentation>Particular configuration to retrieve.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
     <xs:element name="filter" type="InlineFilterType">
      <xs:annotation>
       <xs:documentation>Subtree or Xpath filter to use.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
    </xs:sequence>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="EditConfigPS">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;edit-config&gt; Parameter Set.</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="nc:rpcOperationType">
    <xs:sequence>
     <xs:element name="target" type="RpcOperationTargetType">
      <xs:annotation>
       <xs:documentation>Particular configuration to edit.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
     <xs:element name="default-operation" type="DefaultOperationType">
      <xs:annotation>
       <xs:documentation>Default operation to apply if not explicitly set.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
     <xs:element name="test-option" type="TestOptionType">
      <xs:annotation>
       <xs:documentation>Test option if validate capability supported.
             The 'validate' capability must be present to set
             this object to 'test-then-set'.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
        <ncx:condition>capability(ietf:validate)</ncx:condition>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
     <xs:element name="error-option" type="ErrorOptionType">
      <xs:annotation>
       <xs:documentation>Error recovery option.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
     <xs:choice>
      <xs:element name="config" type="ConfigInlineType">
       <xs:annotation>
        <xs:documentation>Inline Config content: &lt;config&gt;element.</xs:documentation>
        <xs:appinfo>
         <ncx:max-access>read-create</ncx:max-access>
        </xs:appinfo>
       </xs:annotation>
      </xs:element>
      <xs:element name="url" type="ConfigURIType">
       <xs:annotation>
        <xs:documentation>Pointer to Config content: &lt;url&gt; element.</xs:documentation>
        <xs:appinfo>
         <ncx:max-access>read-create</ncx:max-access>
         <ncx:condition>capability(ietf:url)</ncx:condition>
        </xs:appinfo>
       </xs:annotation>
      </xs:element>
     </xs:choice>
    </xs:sequence>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="CopyConfigPS">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;copy-config&gt; Parameter Set.</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="nc:rpcOperationType">
    <xs:sequence>
     <xs:element name="target" type="RpcOperationTargetType">
      <xs:annotation>
       <xs:documentation>Particular configuration to copy to.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
     <xs:element name="source" type="RpcOperationSourceType">
      <xs:annotation>
       <xs:documentation>Particular configuration to copy from.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
    </xs:sequence>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="DeleteConfigPS">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;delete-config&gt; Parameter Set.</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="nc:rpcOperationType">
    <xs:sequence>
     <xs:element name="target" type="RpcOperationTargetType">
      <xs:annotation>
       <xs:documentation>Particular configuration to delete.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
    </xs:sequence>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="LockPS">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;lock&gt; and &lt;unlock&gt; Parameter Sets.</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="nc:rpcOperationType">
    <xs:sequence>
     <xs:element name="target" type="RpcOperationTargetType">
      <xs:annotation>
       <xs:documentation>Particular configuration to lock or unlock.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
    </xs:sequence>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="GetPS">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;get&gt; Parameter Set.</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="nc:rpcOperationType">
    <xs:sequence>
     <xs:element name="filter" type="InlineFilterType">
      <xs:annotation>
       <xs:documentation>Filter to apply to &lt;running&gt; config or state data.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
    </xs:sequence>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="KillSessionPS">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;kill-session&gt; Parameter Set.</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="nc:rpcOperationType">
    <xs:sequence>
     <xs:element name="session-id" type="SessionId">
      <xs:annotation>
       <xs:documentation>Particular session to kill.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
    </xs:sequence>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="CommitPS">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;commit&gt; Parameter Set.</xs:documentation>
   <xs:appinfo>
    <ncx:condition>capability(ietf:confirmed-commit) and
         capability(ietf:candidate)</ncx:condition>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="nc:rpcOperationType">
    <xs:sequence>
     <xs:element name="confirmed" type="xs:flag">
      <xs:annotation>
       <xs:documentation>Request a confirmed commit.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
     <xs:element name="confirm-timeout" type="ConfirmTimeoutType">
      <xs:annotation>
       <xs:documentation>Request a specific timeout period for a confirmed commit.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
    </xs:sequence>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="ValidatePS">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;validate&gt; Parameter Set.</xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="nc:rpcOperationType">
    <xs:sequence>
     <xs:element name="source" type="RpcOperationSourceType">
      <xs:annotation>
       <xs:documentation>Particular configuration to validate.</xs:documentation>
       <xs:appinfo>
        <ncx:max-access>read-create</ncx:max-access>
       </xs:appinfo>
      </xs:annotation>
     </xs:element>
    </xs:sequence>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:element name="get-config" type="GetConfigPS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;get-config&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>monitor</ncx:rpc-type>
    <ncx:rpc-output>RpcDataReplyType</ncx:rpc-output>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="edit-config" type="EditConfigPS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;edit-config&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>config</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="copy-config" type="CopyConfigPS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;copy-config&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>config</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="delete-config" type="DeleteConfigPS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;delete-config&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>config</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="lock" type="LockPS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;lock&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>config</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="unlock" type="LockPS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;unlock&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>config</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="get" type="GetPS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;get&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>monitor</ncx:rpc-type>
    <ncx:rpc-output>RpcDataReplyType</ncx:rpc-output>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="close-session" type="nc:rpcOperationType"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;close-session&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>exec</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="kill-session" type="KillSessionPS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;kill-session&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>exec</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="commit" type="CommitPS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;commit&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>config</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
    <ncx:condition>capability(ietf:candidate)</ncx:condition>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="discard-changes" type="nc:rpcOperationType"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;discard-changes&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>config</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
    <ncx:condition>capability(ietf:candidate)</ncx:condition>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

 <xs:element name="validate" type="ValidatePS"
  substitutionGroup="nc:rpcOperation">
  <xs:annotation>
   <xs:documentation>NETCONF &lt;validate&gt; operation.</xs:documentation>
   <xs:appinfo>
    <ncx:rpc-type>config</ncx:rpc-type>
    <ncx:rpc-output>RpcOkReplyType</ncx:rpc-output>
    <ncx:condition>capability(ietf:validate)</ncx:condition>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>

</xs:schema>
