#
# yangcli configuration file
# Refer to yangcli container definition in yangcli.yang
# for full CLI documentation.
#
# version 1.12-2; 2010-06-01
#

yangcli {

##  leaf autocomp
#   Controls whether partial keywords will be 
#   checked for interactive or script commands.
#
# autocomp true
#
##  leaf autohistory
#   Controls whether the command line history buffer will
#   be saved at exit and loaded at startup.
#   If true, the default history file will be used
#       (~/.yuma/.yangcli_history) for loading
#       and saving the history buffer.
#       If false, the history buffer will only be stored
#       and loaded manually with the history command.
#
# autohistory true
#
## leaf autoload
#  Controls whether any modules (except this one)
#  will be automatically loaded upon startup or
#  upon session startup with an server. If false,
#  the 'load-module' command must be used to
#  explicitly load all the desired definition modules.
#
# autoload true
#
## leaf bad-data
#  Specifies how invalid user input from the CLI
#  will be handled when filling PDUs for remote
#  operations.
#     ignore
#     warn
#     check
#     error
#
# bad-data check
#
## leaf batch-mode [empty]
#  If present, the interactive CLI will not be used.
#  A script should be provided with the 'run-script'
#  parameter, or a command provided with the 'run-command'
#  parameter, or else the program will simply exit.
#
# default is interactive-mode, not batch-mode
#
## leaf datapath
#  Internal file search path for data files.
#  e.g., datapath "~/work:/some/path:../another/path"
#
# no default for datapath
#
## leaf default-module
#  Selects the default module to try after the core operations,
#  when searching for a command or parameter match
#
# no default for default-module
#
## leaf-list deviation
#  Specifies a YANG module to use as a source of deviations
#  e.g. deviation project-X-deviations
#
# no default for deviation
#
## leaf eventlog-size
#  Specifies the maximum number of notification events
#  that will be saved in the notification replay buffer.
#
## leaf display-mode
#  Controls how values are displayed during output
#  to STDOUT or a log file.
#
#     plain: Plain identifier without any prefix format.
#     prefix: Plain text with XML prefix added format.
#     module: Plain text with module name as prefix added format.
#     xml: XML format
#
# display-mode plain
#
## leaf fixorder
#  Controls whether PDU parameters will be
#  automatically sent to the server in the
#  canonical order.
#
# fixorder true
#
## leaf indent
#  Number of spaces to indent (0 to 9) when formatting
#  nested output.
#
# indent 3
#
## leaf log
#  Filespec for the log file to use instead of STDOUT.
#  Leave out to use STDOUT for log messages
#
# no default for log
#
## leaf log-append
#  If present, the log will be appended not over-written.
#  If not, the log will be over-written.
#  Only meaningful if the 'log' parameter is also present.
#
# default is to overwrite (flag not present)
#
## leaf log-level
#  Sets the debug logging level for the program.
#    off
#    error
#    warn
#    info
#    debug
#    debug2
#    debug3
#
# log-level info
#
## leaf modpath
#  Internal file search path for YANG files.
#  e.g., modpath "~/modules:/some/path:../another/path"
#  Refer to user manual for complete module search path
#
# no default for modpath
#
## leaf-list module
#  Specify a module that the server should load at boot-time
#  e.g., module test2
#        module test3
#
# no default for module
#
## leaf password
#  password string to use for the auto-connect mode
# 
# no default for password
#
#
## leaf port
#  Specify the TCP port to use when starting a NETCONF session
#  in auto-connect mode.
#
#  port 830
#
## leaf runpath
#  Internal file search path for executable files.
#  e.g., runpath "~/tools:/usr/share/acmelibs"
#  Refer to user manual for complete module search path
#
# no default for runpath
#
## choice run-script or run-command or nothing
#  Selects the auto-startup mode
#
#   case leaf run-command [string]
#   The specified command will be invoked upon startup.
#   If the auto-connect parameters are provided, then
#   a session will be established before running the
#   command. length: 1 .. 4095
#
#   case  leaf run-script [string]
#   The specified script will be invoked upon startup.
#   If the auto-connect parameters are provided, then
#   a session will be established before running the
#   script.  If a quoted string is used, then any parameters
#   after the script name will be passed to the script.
#   length: 1 .. 4095
#
# no default for this optional choice
#
## leaf timeout [Timeout]
#  Number of seconds to wait for a response
#  from the server before declaring a timeout.
#  Zero means no timeout at all.
#
# timeout 30
#
## leaf user [NcxUserName]
#  User name to use for NETCONF sessions.
#  length: 1..63
#  pattern: [a-z,A-Z][a-z,A-Z,0-9,\-,_,\.]{0,62}
#
# no default for user
#
## leaf warn-idlen
#  Controls whether identifier length warnings will be generated.
#  range 0 | 8 .. 1023;  0==disable ID length checking
#
# warn-idlen 64
#
## leaf warn-linelen
#  Controls whether line length warnings will be generated.
#  range 0 | 40 .. 4095;  0==disable ID length checking
#
# warn-linelen 72
#
## leaf-list warn-off
#  Controls whether the specified warning number will be generated
#  range 400 .. 899;
#  e.g., warn-off 477
#
# no default for warn-off
#
## leaf yuma-home
#  Directory for the yuma project root
#  This will override the YUMA_HOME environment variable
#  if it is set.
#
#  no default for yuma-home

}