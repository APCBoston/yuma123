ncx-module netconfd {
  header {
    description "NCX Agent Configuration Parameters and Statistics";
    version 0.5;
    owner ncx;
    application netconfd;
    copyright "Copyright (C) 2006-2007, Andy Bierman.";
    contact-info "Send comments to <ietf@andybierman.com>.";
    last-update "2007-04-17";
    revision-history {
       0.6 "Changed parmset name from nc-cli to netconfd";
       0.5 "Add help and version parameters";
       0.4 "Add stats and change name from ncxagtboot to netconfd";
       0.3 "Changed nc-boot and expand as nc-cli parmset.";
       0.2 "Added load-config RPC method";
       0.1 "Initial version";
    }
  }

  imports {
    import ncxtypes;
    import netconf;
    import xsd;
    import smi;
  }

  definitions {

    parmset netconfd {
      description
         "
          Agent for the NETCONF protocol.

          Usage:
            netconfd [parameters]
         ";

      order loose;
      type cli;

      parms {

        parm datapath {
          description
             "Internal file search path for config files.";
          type NcPathList;
          max-access read-write;
          usage optional;
        }

	parm help {
	  description
	    "Print netconfd help text and exit";
          type empty;
          max-access read-write;
          usage optional;
        }

	parm log {
	  description
	    "Full or relative filespec for the logfile to use instead of 
             logging agent output to STDOUT.";
          type string;
          max-access read-write;
          usage optional;
        }

	parm log-append {
	  description
	    "If present, then append to the existing logfile,
             otherwise overwrite the old file.  Ignored unless
             the 'log' parameter is also provided.";
          type empty;
          max-access read-write;
          usage optional;
        }

	parm log-level {
	  description
	    "Agent debug logging level to use.";
          type NcDebugType;
          max-access read-write;
          usage optional;
        }

        parm modpath {
          description
             "Internal file search path for data model modules.";
          type NcPathList;
          max-access read-write;
          usage optional;
        }

        parm runpath {
          description
             "Internal file search path for executable modules.";
          type NcPathList;
          max-access read-write;
          usage optional;
        }

        choice {
          parm no-startup {
            description
               "If present, do not load the startup config file.";
            type empty;
            max-access read-write;
            usage optional;
          }

          parm startup {
            description
               "The full filespec of the startup config file to use.
                If present, overrides the default startup config
                file name 'startup-cfg.xml',  This will also
                override the NCX_DATAPATH environement variable
                and the datapath CLI parameter, if the first
                character is the forward slash '/', indicating
                an absolute file path.";
            type string;
            max-access read-write;
            usage optional;
          }
        }

	parm version {
	  description
	    "Print netconfd version string and exit";
          type empty;
          max-access read-write;
          usage optional;
        }

      }
    }

    #
    # Internal NCX RPC to load the startup config
    #
    rpc load-config {
      description "NCX internal load-config operation.";
      rpc-type config;
      parms {
        parm config {
          description "XML Config contents.";
          type ConfigInlineType;
        }
      }
      output RpcOkReplyType;
    }
  }
}
